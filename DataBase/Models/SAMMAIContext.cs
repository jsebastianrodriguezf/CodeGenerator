using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace SAMMAI.DataBase;

public partial class SAMMAIContext : DbContext
{
    public SAMMAIContext()
    {
    }

    public SAMMAIContext(DbContextOptions<SAMMAIContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AlqDetalleLiquidacion> AlqDetalleLiquidacions { get; set; }

    public virtual DbSet<AlqDetallealquilerItemdocumento> AlqDetallealquilerItemdocumentos { get; set; }

    public virtual DbSet<AlqHistoricoAlquiler> AlqHistoricoAlquilers { get; set; }

    public virtual DbSet<AlqPeriodoAlquiler> AlqPeriodoAlquilers { get; set; }

    public virtual DbSet<AlqTarifa> AlqTarifas { get; set; }

    public virtual DbSet<AlqTipoTarifa> AlqTipoTarifas { get; set; }

    public virtual DbSet<CatAtributo> CatAtributos { get; set; }

    public virtual DbSet<CatAtributoOpcionAtributo> CatAtributoOpcionAtributos { get; set; }

    public virtual DbSet<CatCatalogo> CatCatalogos { get; set; }

    public virtual DbSet<CatCatalogoActividad> CatCatalogoActividads { get; set; }

    public virtual DbSet<CatCatalogoBodega> CatCatalogoBodegas { get; set; }

    public virtual DbSet<CatCatalogoEquipo> CatCatalogoEquipos { get; set; }

    public virtual DbSet<CatCatalogoEquipoCatalogoTempario> CatCatalogoEquipoCatalogoTemparios { get; set; }

    public virtual DbSet<CatCatalogoEquipoPruebaCheckList> CatCatalogoEquipoPruebaCheckLists { get; set; }

    public virtual DbSet<CatCatalogoListaPrecio> CatCatalogoListaPrecios { get; set; }

    public virtual DbSet<CatCatalogoOtro> CatCatalogoOtros { get; set; }

    public virtual DbSet<CatCatalogoProducto> CatCatalogoProductos { get; set; }

    public virtual DbSet<CatCatalogoRepuesto> CatCatalogoRepuestos { get; set; }

    public virtual DbSet<CatCatalogoTempario> CatCatalogoTemparios { get; set; }

    public virtual DbSet<CatDetalleRepuesto> CatDetalleRepuestos { get; set; }

    public virtual DbSet<CatDetalleTempario> CatDetalleTemparios { get; set; }

    public virtual DbSet<CatDimension> CatDimensions { get; set; }

    public virtual DbSet<CatListaPrecio> CatListaPrecios { get; set; }

    public virtual DbSet<CatMarca> CatMarcas { get; set; }

    public virtual DbSet<CatPosicion> CatPosicions { get; set; }

    public virtual DbSet<CatPruebaCheckList> CatPruebaCheckLists { get; set; }

    public virtual DbSet<CatPruebaCheckListAtributo> CatPruebaCheckListAtributos { get; set; }

    public virtual DbSet<CatReemplazo> CatReemplazos { get; set; }

    public virtual DbSet<CatReemplazoCatalogoEquipo> CatReemplazoCatalogoEquipos { get; set; }

    public virtual DbSet<CatSeccionAtributo> CatSeccionAtributos { get; set; }

    public virtual DbSet<CatSistema> CatSistemas { get; set; }

    public virtual DbSet<CatSistemaCatalogoEquipo> CatSistemaCatalogoEquipos { get; set; }

    public virtual DbSet<CatSoporteActividad> CatSoporteActividads { get; set; }

    public virtual DbSet<CatSubtipoCatalogo> CatSubtipoCatalogos { get; set; }

    public virtual DbSet<CatTarifa> CatTarifas { get; set; }

    public virtual DbSet<CatTarifaCatalogo> CatTarifaCatalogos { get; set; }

    public virtual DbSet<CatTarifaRango> CatTarifaRangos { get; set; }

    public virtual DbSet<CatTipoCatalogo> CatTipoCatalogos { get; set; }

    public virtual DbSet<CatTipoCatalogoListaPrecio> CatTipoCatalogoListaPrecios { get; set; }

    public virtual DbSet<CatTipoReemplazo> CatTipoReemplazos { get; set; }

    public virtual DbSet<CatUsoSeccionAtributo> CatUsoSeccionAtributos { get; set; }

    public virtual DbSet<CatVersionEquipo> CatVersionEquipos { get; set; }

    public virtual DbSet<CatVersionEquipoDetalleTempario> CatVersionEquipoDetalleTemparios { get; set; }

    public virtual DbSet<CntConfigContrato> CntConfigContratos { get; set; }

    public virtual DbSet<CntContrato> CntContratos { get; set; }

    public virtual DbSet<CntContratoCatalogo> CntContratoCatalogos { get; set; }

    public virtual DbSet<CntContratoDetalleVisitum> CntContratoDetalleVisita { get; set; }

    public virtual DbSet<CntContratoEquipo> CntContratoEquipos { get; set; }

    public virtual DbSet<CntContratoSucursal> CntContratoSucursals { get; set; }

    public virtual DbSet<CntContratoTipoServicio> CntContratoTipoServicios { get; set; }

    public virtual DbSet<CntContratoZona> CntContratoZonas { get; set; }

    public virtual DbSet<CntCorrimientoVisitaFija> CntCorrimientoVisitaFijas { get; set; }

    public virtual DbSet<CntPagosContrato> CntPagosContratos { get; set; }

    public virtual DbSet<CntPeriodoContrato> CntPeriodoContratos { get; set; }

    public virtual DbSet<CntTiempoRespuestum> CntTiempoRespuesta { get; set; }

    public virtual DbSet<CntTipoContrato> CntTipoContratos { get; set; }

    public virtual DbSet<CntVisitaFija> CntVisitaFijas { get; set; }

    public virtual DbSet<CntVisitaFijaCatalogo> CntVisitaFijaCatalogos { get; set; }

    public virtual DbSet<Columna> Columnas { get; set; }

    public virtual DbSet<ComComision> ComComisions { get; set; }

    public virtual DbSet<DisEstadoEvento> DisEstadoEventos { get; set; }

    public virtual DbSet<DisEvento> DisEventos { get; set; }

    public virtual DbSet<DisEventoCatalogo> DisEventoCatalogos { get; set; }

    public virtual DbSet<DisEventoEstadoEvento> DisEventoEstadoEventos { get; set; }

    public virtual DbSet<DisMetodoDeteccion> DisMetodoDeteccions { get; set; }

    public virtual DbSet<DisMotivoEvento> DisMotivoEventos { get; set; }

    public virtual DbSet<DisObra> DisObras { get; set; }

    public virtual DbSet<DisObraCatalogo> DisObraCatalogos { get; set; }

    public virtual DbSet<DisObraEquipo> DisObraEquipos { get; set; }

    public virtual DbSet<DocCentroCosto> DocCentroCostos { get; set; }

    public virtual DbSet<DocCondicion> DocCondicions { get; set; }

    public virtual DbSet<DocCosteo> DocCosteos { get; set; }

    public virtual DbSet<DocDocumento> DocDocumentos { get; set; }

    public virtual DbSet<DocDocumentoAlquiler> DocDocumentoAlquilers { get; set; }

    public virtual DbSet<DocDocumentoAtributo> DocDocumentoAtributos { get; set; }

    public virtual DbSet<DocDocumentoCatalogoTempario> DocDocumentoCatalogoTemparios { get; set; }

    public virtual DbSet<DocDocumentoComentario> DocDocumentoComentarios { get; set; }

    public virtual DbSet<DocDocumentoContacto> DocDocumentoContactos { get; set; }

    public virtual DbSet<DocDocumentoCotizacion> DocDocumentoCotizacions { get; set; }

    public virtual DbSet<DocDocumentoCotizacionCondicion> DocDocumentoCotizacionCondicions { get; set; }

    public virtual DbSet<DocDocumentoEntradum> DocDocumentoEntrada { get; set; }

    public virtual DbSet<DocDocumentoEstadoTipoDocumento> DocDocumentoEstadoTipoDocumentos { get; set; }

    public virtual DbSet<DocDocumentoEvaluacion> DocDocumentoEvaluacions { get; set; }

    public virtual DbSet<DocDocumentoGasto> DocDocumentoGastos { get; set; }

    public virtual DbSet<DocDocumentoOpcionRespuestum> DocDocumentoOpcionRespuesta { get; set; }

    public virtual DbSet<DocDocumentoOrdenCompra> DocDocumentoOrdenCompras { get; set; }

    public virtual DbSet<DocDocumentoOt> DocDocumentoOts { get; set; }

    public virtual DbSet<DocDocumentoOtCentroCosto> DocDocumentoOtCentroCostos { get; set; }

    public virtual DbSet<DocDocumentoOtPruebaCheckList> DocDocumentoOtPruebaCheckLists { get; set; }

    public virtual DbSet<DocDocumentoProyecto> DocDocumentoProyectos { get; set; }

    public virtual DbSet<DocDocumentoProyectoCalidad> DocDocumentoProyectoCalidads { get; set; }

    public virtual DbSet<DocDocumentoProyectoEjecutore> DocDocumentoProyectoEjecutores { get; set; }

    public virtual DbSet<DocDocumentoProyectoEntregable> DocDocumentoProyectoEntregables { get; set; }

    public virtual DbSet<DocDocumentoProyectoEtapa> DocDocumentoProyectoEtapas { get; set; }

    public virtual DbSet<DocDocumentoProyectoSucursal> DocDocumentoProyectoSucursals { get; set; }

    public virtual DbSet<DocDocumentoRequisicion> DocDocumentoRequisicions { get; set; }

    public virtual DbSet<DocDocumentoSalidum> DocDocumentoSalida { get; set; }

    public virtual DbSet<DocDocumentoSolicitud> DocDocumentoSolicituds { get; set; }

    public virtual DbSet<DocDocumentoTraslado> DocDocumentoTraslados { get; set; }

    public virtual DbSet<DocEstadoTipoDocumento> DocEstadoTipoDocumentos { get; set; }

    public virtual DbSet<DocEstadoTipoDocumentoPerfil> DocEstadoTipoDocumentoPerfils { get; set; }

    public virtual DbSet<DocEstadoTipoDocumentoSubtipoDocumento> DocEstadoTipoDocumentoSubtipoDocumentos { get; set; }

    public virtual DbSet<DocEstrategiaPrioridad> DocEstrategiaPrioridads { get; set; }

    public virtual DbSet<DocEvaluacion> DocEvaluacions { get; set; }

    public virtual DbSet<DocFlujoDocumento> DocFlujoDocumentos { get; set; }

    public virtual DbSet<DocFormaPago> DocFormaPagos { get; set; }

    public virtual DbSet<DocIncoterm> DocIncoterms { get; set; }

    public virtual DbSet<DocItemDocumento> DocItemDocumentos { get; set; }

    public virtual DbSet<DocMedioSolicitud> DocMedioSolicituds { get; set; }

    public virtual DbSet<DocMotivoestado> DocMotivoestados { get; set; }

    public virtual DbSet<DocOpcionCondicion> DocOpcionCondicions { get; set; }

    public virtual DbSet<DocOpcionRespuestum> DocOpcionRespuesta { get; set; }

    public virtual DbSet<DocPendienteDocumento> DocPendienteDocumentos { get; set; }

    public virtual DbSet<DocPendienteDocumentoDocItemDocumento> DocPendienteDocumentoDocItemDocumentos { get; set; }

    public virtual DbSet<DocPreguntum> DocPregunta { get; set; }

    public virtual DbSet<DocPrioridadDocumento> DocPrioridadDocumentos { get; set; }

    public virtual DbSet<DocPrioridadSubtipoDocumento> DocPrioridadSubtipoDocumentos { get; set; }

    public virtual DbSet<DocSoporteItemDocumento> DocSoporteItemDocumentos { get; set; }

    public virtual DbSet<DocSubtipoDocumento> DocSubtipoDocumentos { get; set; }

    public virtual DbSet<DocSubtipoLectura> DocSubtipoLecturas { get; set; }

    public virtual DbSet<DocTarea> DocTareas { get; set; }

    public virtual DbSet<DocTipoDocumento> DocTipoDocumentos { get; set; }

    public virtual DbSet<DocTipoPendiente> DocTipoPendientes { get; set; }

    public virtual DbSet<EquAlquiler> EquAlquilers { get; set; }

    public virtual DbSet<EquAnalisisFalla> EquAnalisisFallas { get; set; }

    public virtual DbSet<EquCampana> EquCampanas { get; set; }

    public virtual DbSet<EquCampanaDocumentoOt> EquCampanaDocumentoOts { get; set; }

    public virtual DbSet<EquCicloHorometro> EquCicloHorometros { get; set; }

    public virtual DbSet<EquDetalleAlquiler> EquDetalleAlquilers { get; set; }

    public virtual DbSet<EquDetallePagoAlquiler> EquDetallePagoAlquilers { get; set; }

    public virtual DbSet<EquEquipo> EquEquipos { get; set; }

    public virtual DbSet<EquEquipoAtributo> EquEquipoAtributos { get; set; }

    public virtual DbSet<EquEquipoItemDocumento> EquEquipoItemDocumentos { get; set; }

    public virtual DbSet<EquEstadoEquipo> EquEstadoEquipos { get; set; }

    public virtual DbSet<EquEstadoPrestamo> EquEstadoPrestamos { get; set; }

    public virtual DbSet<EquFalla> EquFallas { get; set; }

    public virtual DbSet<EquFamiliaFalla> EquFamiliaFallas { get; set; }

    public virtual DbSet<EquOpcionAtributo> EquOpcionAtributos { get; set; }

    public virtual DbSet<EquOpcionAtributoDependiente> EquOpcionAtributoDependientes { get; set; }

    public virtual DbSet<EquOverhall> EquOverhalls { get; set; }

    public virtual DbSet<EquPagoAlquiler> EquPagoAlquilers { get; set; }

    public virtual DbSet<EquPrestamo> EquPrestamos { get; set; }

    public virtual DbSet<EquPrestamoEquipo> EquPrestamoEquipos { get; set; }

    public virtual DbSet<EquTipoAtributo> EquTipoAtributos { get; set; }

    public virtual DbSet<EquTipoFalla> EquTipoFallas { get; set; }

    public virtual DbSet<EquTipoTrazabilidad> EquTipoTrazabilidads { get; set; }

    public virtual DbSet<EquTrazabilidad> EquTrazabilidads { get; set; }

    public virtual DbSet<Errore> Errores { get; set; }

    public virtual DbSet<GasDetalleGasto> GasDetalleGastos { get; set; }

    public virtual DbSet<GasDocumentoOtDetalleGasto> GasDocumentoOtDetalleGastos { get; set; }

    public virtual DbSet<GasGasto> GasGastos { get; set; }

    public virtual DbSet<GasTipoGasto> GasTipoGastos { get; set; }

    public virtual DbSet<GenAccesosSamm> GenAccesosSamms { get; set; }

    public virtual DbSet<GenAccionNotificacion> GenAccionNotificacions { get; set; }

    public virtual DbSet<GenArchivo> GenArchivos { get; set; }

    public virtual DbSet<GenBodega> GenBodegas { get; set; }

    public virtual DbSet<GenBodegaUsuario> GenBodegaUsuarios { get; set; }

    public virtual DbSet<GenConfig> GenConfigs { get; set; }

    public virtual DbSet<GenConfiguracionAtributo> GenConfiguracionAtributos { get; set; }

    public virtual DbSet<GenConfiguracionServicio> GenConfiguracionServicios { get; set; }

    public virtual DbSet<GenDetalleFormulario> GenDetalleFormularios { get; set; }

    public virtual DbSet<GenDetalleRegistroEnvio> GenDetalleRegistroEnvios { get; set; }

    public virtual DbSet<GenDiaFestivo> GenDiaFestivos { get; set; }

    public virtual DbSet<GenEmpresa> GenEmpresas { get; set; }

    public virtual DbSet<GenEnvioCorreo> GenEnvioCorreos { get; set; }

    public virtual DbSet<GenFamilium> GenFamilia { get; set; }

    public virtual DbSet<GenFirma> GenFirmas { get; set; }

    public virtual DbSet<GenFirmaContacto> GenFirmaContactos { get; set; }

    public virtual DbSet<GenFormulario> GenFormularios { get; set; }

    public virtual DbSet<GenImpuesto> GenImpuestos { get; set; }

    public virtual DbSet<GenLocalizacion> GenLocalizacions { get; set; }

    public virtual DbSet<GenLocalizacionItemDocumento> GenLocalizacionItemDocumentos { get; set; }

    public virtual DbSet<GenMonedum> GenMoneda { get; set; }

    public virtual DbSet<GenNotificacion> GenNotificacions { get; set; }

    public virtual DbSet<GenPresupuestoEmpresa> GenPresupuestoEmpresas { get; set; }

    public virtual DbSet<GenRegistroEnvio> GenRegistroEnvios { get; set; }

    public virtual DbSet<GenRemitenteCorreo> GenRemitenteCorreos { get; set; }

    public virtual DbSet<GenTipoArchivo> GenTipoArchivos { get; set; }

    public virtual DbSet<GenTipoDato> GenTipoDatos { get; set; }

    public virtual DbSet<GenTipoNotificacion> GenTipoNotificacions { get; set; }

    public virtual DbSet<GenTipoServicio> GenTipoServicios { get; set; }

    public virtual DbSet<GenUnidad> GenUnidads { get; set; }

    public virtual DbSet<GenZona> GenZonas { get; set; }

    public virtual DbSet<GeoUbicacion> GeoUbicacions { get; set; }

    public virtual DbSet<GuiAplicacion> GuiAplicacions { get; set; }

    public virtual DbSet<GuiAyudum> GuiAyuda { get; set; }

    public virtual DbSet<GuiBloqueHome> GuiBloqueHomes { get; set; }

    public virtual DbSet<GuiCampoTexto> GuiCampoTextos { get; set; }

    public virtual DbSet<GuiDetalleBloqueHome> GuiDetalleBloqueHomes { get; set; }

    public virtual DbSet<GuiFuncionalidad> GuiFuncionalidads { get; set; }

    public virtual DbSet<GuiTextoDefecto> GuiTextoDefectos { get; set; }

    public virtual DbSet<GuiTipoFuncionalidad> GuiTipoFuncionalidads { get; set; }

    public virtual DbSet<Idae> Idaes { get; set; }

    public virtual DbSet<LicCatalogoParametro> LicCatalogoParametros { get; set; }

    public virtual DbSet<LicLicenciaParametro> LicLicenciaParametros { get; set; }

    public virtual DbSet<LicLicencium> LicLicencia { get; set; }

    public virtual DbSet<LicParametro> LicParametros { get; set; }

    public virtual DbSet<OrtCanalAtencion> OrtCanalAtencions { get; set; }

    public virtual DbSet<OrtDepartamentoSolicitud> OrtDepartamentoSolicituds { get; set; }

    public virtual DbSet<OrtMotivoCancelacion> OrtMotivoCancelacions { get; set; }

    public virtual DbSet<OrtProgramacion> OrtProgramacions { get; set; }

    public virtual DbSet<OrtReporteTecnico> OrtReporteTecnicos { get; set; }

    public virtual DbSet<OrtReporteTecnicoFalla> OrtReporteTecnicoFallas { get; set; }

    public virtual DbSet<OrtReporteTecnicoOt> OrtReporteTecnicoOts { get; set; }

    public virtual DbSet<OrtTipoProgramacion> OrtTipoProgramacions { get; set; }

    public virtual DbSet<OrtVale> OrtVales { get; set; }

    public virtual DbSet<ProActividad> ProActividads { get; set; }

    public virtual DbSet<ProActividadEjecutor> ProActividadEjecutors { get; set; }

    public virtual DbSet<ProActividadEtapa> ProActividadEtapas { get; set; }

    public virtual DbSet<ProActividadHito> ProActividadHitos { get; set; }

    public virtual DbSet<ProActividadPredecesora> ProActividadPredecesoras { get; set; }

    public virtual DbSet<ProActividadRecursoFisico> ProActividadRecursoFisicos { get; set; }

    public virtual DbSet<ProCalidad> ProCalidads { get; set; }

    public virtual DbSet<ProEjecutore> ProEjecutores { get; set; }

    public virtual DbSet<ProEjecutoresArchivo> ProEjecutoresArchivos { get; set; }

    public virtual DbSet<ProEntregable> ProEntregables { get; set; }

    public virtual DbSet<ProEtapa> ProEtapas { get; set; }

    public virtual DbSet<ProFactorexito> ProFactorexitos { get; set; }

    public virtual DbSet<ProGrupoSesion> ProGrupoSesions { get; set; }

    public virtual DbSet<ProHito> ProHitos { get; set; }

    public virtual DbSet<ProHorarioEjecutore> ProHorarioEjecutores { get; set; }

    public virtual DbSet<ProHorarioProyecto> ProHorarioProyectos { get; set; }

    public virtual DbSet<ProHorarioTrabajo> ProHorarioTrabajos { get; set; }

    public virtual DbSet<ProRecursoFisico> ProRecursoFisicos { get; set; }

    public virtual DbSet<ProReporteActividad> ProReporteActividads { get; set; }

    public virtual DbSet<ProRol> ProRols { get; set; }

    public virtual DbSet<ProRolContacto> ProRolContactos { get; set; }

    public virtual DbSet<ProSesionActividad> ProSesionActividads { get; set; }

    public virtual DbSet<RepCampoReporte> RepCampoReportes { get; set; }

    public virtual DbSet<RepCategorium> RepCategoria { get; set; }

    public virtual DbSet<RepIndicador> RepIndicadors { get; set; }

    public virtual DbSet<RepOpcionReporte> RepOpcionReportes { get; set; }

    public virtual DbSet<RepOrigenDato> RepOrigenDatos { get; set; }

    public virtual DbSet<RepReporte> RepReportes { get; set; }

    public virtual DbSet<RepReporteCategorium> RepReporteCategoria { get; set; }

    public virtual DbSet<RepTipoCampoReporte> RepTipoCampoReportes { get; set; }

    public virtual DbSet<SegCargo> SegCargos { get; set; }

    public virtual DbSet<SegCargoActividad> SegCargoActividads { get; set; }

    public virtual DbSet<SegCargoEnvioCorreo> SegCargoEnvioCorreos { get; set; }

    public virtual DbSet<SegGrupo> SegGrupos { get; set; }

    public virtual DbSet<SegPerfil> SegPerfils { get; set; }

    public virtual DbSet<SegPerfilBloqueHome> SegPerfilBloqueHomes { get; set; }

    public virtual DbSet<SegPerfilFormulario> SegPerfilFormularios { get; set; }

    public virtual DbSet<SegPerfilFuncionalidad> SegPerfilFuncionalidads { get; set; }

    public virtual DbSet<SegPerfilSubtipoDocumento> SegPerfilSubtipoDocumentos { get; set; }

    public virtual DbSet<SegPerfilTercero> SegPerfilTerceros { get; set; }

    public virtual DbSet<SegRegistroIntegracion> SegRegistroIntegracions { get; set; }

    public virtual DbSet<SegRegistroPeticion> SegRegistroPeticions { get; set; }

    public virtual DbSet<SegSesion> SegSesions { get; set; }

    public virtual DbSet<SegSesionHistorico> SegSesionHistoricos { get; set; }

    public virtual DbSet<SegUsuario> SegUsuarios { get; set; }

    public virtual DbSet<SegUsuarioCatalogoEquipo> SegUsuarioCatalogoEquipos { get; set; }

    public virtual DbSet<SynCampoIntegracion> SynCampoIntegracions { get; set; }

    public virtual DbSet<SynPuntoIntegracion> SynPuntoIntegracions { get; set; }

    public virtual DbSet<SynPuntoIntegracionEstadoTipoDocumento> SynPuntoIntegracionEstadoTipoDocumentos { get; set; }

    public virtual DbSet<SynPuntoIntegracionTabla> SynPuntoIntegracionTablas { get; set; }

    public virtual DbSet<SynSistemaIntegrar> SynSistemaIntegrars { get; set; }

    public virtual DbSet<SynTipoAutenticacion> SynTipoAutenticacions { get; set; }

    public virtual DbSet<Tabla> Tablas { get; set; }

    public virtual DbSet<TaxNivelTax> TaxNivelTaxes { get; set; }

    public virtual DbSet<TaxObjetoTax> TaxObjetoTaxes { get; set; }

    public virtual DbSet<TerCargoContacto> TerCargoContactos { get; set; }

    public virtual DbSet<TerContacto> TerContactos { get; set; }

    public virtual DbSet<TerContactoEquipo> TerContactoEquipos { get; set; }

    public virtual DbSet<TerContactoSucursal> TerContactoSucursals { get; set; }

    public virtual DbSet<TerEstadoTercero> TerEstadoTerceros { get; set; }

    public virtual DbSet<TerNaturalezaTercero> TerNaturalezaTerceros { get; set; }

    public virtual DbSet<TerSector> TerSectors { get; set; }

    public virtual DbSet<TerSucursal> TerSucursals { get; set; }

    public virtual DbSet<TerSucursalListaprecio> TerSucursalListaprecios { get; set; }

    public virtual DbSet<TerSucursalUsuario> TerSucursalUsuarios { get; set; }

    public virtual DbSet<TerTercero> TerTerceros { get; set; }

    public virtual DbSet<TerTerceroListaprecio> TerTerceroListaprecios { get; set; }

    public virtual DbSet<TerTerceroSector> TerTerceroSectors { get; set; }

    public virtual DbSet<TerTerceroUsuario> TerTerceroUsuarios { get; set; }

    public virtual DbSet<VAlquileresPreliquidar> VAlquileresPreliquidars { get; set; }

    public virtual DbSet<VChecklistToda> VChecklistTodas { get; set; }

    public virtual DbSet<VCorreosAenviar> VCorreosAenviars { get; set; }

    public virtual DbSet<VDatCot> VDatCots { get; set; }

    public virtual DbSet<VDocPruebaSop> VDocPruebaSops { get; set; }

    public virtual DbSet<VDocumentoSucursal> VDocumentoSucursals { get; set; }

    public virtual DbSet<VDocumentosPadreAsociar> VDocumentosPadreAsociars { get; set; }

    public virtual DbSet<VHorarioTrabajo> VHorarioTrabajos { get; set; }

    public virtual DbSet<VInformeIngreso> VInformeIngresos { get; set; }

    public virtual DbSet<VReglaEnvioCorreo> VReglaEnvioCorreos { get; set; }

    public virtual DbSet<VRepuestosalquilable> VRepuestosalquilables { get; set; }

    public virtual DbSet<ViewAlqDetalleLiquidacion> ViewAlqDetalleLiquidacions { get; set; }

    public virtual DbSet<ViewAlqDetallealquilerItemdocumento> ViewAlqDetallealquilerItemdocumentos { get; set; }

    public virtual DbSet<ViewAlqHistoricoAlquiler> ViewAlqHistoricoAlquilers { get; set; }

    public virtual DbSet<ViewAlqTarifa> ViewAlqTarifas { get; set; }

    public virtual DbSet<ViewAlqTipoTarifa> ViewAlqTipoTarifas { get; set; }

    public virtual DbSet<ViewCatAtributo> ViewCatAtributos { get; set; }

    public virtual DbSet<ViewCatAtributoOpcionAtributo> ViewCatAtributoOpcionAtributos { get; set; }

    public virtual DbSet<ViewCatCatalogo> ViewCatCatalogos { get; set; }

    public virtual DbSet<ViewCatCatalogoActividad> ViewCatCatalogoActividads { get; set; }

    public virtual DbSet<ViewCatCatalogoBodega> ViewCatCatalogoBodegas { get; set; }

    public virtual DbSet<ViewCatCatalogoEquipo> ViewCatCatalogoEquipos { get; set; }

    public virtual DbSet<ViewCatCatalogoEquipoAtributo> ViewCatCatalogoEquipoAtributos { get; set; }

    public virtual DbSet<ViewCatCatalogoEquipoCatalogoTempario> ViewCatCatalogoEquipoCatalogoTemparios { get; set; }

    public virtual DbSet<ViewCatCatalogoEquipoPruebaCheckList> ViewCatCatalogoEquipoPruebaCheckLists { get; set; }

    public virtual DbSet<ViewCatCatalogoListaPrecio> ViewCatCatalogoListaPrecios { get; set; }

    public virtual DbSet<ViewCatCatalogoOtro> ViewCatCatalogoOtros { get; set; }

    public virtual DbSet<ViewCatCatalogoProducto> ViewCatCatalogoProductos { get; set; }

    public virtual DbSet<ViewCatCatalogoRepuesto> ViewCatCatalogoRepuestos { get; set; }

    public virtual DbSet<ViewCatCatalogoTempario> ViewCatCatalogoTemparios { get; set; }

    public virtual DbSet<ViewCatDetalleRepuesto> ViewCatDetalleRepuestos { get; set; }

    public virtual DbSet<ViewCatDetalleTempario> ViewCatDetalleTemparios { get; set; }

    public virtual DbSet<ViewCatDimension> ViewCatDimensions { get; set; }

    public virtual DbSet<ViewCatListaPrecio> ViewCatListaPrecios { get; set; }

    public virtual DbSet<ViewCatMarca> ViewCatMarcas { get; set; }

    public virtual DbSet<ViewCatPosicion> ViewCatPosicions { get; set; }

    public virtual DbSet<ViewCatPruebaCheckList> ViewCatPruebaCheckLists { get; set; }

    public virtual DbSet<ViewCatPruebaCheckListAtributo> ViewCatPruebaCheckListAtributos { get; set; }

    public virtual DbSet<ViewCatReemplazo> ViewCatReemplazos { get; set; }

    public virtual DbSet<ViewCatReemplazoCatalogoEquipo> ViewCatReemplazoCatalogoEquipos { get; set; }

    public virtual DbSet<ViewCatSeccionAtributo> ViewCatSeccionAtributos { get; set; }

    public virtual DbSet<ViewCatSistema> ViewCatSistemas { get; set; }

    public virtual DbSet<ViewCatSistemaCatalogoEquipo> ViewCatSistemaCatalogoEquipos { get; set; }

    public virtual DbSet<ViewCatSoporteActividad> ViewCatSoporteActividads { get; set; }

    public virtual DbSet<ViewCatSubtipoCatalogo> ViewCatSubtipoCatalogos { get; set; }

    public virtual DbSet<ViewCatTarifa> ViewCatTarifas { get; set; }

    public virtual DbSet<ViewCatTarifaCatalogo> ViewCatTarifaCatalogos { get; set; }

    public virtual DbSet<ViewCatTarifaRango> ViewCatTarifaRangos { get; set; }

    public virtual DbSet<ViewCatTipoCatalogo> ViewCatTipoCatalogos { get; set; }

    public virtual DbSet<ViewCatTipoCatalogoListaPrecio> ViewCatTipoCatalogoListaPrecios { get; set; }

    public virtual DbSet<ViewCatTipoReemplazo> ViewCatTipoReemplazos { get; set; }

    public virtual DbSet<ViewCatUsoSeccionAtributo> ViewCatUsoSeccionAtributos { get; set; }

    public virtual DbSet<ViewCatVersionEquipo> ViewCatVersionEquipos { get; set; }

    public virtual DbSet<ViewCatVersionEquipoDetalleTempario> ViewCatVersionEquipoDetalleTemparios { get; set; }

    public virtual DbSet<ViewCntConfigContrato> ViewCntConfigContratos { get; set; }

    public virtual DbSet<ViewCntContrato> ViewCntContratos { get; set; }

    public virtual DbSet<ViewCntContratoCatalogo> ViewCntContratoCatalogos { get; set; }

    public virtual DbSet<ViewCntContratoDetalleVisitum> ViewCntContratoDetalleVisita { get; set; }

    public virtual DbSet<ViewCntContratoEquipo> ViewCntContratoEquipos { get; set; }

    public virtual DbSet<ViewCntContratoSucursal> ViewCntContratoSucursals { get; set; }

    public virtual DbSet<ViewCntContratoTipoServicio> ViewCntContratoTipoServicios { get; set; }

    public virtual DbSet<ViewCntContratoZona> ViewCntContratoZonas { get; set; }

    public virtual DbSet<ViewCntCorrimientoVisitaFija> ViewCntCorrimientoVisitaFijas { get; set; }

    public virtual DbSet<ViewCntPagosContrato> ViewCntPagosContratos { get; set; }

    public virtual DbSet<ViewCntPeriodoContrato> ViewCntPeriodoContratos { get; set; }

    public virtual DbSet<ViewCntTiempoRespuestum> ViewCntTiempoRespuesta { get; set; }

    public virtual DbSet<ViewCntTipoContrato> ViewCntTipoContratos { get; set; }

    public virtual DbSet<ViewCntVisitaFija> ViewCntVisitaFijas { get; set; }

    public virtual DbSet<ViewCntVisitaFijaCatalogo> ViewCntVisitaFijaCatalogos { get; set; }

    public virtual DbSet<ViewComComision> ViewComComisions { get; set; }

    public virtual DbSet<ViewDisEstadoEvento> ViewDisEstadoEventos { get; set; }

    public virtual DbSet<ViewDisEvento> ViewDisEventos { get; set; }

    public virtual DbSet<ViewDisEventoCatalogo> ViewDisEventoCatalogos { get; set; }

    public virtual DbSet<ViewDisEventoEstadoEvento> ViewDisEventoEstadoEventos { get; set; }

    public virtual DbSet<ViewDisMetodoDeteccion> ViewDisMetodoDeteccions { get; set; }

    public virtual DbSet<ViewDisMotivoEvento> ViewDisMotivoEventos { get; set; }

    public virtual DbSet<ViewDisObra> ViewDisObras { get; set; }

    public virtual DbSet<ViewDisObraCatalogo> ViewDisObraCatalogos { get; set; }

    public virtual DbSet<ViewDisObraEquipo> ViewDisObraEquipos { get; set; }

    public virtual DbSet<ViewDocCentroCosto> ViewDocCentroCostos { get; set; }

    public virtual DbSet<ViewDocCondicion> ViewDocCondicions { get; set; }

    public virtual DbSet<ViewDocCosteo> ViewDocCosteos { get; set; }

    public virtual DbSet<ViewDocDocumento> ViewDocDocumentos { get; set; }

    public virtual DbSet<ViewDocDocumentoAlquiler> ViewDocDocumentoAlquilers { get; set; }

    public virtual DbSet<ViewDocDocumentoAtributo> ViewDocDocumentoAtributos { get; set; }

    public virtual DbSet<ViewDocDocumentoCatalogoTempario> ViewDocDocumentoCatalogoTemparios { get; set; }

    public virtual DbSet<ViewDocDocumentoComentario> ViewDocDocumentoComentarios { get; set; }

    public virtual DbSet<ViewDocDocumentoContacto> ViewDocDocumentoContactos { get; set; }

    public virtual DbSet<ViewDocDocumentoCotizacion> ViewDocDocumentoCotizacions { get; set; }

    public virtual DbSet<ViewDocDocumentoCotizacionCondicion> ViewDocDocumentoCotizacionCondicions { get; set; }

    public virtual DbSet<ViewDocDocumentoEntradum> ViewDocDocumentoEntrada { get; set; }

    public virtual DbSet<ViewDocDocumentoEstadoTipoDocumento> ViewDocDocumentoEstadoTipoDocumentos { get; set; }

    public virtual DbSet<ViewDocDocumentoEvaluacion> ViewDocDocumentoEvaluacions { get; set; }

    public virtual DbSet<ViewDocDocumentoGasto> ViewDocDocumentoGastos { get; set; }

    public virtual DbSet<ViewDocDocumentoOpcionRespuestum> ViewDocDocumentoOpcionRespuesta { get; set; }

    public virtual DbSet<ViewDocDocumentoOrdenCompra> ViewDocDocumentoOrdenCompras { get; set; }

    public virtual DbSet<ViewDocDocumentoOt> ViewDocDocumentoOts { get; set; }

    public virtual DbSet<ViewDocDocumentoOtCentroCosto> ViewDocDocumentoOtCentroCostos { get; set; }

    public virtual DbSet<ViewDocDocumentoOtProgramadum> ViewDocDocumentoOtProgramada { get; set; }

    public virtual DbSet<ViewDocDocumentoOtPruebaCheckList> ViewDocDocumentoOtPruebaCheckLists { get; set; }

    public virtual DbSet<ViewDocDocumentoOtSinProgramar> ViewDocDocumentoOtSinProgramars { get; set; }

    public virtual DbSet<ViewDocDocumentoProyecto> ViewDocDocumentoProyectos { get; set; }

    public virtual DbSet<ViewDocDocumentoProyectoCalidad> ViewDocDocumentoProyectoCalidads { get; set; }

    public virtual DbSet<ViewDocDocumentoProyectoEjecutore> ViewDocDocumentoProyectoEjecutores { get; set; }

    public virtual DbSet<ViewDocDocumentoProyectoEntregable> ViewDocDocumentoProyectoEntregables { get; set; }

    public virtual DbSet<ViewDocDocumentoProyectoEtapa> ViewDocDocumentoProyectoEtapas { get; set; }

    public virtual DbSet<ViewDocDocumentoProyectoSucursal> ViewDocDocumentoProyectoSucursals { get; set; }

    public virtual DbSet<ViewDocDocumentoRequisicion> ViewDocDocumentoRequisicions { get; set; }

    public virtual DbSet<ViewDocDocumentoSalidum> ViewDocDocumentoSalida { get; set; }

    public virtual DbSet<ViewDocDocumentoSolicitud> ViewDocDocumentoSolicituds { get; set; }

    public virtual DbSet<ViewDocDocumentoTraslado> ViewDocDocumentoTraslados { get; set; }

    public virtual DbSet<ViewDocEstadoTipoDocumento> ViewDocEstadoTipoDocumentos { get; set; }

    public virtual DbSet<ViewDocEstadoTipoDocumentoPerfil> ViewDocEstadoTipoDocumentoPerfils { get; set; }

    public virtual DbSet<ViewDocEstadoTipoDocumentoSubtipoDocumento> ViewDocEstadoTipoDocumentoSubtipoDocumentos { get; set; }

    public virtual DbSet<ViewDocEstrategiaPrioridad> ViewDocEstrategiaPrioridads { get; set; }

    public virtual DbSet<ViewDocEvaluacion> ViewDocEvaluacions { get; set; }

    public virtual DbSet<ViewDocFlujoDocumento> ViewDocFlujoDocumentos { get; set; }

    public virtual DbSet<ViewDocFormaPago> ViewDocFormaPagos { get; set; }

    public virtual DbSet<ViewDocIncoterm> ViewDocIncoterms { get; set; }

    public virtual DbSet<ViewDocItemDocumento> ViewDocItemDocumentos { get; set; }

    public virtual DbSet<ViewDocMedioSolicitud> ViewDocMedioSolicituds { get; set; }

    public virtual DbSet<ViewDocMotivoestado> ViewDocMotivoestados { get; set; }

    public virtual DbSet<ViewDocOpcionCondicion> ViewDocOpcionCondicions { get; set; }

    public virtual DbSet<ViewDocOpcionRespuestum> ViewDocOpcionRespuesta { get; set; }

    public virtual DbSet<ViewDocPendienteDocumento> ViewDocPendienteDocumentos { get; set; }

    public virtual DbSet<ViewDocPendienteDocumentoDocItemDocumento> ViewDocPendienteDocumentoDocItemDocumentos { get; set; }

    public virtual DbSet<ViewDocPreguntum> ViewDocPregunta { get; set; }

    public virtual DbSet<ViewDocPrioridadDocumento> ViewDocPrioridadDocumentos { get; set; }

    public virtual DbSet<ViewDocPrioridadSubtipoDocumento> ViewDocPrioridadSubtipoDocumentos { get; set; }

    public virtual DbSet<ViewDocPruebaSop> ViewDocPruebaSops { get; set; }

    public virtual DbSet<ViewDocSoporteItemDocumento> ViewDocSoporteItemDocumentos { get; set; }

    public virtual DbSet<ViewDocSubtipoDocumento> ViewDocSubtipoDocumentos { get; set; }

    public virtual DbSet<ViewDocSubtipoLectura> ViewDocSubtipoLecturas { get; set; }

    public virtual DbSet<ViewDocTarea> ViewDocTareas { get; set; }

    public virtual DbSet<ViewDocTipoDocumento> ViewDocTipoDocumentos { get; set; }

    public virtual DbSet<ViewDocTipoPendiente> ViewDocTipoPendientes { get; set; }

    public virtual DbSet<ViewEquAlquiler> ViewEquAlquilers { get; set; }

    public virtual DbSet<ViewEquAnalisisFalla> ViewEquAnalisisFallas { get; set; }

    public virtual DbSet<ViewEquCampana> ViewEquCampanas { get; set; }

    public virtual DbSet<ViewEquCampanaDocumentoOt> ViewEquCampanaDocumentoOts { get; set; }

    public virtual DbSet<ViewEquCicloHorometro> ViewEquCicloHorometros { get; set; }

    public virtual DbSet<ViewEquDetalleAlquiler> ViewEquDetalleAlquilers { get; set; }

    public virtual DbSet<ViewEquDetallePagoAlquiler> ViewEquDetallePagoAlquilers { get; set; }

    public virtual DbSet<ViewEquEquipo> ViewEquEquipos { get; set; }

    public virtual DbSet<ViewEquEquipoAtributo> ViewEquEquipoAtributos { get; set; }

    public virtual DbSet<ViewEquEquipoItemDocumento> ViewEquEquipoItemDocumentos { get; set; }

    public virtual DbSet<ViewEquEstadoEquipo> ViewEquEstadoEquipos { get; set; }

    public virtual DbSet<ViewEquEstadoPrestamo> ViewEquEstadoPrestamos { get; set; }

    public virtual DbSet<ViewEquFalla> ViewEquFallas { get; set; }

    public virtual DbSet<ViewEquFamiliaFalla> ViewEquFamiliaFallas { get; set; }

    public virtual DbSet<ViewEquOpcionAtributo> ViewEquOpcionAtributos { get; set; }

    public virtual DbSet<ViewEquOpcionAtributoDependiente> ViewEquOpcionAtributoDependientes { get; set; }

    public virtual DbSet<ViewEquOverhall> ViewEquOverhalls { get; set; }

    public virtual DbSet<ViewEquPagoAlquiler> ViewEquPagoAlquilers { get; set; }

    public virtual DbSet<ViewEquPrestamo> ViewEquPrestamos { get; set; }

    public virtual DbSet<ViewEquPrestamoEquipo> ViewEquPrestamoEquipos { get; set; }

    public virtual DbSet<ViewEquTipoAtributo> ViewEquTipoAtributos { get; set; }

    public virtual DbSet<ViewEquTipoFalla> ViewEquTipoFallas { get; set; }

    public virtual DbSet<ViewEquTipoTrazabilidad> ViewEquTipoTrazabilidads { get; set; }

    public virtual DbSet<ViewEquTrazabilidad> ViewEquTrazabilidads { get; set; }

    public virtual DbSet<ViewGasDetalleGasto> ViewGasDetalleGastos { get; set; }

    public virtual DbSet<ViewGasDocumentoOtDetalleGasto> ViewGasDocumentoOtDetalleGastos { get; set; }

    public virtual DbSet<ViewGasGasto> ViewGasGastos { get; set; }

    public virtual DbSet<ViewGasTipoGasto> ViewGasTipoGastos { get; set; }

    public virtual DbSet<ViewGenAccesosSamm> ViewGenAccesosSamms { get; set; }

    public virtual DbSet<ViewGenAccionNotificacion> ViewGenAccionNotificacions { get; set; }

    public virtual DbSet<ViewGenArchivo> ViewGenArchivos { get; set; }

    public virtual DbSet<ViewGenBodega> ViewGenBodegas { get; set; }

    public virtual DbSet<ViewGenBodegaUsuario> ViewGenBodegaUsuarios { get; set; }

    public virtual DbSet<ViewGenConfig> ViewGenConfigs { get; set; }

    public virtual DbSet<ViewGenConfiguracionAtributo> ViewGenConfiguracionAtributos { get; set; }

    public virtual DbSet<ViewGenConfiguracionServicio> ViewGenConfiguracionServicios { get; set; }

    public virtual DbSet<ViewGenDetalleFormulario> ViewGenDetalleFormularios { get; set; }

    public virtual DbSet<ViewGenDetalleRegistroEnvio> ViewGenDetalleRegistroEnvios { get; set; }

    public virtual DbSet<ViewGenDiaFestivo> ViewGenDiaFestivos { get; set; }

    public virtual DbSet<ViewGenEmpresa> ViewGenEmpresas { get; set; }

    public virtual DbSet<ViewGenEnvioCorreo> ViewGenEnvioCorreos { get; set; }

    public virtual DbSet<ViewGenFamilium> ViewGenFamilia { get; set; }

    public virtual DbSet<ViewGenFirma> ViewGenFirmas { get; set; }

    public virtual DbSet<ViewGenFirmaContacto> ViewGenFirmaContactos { get; set; }

    public virtual DbSet<ViewGenFormulario> ViewGenFormularios { get; set; }

    public virtual DbSet<ViewGenImpuesto> ViewGenImpuestos { get; set; }

    public virtual DbSet<ViewGenLocalizacion> ViewGenLocalizacions { get; set; }

    public virtual DbSet<ViewGenLocalizacionItemDocumento> ViewGenLocalizacionItemDocumentos { get; set; }

    public virtual DbSet<ViewGenMonedum> ViewGenMoneda { get; set; }

    public virtual DbSet<ViewGenNotificacion> ViewGenNotificacions { get; set; }

    public virtual DbSet<ViewGenPresupuestoEmpresa> ViewGenPresupuestoEmpresas { get; set; }

    public virtual DbSet<ViewGenRegistroEnvio> ViewGenRegistroEnvios { get; set; }

    public virtual DbSet<ViewGenRemitenteCorreo> ViewGenRemitenteCorreos { get; set; }

    public virtual DbSet<ViewGenTipoArchivo> ViewGenTipoArchivos { get; set; }

    public virtual DbSet<ViewGenTipoDato> ViewGenTipoDatos { get; set; }

    public virtual DbSet<ViewGenTipoNotificacion> ViewGenTipoNotificacions { get; set; }

    public virtual DbSet<ViewGenTipoServicio> ViewGenTipoServicios { get; set; }

    public virtual DbSet<ViewGenUnidad> ViewGenUnidads { get; set; }

    public virtual DbSet<ViewGenZona> ViewGenZonas { get; set; }

    public virtual DbSet<ViewGeoUbicacion> ViewGeoUbicacions { get; set; }

    public virtual DbSet<ViewGuiAplicacion> ViewGuiAplicacions { get; set; }

    public virtual DbSet<ViewGuiAyudum> ViewGuiAyuda { get; set; }

    public virtual DbSet<ViewGuiBloqueHome> ViewGuiBloqueHomes { get; set; }

    public virtual DbSet<ViewGuiCampoTexto> ViewGuiCampoTextos { get; set; }

    public virtual DbSet<ViewGuiDetalleBloqueHome> ViewGuiDetalleBloqueHomes { get; set; }

    public virtual DbSet<ViewGuiFuncionalidad> ViewGuiFuncionalidads { get; set; }

    public virtual DbSet<ViewGuiTextoDefecto> ViewGuiTextoDefectos { get; set; }

    public virtual DbSet<ViewGuiTipoFuncionalidad> ViewGuiTipoFuncionalidads { get; set; }

    public virtual DbSet<ViewLicCatalogoParametro> ViewLicCatalogoParametros { get; set; }

    public virtual DbSet<ViewLicLicenciaParametro> ViewLicLicenciaParametros { get; set; }

    public virtual DbSet<ViewLicLicencium> ViewLicLicencia { get; set; }

    public virtual DbSet<ViewLicParametro> ViewLicParametros { get; set; }

    public virtual DbSet<ViewOrtCanalAtencion> ViewOrtCanalAtencions { get; set; }

    public virtual DbSet<ViewOrtDepartamentoSolicitud> ViewOrtDepartamentoSolicituds { get; set; }

    public virtual DbSet<ViewOrtMotivoCancelacion> ViewOrtMotivoCancelacions { get; set; }

    public virtual DbSet<ViewOrtProgramacion> ViewOrtProgramacions { get; set; }

    public virtual DbSet<ViewOrtReporteTecnico> ViewOrtReporteTecnicos { get; set; }

    public virtual DbSet<ViewOrtReporteTecnicoFalla> ViewOrtReporteTecnicoFallas { get; set; }

    public virtual DbSet<ViewOrtReporteTecnicoOt> ViewOrtReporteTecnicoOts { get; set; }

    public virtual DbSet<ViewOrtTipoProgramacion> ViewOrtTipoProgramacions { get; set; }

    public virtual DbSet<ViewOrtVale> ViewOrtVales { get; set; }

    public virtual DbSet<ViewProActividad> ViewProActividads { get; set; }

    public virtual DbSet<ViewProActividadEjecutor> ViewProActividadEjecutors { get; set; }

    public virtual DbSet<ViewProActividadEtapa> ViewProActividadEtapas { get; set; }

    public virtual DbSet<ViewProActividadHito> ViewProActividadHitos { get; set; }

    public virtual DbSet<ViewProActividadPredecesora> ViewProActividadPredecesoras { get; set; }

    public virtual DbSet<ViewProActividadRecursoFisico> ViewProActividadRecursoFisicos { get; set; }

    public virtual DbSet<ViewProCalidad> ViewProCalidads { get; set; }

    public virtual DbSet<ViewProEjecutore> ViewProEjecutores { get; set; }

    public virtual DbSet<ViewProEjecutoresArchivo> ViewProEjecutoresArchivos { get; set; }

    public virtual DbSet<ViewProEntregable> ViewProEntregables { get; set; }

    public virtual DbSet<ViewProEtapa> ViewProEtapas { get; set; }

    public virtual DbSet<ViewProFactorexito> ViewProFactorexitos { get; set; }

    public virtual DbSet<ViewProHito> ViewProHitos { get; set; }

    public virtual DbSet<ViewProHorarioProyecto> ViewProHorarioProyectos { get; set; }

    public virtual DbSet<ViewProRecursoFisico> ViewProRecursoFisicos { get; set; }

    public virtual DbSet<ViewProReporteActividad> ViewProReporteActividads { get; set; }

    public virtual DbSet<ViewProRol> ViewProRols { get; set; }

    public virtual DbSet<ViewProRolContacto> ViewProRolContactos { get; set; }

    public virtual DbSet<ViewProSesionActividad> ViewProSesionActividads { get; set; }

    public virtual DbSet<ViewRepCampoReporte> ViewRepCampoReportes { get; set; }

    public virtual DbSet<ViewRepCategorium> ViewRepCategoria { get; set; }

    public virtual DbSet<ViewRepIndicador> ViewRepIndicadors { get; set; }

    public virtual DbSet<ViewRepOpcionReporte> ViewRepOpcionReportes { get; set; }

    public virtual DbSet<ViewRepOrigenDato> ViewRepOrigenDatos { get; set; }

    public virtual DbSet<ViewRepReporte> ViewRepReportes { get; set; }

    public virtual DbSet<ViewRepReporteCategorium> ViewRepReporteCategoria { get; set; }

    public virtual DbSet<ViewRepTipoCampoReporte> ViewRepTipoCampoReportes { get; set; }

    public virtual DbSet<ViewSegCargo> ViewSegCargos { get; set; }

    public virtual DbSet<ViewSegCargoActividad> ViewSegCargoActividads { get; set; }

    public virtual DbSet<ViewSegCargoEnvioCorreo> ViewSegCargoEnvioCorreos { get; set; }

    public virtual DbSet<ViewSegGrupo> ViewSegGrupos { get; set; }

    public virtual DbSet<ViewSegPerfil> ViewSegPerfils { get; set; }

    public virtual DbSet<ViewSegPerfilBloqueHome> ViewSegPerfilBloqueHomes { get; set; }

    public virtual DbSet<ViewSegPerfilFormulario> ViewSegPerfilFormularios { get; set; }

    public virtual DbSet<ViewSegPerfilFuncionalidad> ViewSegPerfilFuncionalidads { get; set; }

    public virtual DbSet<ViewSegPerfilSubtipoDocumento> ViewSegPerfilSubtipoDocumentos { get; set; }

    public virtual DbSet<ViewSegPerfilTercero> ViewSegPerfilTerceros { get; set; }

    public virtual DbSet<ViewSegRegistroIntegracion> ViewSegRegistroIntegracions { get; set; }

    public virtual DbSet<ViewSegRegistroPeticion> ViewSegRegistroPeticions { get; set; }

    public virtual DbSet<ViewSegSesion> ViewSegSesions { get; set; }

    public virtual DbSet<ViewSegUsuario> ViewSegUsuarios { get; set; }

    public virtual DbSet<ViewSegUsuarioCatalogoEquipo> ViewSegUsuarioCatalogoEquipos { get; set; }

    public virtual DbSet<ViewSynCampoIntegracion> ViewSynCampoIntegracions { get; set; }

    public virtual DbSet<ViewSynPuntoIntegracion> ViewSynPuntoIntegracions { get; set; }

    public virtual DbSet<ViewSynPuntoIntegracionEstadoTipoDocumento> ViewSynPuntoIntegracionEstadoTipoDocumentos { get; set; }

    public virtual DbSet<ViewSynPuntoIntegracionTabla> ViewSynPuntoIntegracionTablas { get; set; }

    public virtual DbSet<ViewSynSistemaIntegrar> ViewSynSistemaIntegrars { get; set; }

    public virtual DbSet<ViewSynTipoAutenticacion> ViewSynTipoAutenticacions { get; set; }

    public virtual DbSet<ViewTaxNivelTax> ViewTaxNivelTaxes { get; set; }

    public virtual DbSet<ViewTaxObjetoTax> ViewTaxObjetoTaxes { get; set; }

    public virtual DbSet<ViewTerCargoContacto> ViewTerCargoContactos { get; set; }

    public virtual DbSet<ViewTerContacto> ViewTerContactos { get; set; }

    public virtual DbSet<ViewTerContactoEquipo> ViewTerContactoEquipos { get; set; }

    public virtual DbSet<ViewTerContactoSucursal> ViewTerContactoSucursals { get; set; }

    public virtual DbSet<ViewTerEstadoTercero> ViewTerEstadoTerceros { get; set; }

    public virtual DbSet<ViewTerNaturalezaTercero> ViewTerNaturalezaTerceros { get; set; }

    public virtual DbSet<ViewTerSector> ViewTerSectors { get; set; }

    public virtual DbSet<ViewTerSucursal> ViewTerSucursals { get; set; }

    public virtual DbSet<ViewTerSucursalListaprecio> ViewTerSucursalListaprecios { get; set; }

    public virtual DbSet<ViewTerSucursalUsuario> ViewTerSucursalUsuarios { get; set; }

    public virtual DbSet<ViewTerTercero> ViewTerTerceros { get; set; }

    public virtual DbSet<ViewTerTerceroListaprecio> ViewTerTerceroListaprecios { get; set; }

    public virtual DbSet<ViewTerTerceroSector> ViewTerTerceroSectors { get; set; }

    public virtual DbSet<ViewTerTerceroUsuario> ViewTerTerceroUsuarios { get; set; }

    public virtual DbSet<ZzuItemRentaSap> ZzuItemRentaSaps { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Server=DEVELOPER\\SQLEXPRESS2022EN;Database=sw_publicado_03082023;Encrypt=False;Trusted_Connection=True;");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<AlqDetalleLiquidacion>(entity =>
        {
            entity.ToTable("alq_detalleLiquidacion");

            entity.HasIndex(e => e.Eid, "IX_alq_detalleLiquidacion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.DetalleLiquidacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("detalleLiquidacion");
            entity.Property(e => e.DetalleLiquidacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("detalleLiquidacion_codigo");
            entity.Property(e => e.Dias).HasColumnName("dias");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFinFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFin_fh");
            entity.Property(e => e.FechaInicioFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicio_fh");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Horometro)
                .HasDefaultValue(0.0)
                .HasColumnName("horometro");
            entity.Property(e => e.IdDetalleAlquiler).HasColumnName("id_detalleAlquiler");
            entity.Property(e => e.IdDocumentoMovimiento)
                .HasDefaultValue(0)
                .HasColumnName("id_documento_movimiento");
            entity.Property(e => e.IdEvento).HasColumnName("id_evento");
            entity.Property(e => e.IdItemDocumento).HasColumnName("id_itemDocumento");
            entity.Property(e => e.IdTarifa)
                .HasDefaultValue(0)
                .HasColumnName("id_tarifa");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Saldo).HasColumnName("saldo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdDetalleAlquilerNavigation).WithMany(p => p.AlqDetalleLiquidacions)
                .HasForeignKey(d => d.IdDetalleAlquiler)
                .HasConstraintName("FK_alq_detalleLiquidacion_id_detalleAlquiler");

            entity.HasOne(d => d.IdEventoNavigation).WithMany(p => p.AlqDetalleLiquidacions)
                .HasForeignKey(d => d.IdEvento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__alq_detal__id_ev__50A92BCC");

            entity.HasOne(d => d.IdItemDocumentoNavigation).WithMany(p => p.AlqDetalleLiquidacions)
                .HasForeignKey(d => d.IdItemDocumento)
                .HasConstraintName("FK_alq_detalleLiquidacion_id_itemDocumento");

            entity.HasOne(d => d.IdTarifaNavigation).WithMany(p => p.AlqDetalleLiquidacions)
                .HasForeignKey(d => d.IdTarifa)
                .HasConstraintName("FK_alq_detalleLiquidacion_id_tarifa");
        });

        modelBuilder.Entity<AlqDetallealquilerItemdocumento>(entity =>
        {
            entity.ToTable("alq_detallealquiler_itemdocumento");

            entity.HasIndex(e => e.Eid, "IX_alq_detallealquiler_itemdocumento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DetallealquilerItemdocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("detallealquiler_itemdocumento");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdDetallealquiler).HasColumnName("id_detallealquiler");
            entity.Property(e => e.IdItemdocumento).HasColumnName("id_itemdocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdDetallealquilerNavigation).WithMany(p => p.AlqDetallealquilerItemdocumentos)
                .HasForeignKey(d => d.IdDetallealquiler)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_alq_detallealquiler_id_detallealquiler");

            entity.HasOne(d => d.IdItemdocumentoNavigation).WithMany(p => p.AlqDetallealquilerItemdocumentos)
                .HasForeignKey(d => d.IdItemdocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_alq_detallealquiler_id_itemDocumento");
        });

        modelBuilder.Entity<AlqHistoricoAlquiler>(entity =>
        {
            entity.ToTable("alq_historicoAlquiler");

            entity.HasIndex(e => e.Eid, "IX_alq_historicoAlquiler");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaEstado)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaEstado");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.HistoricoAlquiler)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("historicoAlquiler");
            entity.Property(e => e.HistoricoAlquilerCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("historicoAlquiler_codigo");
            entity.Property(e => e.IdDocumento)
                .HasDefaultValue(0)
                .HasColumnName("id_documento");
            entity.Property(e => e.IdEquipo)
                .HasDefaultValue(0)
                .HasColumnName("id_equipo");
            entity.Property(e => e.IdEstadoEquipo)
                .HasDefaultValue(0)
                .HasColumnName("id_estadoEquipo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdDocumentoNavigation).WithMany(p => p.AlqHistoricoAlquilers)
                .HasForeignKey(d => d.IdDocumento)
                .HasConstraintName("FK__alq_histo__id_do__78E205AF");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.AlqHistoricoAlquilers)
                .HasForeignKey(d => d.IdEquipo)
                .HasConstraintName("FK__alq_histo__id_eq__751174CB");

            entity.HasOne(d => d.IdEstadoEquipoNavigation).WithMany(p => p.AlqHistoricoAlquilers)
                .HasForeignKey(d => d.IdEstadoEquipo)
                .HasConstraintName("FK__alq_histo__id_es__76F9BD3D");
        });

        modelBuilder.Entity<AlqPeriodoAlquiler>(entity =>
        {
            entity.ToTable("alq_periodoAlquiler");

            entity.HasIndex(e => e.Eid, "IX_alq_periodoAlquiler");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PeriodoAlquiler)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("periodoAlquiler");
            entity.Property(e => e.PeriodoAlquilerCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("periodoAlquiler_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<AlqTarifa>(entity =>
        {
            entity.ToTable("alq_tarifa");

            entity.HasIndex(e => e.Eid, "IX_alq_tarifa");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CantidadIncluida).HasColumnName("cantidadIncluida");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.HorasIncluidas).HasColumnName("horasIncluidas");
            entity.Property(e => e.IdDetalleAlquiler).HasColumnName("id_detalleAlquiler");
            entity.Property(e => e.IdItemDocumento).HasColumnName("id_itemDocumento");
            entity.Property(e => e.IdTipoTarifa).HasColumnName("id_tipoTarifa");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Tarifa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tarifa");
            entity.Property(e => e.TarifaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tarifa_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdDetalleAlquilerNavigation).WithMany(p => p.AlqTarifas)
                .HasForeignKey(d => d.IdDetalleAlquiler)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_alq_tarifa_id_detalleAlquiler");

            entity.HasOne(d => d.IdItemDocumentoNavigation).WithMany(p => p.AlqTarifas)
                .HasForeignKey(d => d.IdItemDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_alq_tarifa_id_itemDocumento");

            entity.HasOne(d => d.IdTipoTarifaNavigation).WithMany(p => p.AlqTarifas)
                .HasForeignKey(d => d.IdTipoTarifa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_alq_tarifa_id_tipoTarifa");
        });

        modelBuilder.Entity<AlqTipoTarifa>(entity =>
        {
            entity.ToTable("alq_tipoTarifa");

            entity.HasIndex(e => e.Eid, "IX_alq_tipoTarifa");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TipoTarifa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoTarifa");
            entity.Property(e => e.TipoTarifaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoTarifa_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor)
                .HasDefaultValue(0.0m)
                .HasColumnType("decimal(10, 1)")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<CatAtributo>(entity =>
        {
            entity.ToTable("cat_atributo");

            entity.HasIndex(e => e.Eid, "IX_cat_atributo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Atributo)
                .HasMaxLength(900)
                .IsUnicode(false)
                .HasColumnName("atributo");
            entity.Property(e => e.AtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("atributo_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsObligatorio).HasColumnName("esObligatorio");
            entity.Property(e => e.EsVariable)
                .HasDefaultValue(true)
                .HasColumnName("esVariable");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdSeccionAtributo).HasColumnName("id_seccionAtributo");
            entity.Property(e => e.IdTipoAtributo).HasColumnName("id_tipoAtributo");
            entity.Property(e => e.IdUnidad).HasColumnName("id_unidad");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.NombreControl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("nombreControl");
            entity.Property(e => e.Resaltado)
                .HasDefaultValue(true)
                .HasColumnName("resaltado");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorMaximo).HasDefaultValue(0.0);
            entity.Property(e => e.ValorMinimo)
                .HasDefaultValue(0.0)
                .HasColumnName("valorMinimo");

            entity.HasOne(d => d.IdSeccionAtributoNavigation).WithMany(p => p.CatAtributos)
                .HasForeignKey(d => d.IdSeccionAtributo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_atributo_id_seccionAtributo");

            entity.HasOne(d => d.IdTipoAtributoNavigation).WithMany(p => p.CatAtributos)
                .HasForeignKey(d => d.IdTipoAtributo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_atributo_id_tipoAtributo");

            entity.HasOne(d => d.IdUnidadNavigation).WithMany(p => p.CatAtributos)
                .HasForeignKey(d => d.IdUnidad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_atributo_id_unidad");
        });

        modelBuilder.Entity<CatAtributoOpcionAtributo>(entity =>
        {
            entity.ToTable("cat_atributo_opcionAtributo");

            entity.HasIndex(e => e.Eid, "IX_cat_atributo_opcionAtributo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.AtributoOpcionAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("atributo_opcionAtributo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdAtributo)
                .HasDefaultValue(0)
                .HasColumnName("id_atributo");
            entity.Property(e => e.IdOpcionAtributo)
                .HasDefaultValue(0)
                .HasColumnName("id_opcionAtributo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdAtributoNavigation).WithMany(p => p.CatAtributoOpcionAtributos)
                .HasForeignKey(d => d.IdAtributo)
                .HasConstraintName("FK__cat_atrib__id_at__37343DE3");

            entity.HasOne(d => d.IdOpcionAtributoNavigation).WithMany(p => p.CatAtributoOpcionAtributos)
                .HasForeignKey(d => d.IdOpcionAtributo)
                .HasConstraintName("FK__cat_atrib__id_op__391C8655");
        });

        modelBuilder.Entity<CatCatalogo>(entity =>
        {
            entity.ToTable("cat_catalogo");

            entity.HasIndex(e => e.Eid, "IX_cat_catalogo");

            entity.HasIndex(e => e.CodigoInventario, "IX_cat_catalogo_codigoInventario");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.BloquearCostear).HasColumnName("bloquearCostear");
            entity.Property(e => e.Catalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo");
            entity.Property(e => e.CatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("catalogo_codigo");
            entity.Property(e => e.CodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("codigoInventario");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("descripcion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsNacional)
                .HasDefaultValue(true)
                .HasColumnName("esNacional");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdFamilia).HasColumnName("id_familia");
            entity.Property(e => e.IdImpuesto).HasColumnName("id_impuesto");
            entity.Property(e => e.IdSubtipoCatalogo).HasColumnName("id_subtipoCatalogo");
            entity.Property(e => e.IdUnidad).HasColumnName("id_unidad");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PrecioVenta)
                .HasColumnType("money")
                .HasColumnName("precioVenta");
            entity.Property(e => e.TiempoConsecucion).HasColumnName("tiempoConsecucion");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdFamiliaNavigation).WithMany(p => p.CatCatalogos)
                .HasForeignKey(d => d.IdFamilia)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_catalogo_id_familia");

            entity.HasOne(d => d.IdImpuestoNavigation).WithMany(p => p.CatCatalogos)
                .HasForeignKey(d => d.IdImpuesto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_catalogo_id_impuesto");

            entity.HasOne(d => d.IdSubtipoCatalogoNavigation).WithMany(p => p.CatCatalogos)
                .HasForeignKey(d => d.IdSubtipoCatalogo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_catalogo_id_subtipoCatalogo");

            entity.HasOne(d => d.IdUnidadNavigation).WithMany(p => p.CatCatalogos)
                .HasForeignKey(d => d.IdUnidad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_catalogo_id_unidad");
        });

        modelBuilder.Entity<CatCatalogoActividad>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_cat_catalogo_actividad");

            entity.ToTable("cat_catalogo.actividad");

            entity.HasIndex(e => e.Eid, "IX_cat_catalogo_actividad");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CatalogoActividad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo.actividad");
            entity.Property(e => e.DiasGarantia).HasColumnName("dias_garantia");
            entity.Property(e => e.DuracionEstimada).HasColumnName("duracionEstimada");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsProductiva).HasColumnName("esProductiva");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Procedimiento)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("procedimiento");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<CatCatalogoBodega>(entity =>
        {
            entity.ToTable("cat_catalogo_bodega");

            entity.HasIndex(e => e.Eid, "IX_cat_catalogo_bodega");

            entity.HasIndex(e => new { e.IdCatalogo, e.IdBodega }, "UK_cat_catalogo_bodega").IsUnique();

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CatalogoBodega)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo_bodega");
            entity.Property(e => e.Costo)
                .HasColumnType("money")
                .HasColumnName("costo");
            entity.Property(e => e.Disponible).HasColumnName("disponible");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EnOrdenes)
                .HasDefaultValue(0.0)
                .HasColumnName("enOrdenes");
            entity.Property(e => e.Existencia).HasColumnName("existencia");
            entity.Property(e => e.ExistenciaMaxima)
                .HasDefaultValue(0.0)
                .HasColumnName("existenciaMaxima");
            entity.Property(e => e.ExistenciaMinima).HasColumnName("existenciaMinima");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdBodega).HasColumnName("id_bodega");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Localizacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("localizacion");
            entity.Property(e => e.Reservado).HasColumnName("reservado");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdBodegaNavigation).WithMany(p => p.CatCatalogoBodegas)
                .HasForeignKey(d => d.IdBodega)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_catalogo_bodega_id_bodega");

            entity.HasOne(d => d.IdCatalogoNavigation).WithMany(p => p.CatCatalogoBodegas)
                .HasForeignKey(d => d.IdCatalogo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_catalogo_bodega_id_catalogo");
        });

        modelBuilder.Entity<CatCatalogoEquipo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_cat_catalogo_equipo");

            entity.ToTable("cat_catalogo.equipo");

            entity.HasIndex(e => e.Eid, "IX_cat_catalogo_equipo");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CatalogoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo.equipo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GarantiaHoras).HasColumnName("garantiaHoras");
            entity.Property(e => e.GarantiaMeses).HasColumnName("garantiaMeses");
            entity.Property(e => e.IdMarca).HasColumnName("id_marca");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.ManejaHorometro).HasColumnName("manejaHorometro");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdMarcaNavigation).WithMany(p => p.CatCatalogoEquipos)
                .HasForeignKey(d => d.IdMarca)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_catalogo_equipo_id_marca");
        });

        modelBuilder.Entity<CatCatalogoEquipoCatalogoTempario>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_cat_catalogo_equipo_catalogo_tempario");

            entity.ToTable("cat_catalogo.equipo_catalogo.tempario");

            entity.HasIndex(e => e.Eid, "IX_cat_catalogo_equipo_catalogo_tempario");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CatalogoEquipoCatalogoTempario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo.equipo_catalogo.tempario");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogoEquipo).HasColumnName("id_catalogo.equipo");
            entity.Property(e => e.IdCatalogoTempario).HasColumnName("id_catalogo.tempario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCatalogoEquipoNavigation).WithMany(p => p.CatCatalogoEquipoCatalogoTemparios)
                .HasForeignKey(d => d.IdCatalogoEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_catalogo_equipo_catalogo_tempario_id_catalogo_equipo");

            entity.HasOne(d => d.IdCatalogoTemparioNavigation).WithMany(p => p.CatCatalogoEquipoCatalogoTemparios)
                .HasForeignKey(d => d.IdCatalogoTempario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_catalogo_equipo_catalogo_tempario_id_catalogo_tempario");
        });

        modelBuilder.Entity<CatCatalogoEquipoPruebaCheckList>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_cat_catalogo_equipo_pruebaCheckList");

            entity.ToTable("cat_catalogo.equipo_pruebaCheckList");

            entity.HasIndex(e => e.Eid, "IX_cat_catalogo_equipo_pruebaCheckList");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CatalogoEquipoPruebaCheckList)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo.equipo_pruebaCheckList");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogoEquipo).HasColumnName("id_catalogo.equipo");
            entity.Property(e => e.IdPruebaCheckList).HasColumnName("id_pruebaCheckList");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCatalogoEquipoNavigation).WithMany(p => p.CatCatalogoEquipoPruebaCheckLists)
                .HasForeignKey(d => d.IdCatalogoEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_catalogo_equipo_pruebaCheckList_id_catalogo_equipo");

            entity.HasOne(d => d.IdPruebaCheckListNavigation).WithMany(p => p.CatCatalogoEquipoPruebaCheckLists)
                .HasForeignKey(d => d.IdPruebaCheckList)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_catalogo_equipo_pruebaCheckList_id_pruebaCheckList");
        });

        modelBuilder.Entity<CatCatalogoListaPrecio>(entity =>
        {
            entity.ToTable("cat_catalogo_listaPrecio");

            entity.HasIndex(e => e.Eid, "IX_cat_catalogo_listaPrecio");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CatalogoListaPrecio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo_listaPrecio");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdListaPrecio).HasColumnName("id_listaPrecio");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PorcDto).HasColumnName("porcDto");
            entity.Property(e => e.PrecioVenta).HasColumnType("money");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCatalogoNavigation).WithMany(p => p.CatCatalogoListaPrecios)
                .HasForeignKey(d => d.IdCatalogo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_catalogo_listaPrecio_id_catalogo");

            entity.HasOne(d => d.IdListaPrecioNavigation).WithMany(p => p.CatCatalogoListaPrecios)
                .HasForeignKey(d => d.IdListaPrecio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_catalogo_listaPrecio_id_listaPrecio");
        });

        modelBuilder.Entity<CatCatalogoOtro>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_cat_catalogo_otro");

            entity.ToTable("cat_catalogo.otro");

            entity.HasIndex(e => e.Eid, "IX_cat_catalogo_otro");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CatalogoOtro)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo.otro");
            entity.Property(e => e.Costo)
                .HasColumnType("money")
                .HasColumnName("costo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PeriodoAlquiler)
                .HasDefaultValue(0)
                .HasColumnName("periodoAlquiler");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<CatCatalogoProducto>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_cat_catalogo_producto");

            entity.ToTable("cat_catalogo.producto");

            entity.HasIndex(e => e.Eid, "IX_cat_catalogo_producto");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CatalogoProducto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo.producto");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<CatCatalogoRepuesto>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_cat_catalogo_repuesto");

            entity.ToTable("cat_catalogo.repuesto");

            entity.HasIndex(e => e.Eid, "IX_cat_catalogo_repuesto");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CatalogoRepuesto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo.repuesto");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GarantiaDias).HasColumnName("garantiaDias");
            entity.Property(e => e.GarantiaHoras).HasColumnName("garantiaHoras");
            entity.Property(e => e.IdMarca).HasColumnName("id_marca");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Peso)
                .HasDefaultValue(0.0)
                .HasColumnName("peso");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Vigente)
                .HasDefaultValue(true)
                .HasColumnName("vigente");

            entity.HasOne(d => d.IdMarcaNavigation).WithMany(p => p.CatCatalogoRepuestos)
                .HasForeignKey(d => d.IdMarca)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_catalogo_repuesto_id_marca");
        });

        modelBuilder.Entity<CatCatalogoTempario>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_cat_catalogo_tempario");

            entity.ToTable("cat_catalogo.tempario");

            entity.HasIndex(e => e.Eid, "IX_cat_catalogo_tempario");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CatalogoTempario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo.tempario");
            entity.Property(e => e.DetieneEquipos)
                .HasDefaultValue(true)
                .HasColumnName("detieneEquipos");
            entity.Property(e => e.DuracionEstimada).HasColumnName("duracionEstimada");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EnTaller)
                .HasDefaultValue(true)
                .HasColumnName("enTaller");
            entity.Property(e => e.EsCiclico)
                .HasDefaultValue(true)
                .HasColumnName("esCiclico");
            entity.Property(e => e.FacturaTodo).HasColumnName("facturaTodo");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.HorasDetencion).HasColumnName("horasDetencion");
            entity.Property(e => e.IdTipoServicio).HasColumnName("id_tipoServicio");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IncluirMenores).HasColumnName("incluirMenores");
            entity.Property(e => e.ModoAjuste).HasColumnName("modoAjuste");
            entity.Property(e => e.PeriodoDias).HasColumnName("periodoDias");
            entity.Property(e => e.PeriodoHoras).HasColumnName("periodoHoras");
            entity.Property(e => e.PorcGarantia).HasColumnName("porcGarantia");
            entity.Property(e => e.PorcTropicalizacion).HasColumnName("porcTropicalizacion");
            entity.Property(e => e.Proyectar).HasColumnName("proyectar");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdTipoServicioNavigation).WithMany(p => p.CatCatalogoTemparios)
                .HasForeignKey(d => d.IdTipoServicio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_catalogo_tempario_id_tipoServicio");
        });

        modelBuilder.Entity<CatDetalleRepuesto>(entity =>
        {
            entity.ToTable("cat_detalleRepuesto");

            entity.HasIndex(e => e.Eid, "IX_cat_detalleRepuesto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Cantidad)
                .HasDefaultValue(1.0)
                .HasColumnName("cantidad");
            entity.Property(e => e.DetalleRepuesto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("detalleRepuesto");
            entity.Property(e => e.DetalleRepuestoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("detalleRepuesto_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogoRepuesto).HasColumnName("id_catalogo.repuesto");
            entity.Property(e => e.IdCatalogoRepuestoHijo).HasColumnName("id_catalogo.repuesto_hijo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCatalogoRepuestoNavigation).WithMany(p => p.CatDetalleRepuestoIdCatalogoRepuestoNavigations)
                .HasForeignKey(d => d.IdCatalogoRepuesto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_detalleRepuesto_id_catalogo_repuesto");

            entity.HasOne(d => d.IdCatalogoRepuestoHijoNavigation).WithMany(p => p.CatDetalleRepuestoIdCatalogoRepuestoHijoNavigations)
                .HasForeignKey(d => d.IdCatalogoRepuestoHijo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_detalleRepuesto_id_catalogo_repuesto_hijo");
        });

        modelBuilder.Entity<CatDetalleTempario>(entity =>
        {
            entity.ToTable("cat_detalleTempario");

            entity.HasIndex(e => e.Eid, "IX_cat_detalleTempario");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CantidadEstandar)
                .HasDefaultValue(1.0)
                .HasColumnName("cantidadEstandar");
            entity.Property(e => e.CantidadTropicalizada)
                .HasDefaultValue(1.0)
                .HasColumnName("cantidadTropicalizada");
            entity.Property(e => e.DetalleTempario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("detalleTempario");
            entity.Property(e => e.DetalleTemparioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("detalleTempario_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdCatalogoTempario).HasColumnName("id_catalogo.tempario");
            entity.Property(e => e.IdDetalleTemparioPadre).HasColumnName("id_detalleTempario_padre");
            entity.Property(e => e.IdPruebaCheckList).HasColumnName("id_pruebaCheckList");
            entity.Property(e => e.IdSistema).HasColumnName("id_sistema");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Orden)
                .HasDefaultValue(1)
                .HasColumnName("orden");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCatalogoNavigation).WithMany(p => p.CatDetalleTemparios)
                .HasForeignKey(d => d.IdCatalogo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_detalleTempario_id_catalogo");

            entity.HasOne(d => d.IdCatalogoTemparioNavigation).WithMany(p => p.CatDetalleTemparios)
                .HasForeignKey(d => d.IdCatalogoTempario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_detalleTempario_id_catalogo_tempario");

            entity.HasOne(d => d.IdDetalleTemparioPadreNavigation).WithMany(p => p.InverseIdDetalleTemparioPadreNavigation)
                .HasForeignKey(d => d.IdDetalleTemparioPadre)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_detalleTempario_id_detalleTempario_padre");

            entity.HasOne(d => d.IdPruebaCheckListNavigation).WithMany(p => p.CatDetalleTemparios)
                .HasForeignKey(d => d.IdPruebaCheckList)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_detalleTempario_id_pruebaCheckList");

            entity.HasOne(d => d.IdSistemaNavigation).WithMany(p => p.CatDetalleTemparios)
                .HasForeignKey(d => d.IdSistema)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_detalleTempario_id_sistema");
        });

        modelBuilder.Entity<CatDimension>(entity =>
        {
            entity.ToTable("cat_dimension");

            entity.HasIndex(e => e.Eid, "IX_cat_dimension");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.AplicaEnX).HasColumnName("aplicaEnX");
            entity.Property(e => e.AplicaEnY).HasColumnName("aplicaEnY");
            entity.Property(e => e.AplicaEnZ).HasColumnName("aplicaEnZ");
            entity.Property(e => e.Dimension)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("dimension");
            entity.Property(e => e.DimensionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dimension_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<CatListaPrecio>(entity =>
        {
            entity.ToTable("cat_listaPrecio");

            entity.HasIndex(e => e.Eid, "IX_cat_listaPrecio");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsPrivado).HasColumnName("esPrivado");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdMoneda).HasColumnName("id_moneda");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.ListaPrecio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("listaPrecio");
            entity.Property(e => e.ListaPrecioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("listaPrecio_codigo");
            entity.Property(e => e.ParaCompra).HasColumnName("paraCompra");
            entity.Property(e => e.PorcentajeDescuento).HasColumnName("porcentajeDescuento");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdMonedaNavigation).WithMany(p => p.CatListaPrecios)
                .HasForeignKey(d => d.IdMoneda)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_cat_listaPrecio_id_moneda");
        });

        modelBuilder.Entity<CatMarca>(entity =>
        {
            entity.ToTable("cat_marca");

            entity.HasIndex(e => e.Eid, "IX_cat_marca");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdTerceroFabricante).HasColumnName("id_tercero_fabricante");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Marca)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("marca");
            entity.Property(e => e.MarcaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("marca_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdTerceroFabricanteNavigation).WithMany(p => p.CatMarcas)
                .HasForeignKey(d => d.IdTerceroFabricante)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_marca_id_tercero_fabricante");
        });

        modelBuilder.Entity<CatPosicion>(entity =>
        {
            entity.ToTable("cat_posicion");

            entity.HasIndex(e => e.Eid, "IX_cat_posicion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogoEquipoComponente).HasColumnName("id_catalogo.equipo_componente");
            entity.Property(e => e.IdCatalogoEquipoEquipo).HasColumnName("id_catalogo.equipo_equipo");
            entity.Property(e => e.IdDimensionX).HasColumnName("id_dimension_x");
            entity.Property(e => e.IdDimensionY).HasColumnName("id_dimension_y");
            entity.Property(e => e.IdDimensionZ).HasColumnName("id_dimension_z");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Posicion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("posicion");
            entity.Property(e => e.PosicionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("posicion_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCatalogoEquipoComponenteNavigation).WithMany(p => p.CatPosicionIdCatalogoEquipoComponenteNavigations)
                .HasForeignKey(d => d.IdCatalogoEquipoComponente)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_posicion_id_catalogo_equipo_componente");

            entity.HasOne(d => d.IdCatalogoEquipoEquipoNavigation).WithMany(p => p.CatPosicionIdCatalogoEquipoEquipoNavigations)
                .HasForeignKey(d => d.IdCatalogoEquipoEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_posicion_id_catalogo_equipo_equipo");

            entity.HasOne(d => d.IdDimensionXNavigation).WithMany(p => p.CatPosicionIdDimensionXNavigations)
                .HasForeignKey(d => d.IdDimensionX)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_posicion_id_dimension_x");

            entity.HasOne(d => d.IdDimensionYNavigation).WithMany(p => p.CatPosicionIdDimensionYNavigations)
                .HasForeignKey(d => d.IdDimensionY)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_posicion_id_dimension_y");

            entity.HasOne(d => d.IdDimensionZNavigation).WithMany(p => p.CatPosicionIdDimensionZNavigations)
                .HasForeignKey(d => d.IdDimensionZ)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_posicion_id_dimension_z");
        });

        modelBuilder.Entity<CatPruebaCheckList>(entity =>
        {
            entity.ToTable("cat_pruebaCheckList");

            entity.HasIndex(e => e.Eid, "IX_cat_pruebaCheckList");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Activo)
                .HasDefaultValue(true)
                .HasColumnName("activo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PruebaCheckList)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pruebaCheckList");
            entity.Property(e => e.PruebaCheckListCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pruebaCheckList_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<CatPruebaCheckListAtributo>(entity =>
        {
            entity.ToTable("cat_pruebaCheckList_atributo");

            entity.HasIndex(e => e.Eid, "IX_cat_pruebaCheckList_atributo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdAtributo).HasColumnName("id_atributo");
            entity.Property(e => e.IdPruebaCheckList).HasColumnName("id_pruebaCheckList");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.PruebaCheckListAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pruebaCheckList_atributo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdAtributoNavigation).WithMany(p => p.CatPruebaCheckListAtributos)
                .HasForeignKey(d => d.IdAtributo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_pruebaCheckList_atributo_id_atributo");

            entity.HasOne(d => d.IdPruebaCheckListNavigation).WithMany(p => p.CatPruebaCheckListAtributos)
                .HasForeignKey(d => d.IdPruebaCheckList)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_pruebaCheckList_atributo_id_pruebaCheckList");
        });

        modelBuilder.Entity<CatReemplazo>(entity =>
        {
            entity.ToTable("cat_reemplazo");

            entity.HasIndex(e => e.Eid, "IX_cat_reemplazo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogoRepuesto).HasColumnName("id_catalogo.repuesto");
            entity.Property(e => e.IdCatalogoRepuesto1).HasColumnName("id_catalogo.repuesto_1");
            entity.Property(e => e.IdTipoReemplazo).HasColumnName("id_tipoReemplazo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Reemplazo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("reemplazo");
            entity.Property(e => e.ReemplazoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("reemplazo_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCatalogoRepuestoNavigation).WithMany(p => p.CatReemplazoIdCatalogoRepuestoNavigations)
                .HasForeignKey(d => d.IdCatalogoRepuesto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_reemplazo_id_catalogo_repuesto");

            entity.HasOne(d => d.IdCatalogoRepuesto1Navigation).WithMany(p => p.CatReemplazoIdCatalogoRepuesto1Navigations)
                .HasForeignKey(d => d.IdCatalogoRepuesto1)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_reemplazo_id_catalogo_repuesto_1");

            entity.HasOne(d => d.IdTipoReemplazoNavigation).WithMany(p => p.CatReemplazos)
                .HasForeignKey(d => d.IdTipoReemplazo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_reemplazo_id_tipoReemplazo");
        });

        modelBuilder.Entity<CatReemplazoCatalogoEquipo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_cat_reemplazo_catalogo_equipo");

            entity.ToTable("cat_reemplazo_catalogo.equipo");

            entity.HasIndex(e => e.Eid, "IX_cat_reemplazo_catalogo_equipo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogoEquipo).HasColumnName("id_catalogo.equipo");
            entity.Property(e => e.IdReemplazo).HasColumnName("id_reemplazo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdVersionEquipo).HasColumnName("id_versionEquipo");
            entity.Property(e => e.ReemplazoCatalogoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("reemplazo_catalogo.equipo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCatalogoEquipoNavigation).WithMany(p => p.CatReemplazoCatalogoEquipos)
                .HasForeignKey(d => d.IdCatalogoEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_reemplazo_catalogo_equipo_id_catalogo_equipo");

            entity.HasOne(d => d.IdReemplazoNavigation).WithMany(p => p.CatReemplazoCatalogoEquipos)
                .HasForeignKey(d => d.IdReemplazo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_reemplazo_catalogo_equipo_id_reemplazo");

            entity.HasOne(d => d.IdVersionEquipoNavigation).WithMany(p => p.CatReemplazoCatalogoEquipos)
                .HasForeignKey(d => d.IdVersionEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_reemplazo_catalogo_equipo_id_versionEquipo");
        });

        modelBuilder.Entity<CatSeccionAtributo>(entity =>
        {
            entity.ToTable("cat_seccionAtributo");

            entity.HasIndex(e => e.Eid, "IX_cat_seccionAtributo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsoSeccionAtributo).HasColumnName("id_usoSeccionAtributo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.SeccionAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seccionAtributo");
            entity.Property(e => e.SeccionAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seccionAtributo_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdUsoSeccionAtributoNavigation).WithMany(p => p.CatSeccionAtributos)
                .HasForeignKey(d => d.IdUsoSeccionAtributo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_seccionAtributo_id_usoSeccionAtributo");
        });

        modelBuilder.Entity<CatSistema>(entity =>
        {
            entity.ToTable("cat_sistema");

            entity.HasIndex(e => e.Eid, "IX_cat_sistema");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdSistema).HasColumnName("id_sistema");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Sistema)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("sistema");
            entity.Property(e => e.SistemaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("sistema_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdSistemaNavigation).WithMany(p => p.InverseIdSistemaNavigation)
                .HasForeignKey(d => d.IdSistema)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_sistema_id_sistema");
        });

        modelBuilder.Entity<CatSistemaCatalogoEquipo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_cat_sistema_catalogo_equipo");

            entity.ToTable("cat_sistema_catalogo.equipo");

            entity.HasIndex(e => e.Eid, "IX_cat_sistema_catalogo_equipo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogoEquipo).HasColumnName("id_catalogo.equipo");
            entity.Property(e => e.IdSistema).HasColumnName("id_sistema");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdVersionEquipo).HasColumnName("id_versionEquipo");
            entity.Property(e => e.SistemaCatalogoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("sistema_catalogo.equipo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCatalogoEquipoNavigation).WithMany(p => p.CatSistemaCatalogoEquipos)
                .HasForeignKey(d => d.IdCatalogoEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_sistema_catalogo_equipo_id_catalogo_equipo");

            entity.HasOne(d => d.IdSistemaNavigation).WithMany(p => p.CatSistemaCatalogoEquipos)
                .HasForeignKey(d => d.IdSistema)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_sistema_catalogo_equipo_id_sistema");

            entity.HasOne(d => d.IdVersionEquipoNavigation).WithMany(p => p.CatSistemaCatalogoEquipos)
                .HasForeignKey(d => d.IdVersionEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_sistema_catalogo_equipo_id_versionEquipo");
        });

        modelBuilder.Entity<CatSoporteActividad>(entity =>
        {
            entity.ToTable("cat_soporteActividad");

            entity.HasIndex(e => e.Eid, "IX_cat_soporteActividad");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Duracion)
                .HasDefaultValue(1.0)
                .HasColumnName("duracion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCargo).HasColumnName("id_cargo");
            entity.Property(e => e.IdDetalleTempario).HasColumnName("id_detalleTempario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.SoporteActividad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("soporteActividad");
            entity.Property(e => e.SoporteActividadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("soporteActividad_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCargoNavigation).WithMany(p => p.CatSoporteActividads)
                .HasForeignKey(d => d.IdCargo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_soporteActividad_id_cargo");

            entity.HasOne(d => d.IdDetalleTemparioNavigation).WithMany(p => p.CatSoporteActividads)
                .HasForeignKey(d => d.IdDetalleTempario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_soporteActividad_id_detalleTempario");
        });

        modelBuilder.Entity<CatSubtipoCatalogo>(entity =>
        {
            entity.ToTable("cat_subtipoCatalogo");

            entity.HasIndex(e => e.Eid, "IX_cat_subtipoCatalogo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdTipoCatalogo).HasColumnName("id_tipoCatalogo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.SubtipoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("subtipoCatalogo");
            entity.Property(e => e.SubtipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("subtipoCatalogo_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdTipoCatalogoNavigation).WithMany(p => p.CatSubtipoCatalogos)
                .HasForeignKey(d => d.IdTipoCatalogo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_subtipoCatalogo_id_tipoCatalogo");
        });

        modelBuilder.Entity<CatTarifa>(entity =>
        {
            entity.ToTable("cat_tarifa");

            entity.HasIndex(e => e.Eid, "IX_cat_tarifa");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Estrategia).HasColumnName("estrategia");
            entity.Property(e => e.Externo).HasColumnName("externo");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdAtributo).HasColumnName("id_atributo");
            entity.Property(e => e.IdCargo).HasColumnName("id_cargo");
            entity.Property(e => e.IdCatalogoEquipo).HasColumnName("id_catalogo.equipo");
            entity.Property(e => e.IdFamilia).HasColumnName("id_familia");
            entity.Property(e => e.IdMarca).HasColumnName("id_marca");
            entity.Property(e => e.IdTipoServicio).HasColumnName("id_tipoServicio");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdZona).HasColumnName("id_zona");
            entity.Property(e => e.IncluyeRepuestos).HasColumnName("incluyeRepuestos");
            entity.Property(e => e.Minimo).HasColumnName("minimo");
            entity.Property(e => e.Precio)
                .HasColumnType("money")
                .HasColumnName("precio");
            entity.Property(e => e.Prioridad).HasColumnName("prioridad");
            entity.Property(e => e.Taller).HasColumnName("taller");
            entity.Property(e => e.Tarifa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tarifa");
            entity.Property(e => e.TarifaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tarifa_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorPorUnidad).HasColumnName("valorPorUnidad");

            entity.HasOne(d => d.IdAtributoNavigation).WithMany(p => p.CatTarifas)
                .HasForeignKey(d => d.IdAtributo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_tarifa_id_atributo");

            entity.HasOne(d => d.IdCargoNavigation).WithMany(p => p.CatTarifas)
                .HasForeignKey(d => d.IdCargo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_tarifa_id_cargo");

            entity.HasOne(d => d.IdCatalogoEquipoNavigation).WithMany(p => p.CatTarifas)
                .HasForeignKey(d => d.IdCatalogoEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_tarifa_id_catalogo_equipo");

            entity.HasOne(d => d.IdFamiliaNavigation).WithMany(p => p.CatTarifas)
                .HasForeignKey(d => d.IdFamilia)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_tarifa_id_familia");

            entity.HasOne(d => d.IdMarcaNavigation).WithMany(p => p.CatTarifas)
                .HasForeignKey(d => d.IdMarca)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_tarifa_id_marca");

            entity.HasOne(d => d.IdTipoServicioNavigation).WithMany(p => p.CatTarifas)
                .HasForeignKey(d => d.IdTipoServicio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_tarifa_id_tipoServicio");

            entity.HasOne(d => d.IdZonaNavigation).WithMany(p => p.CatTarifas)
                .HasForeignKey(d => d.IdZona)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_tarifa_id_zona");
        });

        modelBuilder.Entity<CatTarifaCatalogo>(entity =>
        {
            entity.ToTable("cat_tarifaCatalogo");

            entity.HasIndex(e => e.Eid, "IX_cat_tarifaCatalogo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogoElemento).HasColumnName("id_catalogo_elemento");
            entity.Property(e => e.IdCatalogoTarifa).HasColumnName("id_catalogo_tarifa");
            entity.Property(e => e.IdTipotarifa).HasColumnName("id_tipotarifa");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TarifaCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tarifaCatalogo");
            entity.Property(e => e.TarifaCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tarifaCatalogo_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<CatTarifaRango>(entity =>
        {
            entity.ToTable("cat_tarifaRango");

            entity.HasIndex(e => e.Eid, "IX_cat_tarifaRango");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdTarifa).HasColumnName("id_tarifa");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Precio).HasColumnName("precio");
            entity.Property(e => e.RangoFin).HasColumnName("rangoFin");
            entity.Property(e => e.RangoInicio).HasColumnName("rangoInicio");
            entity.Property(e => e.TarifaRango)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tarifaRango");
            entity.Property(e => e.TarifaRangoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tarifaRango_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdTarifaNavigation).WithMany(p => p.CatTarifaRangos)
                .HasForeignKey(d => d.IdTarifa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_tarifaRango_id_tarifa");
        });

        modelBuilder.Entity<CatTipoCatalogo>(entity =>
        {
            entity.ToTable("cat_tipoCatalogo");

            entity.HasIndex(e => e.Eid, "IX_cat_tipoCatalogo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.AfectaInventario)
                .HasDefaultValue(true)
                .HasColumnName("afectaInventario");
            entity.Property(e => e.AfectaProduccion)
                .HasDefaultValue(true)
                .HasColumnName("afectaProduccion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TipoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoCatalogo");
            entity.Property(e => e.TipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoCatalogo_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<CatTipoCatalogoListaPrecio>(entity =>
        {
            entity.ToTable("cat_tipoCatalogo_listaPrecio");

            entity.HasIndex(e => e.Eid, "IX_cat_tipoCatalogo_listaPrecio");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdListaPrecio).HasColumnName("id_listaPrecio");
            entity.Property(e => e.IdTipoCatalogo).HasColumnName("id_tipoCatalogo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Porcentaje).HasColumnName("porcentaje");
            entity.Property(e => e.TipoCatalogoListaPrecio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoCatalogo_listaPrecio");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdListaPrecioNavigation).WithMany(p => p.CatTipoCatalogoListaPrecios)
                .HasForeignKey(d => d.IdListaPrecio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_tipoCatalogo_listaPrecio_id_listaPrecio");

            entity.HasOne(d => d.IdTipoCatalogoNavigation).WithMany(p => p.CatTipoCatalogoListaPrecios)
                .HasForeignKey(d => d.IdTipoCatalogo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_tipoCatalogo_listaPrecio_id_tipoCatalogo");
        });

        modelBuilder.Entity<CatTipoReemplazo>(entity =>
        {
            entity.ToTable("cat_tipoReemplazo");

            entity.HasIndex(e => e.Eid, "IX_cat_tipoReemplazo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TipoReemplazo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoReemplazo");
            entity.Property(e => e.TipoReemplazoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoReemplazo_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<CatUsoSeccionAtributo>(entity =>
        {
            entity.ToTable("cat_usoSeccionAtributo");

            entity.HasIndex(e => e.Eid, "IX_cat_usoSeccionAtributo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.UsoSeccionAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("usoSeccionAtributo");
            entity.Property(e => e.UsoSeccionAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("usoSeccionAtributo_codigo");
        });

        modelBuilder.Entity<CatVersionEquipo>(entity =>
        {
            entity.ToTable("cat_versionEquipo");

            entity.HasIndex(e => e.Eid, "IX_cat_versionEquipo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogoEquipo).HasColumnName("id_catalogo.equipo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.VersionEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("versionEquipo");
            entity.Property(e => e.VersionEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("versionEquipo_codigo");

            entity.HasOne(d => d.IdCatalogoEquipoNavigation).WithMany(p => p.CatVersionEquipos)
                .HasForeignKey(d => d.IdCatalogoEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_versionEquipo_id_catalogo_equipo");
        });

        modelBuilder.Entity<CatVersionEquipoDetalleTempario>(entity =>
        {
            entity.ToTable("cat_versionEquipo_detalleTempario");

            entity.HasIndex(e => e.Eid, "IX_cat_versionEquipo_detalleTempario");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdDetalleTempario).HasColumnName("id_detalleTempario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdVersionEquipo).HasColumnName("id_versionEquipo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.VersionEquipoDetalleTempario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("versionEquipo_detalleTempario");

            entity.HasOne(d => d.IdDetalleTemparioNavigation).WithMany(p => p.CatVersionEquipoDetalleTemparios)
                .HasForeignKey(d => d.IdDetalleTempario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_versionEquipo_detalleTempario_id_detalleTempario");

            entity.HasOne(d => d.IdVersionEquipoNavigation).WithMany(p => p.CatVersionEquipoDetalleTemparios)
                .HasForeignKey(d => d.IdVersionEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cat_versionEquipo_detalleTempario_id_versionEquipo");
        });

        modelBuilder.Entity<CntConfigContrato>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_cnt_contratoEquipo_catalogo_tempario");

            entity.ToTable("cnt_configContrato");

            entity.HasIndex(e => e.Eid, "IX_cnt_contratoEquipo_catalogo_tempario");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.AproximarA)
                .HasDefaultValue(0)
                .HasColumnName("aproximarA");
            entity.Property(e => e.CadaN)
                .HasDefaultValue(0.0)
                .HasColumnName("cadaN");
            entity.Property(e => e.ConfigContrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("configContrato");
            entity.Property(e => e.Dia)
                .HasDefaultValue(0)
                .HasColumnName("dia");
            entity.Property(e => e.DiaHabil)
                .HasDefaultValue(0)
                .HasColumnName("diaHabil");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Estrategia)
                .HasDefaultValue(0)
                .HasColumnName("estrategia");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFf)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Frecuencia)
                .HasDefaultValue(0)
                .HasColumnName("frecuencia");
            entity.Property(e => e.IdCatalogoTempario)
                .HasDefaultValue(0)
                .HasColumnName("id_catalogo.tempario");
            entity.Property(e => e.IdContratoEquipo)
                .HasDefaultValue(0)
                .HasColumnName("id_contratoEquipo");
            entity.Property(e => e.IdTerceroProveedor)
                .HasDefaultValue(0)
                .HasColumnName("id_tercero_proveedor");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IncluirMenores)
                .HasDefaultValue(false)
                .HasColumnName("incluirMenores");
            entity.Property(e => e.PorTrabajo)
                .HasDefaultValue(false)
                .HasColumnName("porTrabajo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCatalogoTemparioNavigation).WithMany(p => p.CntConfigContratos)
                .HasForeignKey(d => d.IdCatalogoTempario)
                .HasConstraintName("FK__cnt_contr__id_ca__0E322850");

            entity.HasOne(d => d.IdContratoEquipoNavigation).WithMany(p => p.CntConfigContratos)
                .HasForeignKey(d => d.IdContratoEquipo)
                .HasConstraintName("FK__cnt_contr__id_co__0C49DFDE");

            entity.HasOne(d => d.IdTerceroProveedorNavigation).WithMany(p => p.CntConfigContratos)
                .HasForeignKey(d => d.IdTerceroProveedor)
                .HasConstraintName("FK__cnt_contr__id_te__101A70C2");
        });

        modelBuilder.Entity<CntContrato>(entity =>
        {
            entity.ToTable("cnt_contrato");

            entity.HasIndex(e => e.Eid, "IX_cnt_contrato");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Condiciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("condiciones");
            entity.Property(e => e.Contrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("contrato");
            entity.Property(e => e.ContratoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("contrato_codigo");
            entity.Property(e => e.DiasCumplimiento)
                .HasDefaultValue(30)
                .HasColumnName("diasCumplimiento");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFin_ff");
            entity.Property(e => e.FechaInicioFf)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicio_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdDepartamentoSolicitud).HasColumnName("id_departamentoSolicitud");
            entity.Property(e => e.IdDocumentoAlquiler).HasColumnName("id_documento.alquiler");
            entity.Property(e => e.IdEstadoTipoDocumentoInicial).HasColumnName("id_estadoTipoDocumento_inicial");
            entity.Property(e => e.IdPeriodoContrato).HasColumnName("id_periodoContrato");
            entity.Property(e => e.IdSubtipoDocumento).HasColumnName("id_subtipoDocumento");
            entity.Property(e => e.IdSubtipoDocumentoSolicitud).HasColumnName("id_subtipoDocumento_solicitud");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdTerceroServicio).HasColumnName("id_tercero_servicio");
            entity.Property(e => e.IdTipoContrato).HasColumnName("id_tipoContrato");
            entity.Property(e => e.IdTipoServicio).HasColumnName("id_tipoServicio");
            entity.Property(e => e.IdUsuarioCoordinador).HasColumnName("id_usuario_coordinador");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Numero)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("numero");
            entity.Property(e => e.Presupuesto)
                .HasColumnType("money")
                .HasColumnName("presupuesto");
            entity.Property(e => e.TotalContrato)
                .HasColumnType("money")
                .HasColumnName("totalContrato");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdDepartamentoSolicitudNavigation).WithMany(p => p.CntContratos)
                .HasForeignKey(d => d.IdDepartamentoSolicitud)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_contrato_id_departamentoSolicitud");

            entity.HasOne(d => d.IdDocumentoAlquilerNavigation).WithMany(p => p.CntContratos)
                .HasForeignKey(d => d.IdDocumentoAlquiler)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_contrato_id_documento_alquiler");

            entity.HasOne(d => d.IdEstadoTipoDocumentoInicialNavigation).WithMany(p => p.CntContratos)
                .HasForeignKey(d => d.IdEstadoTipoDocumentoInicial)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__cnt_contr__id_es__483ECE54");

            entity.HasOne(d => d.IdPeriodoContratoNavigation).WithMany(p => p.CntContratos)
                .HasForeignKey(d => d.IdPeriodoContrato)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_contrato_id_periodoContrato");

            entity.HasOne(d => d.IdSubtipoDocumentoNavigation).WithMany(p => p.CntContratoIdSubtipoDocumentoNavigations)
                .HasForeignKey(d => d.IdSubtipoDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_contrato_id_subtipoDocumento");

            entity.HasOne(d => d.IdSubtipoDocumentoSolicitudNavigation).WithMany(p => p.CntContratoIdSubtipoDocumentoSolicitudNavigations)
                .HasForeignKey(d => d.IdSubtipoDocumentoSolicitud)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__cnt_contr__id_su__36DF3828");

            entity.HasOne(d => d.IdTerceroNavigation).WithMany(p => p.CntContratoIdTerceroNavigations)
                .HasForeignKey(d => d.IdTercero)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_contrato_id_tercero");

            entity.HasOne(d => d.IdTerceroServicioNavigation).WithMany(p => p.CntContratoIdTerceroServicioNavigations)
                .HasForeignKey(d => d.IdTerceroServicio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_contrato_id_tercero_servicio");

            entity.HasOne(d => d.IdTipoContratoNavigation).WithMany(p => p.CntContratos)
                .HasForeignKey(d => d.IdTipoContrato)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_contrato_id_tipoContrato");

            entity.HasOne(d => d.IdTipoServicioNavigation).WithMany(p => p.CntContratos)
                .HasForeignKey(d => d.IdTipoServicio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_contrato_id_tipoServicio");

            entity.HasOne(d => d.IdUsuarioCoordinadorNavigation).WithMany(p => p.CntContratos)
                .HasForeignKey(d => d.IdUsuarioCoordinador)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_contrato_id_usuario_coordinador");
        });

        modelBuilder.Entity<CntContratoCatalogo>(entity =>
        {
            entity.ToTable("cnt_contrato_catalogo");

            entity.HasIndex(e => e.Eid, "IX_cnt_contrato_catalogo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Consumida)
                .HasDefaultValue(0.0)
                .HasColumnName("consumida");
            entity.Property(e => e.ContratoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("contrato_catalogo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdContrato).HasColumnName("id_contrato");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Incluida)
                .HasDefaultValue(0.0)
                .HasColumnName("incluida");
            entity.Property(e => e.Notas)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("notas");
            entity.Property(e => e.PrecioVenta)
                .HasDefaultValue(0m)
                .HasColumnType("money")
                .HasColumnName("precioVenta");
            entity.Property(e => e.Saldo)
                .HasDefaultValue(0.0)
                .HasColumnName("saldo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCatalogoNavigation).WithMany(p => p.CntContratoCatalogos)
                .HasForeignKey(d => d.IdCatalogo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_contrato_catalogo_id_catalogo");

            entity.HasOne(d => d.IdContratoNavigation).WithMany(p => p.CntContratoCatalogos)
                .HasForeignKey(d => d.IdContrato)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_contrato_catalogo_id_contrato");
        });

        modelBuilder.Entity<CntContratoDetalleVisitum>(entity =>
        {
            entity.ToTable("cnt_contratoDetalleVisita");

            entity.HasIndex(e => e.Eid, "IX_cnt_contratoDetalleVisita");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.AproximarA).HasColumnName("aproximarA");
            entity.Property(e => e.CadaN).HasColumnName("cadaN");
            entity.Property(e => e.ContratoDetalleVisita)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("contratoDetalleVisita");
            entity.Property(e => e.ContratoDetalleVisitaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("contratoDetalleVisita_codigo");
            entity.Property(e => e.Dia).HasColumnName("dia");
            entity.Property(e => e.DiaHabil).HasColumnName("diaHabil");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Estrategia).HasColumnName("estrategia");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFf)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaInactivaFinalFf)
                .HasDefaultValueSql("(NULL)")
                .HasColumnType("datetime")
                .HasColumnName("fechaInactivaFinal_ff");
            entity.Property(e => e.FechaInactivaInicialFf)
                .HasDefaultValueSql("(NULL)")
                .HasColumnType("datetime")
                .HasColumnName("fechaInactivaInicial_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Frecuencia).HasColumnName("frecuencia");
            entity.Property(e => e.IdContrato).HasColumnName("id_contrato");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IncluirMenores).HasColumnName("incluirMenores");
            entity.Property(e => e.PorTrabajo).HasColumnName("porTrabajo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdContratoNavigation).WithMany(p => p.CntContratoDetalleVisita)
                .HasForeignKey(d => d.IdContrato)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_contratoDetalleVisita_id_contrato");
        });

        modelBuilder.Entity<CntContratoEquipo>(entity =>
        {
            entity.ToTable("cnt_contratoEquipo");

            entity.HasIndex(e => e.Eid, "IX_cnt_contratoEquipo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.ContratoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("contratoEquipo");
            entity.Property(e => e.ContratoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("contratoEquipo_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFf)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdContrato).HasColumnName("id_contrato");
            entity.Property(e => e.IdContratoDetalleVisita).HasColumnName("id_contratoDetalleVisita");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PrecioServicio)
                .HasDefaultValue(0m)
                .HasColumnType("money")
                .HasColumnName("precioServicio");
            entity.Property(e => e.PrecioVisita)
                .HasDefaultValue(0m)
                .HasColumnType("money")
                .HasColumnName("precioVisita");
            entity.Property(e => e.Promedio)
                .HasDefaultValue(0.0)
                .HasColumnName("promedio");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdContratoNavigation).WithMany(p => p.CntContratoEquipos)
                .HasForeignKey(d => d.IdContrato)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_contratoEquipo_id_contrato");

            entity.HasOne(d => d.IdContratoDetalleVisitaNavigation).WithMany(p => p.CntContratoEquipos)
                .HasForeignKey(d => d.IdContratoDetalleVisita)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_contratoEquipo_id_contratoDetalleVisita");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.CntContratoEquipos)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_contratoEquipo_id_equipo");
        });

        modelBuilder.Entity<CntContratoSucursal>(entity =>
        {
            entity.ToTable("cnt_contrato_sucursal");

            entity.HasIndex(e => e.Eid, "IX_cnt_contrato_sucursal");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.ContratoSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("contrato_sucursal");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdContrato).HasColumnName("id_contrato");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PrecioServicio)
                .HasColumnType("money")
                .HasColumnName("precioServicio");
            entity.Property(e => e.PrecioVisita)
                .HasColumnType("money")
                .HasColumnName("precioVisita");
            entity.Property(e => e.Presupuesto)
                .HasColumnType("money")
                .HasColumnName("presupuesto");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdContratoNavigation).WithMany(p => p.CntContratoSucursals)
                .HasForeignKey(d => d.IdContrato)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_contrato_sucursal_id_contrato");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.CntContratoSucursals)
                .HasForeignKey(d => d.IdSucursal)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_contrato_sucursal_id_sucursal");
        });

        modelBuilder.Entity<CntContratoTipoServicio>(entity =>
        {
            entity.ToTable("cnt_contrato_tipoServicio");

            entity.HasIndex(e => e.Eid, "IX_cnt_contrato_tipoServicio");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.ContratoTipoServicio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("contrato_tipoServicio");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdContrato).HasColumnName("id_contrato");
            entity.Property(e => e.IdListaPrecio).HasColumnName("id_listaPrecio");
            entity.Property(e => e.IdTipoServicio).HasColumnName("id_tipoServicio");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdContratoNavigation).WithMany(p => p.CntContratoTipoServicios)
                .HasForeignKey(d => d.IdContrato)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_contrato_tipoServicio_id_contrato");

            entity.HasOne(d => d.IdListaPrecioNavigation).WithMany(p => p.CntContratoTipoServicios)
                .HasForeignKey(d => d.IdListaPrecio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_contrato_tipoServicio_id_listaPrecio");

            entity.HasOne(d => d.IdTipoServicioNavigation).WithMany(p => p.CntContratoTipoServicios)
                .HasForeignKey(d => d.IdTipoServicio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_contrato_tipoServicio_id_tipoServicio");
        });

        modelBuilder.Entity<CntContratoZona>(entity =>
        {
            entity.ToTable("cnt_contrato_zona");

            entity.HasIndex(e => e.Eid, "IX_cnt_contrato_zona");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.ContratoZona)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("contrato_zona");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdContrato).HasColumnName("id_contrato");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdZona).HasColumnName("id_zona");
            entity.Property(e => e.PrecioServicio)
                .HasColumnType("money")
                .HasColumnName("precioServicio");
            entity.Property(e => e.PrecioVisita)
                .HasColumnType("money")
                .HasColumnName("precioVisita");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdContratoNavigation).WithMany(p => p.CntContratoZonas)
                .HasForeignKey(d => d.IdContrato)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_contrato_zona_id_contrato");

            entity.HasOne(d => d.IdZonaNavigation).WithMany(p => p.CntContratoZonas)
                .HasForeignKey(d => d.IdZona)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_contrato_zona_id_zona");
        });

        modelBuilder.Entity<CntCorrimientoVisitaFija>(entity =>
        {
            entity.ToTable("cnt_corrimientoVisitaFija");

            entity.HasIndex(e => e.Eid, "IX_cnt_corrimientoVisitaFija");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CorrimientoVisitaFija)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("corrimientoVisitaFija");
            entity.Property(e => e.CorrimientoVisitaFijaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("corrimientoVisitaFija_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaOriginalFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaOriginal_ff");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdVisitaFija).HasColumnName("id_visitaFija");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdVisitaFijaNavigation).WithMany(p => p.CntCorrimientoVisitaFijas)
                .HasForeignKey(d => d.IdVisitaFija)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_corrimientoVisitaFija_id_visitaFija");
        });

        modelBuilder.Entity<CntPagosContrato>(entity =>
        {
            entity.ToTable("cnt_pagosContrato");

            entity.HasIndex(e => e.Eid, "IX_cnt_pagosContrato");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdContrato).HasColumnName("id_contrato");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PagosContrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pagosContrato");
            entity.Property(e => e.PagosContratoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pagosContrato_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");

            entity.HasOne(d => d.IdContratoNavigation).WithMany(p => p.CntPagosContratos)
                .HasForeignKey(d => d.IdContrato)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_pagosContrato_id_contrato");
        });

        modelBuilder.Entity<CntPeriodoContrato>(entity =>
        {
            entity.ToTable("cnt_periodoContrato");

            entity.HasIndex(e => e.Eid, "IX_cnt_periodoContrato");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PeriodoContrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("periodoContrato");
            entity.Property(e => e.PeriodoContratoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("periodoContrato_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<CntTiempoRespuestum>(entity =>
        {
            entity.ToTable("cnt_tiempoRespuesta");

            entity.HasIndex(e => e.Eid, "IX_cnt_tiempoRespuesta");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdContrato).HasColumnName("id_contrato");
            entity.Property(e => e.IdEstrategiaPrioridad).HasColumnName("id_estrategiaPrioridad");
            entity.Property(e => e.IdPrioridadDocumento).HasColumnName("id_prioridadDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TiempoLimite)
                .HasDefaultValue(24)
                .HasColumnName("tiempoLimite");
            entity.Property(e => e.TiempoRespuesta)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tiempoRespuesta");
            entity.Property(e => e.TiempoRespuestaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tiempoRespuesta_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdContratoNavigation).WithMany(p => p.CntTiempoRespuesta)
                .HasForeignKey(d => d.IdContrato)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_tiempoRespuesta_id_contrato");

            entity.HasOne(d => d.IdEstrategiaPrioridadNavigation).WithMany(p => p.CntTiempoRespuesta)
                .HasForeignKey(d => d.IdEstrategiaPrioridad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_tiempoRespuesta_id_estrategiaPrioridad");

            entity.HasOne(d => d.IdPrioridadDocumentoNavigation).WithMany(p => p.CntTiempoRespuesta)
                .HasForeignKey(d => d.IdPrioridadDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_tiempoRespuesta_id_prioridadDocumento");
        });

        modelBuilder.Entity<CntTipoContrato>(entity =>
        {
            entity.ToTable("cnt_tipoContrato");

            entity.HasIndex(e => e.Eid, "IX_cnt_tipoContrato");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TipoContrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoContrato");
            entity.Property(e => e.TipoContratoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoContrato_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<CntVisitaFija>(entity =>
        {
            entity.ToTable("cnt_visitaFija");

            entity.HasIndex(e => e.Eid, "IX_cnt_visitaFija");

            entity.HasIndex(e => e.IdContratoEquipo, "IX_id_contratoEquipo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CorreoRecordatorio)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("correoRecordatorio");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsPorTrabajo)
                .HasDefaultValue(false)
                .HasColumnName("esPorTrabajo");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaCreadaFf)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreada_ff");
            entity.Property(e => e.FechaFf)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Horometro).HasColumnName("horometro");
            entity.Property(e => e.IdCatalogoTempario).HasColumnName("id_catalogo.tempario");
            entity.Property(e => e.IdConfigContrato)
                .HasDefaultValue(0)
                .HasColumnName("id_configContrato");
            entity.Property(e => e.IdContratoDetalleVisita).HasColumnName("id_contratoDetalleVisita");
            entity.Property(e => e.IdContratoEquipo).HasColumnName("id_contratoEquipo");
            entity.Property(e => e.IdDocumentoOt).HasColumnName("id_documento.ot");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Presupuesto)
                .HasDefaultValue(0.0)
                .HasColumnName("presupuesto");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.VisitaFija)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("visitaFija");
            entity.Property(e => e.VisitaFijaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("visitaFija_codigo");

            entity.HasOne(d => d.IdCatalogoTemparioNavigation).WithMany(p => p.CntVisitaFijas)
                .HasForeignKey(d => d.IdCatalogoTempario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_visitaFija_id_catalogo_tempario");

            entity.HasOne(d => d.IdConfigContratoNavigation).WithMany(p => p.CntVisitaFijas)
                .HasForeignKey(d => d.IdConfigContrato)
                .HasConstraintName("FK__cnt_visit__id_co__69BFBDB0");

            entity.HasOne(d => d.IdContratoDetalleVisitaNavigation).WithMany(p => p.CntVisitaFijas)
                .HasForeignKey(d => d.IdContratoDetalleVisita)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_visitaFija_id_contratoDetalleVisita");

            entity.HasOne(d => d.IdContratoEquipoNavigation).WithMany(p => p.CntVisitaFijas)
                .HasForeignKey(d => d.IdContratoEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_visitaFija_id_contratoEquipo");

            entity.HasOne(d => d.IdDocumentoOtNavigation).WithMany(p => p.CntVisitaFijas)
                .HasForeignKey(d => d.IdDocumentoOt)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_visitaFija_id_documento_ot");
        });

        modelBuilder.Entity<CntVisitaFijaCatalogo>(entity =>
        {
            entity.ToTable("cnt_visitaFija_catalogo");

            entity.HasIndex(e => e.Eid, "IX_cnt_visitaFija_catalogo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdVisitaFija).HasColumnName("id_visitaFija");
            entity.Property(e => e.Precio).HasColumnName("precio");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.VisitaFijaCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("visitaFija_catalogo");

            entity.HasOne(d => d.IdCatalogoNavigation).WithMany(p => p.CntVisitaFijaCatalogos)
                .HasForeignKey(d => d.IdCatalogo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_visitaFija_catalogo_id_catalogo");

            entity.HasOne(d => d.IdVisitaFijaNavigation).WithMany(p => p.CntVisitaFijaCatalogos)
                .HasForeignKey(d => d.IdVisitaFija)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_cnt_visitaFija_catalogo_id_visitaFija");
        });

        modelBuilder.Entity<Columna>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_columnas");

            entity.ToTable("_columnas");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Columna1)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("columna");
            entity.Property(e => e.EsNuleable).HasColumnName("esNuleable");
            entity.Property(e => e.IdTabla).HasColumnName("id_tabla");
            entity.Property(e => e.Tamano).HasColumnName("tamano");
            entity.Property(e => e.Tipo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("tipo");

            entity.HasOne(d => d.IdTablaNavigation).WithMany(p => p.Columnas)
                .HasForeignKey(d => d.IdTabla)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_columnas_id_tabla");
        });

        modelBuilder.Entity<ComComision>(entity =>
        {
            entity.ToTable("com_comision");

            entity.HasIndex(e => e.Eid, "IX_com_comision");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Comision)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("comision");
            entity.Property(e => e.ComisionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("comision_codigo");
            entity.Property(e => e.Costear).HasColumnName("costear");
            entity.Property(e => e.DescuentoMaximo)
                .HasDefaultValue(0.0)
                .HasColumnName("descuentoMaximo");
            entity.Property(e => e.DescuentoMinimo)
                .HasDefaultValue(0.0)
                .HasColumnName("descuentoMinimo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCargo).HasColumnName("id_cargo");
            entity.Property(e => e.IdCondicion).HasColumnName("id_condicion");
            entity.Property(e => e.IdOpcionCondicion).HasColumnName("id_opcionCondicion");
            entity.Property(e => e.IdSubtipoCatalogo).HasColumnName("id_subtipoCatalogo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdZona).HasColumnName("id_zona");
            entity.Property(e => e.Nivelnegocio).HasColumnName("nivelnegocio");
            entity.Property(e => e.PorcComision).HasColumnName("porc_comision");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCargoNavigation).WithMany(p => p.ComComisions)
                .HasForeignKey(d => d.IdCargo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_com_comision_id_cargo");

            entity.HasOne(d => d.IdCondicionNavigation).WithMany(p => p.ComComisions)
                .HasForeignKey(d => d.IdCondicion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_com_comision_id_condicion");

            entity.HasOne(d => d.IdOpcionCondicionNavigation).WithMany(p => p.ComComisions)
                .HasForeignKey(d => d.IdOpcionCondicion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_com_comision_id_opcionCondicion");

            entity.HasOne(d => d.IdSubtipoCatalogoNavigation).WithMany(p => p.ComComisions)
                .HasForeignKey(d => d.IdSubtipoCatalogo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_com_comision_id_subtipoCatalogo");

            entity.HasOne(d => d.IdZonaNavigation).WithMany(p => p.ComComisions)
                .HasForeignKey(d => d.IdZona)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_com_comision_id_zona");
        });

        modelBuilder.Entity<DisEstadoEvento>(entity =>
        {
            entity.ToTable("dis_estadoEvento");

            entity.HasIndex(e => e.Eid, "IX_dis_estadoEvento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EstadoEvento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("estadoEvento");
            entity.Property(e => e.EstadoEventoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("estadoEvento_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<DisEvento>(entity =>
        {
            entity.ToTable("dis_evento");

            entity.HasIndex(e => e.Eid, "IX_dis_evento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.AfectaCliente)
                .HasDefaultValue(true)
                .HasColumnName("afectaCliente");
            entity.Property(e => e.AfectaProduccion)
                .HasDefaultValue(true)
                .HasColumnName("afectaProduccion");
            entity.Property(e => e.Codigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("codigo");
            entity.Property(e => e.DuracionHh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("duracion_hh");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Evento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("evento");
            entity.Property(e => e.EventoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("evento_codigo");
            entity.Property(e => e.EventoTipo).HasColumnName("eventoTipo");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaHoraEstimadaFh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaHoraEstimada_fh");
            entity.Property(e => e.FechaHoraInicioFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaHoraInicio_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdEstadoEquipo).HasColumnName("id_estadoEquipo");
            entity.Property(e => e.IdEstadoEvento).HasColumnName("id_estadoEvento");
            entity.Property(e => e.IdFalla).HasColumnName("id_falla");
            entity.Property(e => e.IdFallaCausa).HasColumnName("id_falla_causa");
            entity.Property(e => e.IdMetodoDeteccion).HasColumnName("id_metodoDeteccion");
            entity.Property(e => e.IdMotivoEvento).HasColumnName("id_motivoEvento");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Notas)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("notas");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.DisEventos)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dis_evento_id_equipo");

            entity.HasOne(d => d.IdEstadoEquipoNavigation).WithMany(p => p.DisEventos)
                .HasForeignKey(d => d.IdEstadoEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dis_evento_id_estadoEquipo");

            entity.HasOne(d => d.IdEstadoEventoNavigation).WithMany(p => p.DisEventos)
                .HasForeignKey(d => d.IdEstadoEvento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dis_evento_id_estadoEvento");

            entity.HasOne(d => d.IdFallaNavigation).WithMany(p => p.DisEventoIdFallaNavigations)
                .HasForeignKey(d => d.IdFalla)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dis_evento_id_falla");

            entity.HasOne(d => d.IdFallaCausaNavigation).WithMany(p => p.DisEventoIdFallaCausaNavigations)
                .HasForeignKey(d => d.IdFallaCausa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dis_evento_id_falla_causa");

            entity.HasOne(d => d.IdMetodoDeteccionNavigation).WithMany(p => p.DisEventos)
                .HasForeignKey(d => d.IdMetodoDeteccion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dis_evento_id_metodoDeteccion");

            entity.HasOne(d => d.IdMotivoEventoNavigation).WithMany(p => p.DisEventos)
                .HasForeignKey(d => d.IdMotivoEvento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dis_evento_id_motivoEvento");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.DisEventos)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dis_evento_id_usuario");
        });

        modelBuilder.Entity<DisEventoCatalogo>(entity =>
        {
            entity.ToTable("dis_evento_catalogo");

            entity.HasIndex(e => e.Eid, "IX_dis_evento_catalogo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquipoAuxiliar)
                .HasDefaultValue(true)
                .HasColumnName("equipoAuxiliar");
            entity.Property(e => e.EventoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("evento_catalogo");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdEvento).HasColumnName("id_evento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(400)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("observaciones");
            entity.Property(e => e.Total).HasColumnName("total");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorUnitario).HasColumnName("valorUnitario");

            entity.HasOne(d => d.IdCatalogoNavigation).WithMany(p => p.DisEventoCatalogos)
                .HasForeignKey(d => d.IdCatalogo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dis_evento_catalogo_id_catalogo");

            entity.HasOne(d => d.IdEventoNavigation).WithMany(p => p.DisEventoCatalogos)
                .HasForeignKey(d => d.IdEvento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dis_evento_catalogo_id_evento");
        });

        modelBuilder.Entity<DisEventoEstadoEvento>(entity =>
        {
            entity.ToTable("dis_evento_estadoEvento");

            entity.HasIndex(e => e.Eid, "IX_dis_evento_estadoEvento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.AfectaCliente).HasColumnName("afectaCliente");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EventoEstadoEvento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("evento_estadoEvento");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaHoraRegistroFh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaHoraRegistro_fh");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdEstadoEvento).HasColumnName("id_estadoEvento");
            entity.Property(e => e.IdEvento).HasColumnName("id_evento");
            entity.Property(e => e.IdSistema).HasColumnName("id_sistema");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdEstadoEventoNavigation).WithMany(p => p.DisEventoEstadoEventos)
                .HasForeignKey(d => d.IdEstadoEvento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dis_evento_estadoEvento_id_estadoEvento");

            entity.HasOne(d => d.IdEventoNavigation).WithMany(p => p.DisEventoEstadoEventos)
                .HasForeignKey(d => d.IdEvento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dis_evento_estadoEvento_id_evento");

            entity.HasOne(d => d.IdSistemaNavigation).WithMany(p => p.DisEventoEstadoEventos)
                .HasForeignKey(d => d.IdSistema)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dis_evento_estadoEvento_id_sistema");
        });

        modelBuilder.Entity<DisMetodoDeteccion>(entity =>
        {
            entity.ToTable("dis_metodoDeteccion");

            entity.HasIndex(e => e.Eid, "IX_dis_metodoDeteccion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MetodoDeteccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("metodoDeteccion");
            entity.Property(e => e.MetodoDeteccionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("metodoDeteccion_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<DisMotivoEvento>(entity =>
        {
            entity.ToTable("dis_motivoEvento");

            entity.HasIndex(e => e.Eid, "IX_dis_motivoEvento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsFalla).HasColumnName("esFalla");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MotivoEvento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("motivoEvento");
            entity.Property(e => e.MotivoEventoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("motivoEvento_codigo");
            entity.Property(e => e.ResponsableServicio).HasColumnName("responsableServicio");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<DisObra>(entity =>
        {
            entity.ToTable("dis_obra");

            entity.HasIndex(e => e.Eid, "IX_dis_obra");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFinalFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFinal_ff");
            entity.Property(e => e.FechaInicialFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicial_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Obra)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("obra");
            entity.Property(e => e.ObraCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("obra_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.DisObras)
                .HasForeignKey(d => d.IdSucursal)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dis_obra_id_sucursal");
        });

        modelBuilder.Entity<DisObraCatalogo>(entity =>
        {
            entity.ToTable("dis_obra_catalogo");

            entity.HasIndex(e => e.Eid, "IX_dis_obra_catalogo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdObra).HasColumnName("id_obra");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.ObraCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("obra_catalogo");
            entity.Property(e => e.PromedioDia).HasColumnName("promedioDia");
            entity.Property(e => e.Total).HasColumnName("total");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorMaximo)
                .HasDefaultValue(0.0)
                .HasColumnName("valorMaximo");
            entity.Property(e => e.ValorMinimo)
                .HasDefaultValue(0.0)
                .HasColumnName("valorMinimo");
            entity.Property(e => e.ValorUnitario).HasColumnName("valorUnitario");

            entity.HasOne(d => d.IdCatalogoNavigation).WithMany(p => p.DisObraCatalogos)
                .HasForeignKey(d => d.IdCatalogo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dis_obra_catalogo_id_catalogo");

            entity.HasOne(d => d.IdObraNavigation).WithMany(p => p.DisObraCatalogos)
                .HasForeignKey(d => d.IdObra)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dis_obra_catalogo_id_obra");
        });

        modelBuilder.Entity<DisObraEquipo>(entity =>
        {
            entity.ToTable("dis_obra_equipo");

            entity.HasIndex(e => e.Eid, "IX_dis_obra_equipo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdObra).HasColumnName("id_obra");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.ObraEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("obra_equipo");
            entity.Property(e => e.PromedioEsperado).HasColumnName("promedioEsperado");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.DisObraEquipos)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dis_obra_equipo_id_equipo");

            entity.HasOne(d => d.IdObraNavigation).WithMany(p => p.DisObraEquipos)
                .HasForeignKey(d => d.IdObra)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_dis_obra_equipo_id_obra");
        });

        modelBuilder.Entity<DocCentroCosto>(entity =>
        {
            entity.ToTable("doc_centroCosto");

            entity.HasIndex(e => e.Eid, "IX_doc_centroCosto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CentroCosto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("centroCosto");
            entity.Property(e => e.CentroCostoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("centroCosto_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<DocCondicion>(entity =>
        {
            entity.ToTable("doc_condicion");

            entity.HasIndex(e => e.Eid, "IX_doc_condicion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Condicion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("condicion");
            entity.Property(e => e.CondicionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("condicion_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TextoLibre).HasColumnName("textoLibre");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<DocCosteo>(entity =>
        {
            entity.ToTable("doc_costeo");

            entity.HasIndex(e => e.Eid, "IX_doc_costeo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Costeo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("costeo");
            entity.Property(e => e.CosteoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("costeo_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<DocDocumento>(entity =>
        {
            entity.ToTable("doc_documento");

            entity.HasIndex(e => e.Eid, "IX_doc_documento");

            entity.HasIndex(e => e.IdDocumento, "IX_id_documento");

            entity.HasIndex(e => e.IdTerceroCliente, "IX_id_tercero_cliente");

            entity.HasIndex(e => e.IdTerceroProveedor, "IX_id_tercero_proveedor");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Costo).HasColumnName("costo");
            entity.Property(e => e.CostoPlaneado).HasColumnName("costoPlaneado");
            entity.Property(e => e.Descuento).HasColumnName("descuento");
            entity.Property(e => e.DescuentoPlaneado).HasColumnName("descuentoPlaneado");
            entity.Property(e => e.Documento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento");
            entity.Property(e => e.DocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("documento_codigo");
            entity.Property(e => e.DocumentoNumero).HasColumnName("documento_numero");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCierreFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCierre_ff");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_fh");
            entity.Property(e => e.FechaLimiteFh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaLimite_fh");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaSugeridaFh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaSugerida_fh");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdEstadoTipoDocumento).HasColumnName("id_estadoTipoDocumento");
            entity.Property(e => e.IdMoneda).HasColumnName("id_moneda");
            entity.Property(e => e.IdMotivoestado).HasColumnName("id_motivoestado");
            entity.Property(e => e.IdPrioridadDocumento).HasColumnName("id_prioridadDocumento");
            entity.Property(e => e.IdSubtipoDocumento).HasColumnName("id_subtipoDocumento");
            entity.Property(e => e.IdTerceroCliente).HasColumnName("id_tercero_cliente");
            entity.Property(e => e.IdTerceroProveedor).HasColumnName("id_tercero_proveedor");
            entity.Property(e => e.IdUsuarioAsignado).HasColumnName("id_usuario_asignado");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioEnUso).HasColumnName("id_usuario_enUso");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Iva).HasColumnName("iva");
            entity.Property(e => e.IvaPlaneado).HasColumnName("ivaPlaneado");
            entity.Property(e => e.Prefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasDefaultValueSql("((50))")
                .HasColumnName("prefijo");
            entity.Property(e => e.Rentabilidad).HasColumnName("rentabilidad");
            entity.Property(e => e.Subtotal).HasColumnName("subtotal");
            entity.Property(e => e.SubtotalPlaneado).HasColumnName("subtotalPlaneado");
            entity.Property(e => e.Total).HasColumnName("total");
            entity.Property(e => e.TotalPlaneado).HasColumnName("totalPlaneado");
            entity.Property(e => e.Trm).HasColumnName("trm");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdDocumentoNavigation).WithMany(p => p.InverseIdDocumentoNavigation)
                .HasForeignKey(d => d.IdDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_id_documento");

            entity.HasOne(d => d.IdEstadoTipoDocumentoNavigation).WithMany(p => p.DocDocumentos)
                .HasForeignKey(d => d.IdEstadoTipoDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_id_estadoTipoDocumento");

            entity.HasOne(d => d.IdMonedaNavigation).WithMany(p => p.DocDocumentos)
                .HasForeignKey(d => d.IdMoneda)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_id_moneda");

            entity.HasOne(d => d.IdMotivoestadoNavigation).WithMany(p => p.DocDocumentos)
                .HasForeignKey(d => d.IdMotivoestado)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_id_motivoestado");

            entity.HasOne(d => d.IdPrioridadDocumentoNavigation).WithMany(p => p.DocDocumentos)
                .HasForeignKey(d => d.IdPrioridadDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_id_prioridadDocumento");

            entity.HasOne(d => d.IdSubtipoDocumentoNavigation).WithMany(p => p.DocDocumentos)
                .HasForeignKey(d => d.IdSubtipoDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_id_subtipoDocumento");

            entity.HasOne(d => d.IdTerceroClienteNavigation).WithMany(p => p.DocDocumentoIdTerceroClienteNavigations)
                .HasForeignKey(d => d.IdTerceroCliente)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_id_tercero_cliente");

            entity.HasOne(d => d.IdTerceroProveedorNavigation).WithMany(p => p.DocDocumentoIdTerceroProveedorNavigations)
                .HasForeignKey(d => d.IdTerceroProveedor)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_id_tercero_proveedor");

            entity.HasOne(d => d.IdUsuarioAsignadoNavigation).WithMany(p => p.DocDocumentoIdUsuarioAsignadoNavigations)
                .HasForeignKey(d => d.IdUsuarioAsignado)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__doc_docum__id_us__3D614D2E");

            entity.HasOne(d => d.IdUsuarioEnUsoNavigation).WithMany(p => p.DocDocumentoIdUsuarioEnUsoNavigations)
                .HasForeignKey(d => d.IdUsuarioEnUso)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__doc_docum__id_us__2A396A21");
        });

        modelBuilder.Entity<DocDocumentoAlquiler>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_doc_documento_alquiler");

            entity.ToTable("doc_documento.alquiler");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_alquiler");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DocumentoAlquiler)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.alquiler");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EjecutaDevolucion)
                .HasDefaultValue(true)
                .HasColumnName("ejecutaDevolucion");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFinFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFin_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MesVencido)
                .HasDefaultValue(true)
                .HasColumnName("mesVencido");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(3000)
                .IsUnicode(false)
                .HasColumnName("observaciones");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<DocDocumentoAtributo>(entity =>
        {
            entity.ToTable("doc_documentoAtributo");

            entity.HasIndex(e => e.Eid, "IX_doc_documentoAtributo");

            entity.HasIndex(e => e.IdDocumento, "IX_id_documento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DocumentoAtributo)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("documentoAtributo");
            entity.Property(e => e.DocumentoAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("documentoAtributo_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdAtributo).HasColumnName("id_atributo");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdOpcionAtributo).HasColumnName("id_opcionAtributo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdAtributoNavigation).WithMany(p => p.DocDocumentoAtributos)
                .HasForeignKey(d => d.IdAtributo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documentoAtributo_id_atributo");

            entity.HasOne(d => d.IdDocumentoNavigation).WithMany(p => p.DocDocumentoAtributos)
                .HasForeignKey(d => d.IdDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documentoAtributo_id_documento");

            entity.HasOne(d => d.IdOpcionAtributoNavigation).WithMany(p => p.DocDocumentoAtributos)
                .HasForeignKey(d => d.IdOpcionAtributo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documentoAtributo_id_opcionAtributo");
        });

        modelBuilder.Entity<DocDocumentoCatalogoTempario>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_doc_documento_catalogo_tempario");

            entity.ToTable("doc_documento_catalogo.tempario");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_catalogo_tempario");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DocumentoCatalogoTempario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento_catalogo.tempario");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogoTempario).HasColumnName("id_catalogo.tempario");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdItemDocumento).HasColumnName("id_itemDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCatalogoTemparioNavigation).WithMany(p => p.DocDocumentoCatalogoTemparios)
                .HasForeignKey(d => d.IdCatalogoTempario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_catalogo_tempario_id_catalogo_tempario");

            entity.HasOne(d => d.IdDocumentoNavigation).WithMany(p => p.DocDocumentoCatalogoTemparios)
                .HasForeignKey(d => d.IdDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_catalogo_tempario_id_documento");

            entity.HasOne(d => d.IdItemDocumentoNavigation).WithMany(p => p.DocDocumentoCatalogoTemparios)
                .HasForeignKey(d => d.IdItemDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_catalogo_tempario_id_itemDocumento");
        });

        modelBuilder.Entity<DocDocumentoComentario>(entity =>
        {
            entity.ToTable("doc_documentoComentario");

            entity.HasIndex(e => e.Eid, "IX_doc_documentoComentario");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Cerrada).HasColumnName("cerrada");
            entity.Property(e => e.Comentario)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("comentario");
            entity.Property(e => e.ConRespuesta).HasColumnName("conRespuesta");
            entity.Property(e => e.DocumentoComentario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documentoComentario");
            entity.Property(e => e.DocumentoComentarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("documentoComentario_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaOrden)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaOrden");
            entity.Property(e => e.FechaOriginal)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaOriginal");
            entity.Property(e => e.FechaRecordarFh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaRecordar_fh");
            entity.Property(e => e.Finalizado).HasColumnName("finalizado");
            entity.Property(e => e.IdContacto).HasColumnName("id_contacto");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdDocumentoComentario).HasColumnName("id_documentoComentario");
            entity.Property(e => e.IdReporteTecnico).HasColumnName("id_reporteTecnico");
            entity.Property(e => e.IdTarea).HasColumnName("id_tarea");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdUsuarioOriginal).HasColumnName("id_usuarioOriginal");
            entity.Property(e => e.Recordar)
                .HasDefaultValue(true)
                .HasColumnName("recordar");
            entity.Property(e => e.Relevante)
                .HasDefaultValue(1)
                .HasColumnName("relevante");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdContactoNavigation).WithMany(p => p.DocDocumentoComentarios)
                .HasForeignKey(d => d.IdContacto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documentoComentario_id_contacto");

            entity.HasOne(d => d.IdDocumentoNavigation).WithMany(p => p.DocDocumentoComentarios)
                .HasForeignKey(d => d.IdDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documentoComentario_id_documento");

            entity.HasOne(d => d.IdDocumentoComentarioNavigation).WithMany(p => p.InverseIdDocumentoComentarioNavigation)
                .HasForeignKey(d => d.IdDocumentoComentario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documentoComentario_id_documentoComentario");

            entity.HasOne(d => d.IdReporteTecnicoNavigation).WithMany(p => p.DocDocumentoComentarios)
                .HasForeignKey(d => d.IdReporteTecnico)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__doc_docum__id_re__541A9554");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.DocDocumentoComentarios)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documentoComentario_id_usuario");
        });

        modelBuilder.Entity<DocDocumentoContacto>(entity =>
        {
            entity.ToTable("doc_documento_contacto");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_contacto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DocumentoContacto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento_contacto");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdContacto).HasColumnName("id_contacto");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdContactoNavigation).WithMany(p => p.DocDocumentoContactos)
                .HasForeignKey(d => d.IdContacto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_contacto_id_contacto");

            entity.HasOne(d => d.IdDocumentoNavigation).WithMany(p => p.DocDocumentoContactos)
                .HasForeignKey(d => d.IdDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_contacto_id_documento");
        });

        modelBuilder.Entity<DocDocumentoCotizacion>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_doc_documento_cotizacion");

            entity.ToTable("doc_documento.cotizacion");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_cotizacion");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Cargo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("cargo");
            entity.Property(e => e.Condiciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("condiciones");
            entity.Property(e => e.Contacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("contacto");
            entity.Property(e => e.DocumentoCotizacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.cotizacion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.Encabezado)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("encabezado");
            entity.Property(e => e.EsAiu).HasColumnName("esAIU");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuarioAsesor).HasColumnName("id_usuario_asesor");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Notas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("notas");
            entity.Property(e => e.ProcentajeA).HasColumnName("procentajeA");
            entity.Property(e => e.ProcentajeI).HasColumnName("procentajeI");
            entity.Property(e => e.ProcentajeU).HasColumnName("procentajeU");
            entity.Property(e => e.Telefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("telefono");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Validez)
                .HasDefaultValue(20)
                .HasColumnName("validez");
            entity.Property(e => e.ValorA).HasColumnName("valorA");
            entity.Property(e => e.ValorI).HasColumnName("valorI");
            entity.Property(e => e.ValorU).HasColumnName("valorU");
            entity.Property(e => e.Version)
                .HasDefaultValue(1)
                .HasColumnName("version");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.DocDocumentoCotizacions)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_cotizacion_id_equipo");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.DocDocumentoCotizacions)
                .HasForeignKey(d => d.IdSucursal)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_cotizacion_id_sucursal");

            entity.HasOne(d => d.IdUsuarioAsesorNavigation).WithMany(p => p.DocDocumentoCotizacions)
                .HasForeignKey(d => d.IdUsuarioAsesor)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_cotizacion_id_usuario_asesor");
        });

        modelBuilder.Entity<DocDocumentoCotizacionCondicion>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_doc_documento_cotizacion_condicion");

            entity.ToTable("doc_documento.cotizacion_condicion");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_cotizacion_condicion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DocumentoCotizacionCondicion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.cotizacion_condicion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCondicion).HasColumnName("id_condicion");
            entity.Property(e => e.IdDocumentoCotizacion).HasColumnName("id_documento.cotizacion");
            entity.Property(e => e.IdOpcionCondicion).HasColumnName("id_opcionCondicion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Imprimir)
                .HasDefaultValue(true)
                .HasColumnName("imprimir");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCondicionNavigation).WithMany(p => p.DocDocumentoCotizacionCondicions)
                .HasForeignKey(d => d.IdCondicion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_cotizacion_condicion_id_condicion");

            entity.HasOne(d => d.IdDocumentoCotizacionNavigation).WithMany(p => p.DocDocumentoCotizacionCondicions)
                .HasForeignKey(d => d.IdDocumentoCotizacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_cotizacion_condicion_id_documento_cotizacion");

            entity.HasOne(d => d.IdOpcionCondicionNavigation).WithMany(p => p.DocDocumentoCotizacionCondicions)
                .HasForeignKey(d => d.IdOpcionCondicion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_cotizacion_condicion_id_opcionCondicion");
        });

        modelBuilder.Entity<DocDocumentoEntradum>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_doc_documento_entrada");

            entity.ToTable("doc_documento.entrada");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_entrada");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Asunto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("asunto");
            entity.Property(e => e.DireccionEntrega)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("direccionEntrega");
            entity.Property(e => e.DocumentoEntrada)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.entrada");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsPorAjuste).HasColumnName("esPorAjuste");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdTerceroTransportador).HasColumnName("id_tercero_transportador");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdUsuarioRecibe).HasColumnName("id_usuario_recibe");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("observaciones");
            entity.Property(e => e.Solicitante)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("solicitante");
            entity.Property(e => e.TelefonoEntrega)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("telefonoEntrega");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.DocDocumentoEntrada)
                .HasForeignKey(d => d.IdSucursal)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_entrada_id_sucursal");

            entity.HasOne(d => d.IdTerceroTransportadorNavigation).WithMany(p => p.DocDocumentoEntrada)
                .HasForeignKey(d => d.IdTerceroTransportador)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_entrada_id_tercero_transportador");

            entity.HasOne(d => d.IdUsuarioRecibeNavigation).WithMany(p => p.DocDocumentoEntrada)
                .HasForeignKey(d => d.IdUsuarioRecibe)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_entrada_id_usuario_recibe");
        });

        modelBuilder.Entity<DocDocumentoEstadoTipoDocumento>(entity =>
        {
            entity.ToTable("doc_documento_estadoTipoDocumento");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_estadoTipoDocumento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DocumentoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento_estadoTipoDocumento");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdEstadoTipoDocumento).HasColumnName("id_estadoTipoDocumento");
            entity.Property(e => e.IdMotivoestado).HasColumnName("id_motivoestado");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Notas)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("notas");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdDocumentoNavigation).WithMany(p => p.DocDocumentoEstadoTipoDocumentos)
                .HasForeignKey(d => d.IdDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_estadoTipoDocumento_id_documento");

            entity.HasOne(d => d.IdEstadoTipoDocumentoNavigation).WithMany(p => p.DocDocumentoEstadoTipoDocumentos)
                .HasForeignKey(d => d.IdEstadoTipoDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_estadoTipoDocumento_id_estadoTipoDocumento");

            entity.HasOne(d => d.IdMotivoestadoNavigation).WithMany(p => p.DocDocumentoEstadoTipoDocumentos)
                .HasForeignKey(d => d.IdMotivoestado)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_estadoTipoDocumento_id_motivoestado");
        });

        modelBuilder.Entity<DocDocumentoEvaluacion>(entity =>
        {
            entity.ToTable("doc_documento_evaluacion");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_evaluacion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DocumentoEvaluacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento_evaluacion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaEncuestaFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaEncuesta_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdEvaluacion).HasColumnName("id_evaluacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("observaciones");
            entity.Property(e => e.PersonaEncuestada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("personaEncuestada");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdDocumentoNavigation).WithMany(p => p.DocDocumentoEvaluacions)
                .HasForeignKey(d => d.IdDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_evaluacion_id_documento");

            entity.HasOne(d => d.IdEvaluacionNavigation).WithMany(p => p.DocDocumentoEvaluacions)
                .HasForeignKey(d => d.IdEvaluacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_evaluacion_id_evaluacion");
        });

        modelBuilder.Entity<DocDocumentoGasto>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_doc_documento_gasto");

            entity.ToTable("doc_documento.gasto");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_gasto");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Concepto)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("concepto");
            entity.Property(e => e.Consignado).HasColumnName("consignado");
            entity.Property(e => e.Dias).HasColumnName("dias");
            entity.Property(e => e.DocumentoGasto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.gasto");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFf)
                .HasDefaultValueSql("((0))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdUsuarioSolicitante).HasColumnName("id_usuario_solicitante");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdNavigation).WithOne(p => p.DocDocumentoGasto)
                .HasForeignKey<DocDocumentoGasto>(d => d.Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_gasto_doc_documento");
        });

        modelBuilder.Entity<DocDocumentoOpcionRespuestum>(entity =>
        {
            entity.ToTable("doc_documento_opcionRespuesta");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_opcionRespuesta");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DocumentoOpcionRespuesta)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento_opcionRespuesta");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdOpcionRespuesta).HasColumnName("id_opcionRespuesta");
            entity.Property(e => e.IdPregunta).HasColumnName("id_pregunta");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdDocumentoNavigation).WithMany(p => p.DocDocumentoOpcionRespuesta)
                .HasForeignKey(d => d.IdDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_opcionRespuesta_id_documento");

            entity.HasOne(d => d.IdOpcionRespuestaNavigation).WithMany(p => p.DocDocumentoOpcionRespuesta)
                .HasForeignKey(d => d.IdOpcionRespuesta)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_opcionRespuesta_id_opcionRespuesta");

            entity.HasOne(d => d.IdPreguntaNavigation).WithMany(p => p.DocDocumentoOpcionRespuesta)
                .HasForeignKey(d => d.IdPregunta)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_opcionRespuesta_id_pregunta");
        });

        modelBuilder.Entity<DocDocumentoOrdenCompra>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_doc_documento_ordenCompra");

            entity.ToTable("doc_documento.ordenCompra");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_ordenCompra");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Asunto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("asunto");
            entity.Property(e => e.DireccionEntrega)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("direccionEntrega");
            entity.Property(e => e.DocumentoOrdenCompra)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.ordenCompra");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaPagoFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaPago_ff");
            entity.Property(e => e.IdFormaPago).HasColumnName("id_formaPago");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("observaciones");
            entity.Property(e => e.Solicitante)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("solicitante");
            entity.Property(e => e.TelefonoEntrega)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("telefonoEntrega");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdFormaPagoNavigation).WithMany(p => p.DocDocumentoOrdenCompras)
                .HasForeignKey(d => d.IdFormaPago)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_ordenCompra_id_formaPago");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.DocDocumentoOrdenCompras)
                .HasForeignKey(d => d.IdSucursal)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_ordenCompra_id_sucursal");
        });

        modelBuilder.Entity<DocDocumentoOt>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_doc_documento_ot");

            entity.ToTable("doc_documento.ot");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_ot");

            entity.HasIndex(e => e.FechaModificacion, "IX_fechaModificacion").IsDescending();

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Cargo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cargo");
            entity.Property(e => e.Compromisos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("compromisos");
            entity.Property(e => e.Contacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("contacto");
            entity.Property(e => e.DiagnosticoInicial)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("diagnosticoInicial");
            entity.Property(e => e.DireccionUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("direccionUbicacion");
            entity.Property(e => e.DistribuyeCentros).HasColumnName("distribuyeCentros");
            entity.Property(e => e.DocumentoOt)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.ot");
            entity.Property(e => e.DuracionEstimada).HasColumnName("duracionEstimada");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.EnTaller)
                .HasDefaultValue(true)
                .HasColumnName("enTaller");
            entity.Property(e => e.Fax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fax");
            entity.Property(e => e.FechaCompromisoFh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCompromiso_fh");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaGarantia_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdContrato).HasColumnName("id_contrato");
            entity.Property(e => e.IdDepartamentoSolicitud).HasColumnName("id_departamentoSolicitud");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdMotivoCancelacion).HasColumnName("id_motivoCancelacion");
            entity.Property(e => e.IdSistema).HasColumnName("id_sistema");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdTipoServicio).HasColumnName("id_tipoServicio");
            entity.Property(e => e.IdUsuarioCoordinador).HasColumnName("id_usuario_coordinador");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdZona).HasColumnName("id_zona");
            entity.Property(e => e.MotivoServicio)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("motivoServicio");
            entity.Property(e => e.PorcentajeCliente)
                .HasDefaultValue(100.0)
                .HasColumnName("porcentajeCliente");
            entity.Property(e => e.PorcentajeDistribuidor).HasColumnName("porcentajeDistribuidor");
            entity.Property(e => e.PorcentajeFabricante).HasColumnName("porcentajeFabricante");
            entity.Property(e => e.ReclamacionFabrica)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("reclamacionFabrica");
            entity.Property(e => e.Recomendaciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("recomendaciones");
            entity.Property(e => e.SegunTempario).HasColumnName("segunTempario");
            entity.Property(e => e.Telefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("telefono");
            entity.Property(e => e.Trabajos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("trabajos");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdContratoNavigation).WithMany(p => p.DocDocumentoOts)
                .HasForeignKey(d => d.IdContrato)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_ot_id_contrato");

            entity.HasOne(d => d.IdDepartamentoSolicitudNavigation).WithMany(p => p.DocDocumentoOts)
                .HasForeignKey(d => d.IdDepartamentoSolicitud)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_ot_id_departamentoSolicitud");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.DocDocumentoOts)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_ot_id_equipo");

            entity.HasOne(d => d.IdMotivoCancelacionNavigation).WithMany(p => p.DocDocumentoOts)
                .HasForeignKey(d => d.IdMotivoCancelacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_ot_id_motivoCancelacion");

            entity.HasOne(d => d.IdSistemaNavigation).WithMany(p => p.DocDocumentoOts)
                .HasForeignKey(d => d.IdSistema)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_ot_id_sistema");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.DocDocumentoOts)
                .HasForeignKey(d => d.IdSucursal)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_ot_id_sucursal");

            entity.HasOne(d => d.IdTipoServicioNavigation).WithMany(p => p.DocDocumentoOts)
                .HasForeignKey(d => d.IdTipoServicio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_ot_id_tipoServicio");

            entity.HasOne(d => d.IdUsuarioCoordinadorNavigation).WithMany(p => p.DocDocumentoOts)
                .HasForeignKey(d => d.IdUsuarioCoordinador)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_ot_id_usuario_coordinador");

            entity.HasOne(d => d.IdZonaNavigation).WithMany(p => p.DocDocumentoOts)
                .HasForeignKey(d => d.IdZona)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_ot_id_zona");
        });

        modelBuilder.Entity<DocDocumentoOtCentroCosto>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_doc_documento_ot_centroCosto");

            entity.ToTable("doc_documento.ot_centroCosto");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_ot_centroCosto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DocumentoOtCentroCosto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.ot_centroCosto");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCentroCosto).HasColumnName("id_centroCosto");
            entity.Property(e => e.IdDocumentoOt).HasColumnName("id_documento.ot");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Porcentaje).HasColumnName("porcentaje");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCentroCostoNavigation).WithMany(p => p.DocDocumentoOtCentroCostos)
                .HasForeignKey(d => d.IdCentroCosto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_ot_centroCosto_id_centroCosto");

            entity.HasOne(d => d.IdDocumentoOtNavigation).WithMany(p => p.DocDocumentoOtCentroCostos)
                .HasForeignKey(d => d.IdDocumentoOt)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_ot_centroCosto_id_documento_ot");
        });

        modelBuilder.Entity<DocDocumentoOtPruebaCheckList>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_doc_documento_ot_pruebaCheckList");

            entity.ToTable("doc_documento.ot_pruebaCheckList");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_ot_pruebaCheckList");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DocumentoOtPruebaCheckList)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.ot_pruebaCheckList");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdDocumentoOt).HasColumnName("id_documento.ot");
            entity.Property(e => e.IdPruebaCheckList).HasColumnName("id_pruebaCheckList");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdDocumentoOtNavigation).WithMany(p => p.DocDocumentoOtPruebaCheckLists)
                .HasForeignKey(d => d.IdDocumentoOt)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_ot_pruebaCheckList_id_documento_ot");

            entity.HasOne(d => d.IdPruebaCheckListNavigation).WithMany(p => p.DocDocumentoOtPruebaCheckLists)
                .HasForeignKey(d => d.IdPruebaCheckList)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_ot_pruebaCheckList_id_pruebaCheckList");
        });

        modelBuilder.Entity<DocDocumentoProyecto>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_doc_documento_proyecto");

            entity.ToTable("doc_documento.proyecto");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_proyecto");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .HasDefaultValueSql("((0))")
                .HasColumnName("descripcion");
            entity.Property(e => e.DocumentoProyecto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.proyecto");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFinEstimada)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFinEstimada");
            entity.Property(e => e.FechaInicioEstimada)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicioEstimada");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Nombre)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasDefaultValueSql("((0))")
                .HasColumnName("nombre");
            entity.Property(e => e.Presupuesto)
                .HasDefaultValue(0m)
                .HasColumnType("money")
                .HasColumnName("presupuesto");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<DocDocumentoProyectoCalidad>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_doc_documento_proyecto_calidad");

            entity.ToTable("doc_documento.proyecto_calidad");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_proyecto_calidad");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DocumentoProyectoCalidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.proyecto_calidad");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCalidad).HasColumnName("id_calidad");
            entity.Property(e => e.IdDocumentoProyecto).HasColumnName("id_documento.proyecto");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<DocDocumentoProyectoEjecutore>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_doc_documento_proyecto_ejecutores");

            entity.ToTable("doc_documento.proyecto_ejecutores");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_proyecto_ejecutores");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DocumentoProyectoEjecutores)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.proyecto_ejecutores");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdDocumentoProyecto).HasColumnName("id_documento.proyecto");
            entity.Property(e => e.IdEjecutores).HasColumnName("id_ejecutores");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdDocumentoProyectoNavigation).WithMany(p => p.DocDocumentoProyectoEjecutores)
                .HasForeignKey(d => d.IdDocumentoProyecto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_documento.proyecto_ejecutores_id_documento.proyecto");

            entity.HasOne(d => d.IdEjecutoresNavigation).WithMany(p => p.DocDocumentoProyectoEjecutores)
                .HasForeignKey(d => d.IdEjecutores)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_documento.proyecto_ejecutores_id_ejecutores");
        });

        modelBuilder.Entity<DocDocumentoProyectoEntregable>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_doc_documento_proyecto_entregable");

            entity.ToTable("doc_documento.proyecto_entregable");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_proyecto_entregable");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DocumentoProyectoEntregable)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.proyecto_entregable");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdDocumentoProyecto).HasColumnName("id_documento.proyecto");
            entity.Property(e => e.IdEntregable).HasColumnName("id_entregable");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdDocumentoProyectoNavigation).WithMany(p => p.DocDocumentoProyectoEntregables)
                .HasForeignKey(d => d.IdDocumentoProyecto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_doc_documento.proyecto_entregable_id_documento.proyecto");

            entity.HasOne(d => d.IdEntregableNavigation).WithMany(p => p.DocDocumentoProyectoEntregables)
                .HasForeignKey(d => d.IdEntregable)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_doc_documento.proyecto_entregable_id_entregable");
        });

        modelBuilder.Entity<DocDocumentoProyectoEtapa>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_doc_documento_proyecto_etapa");

            entity.ToTable("doc_documento.proyecto_etapa");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_proyecto_etapa");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DocumentoProyectoEtapa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.proyecto_etapa");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdDocumentoProyecto).HasColumnName("id_documento.proyecto");
            entity.Property(e => e.IdEtapa).HasColumnName("id_etapa");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdDocumentoProyectoNavigation).WithMany(p => p.DocDocumentoProyectoEtapas)
                .HasForeignKey(d => d.IdDocumentoProyecto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento.proyecto_id_documento.proyecto");

            entity.HasOne(d => d.IdEtapaNavigation).WithMany(p => p.DocDocumentoProyectoEtapas)
                .HasForeignKey(d => d.IdEtapa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_pro_etapa_id_etapa");
        });

        modelBuilder.Entity<DocDocumentoProyectoSucursal>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_doc_documento_proyecto_sucursal");

            entity.ToTable("doc_documento.proyecto_sucursal");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_proyecto_sucursal");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DocumentoProyectoSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.proyecto_sucursal");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdDocumentoProyecto).HasColumnName("id_documento.proyecto");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdDocumentoProyectoNavigation).WithMany(p => p.DocDocumentoProyectoSucursals)
                .HasForeignKey(d => d.IdDocumentoProyecto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento.proyecto_sucursal_id_documento.proyecto");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.DocDocumentoProyectoSucursals)
                .HasForeignKey(d => d.IdSucursal)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento.proyecto_sucursal_id_sucursal");
        });

        modelBuilder.Entity<DocDocumentoRequisicion>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_doc_documento_requisicion");

            entity.ToTable("doc_documento.requisicion");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_requisicion");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Asunto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("asunto");
            entity.Property(e => e.DireccionEntrega)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("direccionEntrega");
            entity.Property(e => e.DocumentoRequisicion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.requisicion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("observaciones");
            entity.Property(e => e.Solicitante)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("solicitante");
            entity.Property(e => e.TelefonoEntrega)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("telefonoEntrega");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.DocDocumentoRequisicions)
                .HasForeignKey(d => d.IdSucursal)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_requisicion_id_sucursal");
        });

        modelBuilder.Entity<DocDocumentoSalidum>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_doc_documento_salida");

            entity.ToTable("doc_documento.salida");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_salida");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Asunto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("asunto");
            entity.Property(e => e.DireccionEntrega)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("direccionEntrega");
            entity.Property(e => e.DocumentoSalida)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.salida");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdTerceroTransportador).HasColumnName("id_tercero_transportador");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdUsuarioRecibe).HasColumnName("id_usuario_recibe");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("observaciones");
            entity.Property(e => e.Solicitante)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("solicitante");
            entity.Property(e => e.TelefonoEntrega)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("telefonoEntrega");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.DocDocumentoSalida)
                .HasForeignKey(d => d.IdSucursal)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_salida_id_sucursal");

            entity.HasOne(d => d.IdTerceroTransportadorNavigation).WithMany(p => p.DocDocumentoSalida)
                .HasForeignKey(d => d.IdTerceroTransportador)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_salida_id_tercero_transportador");

            entity.HasOne(d => d.IdUsuarioRecibeNavigation).WithMany(p => p.DocDocumentoSalida)
                .HasForeignKey(d => d.IdUsuarioRecibe)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_salida_id_usuario_recibe");
        });

        modelBuilder.Entity<DocDocumentoSolicitud>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_doc_documento_solicitud");

            entity.ToTable("doc_documento.solicitud");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_solicitud");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Cargo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cargo");
            entity.Property(e => e.Direccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("direccion");
            entity.Property(e => e.DocumentoSolicitud)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.solicitud");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.Fax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fax");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdDepartamentoSolicitud).HasColumnName("id_departamentoSolicitud");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdMedioSolicitud).HasColumnName("id_medioSolicitud");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdZona).HasColumnName("id_zona");
            entity.Property(e => e.MotivoServicio)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("motivoServicio");
            entity.Property(e => e.Solicitante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("solicitante");
            entity.Property(e => e.SolucionTelefonica).HasColumnName("solucionTelefonica");
            entity.Property(e => e.Telefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("telefono");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdDepartamentoSolicitudNavigation).WithMany(p => p.DocDocumentoSolicituds)
                .HasForeignKey(d => d.IdDepartamentoSolicitud)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_solicitud_id_departamentoSolicitud");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.DocDocumentoSolicituds)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_solicitud_id_equipo");

            entity.HasOne(d => d.IdMedioSolicitudNavigation).WithMany(p => p.DocDocumentoSolicituds)
                .HasForeignKey(d => d.IdMedioSolicitud)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_solicitud_id_medioSolicitud");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.DocDocumentoSolicituds)
                .HasForeignKey(d => d.IdSucursal)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_solicitud_id_sucursal");

            entity.HasOne(d => d.IdZonaNavigation).WithMany(p => p.DocDocumentoSolicituds)
                .HasForeignKey(d => d.IdZona)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_solicitud_id_zona");
        });

        modelBuilder.Entity<DocDocumentoTraslado>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_doc_documento_traslado");

            entity.ToTable("doc_documento.traslado");

            entity.HasIndex(e => e.Eid, "IX_doc_documento_traslado");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DocumentoTraslado)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.traslado");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdBodegaDestino).HasColumnName("id_bodega_destino");
            entity.Property(e => e.IdBodegaOrigen).HasColumnName("id_bodega_origen");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdBodegaDestinoNavigation).WithMany(p => p.DocDocumentoTrasladoIdBodegaDestinoNavigations)
                .HasForeignKey(d => d.IdBodegaDestino)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_traslado_id_bodega_destino");

            entity.HasOne(d => d.IdBodegaOrigenNavigation).WithMany(p => p.DocDocumentoTrasladoIdBodegaOrigenNavigations)
                .HasForeignKey(d => d.IdBodegaOrigen)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_documento_traslado_id_bodega_origen");
        });

        modelBuilder.Entity<DocEstadoTipoDocumento>(entity =>
        {
            entity.ToTable("doc_estadoTipoDocumento");

            entity.HasIndex(e => e.Eid, "IX_doc_estadoTipoDocumento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.AfectaIndicador)
                .HasDefaultValue(true)
                .HasColumnName("afectaIndicador");
            entity.Property(e => e.AfectaInventario).HasColumnName("afectaInventario");
            entity.Property(e => e.Color)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasDefaultValue("FFFFFF")
                .HasColumnName("color");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.EditaDocumento)
                .HasDefaultValue(true)
                .HasColumnName("editaDocumento");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("estadoTipoDocumento");
            entity.Property(e => e.EstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("estadoTipoDocumento_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdTipoDocumento).HasColumnName("id_tipoDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MotivoObligatorio).HasColumnName("motivoObligatorio");
            entity.Property(e => e.ObservacionesObligatorio).HasColumnName("observacionesObligatorio");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.PuedeRegresar)
                .HasDefaultValue(true)
                .HasColumnName("puedeRegresar");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdTipoDocumentoNavigation).WithMany(p => p.DocEstadoTipoDocumentos)
                .HasForeignKey(d => d.IdTipoDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_estadoTipoDocumento_id_tipoDocumento");
        });

        modelBuilder.Entity<DocEstadoTipoDocumentoPerfil>(entity =>
        {
            entity.ToTable("doc_estadoTipoDocumento_perfil");

            entity.HasIndex(e => e.Eid, "IX_doc_estadoTipoDocumento_perfil");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EstadoTipoDocumentoPerfil)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("estadoTipoDocumento_perfil");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdEstadoTipoDocumento).HasColumnName("id_estadoTipoDocumento");
            entity.Property(e => e.IdPerfil).HasColumnName("id_perfil");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdEstadoTipoDocumentoNavigation).WithMany(p => p.DocEstadoTipoDocumentoPerfils)
                .HasForeignKey(d => d.IdEstadoTipoDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_estadoTipoDocumento_perfil_id_estadoTipoDocumento");

            entity.HasOne(d => d.IdPerfilNavigation).WithMany(p => p.DocEstadoTipoDocumentoPerfils)
                .HasForeignKey(d => d.IdPerfil)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_estadoTipoDocumento_perfil_id_perfil");
        });

        modelBuilder.Entity<DocEstadoTipoDocumentoSubtipoDocumento>(entity =>
        {
            entity.ToTable("doc_estadoTipoDocumento_subtipoDocumento");

            entity.HasIndex(e => e.Eid, "IX_doc_estadoTipoDocumento_subtipoDocumento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EstadoTipoDocumentoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("estadoTipoDocumento_subtipoDocumento");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdEstadoTipoDocumento).HasColumnName("id_estadoTipoDocumento");
            entity.Property(e => e.IdEstadoTipoDocumentoDestino).HasColumnName("id_estadoTipoDocumento_destino");
            entity.Property(e => e.IdSubtipoDocumento).HasColumnName("id_subtipoDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.SpEjecucionfinal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("sp_ejecucionfinal");
            entity.Property(e => e.TiempoDeEjecucion).HasColumnName("tiempoDeEjecucion");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdEstadoTipoDocumentoNavigation).WithMany(p => p.DocEstadoTipoDocumentoSubtipoDocumentoIdEstadoTipoDocumentoNavigations)
                .HasForeignKey(d => d.IdEstadoTipoDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_estadoTipoDocumento_subtipoDocumento_id_estadoTipoDocumento");

            entity.HasOne(d => d.IdEstadoTipoDocumentoDestinoNavigation).WithMany(p => p.DocEstadoTipoDocumentoSubtipoDocumentoIdEstadoTipoDocumentoDestinoNavigations)
                .HasForeignKey(d => d.IdEstadoTipoDocumentoDestino)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_estadoTipoDocumento_subtipoDocumento_id_estadoTipoDocumento_destino");

            entity.HasOne(d => d.IdSubtipoDocumentoNavigation).WithMany(p => p.DocEstadoTipoDocumentoSubtipoDocumentos)
                .HasForeignKey(d => d.IdSubtipoDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_estadoTipoDocumento_subtipoDocumento_id_subtipoDocumento");
        });

        modelBuilder.Entity<DocEstrategiaPrioridad>(entity =>
        {
            entity.ToTable("doc_estrategiaPrioridad");

            entity.HasIndex(e => e.Eid, "IX_doc_estrategiaPrioridad");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DomingoFinHh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("domingoFin_hh");
            entity.Property(e => e.DomingoIniHh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("domingoIni_hh");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EstrategiaPrioridad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("estrategiaPrioridad");
            entity.Property(e => e.EstrategiaPrioridadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("estrategiaPrioridad_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FestivoFinHh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("festivoFin_hh");
            entity.Property(e => e.FestivoIniHh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("festivoIni_hh");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.JuevesFinHh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("juevesFin_hh");
            entity.Property(e => e.JuevesIniHh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("juevesIni_hh");
            entity.Property(e => e.LunesFinHh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("lunesFin_hh");
            entity.Property(e => e.LunesIniHh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("lunesIni_hh");
            entity.Property(e => e.MartesFinHh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("martesFin_hh");
            entity.Property(e => e.MartesIniHh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("martesIni_hh");
            entity.Property(e => e.MiercolesFinHh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("miercolesFin_hh");
            entity.Property(e => e.MiercolesIniHh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("miercolesIni_hh");
            entity.Property(e => e.SabadoFinHh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("sabadoFin_hh");
            entity.Property(e => e.SabadoIniHh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("sabadoIni_hh");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ViernesFinHh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("viernesFin_hh");
            entity.Property(e => e.ViernesIniHh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("viernesIni_hh");
        });

        modelBuilder.Entity<DocEvaluacion>(entity =>
        {
            entity.ToTable("doc_evaluacion");

            entity.HasIndex(e => e.Eid, "IX_doc_evaluacion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activa)
                .HasDefaultValue(true)
                .HasColumnName("activa");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Evaluacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("evaluacion");
            entity.Property(e => e.EvaluacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("evaluacion_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdSubtipoDocumento).HasColumnName("id_subtipoDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdSubtipoDocumentoNavigation).WithMany(p => p.DocEvaluacions)
                .HasForeignKey(d => d.IdSubtipoDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_evaluacion_id_subtipoDocumento");
        });

        modelBuilder.Entity<DocFlujoDocumento>(entity =>
        {
            entity.ToTable("doc_flujoDocumento");

            entity.HasIndex(e => e.Eid, "IX_doc_flujoDocumento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FlujoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("flujoDocumento");
            entity.Property(e => e.FlujoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("flujoDocumento_codigo");
            entity.Property(e => e.IdEstadoTipoDocumentoOrigen).HasColumnName("id_estadoTipoDocumento_origen");
            entity.Property(e => e.IdEstadoTipoDocumentoResultado).HasColumnName("id_estadoTipoDocumento_resultado");
            entity.Property(e => e.IdSubtipoDocumentoDestino).HasColumnName("id_subtipoDocumento_destino");
            entity.Property(e => e.IdSubtipoDocumentoOrigen).HasColumnName("id_subtipoDocumento_origen");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.ReplicarAtributos).HasColumnName("replicarAtributos");
            entity.Property(e => e.ReplicarComentario).HasColumnName("replicarComentario");
            entity.Property(e => e.ReplicarItems).HasColumnName("replicarItems");
            entity.Property(e => e.ReplicarItemsActividades).HasColumnName("replicarItemsActividades");
            entity.Property(e => e.Restrictivo).HasColumnName("restrictivo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdEstadoTipoDocumentoOrigenNavigation).WithMany(p => p.DocFlujoDocumentoIdEstadoTipoDocumentoOrigenNavigations)
                .HasForeignKey(d => d.IdEstadoTipoDocumentoOrigen)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_flujoDocumento_id_estadoTipoDocumento_origen");

            entity.HasOne(d => d.IdEstadoTipoDocumentoResultadoNavigation).WithMany(p => p.DocFlujoDocumentoIdEstadoTipoDocumentoResultadoNavigations)
                .HasForeignKey(d => d.IdEstadoTipoDocumentoResultado)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_flujoDocumento_id_estadoTipoDocumento_resultado");

            entity.HasOne(d => d.IdSubtipoDocumentoDestinoNavigation).WithMany(p => p.DocFlujoDocumentoIdSubtipoDocumentoDestinoNavigations)
                .HasForeignKey(d => d.IdSubtipoDocumentoDestino)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_flujoDocumento_id_subtipoDocumento_destino");

            entity.HasOne(d => d.IdSubtipoDocumentoOrigenNavigation).WithMany(p => p.DocFlujoDocumentoIdSubtipoDocumentoOrigenNavigations)
                .HasForeignKey(d => d.IdSubtipoDocumentoOrigen)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_flujoDocumento_id_subtipoDocumento_origen");
        });

        modelBuilder.Entity<DocFormaPago>(entity =>
        {
            entity.ToTable("doc_formaPago");

            entity.HasIndex(e => e.Eid, "IX_doc_formaPago");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DiasPago)
                .HasDefaultValue(0)
                .HasColumnName("diasPago");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FormaPago)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("formaPago");
            entity.Property(e => e.FormaPagoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("formaPago_codigo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<DocIncoterm>(entity =>
        {
            entity.ToTable("doc_incoterm");

            entity.HasIndex(e => e.Eid, "IX_doc_incoterm");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Incoterm)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("incoterm");
            entity.Property(e => e.IncotermCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("incoterm_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<DocItemDocumento>(entity =>
        {
            entity.ToTable("doc_itemDocumento");

            entity.HasIndex(e => e.Eid, "IX_doc_itemDocumento");

            entity.HasIndex(e => e.IdDocumento, "IX_id_documento");

            entity.HasIndex(e => e.IdItemDocumento, "IX_id_itemDocumento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.AfectoInventario).HasColumnName("afectoInventario");
            entity.Property(e => e.CantAuxiliar)
                .HasDefaultValue(1.0)
                .HasColumnName("cantAuxiliar");
            entity.Property(e => e.CantidadEjecutado).HasColumnName("cantidadEjecutado");
            entity.Property(e => e.CantidadPlaneado).HasColumnName("cantidadPlaneado");
            entity.Property(e => e.Costear)
                .HasDefaultValue(true)
                .HasColumnName("costear");
            entity.Property(e => e.CostoEjecutado).HasColumnName("costoEjecutado");
            entity.Property(e => e.CostoPlaneado).HasColumnName("costoPlaneado");
            entity.Property(e => e.Detalle)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("detalle");
            entity.Property(e => e.DtoEjecutado)
                .HasColumnType("money")
                .HasColumnName("dtoEjecutado");
            entity.Property(e => e.DtoPlaneado)
                .HasColumnType("money")
                .HasColumnName("dtoPlaneado");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsUrgente)
                .HasDefaultValue(true)
                .HasColumnName("esUrgente");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.HorasFestivas).HasColumnName("horasFestivas");
            entity.Property(e => e.HorasGarantia).HasColumnName("horasGarantia");
            entity.Property(e => e.HorasNocturnas).HasColumnName("horasNocturnas");
            entity.Property(e => e.HorasOrdinales).HasColumnName("horasOrdinales");
            entity.Property(e => e.IdBodega).HasColumnName("id_bodega");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdCentroCosto).HasColumnName("id_centroCosto");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdIncoterm).HasColumnName("id_incoterm");
            entity.Property(e => e.IdItemDocumento).HasColumnName("id_itemDocumento");
            entity.Property(e => e.IdItemDocumentoSuperior).HasColumnName("id_itemDocumento_superior");
            entity.Property(e => e.IdListaprecio).HasColumnName("id_listaprecio");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.ItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("itemDocumento");
            entity.Property(e => e.ItemDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("itemDocumento_codigo");
            entity.Property(e => e.IvaEjecutado)
                .HasColumnType("money")
                .HasColumnName("ivaEjecutado");
            entity.Property(e => e.IvaPlaneado)
                .HasColumnType("money")
                .HasColumnName("ivaPlaneado");
            entity.Property(e => e.MargenPlaneado).HasColumnName("margenPlaneado");
            entity.Property(e => e.Porcdescuento)
                .HasDefaultValue(0.0)
                .HasColumnName("porcdescuento");
            entity.Property(e => e.Porcdto).HasColumnName("porcdto");
            entity.Property(e => e.PorcentajeCliente)
                .HasDefaultValue(100.0)
                .HasColumnName("porcentajeCliente");
            entity.Property(e => e.PorcentajeDistribuidor).HasColumnName("porcentajeDistribuidor");
            entity.Property(e => e.PorcentajeFabricante).HasColumnName("porcentajeFabricante");
            entity.Property(e => e.PorcentajeMargen).HasColumnName("porcentajeMargen");
            entity.Property(e => e.Porciva).HasColumnName("porciva");
            entity.Property(e => e.SubtotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("subtotalEjecutado");
            entity.Property(e => e.SubtotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("subtotalPlaneado");
            entity.Property(e => e.TotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("totalEjecutado");
            entity.Property(e => e.TotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("totalPlaneado");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorUnitarioEjecutado)
                .HasColumnType("money")
                .HasColumnName("valorUnitarioEjecutado");
            entity.Property(e => e.ValorUnitarioPlaneado)
                .HasColumnType("money")
                .HasColumnName("valorUnitarioPlaneado");
            entity.Property(e => e.VencimientoGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("vencimientoGarantia_ff");
            entity.Property(e => e.Vrbase)
                .HasDefaultValue(0.0)
                .HasColumnName("vrbase");
            entity.Property(e => e.Vrenlista)
                .HasDefaultValue(0.0)
                .HasColumnName("vrenlista");

            entity.HasOne(d => d.IdBodegaNavigation).WithMany(p => p.DocItemDocumentos)
                .HasForeignKey(d => d.IdBodega)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_itemDocumento_id_bodega");

            entity.HasOne(d => d.IdCatalogoNavigation).WithMany(p => p.DocItemDocumentos)
                .HasForeignKey(d => d.IdCatalogo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_itemDocumento_id_catalogo");

            entity.HasOne(d => d.IdCentroCostoNavigation).WithMany(p => p.DocItemDocumentos)
                .HasForeignKey(d => d.IdCentroCosto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_itemDocumento_id_centroCosto");

            entity.HasOne(d => d.IdDocumentoNavigation).WithMany(p => p.DocItemDocumentos)
                .HasForeignKey(d => d.IdDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_itemDocumento_id_documento");

            entity.HasOne(d => d.IdIncotermNavigation).WithMany(p => p.DocItemDocumentos)
                .HasForeignKey(d => d.IdIncoterm)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_itemDocumento_id_incoterm");

            entity.HasOne(d => d.IdItemDocumentoNavigation).WithMany(p => p.InverseIdItemDocumentoNavigation)
                .HasForeignKey(d => d.IdItemDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_itemDocumento_id_itemDocumento");

            entity.HasOne(d => d.IdItemDocumentoSuperiorNavigation).WithMany(p => p.InverseIdItemDocumentoSuperiorNavigation)
                .HasForeignKey(d => d.IdItemDocumentoSuperior)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_itemDocumento_id_itemDocumento_superior");

            entity.HasOne(d => d.IdListaprecioNavigation).WithMany(p => p.DocItemDocumentos)
                .HasForeignKey(d => d.IdListaprecio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_itemDocumento_id_listaprecio");
        });

        modelBuilder.Entity<DocMedioSolicitud>(entity =>
        {
            entity.ToTable("doc_medioSolicitud");

            entity.HasIndex(e => e.Eid, "IX_doc_medioSolicitud");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MedioSolicitud)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("medioSolicitud");
            entity.Property(e => e.MedioSolicitudCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("medioSolicitud_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<DocMotivoestado>(entity =>
        {
            entity.ToTable("doc_motivoestado");

            entity.HasIndex(e => e.Eid, "IX_doc_motivoestado");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdEstadoTipoDocumento).HasColumnName("id_estadoTipoDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Motivoestado)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("motivoestado");
            entity.Property(e => e.MotivoestadoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("motivoestado_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdEstadoTipoDocumentoNavigation).WithMany(p => p.DocMotivoestados)
                .HasForeignKey(d => d.IdEstadoTipoDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_motivoestado_id_estadoTipoDocumento");
        });

        modelBuilder.Entity<DocOpcionCondicion>(entity =>
        {
            entity.ToTable("doc_opcionCondicion");

            entity.HasIndex(e => e.Eid, "IX_doc_opcionCondicion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCondicion).HasColumnName("id_condicion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.OpcionCondicion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("opcionCondicion");
            entity.Property(e => e.OpcionCondicionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("opcionCondicion_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCondicionNavigation).WithMany(p => p.DocOpcionCondicions)
                .HasForeignKey(d => d.IdCondicion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_opcionCondicion_id_condicion");
        });

        modelBuilder.Entity<DocOpcionRespuestum>(entity =>
        {
            entity.ToTable("doc_opcionRespuesta");

            entity.HasIndex(e => e.Eid, "IX_doc_opcionRespuesta");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activa)
                .HasDefaultValue(true)
                .HasColumnName("activa");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdPregunta).HasColumnName("id_pregunta");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.OpcionRespuesta)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("opcionRespuesta");
            entity.Property(e => e.OpcionRespuestaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("opcionRespuesta_codigo");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor)
                .HasDefaultValue(1)
                .HasColumnName("valor");

            entity.HasOne(d => d.IdPreguntaNavigation).WithMany(p => p.DocOpcionRespuesta)
                .HasForeignKey(d => d.IdPregunta)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_opcionRespuesta_id_pregunta");
        });

        modelBuilder.Entity<DocPendienteDocumento>(entity =>
        {
            entity.ToTable("doc_pendienteDocumento");

            entity.HasIndex(e => e.Eid, "IX_doc_pendienteDocumento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdReporteTecnico).HasColumnName("id_reporteTecnico");
            entity.Property(e => e.IdTipoDocumento).HasColumnName("id_tipoDocumento");
            entity.Property(e => e.IdTipoPendiente).HasColumnName("id_tipoPendiente");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Olvidar).HasColumnName("olvidar");
            entity.Property(e => e.PendienteDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pendienteDocumento");
            entity.Property(e => e.PendienteDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pendienteDocumento_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCatalogoNavigation).WithMany(p => p.DocPendienteDocumentos)
                .HasForeignKey(d => d.IdCatalogo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_pendienteDocumento_id_catalogo");

            entity.HasOne(d => d.IdDocumentoNavigation).WithMany(p => p.DocPendienteDocumentos)
                .HasForeignKey(d => d.IdDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_pendienteDocumento_id_documento");

            entity.HasOne(d => d.IdReporteTecnicoNavigation).WithMany(p => p.DocPendienteDocumentos)
                .HasForeignKey(d => d.IdReporteTecnico)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__doc_pendi__id_re__52324CE2");

            entity.HasOne(d => d.IdTipoDocumentoNavigation).WithMany(p => p.DocPendienteDocumentos)
                .HasForeignKey(d => d.IdTipoDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_pendienteDocumento_id_tipoDocumento");
        });

        modelBuilder.Entity<DocPendienteDocumentoDocItemDocumento>(entity =>
        {
            entity.ToTable("doc_pendienteDocumento_doc_itemDocumento");

            entity.HasIndex(e => e.Eid, "IX_doc_pendienteDocumento_doc_itemDocumento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdItemDocumento).HasColumnName("id_itemDocumento");
            entity.Property(e => e.IdPendienteDocumento).HasColumnName("id_pendienteDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PendienteDocumentoDocItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pendienteDocumento_doc_itemDocumento");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdItemDocumentoNavigation).WithMany(p => p.DocPendienteDocumentoDocItemDocumentos)
                .HasForeignKey(d => d.IdItemDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__doc_pendi__id_it__1217C7CD");

            entity.HasOne(d => d.IdPendienteDocumentoNavigation).WithMany(p => p.DocPendienteDocumentoDocItemDocumentos)
                .HasForeignKey(d => d.IdPendienteDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__doc_pendi__id_pe__102F7F5B");
        });

        modelBuilder.Entity<DocPreguntum>(entity =>
        {
            entity.ToTable("doc_pregunta");

            entity.HasIndex(e => e.Eid, "IX_doc_pregunta");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Activa)
                .HasDefaultValue(true)
                .HasColumnName("activa");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdEvaluacion).HasColumnName("id_evaluacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.Pregunta)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pregunta");
            entity.Property(e => e.PreguntaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pregunta_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor)
                .HasDefaultValue(1)
                .HasColumnName("valor");

            entity.HasOne(d => d.IdEvaluacionNavigation).WithMany(p => p.DocPregunta)
                .HasForeignKey(d => d.IdEvaluacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_pregunta_id_evaluacion");
        });

        modelBuilder.Entity<DocPrioridadDocumento>(entity =>
        {
            entity.ToTable("doc_prioridadDocumento");

            entity.HasIndex(e => e.Eid, "IX_doc_prioridadDocumento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdEstrategiaPrioridad).HasColumnName("id_estrategiaPrioridad");
            entity.Property(e => e.IdTipoDocumento).HasColumnName("id_tipoDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.PrioridadDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("prioridadDocumento");
            entity.Property(e => e.PrioridadDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("prioridadDocumento_codigo");
            entity.Property(e => e.TiempoRespuesta)
                .HasDefaultValue(24)
                .HasColumnName("tiempoRespuesta");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdEstrategiaPrioridadNavigation).WithMany(p => p.DocPrioridadDocumentos)
                .HasForeignKey(d => d.IdEstrategiaPrioridad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_prioridadDocumento_id_estrategiaPrioridad");

            entity.HasOne(d => d.IdTipoDocumentoNavigation).WithMany(p => p.DocPrioridadDocumentos)
                .HasForeignKey(d => d.IdTipoDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_prioridadDocumento_id_tipoDocumento");
        });

        modelBuilder.Entity<DocPrioridadSubtipoDocumento>(entity =>
        {
            entity.ToTable("doc_prioridadSubtipoDocumento");

            entity.HasIndex(e => e.Eid, "IX_doc_prioridadSubtipoDocumento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdPrioridadDocumento).HasColumnName("id_prioridadDocumento");
            entity.Property(e => e.IdSubtipoDocumento).HasColumnName("id_subtipoDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PrioridadSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("prioridadSubtipoDocumento");
            entity.Property(e => e.PrioridadSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("prioridadSubtipoDocumento_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdPrioridadDocumentoNavigation).WithMany(p => p.DocPrioridadSubtipoDocumentos)
                .HasForeignKey(d => d.IdPrioridadDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__doc_prior__id_pr__1E1F42AD");

            entity.HasOne(d => d.IdSubtipoDocumentoNavigation).WithMany(p => p.DocPrioridadSubtipoDocumentos)
                .HasForeignKey(d => d.IdSubtipoDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__doc_prior__id_su__1C36FA3B");
        });

        modelBuilder.Entity<DocSoporteItemDocumento>(entity =>
        {
            entity.ToTable("doc_soporteItemDocumento");

            entity.HasIndex(e => e.Eid, "IX_doc_soporteItemDocumento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Costo).HasColumnType("money");
            entity.Property(e => e.DuracionEjecutada).HasColumnName("duracionEjecutada");
            entity.Property(e => e.DuracionPlaneada).HasColumnName("duracionPlaneada");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.HorasFestivas).HasColumnName("horasFestivas");
            entity.Property(e => e.HorasNocturnas).HasColumnName("horasNocturnas");
            entity.Property(e => e.HorasOrdinales).HasColumnName("horasOrdinales");
            entity.Property(e => e.IdItemDocumento).HasColumnName("id_itemDocumento");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Periodo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("periodo");
            entity.Property(e => e.SoporteItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("soporteItemDocumento");
            entity.Property(e => e.SoporteItemDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("soporteItemDocumento_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor).HasColumnType("money");

            entity.HasOne(d => d.IdItemDocumentoNavigation).WithMany(p => p.DocSoporteItemDocumentos)
                .HasForeignKey(d => d.IdItemDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_soporteItemDocumento_id_itemDocumento");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.DocSoporteItemDocumentos)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_soporteItemDocumento_id_usuario");
        });

        modelBuilder.Entity<DocSubtipoDocumento>(entity =>
        {
            entity.ToTable("doc_subtipoDocumento");

            entity.HasIndex(e => e.Eid, "IX_doc_subtipoDocumento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.ArchivosAdjuntosApp)
                .HasDefaultValue(1)
                .HasColumnName("archivosAdjuntosApp");
            entity.Property(e => e.BloquearDespacho).HasColumnName("bloquearDespacho");
            entity.Property(e => e.CantidadAuxiliar)
                .HasDefaultValue(true)
                .HasColumnName("cantidadAuxiliar");
            entity.Property(e => e.CargarSolicitante).HasColumnName("cargarSolicitante");
            entity.Property(e => e.CerrarSol)
                .HasDefaultValue(true)
                .HasColumnName("cerrarSol");
            entity.Property(e => e.Consecutivo)
                .HasDefaultValue(1)
                .HasColumnName("consecutivo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EjecutaDevolucion)
                .HasDefaultValue(true)
                .HasColumnName("ejecutaDevolucion");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdTipoDocumento).HasColumnName("id_tipoDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MostrarPendienteDocumento).HasColumnName("mostrarPendienteDocumento");
            entity.Property(e => e.MostrarValoresEjecutados)
                .HasDefaultValue(true)
                .HasColumnName("mostrarValoresEjecutados");
            entity.Property(e => e.Prefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("prefijo");
            entity.Property(e => e.ProgramarPlaneadas).HasColumnName("programarPlaneadas");
            entity.Property(e => e.SubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("subtipoDocumento");
            entity.Property(e => e.SubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("subtipoDocumento_codigo");
            entity.Property(e => e.TipoCobro).HasColumnName("tipoCobro");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValUrgente).HasColumnName("valUrgente");
            entity.Property(e => e.VerCentroCosto).HasColumnName("verCentroCosto");
            entity.Property(e => e.VerIncoterm).HasColumnName("verIncoterm");

            entity.HasOne(d => d.IdTipoDocumentoNavigation).WithMany(p => p.DocSubtipoDocumentos)
                .HasForeignKey(d => d.IdTipoDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_subtipoDocumento_id_tipoDocumento");
        });

        modelBuilder.Entity<DocSubtipoLectura>(entity =>
        {
            entity.ToTable("doc_subtipoLectura");

            entity.HasIndex(e => e.Eid, "IX_doc_subtipoLectura");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdSubtipoDocumento).HasColumnName("id_subtipoDocumento");
            entity.Property(e => e.IdSubtipoDocumentoOrigen).HasColumnName("id_subtipoDocumento_origen");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.SubtipoLectura)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("subtipoLectura");
            entity.Property(e => e.SubtipoLecturaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("subtipoLectura_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<DocTarea>(entity =>
        {
            entity.ToTable("doc_tarea");

            entity.HasIndex(e => e.Eid, "IX_doc_tarea");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaPlaneadaFh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaPlaneada_fh");
            entity.Property(e => e.IdCargo).HasColumnName("id_cargo");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PorcentajeAvance).HasColumnName("porcentajeAvance");
            entity.Property(e => e.Tarea)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tarea");
            entity.Property(e => e.TareaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tarea_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCargoNavigation).WithMany(p => p.DocTareas)
                .HasForeignKey(d => d.IdCargo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_tarea_id_cargo");

            entity.HasOne(d => d.IdCatalogoNavigation).WithMany(p => p.DocTareas)
                .HasForeignKey(d => d.IdCatalogo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_doc_tarea_id_catalogo");
        });

        modelBuilder.Entity<DocTipoDocumento>(entity =>
        {
            entity.ToTable("doc_tipoDocumento");

            entity.HasIndex(e => e.Eid, "IX_doc_tipoDocumento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsSalida).HasColumnName("esSalida");
            entity.Property(e => e.EsUrgente)
                .HasDefaultValue(true)
                .HasColumnName("esUrgente");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MostrarBodega).HasColumnName("mostrarBodega");
            entity.Property(e => e.MostrarCentroCosto).HasColumnName("mostrarCentroCosto");
            entity.Property(e => e.MostrarIncoterm).HasColumnName("mostrarIncoterm");
            entity.Property(e => e.PuedeSerMayor)
                .HasDefaultValue(true)
                .HasColumnName("puedeSerMayor");
            entity.Property(e => e.PuedeSerMenor)
                .HasDefaultValue(true)
                .HasColumnName("puedeSerMenor");
            entity.Property(e => e.TipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoDocumento");
            entity.Property(e => e.TipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoDocumento_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<DocTipoPendiente>(entity =>
        {
            entity.ToTable("doc_tipoPendiente");

            entity.HasIndex(e => e.Eid, "IX_doc_tipoPendiente");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TipoPendiente)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoPendiente");
            entity.Property(e => e.TipoPendienteCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoPendiente_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<EquAlquiler>(entity =>
        {
            entity.ToTable("equ_alquiler");

            entity.HasIndex(e => e.Eid, "IX_equ_alquiler");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Alquiler)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("alquiler");
            entity.Property(e => e.AlquilerCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("alquiler_codigo");
            entity.Property(e => e.AlquilerNumero).HasColumnName("alquiler_numero");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCompromisoFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCompromiso_ff");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFinFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFin_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdSubtipoDocumento).HasColumnName("id_subtipoDocumento");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MesVencido)
                .HasDefaultValue(true)
                .HasColumnName("mesVencido");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("observaciones");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdDocumentoNavigation).WithMany(p => p.EquAlquilers)
                .HasForeignKey(d => d.IdDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_alquiler_doc_documento");

            entity.HasOne(d => d.IdSubtipoDocumentoNavigation).WithMany(p => p.EquAlquilers)
                .HasForeignKey(d => d.IdSubtipoDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_alquiler_id_subtipoDocumento");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.EquAlquilers)
                .HasForeignKey(d => d.IdSucursal)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_alquiler_id_sucursal");

            entity.HasOne(d => d.IdTerceroNavigation).WithMany(p => p.EquAlquilers)
                .HasForeignKey(d => d.IdTercero)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_alquiler_id_tercero");
        });

        modelBuilder.Entity<EquAnalisisFalla>(entity =>
        {
            entity.ToTable("equ_analisisFalla");

            entity.HasIndex(e => e.Eid, "IX_equ_analisisFalla");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.AnalisisFalla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("analisisFalla");
            entity.Property(e => e.AnalisisFallaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("analisisFalla_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogoEquipo).HasColumnName("id_catalogo.equipo");
            entity.Property(e => e.IdFalla).HasColumnName("id_falla");
            entity.Property(e => e.IdFallaCausa).HasColumnName("id_falla_causa");
            entity.Property(e => e.IdFallaEfecto).HasColumnName("id_falla_efecto");
            entity.Property(e => e.IdFallaSolucion).HasColumnName("id_falla_solucion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCatalogoEquipoNavigation).WithMany(p => p.EquAnalisisFallas)
                .HasForeignKey(d => d.IdCatalogoEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__equ_anali__id_ca__5A73587F");

            entity.HasOne(d => d.IdFallaNavigation).WithMany(p => p.EquAnalisisFallaIdFallaNavigations)
                .HasForeignKey(d => d.IdFalla)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__equ_anali__id_fa__5C5BA0F1");

            entity.HasOne(d => d.IdFallaCausaNavigation).WithMany(p => p.EquAnalisisFallaIdFallaCausaNavigations)
                .HasForeignKey(d => d.IdFallaCausa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__equ_anali__id_fa__5E43E963");

            entity.HasOne(d => d.IdFallaEfectoNavigation).WithMany(p => p.EquAnalisisFallaIdFallaEfectoNavigations)
                .HasForeignKey(d => d.IdFallaEfecto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__equ_anali__id_fa__602C31D5");

            entity.HasOne(d => d.IdFallaSolucionNavigation).WithMany(p => p.EquAnalisisFallaIdFallaSolucionNavigations)
                .HasForeignKey(d => d.IdFallaSolucion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__equ_anali__id_fa__33248134");
        });

        modelBuilder.Entity<EquCampana>(entity =>
        {
            entity.ToTable("equ_campana");

            entity.HasIndex(e => e.Eid, "IX_equ_campana");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Activo)
                .HasDefaultValue(true)
                .HasColumnName("activo");
            entity.Property(e => e.Campana)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("campana");
            entity.Property(e => e.CampanaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("campana_codigo");
            entity.Property(e => e.DetalleCampana)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("detalleCampana");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaInicioFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicio_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechafinFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechafin_ff");
            entity.Property(e => e.IdCatalogoTempario).HasColumnName("id_catalogo.tempario");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCatalogoTemparioNavigation).WithMany(p => p.EquCampanas)
                .HasForeignKey(d => d.IdCatalogoTempario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_campana_id_catalogo_tempario");

            entity.HasOne(d => d.IdTerceroNavigation).WithMany(p => p.EquCampanas)
                .HasForeignKey(d => d.IdTercero)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_campana_id_tercero");
        });

        modelBuilder.Entity<EquCampanaDocumentoOt>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_equ_campana_documento_OT");

            entity.ToTable("equ_campana_documento.OT");

            entity.HasIndex(e => e.Eid, "IX_equ_campana_documento_OT");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CampanaDocumentoOt)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("campana_documento.OT");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCampana).HasColumnName("id_campana");
            entity.Property(e => e.IdDocumentoOt).HasColumnName("id_documento.ot");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCampanaNavigation).WithMany(p => p.EquCampanaDocumentoOts)
                .HasForeignKey(d => d.IdCampana)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_campana_documento_OT_id_campana");

            entity.HasOne(d => d.IdDocumentoOtNavigation).WithMany(p => p.EquCampanaDocumentoOts)
                .HasForeignKey(d => d.IdDocumentoOt)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_campana_documento_OT_id_documento_ot");
        });

        modelBuilder.Entity<EquCicloHorometro>(entity =>
        {
            entity.ToTable("equ_cicloHorometro");

            entity.HasIndex(e => e.Eid, "IX_equ_cicloHorometro");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.AfectarProyeccion).HasColumnName("afectarProyeccion");
            entity.Property(e => e.CicloHorometro)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cicloHorometro");
            entity.Property(e => e.CicloHorometroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cicloHorometro_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.HorometroFinal).HasColumnName("horometroFinal");
            entity.Property(e => e.HorometroInicial).HasColumnName("horometroInicial");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.ReiniciarHorometro).HasColumnName("reiniciarHorometro");
            entity.Property(e => e.ReparacionMayor).HasColumnName("reparacionMayor");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.EquCicloHorometros)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_cicloHorometro_id_equipo");
        });

        modelBuilder.Entity<EquDetalleAlquiler>(entity =>
        {
            entity.ToTable("equ_detalleAlquiler");

            entity.HasIndex(e => e.Eid, "IX_equ_detalleAlquiler");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.BloquearDespacho).HasColumnName("bloquearDespacho");
            entity.Property(e => e.CantidadAlquilada).HasColumnName("cantidadAlquilada");
            entity.Property(e => e.CantidadSolicitada).HasColumnName("cantidadSolicitada");
            entity.Property(e => e.DetalleAlquiler)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("detalleAlquiler");
            entity.Property(e => e.DetalleAlquilerCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("detalleAlquiler_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsSerializado).HasColumnName("esSerializado");
            entity.Property(e => e.Estadoalquiler).HasColumnName("estadoalquiler");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaDespachoFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaDespacho_ff");
            entity.Property(e => e.FechaDevolucionFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaDevolucion_ff");
            entity.Property(e => e.FechaInicioFacturaFh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicioFactura_fh");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaUltimaFacturaFh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaUltimaFactura_fh");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdDocumentoAlquiler).HasColumnName("id_documento.alquiler");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorHora)
                .HasColumnType("money")
                .HasColumnName("valorHora");
            entity.Property(e => e.ValorHoraStandBy).HasColumnType("money");
            entity.Property(e => e.ValorMes)
                .HasDefaultValue(0.0)
                .HasColumnName("valorMes");
            entity.Property(e => e.ValorMulta)
                .HasColumnType("money")
                .HasColumnName("valorMulta");
            entity.Property(e => e.ValorPeriodo)
                .HasColumnType("money")
                .HasColumnName("valorPeriodo");

            entity.HasOne(d => d.IdCatalogoNavigation).WithMany(p => p.EquDetalleAlquilers)
                .HasForeignKey(d => d.IdCatalogo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_detalleAlquiler_id_catalogo");

            entity.HasOne(d => d.IdDocumentoAlquilerNavigation).WithMany(p => p.EquDetalleAlquilers)
                .HasForeignKey(d => d.IdDocumentoAlquiler)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_detalleAlquiler_id_documento_alquiler");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.EquDetalleAlquilers)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_detalleAlquiler_id_equipo");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.EquDetalleAlquilers)
                .HasForeignKey(d => d.IdSucursal)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_detalleAlquiler_id_sucursal");

            entity.HasOne(d => d.IdTerceroNavigation).WithMany(p => p.EquDetalleAlquilers)
                .HasForeignKey(d => d.IdTercero)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_detalleAlquiler_id_tercero");
        });

        modelBuilder.Entity<EquDetallePagoAlquiler>(entity =>
        {
            entity.ToTable("equ_detallePagoAlquiler");

            entity.HasIndex(e => e.Eid, "IX_equ_detallePagoAlquiler");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DetallePagoAlquiler)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("detallePagoAlquiler");
            entity.Property(e => e.DetallePagoAlquilerCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("detallePagoAlquiler_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Facturado).HasColumnName("facturado");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFinFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFin_ff");
            entity.Property(e => e.FechaInicialFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicial_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Horometro)
                .HasDefaultValue(0.0)
                .HasColumnName("horometro");
            entity.Property(e => e.IdDocumento)
                .HasDefaultValue(0)
                .HasColumnName("id_documento");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdItemDocumento).HasColumnName("id_itemDocumento");
            entity.Property(e => e.IdPagoAlquiler).HasColumnName("id_pagoAlquiler");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
            entity.Property(e => e.ValorMulta)
                .HasDefaultValue(0.0)
                .HasColumnName("valorMulta");

            entity.HasOne(d => d.IdDocumentoNavigation).WithMany(p => p.EquDetallePagoAlquilers)
                .HasForeignKey(d => d.IdDocumento)
                .HasConstraintName("FK_equ_detallePagoAlquiler_id_documento");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.EquDetallePagoAlquilers)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_detallePagoAlquiler_id_equipo");

            entity.HasOne(d => d.IdItemDocumentoNavigation).WithMany(p => p.EquDetallePagoAlquilers)
                .HasForeignKey(d => d.IdItemDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_detallePagoAlquiler_id_itemDocumento");

            entity.HasOne(d => d.IdPagoAlquilerNavigation).WithMany(p => p.EquDetallePagoAlquilers)
                .HasForeignKey(d => d.IdPagoAlquiler)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_detallePagoAlquiler_id_pagoAlquiler");
        });

        modelBuilder.Entity<EquEquipo>(entity =>
        {
            entity.ToTable("equ_equipo");

            entity.HasIndex(e => e.Eid, "IX_equ_equipo");

            entity.HasIndex(e => e.EquipoSerial, "IX_equ_equipo_equipo_serial");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Costo)
                .HasDefaultValue(0m)
                .HasColumnType("money")
                .HasColumnName("costo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Equipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equipo");
            entity.Property(e => e.EquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equipo_codigo");
            entity.Property(e => e.EquipoSerial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("equipo_serial");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaImportacionFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaImportacion_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaPuestaMarchaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaPuestaMarcha_fh");
            entity.Property(e => e.GarantiaCancelada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("garantiaCancelada");
            entity.Property(e => e.HorasGarantia).HasColumnName("horasGarantia");
            entity.Property(e => e.HorometroActual).HasColumnName("horometroActual");
            entity.Property(e => e.IdCatalogoEquipo).HasColumnName("id_catalogo.equipo");
            entity.Property(e => e.IdCentroCosto).HasColumnName("id_centroCosto");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdEstadoEquipo).HasColumnName("id_estadoEquipo");
            entity.Property(e => e.IdSistema).HasColumnName("id_sistema");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdTerceroComprador).HasColumnName("id_tercero_comprador");
            entity.Property(e => e.IdTerceroServicio).HasColumnName("id_tercero_servicio");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdVersionEquipo).HasColumnName("id_versionEquipo");
            entity.Property(e => e.IdZona).HasColumnName("id_zona");
            entity.Property(e => e.NombreContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombreContacto");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("observaciones");
            entity.Property(e => e.PromedioHoras).HasColumnName("promedioHoras");
            entity.Property(e => e.TelefonoContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("telefonoContacto");
            entity.Property(e => e.Ubicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ubicacion");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.UltimaLecturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("ultimaLectura_fh");
            entity.Property(e => e.VencimientoGarantiaDistribuidorFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("vencimientoGarantiaDistribuidor_ff");
            entity.Property(e => e.VencimientoGarantiaFabricaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("vencimientoGarantiaFabrica_ff");

            entity.HasOne(d => d.IdCatalogoEquipoNavigation).WithMany(p => p.EquEquipos)
                .HasForeignKey(d => d.IdCatalogoEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_equipo_id_catalogo_equipo");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.InverseIdEquipoNavigation)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_equipo_id_equipo");

            entity.HasOne(d => d.IdEstadoEquipoNavigation).WithMany(p => p.EquEquipos)
                .HasForeignKey(d => d.IdEstadoEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_equipo_id_estadoEquipo");

            entity.HasOne(d => d.IdSistemaNavigation).WithMany(p => p.EquEquipos)
                .HasForeignKey(d => d.IdSistema)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_equipo_id_sistema");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.EquEquipos)
                .HasForeignKey(d => d.IdSucursal)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_equipo_id_sucursal");

            entity.HasOne(d => d.IdTerceroNavigation).WithMany(p => p.EquEquipoIdTerceroNavigations)
                .HasForeignKey(d => d.IdTercero)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_equipo_id_tercero");

            entity.HasOne(d => d.IdTerceroCompradorNavigation).WithMany(p => p.EquEquipoIdTerceroCompradorNavigations)
                .HasForeignKey(d => d.IdTerceroComprador)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_equipo_id_tercero_comprador");

            entity.HasOne(d => d.IdTerceroServicioNavigation).WithMany(p => p.EquEquipoIdTerceroServicioNavigations)
                .HasForeignKey(d => d.IdTerceroServicio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_equipo_id_tercero_servicio");

            entity.HasOne(d => d.IdVersionEquipoNavigation).WithMany(p => p.EquEquipos)
                .HasForeignKey(d => d.IdVersionEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_equipo_id_versionEquipo");

            entity.HasOne(d => d.IdZonaNavigation).WithMany(p => p.EquEquipos)
                .HasForeignKey(d => d.IdZona)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_equipo_id_zona");
        });

        modelBuilder.Entity<EquEquipoAtributo>(entity =>
        {
            entity.ToTable("equ_equipoAtributo");

            entity.HasIndex(e => e.Eid, "IX_equ_equipoAtributo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquipoAtributo)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("equipoAtributo");
            entity.Property(e => e.EquipoAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equipoAtributo_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdAtributo).HasColumnName("id_atributo");
            entity.Property(e => e.IdDocumentoOt).HasColumnName("id_documento.ot");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdEvento).HasColumnName("id_evento");
            entity.Property(e => e.IdOpcionAtributo).HasColumnName("id_opcionAtributo");
            entity.Property(e => e.IdPruebaCheckList).HasColumnName("id_pruebaCheckList");
            entity.Property(e => e.IdReporteTecnico).HasColumnName("id_reporteTecnico");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdAtributoNavigation).WithMany(p => p.EquEquipoAtributos)
                .HasForeignKey(d => d.IdAtributo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_equipoAtributo_id_atributo");

            entity.HasOne(d => d.IdDocumentoOtNavigation).WithMany(p => p.EquEquipoAtributos)
                .HasForeignKey(d => d.IdDocumentoOt)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_equipoAtributo_id_documento_ot");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.EquEquipoAtributos)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_equipoAtributo_id_equipo");

            entity.HasOne(d => d.IdEventoNavigation).WithMany(p => p.EquEquipoAtributos)
                .HasForeignKey(d => d.IdEvento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__equ_equip__id_ev__32263B5A");

            entity.HasOne(d => d.IdOpcionAtributoNavigation).WithMany(p => p.EquEquipoAtributos)
                .HasForeignKey(d => d.IdOpcionAtributo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_equipoAtributo_id_opcionAtributo");

            entity.HasOne(d => d.IdReporteTecnicoNavigation).WithMany(p => p.EquEquipoAtributos)
                .HasForeignKey(d => d.IdReporteTecnico)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_equipoAtributo_id_reporteTecnico");
        });

        modelBuilder.Entity<EquEquipoItemDocumento>(entity =>
        {
            entity.ToTable("equ_equipo_itemDocumento");

            entity.HasIndex(e => e.Eid, "IX_equ_equipo_itemDocumento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquipoItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equipo_itemDocumento");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdItemDocumento).HasColumnName("id_itemDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCatalogoNavigation).WithMany(p => p.EquEquipoItemDocumentos)
                .HasForeignKey(d => d.IdCatalogo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__equ_equip__id_ca__64E6C551");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.EquEquipoItemDocumentos)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__equ_equip__id_eq__6116346D");

            entity.HasOne(d => d.IdItemDocumentoNavigation).WithMany(p => p.EquEquipoItemDocumentos)
                .HasForeignKey(d => d.IdItemDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__equ_equip__id_it__62FE7CDF");
        });

        modelBuilder.Entity<EquEstadoEquipo>(entity =>
        {
            entity.ToTable("equ_estadoEquipo");

            entity.HasIndex(e => e.Eid, "IX_equ_estadoEquipo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EstadoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("estadoEquipo");
            entity.Property(e => e.EstadoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("estadoEquipo_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<EquEstadoPrestamo>(entity =>
        {
            entity.ToTable("equ_estadoPrestamo");

            entity.HasIndex(e => e.Eid, "IX_equ_estadoPrestamo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EstadoPrestamo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("estadoPrestamo");
            entity.Property(e => e.EstadoPrestamoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("estadoPrestamo_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<EquFalla>(entity =>
        {
            entity.ToTable("equ_falla");

            entity.HasIndex(e => e.Eid, "IX_equ_falla");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Falla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("falla");
            entity.Property(e => e.FallaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("falla_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdFalla).HasColumnName("id_falla");
            entity.Property(e => e.IdTipoFalla).HasColumnName("id_tipoFalla");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Procedimiento)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("procedimiento");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdFallaNavigation).WithMany(p => p.InverseIdFallaNavigation)
                .HasForeignKey(d => d.IdFalla)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_falla_id_falla");

            entity.HasOne(d => d.IdTipoFallaNavigation).WithMany(p => p.EquFallas)
                .HasForeignKey(d => d.IdTipoFalla)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_falla_id_tipoFalla");
        });

        modelBuilder.Entity<EquFamiliaFalla>(entity =>
        {
            entity.ToTable("equ_familia_falla");

            entity.HasIndex(e => e.Eid, "IX_equ_familia_falla");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FamiliaFalla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("familia_falla");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdFalla).HasColumnName("id_falla");
            entity.Property(e => e.IdFamilia).HasColumnName("id_familia");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdFallaNavigation).WithMany(p => p.EquFamiliaFallas)
                .HasForeignKey(d => d.IdFalla)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_familia_falla_id_falla");

            entity.HasOne(d => d.IdFamiliaNavigation).WithMany(p => p.EquFamiliaFallas)
                .HasForeignKey(d => d.IdFamilia)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_familia_falla_id_familia");
        });

        modelBuilder.Entity<EquOpcionAtributo>(entity =>
        {
            entity.ToTable("equ_opcionAtributo");

            entity.HasIndex(e => e.Eid, "IX_equ_opcionAtributo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdAtributo).HasColumnName("id_atributo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.OpcionAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("opcionAtributo");
            entity.Property(e => e.OpcionAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("opcionAtributo_codigo");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdAtributoNavigation).WithMany(p => p.EquOpcionAtributos)
                .HasForeignKey(d => d.IdAtributo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_opcionAtributo_id_atributo");
        });

        modelBuilder.Entity<EquOpcionAtributoDependiente>(entity =>
        {
            entity.ToTable("equ_opcionAtributoDependiente");

            entity.HasIndex(e => e.Eid, "IX_equ_opcionAtributoDependiente");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdOpcionAtributoHijo)
                .HasDefaultValue(0)
                .HasColumnName("id_opcionAtributo_hijo");
            entity.Property(e => e.IdOpcionAtributoPadre)
                .HasDefaultValue(0)
                .HasColumnName("id_opcionAtributo_padre");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.OpcionAtributoDependiente)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("opcionAtributoDependiente");
            entity.Property(e => e.OpcionAtributoDependienteCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("opcionAtributoDependiente_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdOpcionAtributoHijoNavigation).WithMany(p => p.EquOpcionAtributoDependientes)
                .HasForeignKey(d => d.IdOpcionAtributoHijo)
                .HasConstraintName("FK__equ_opcio__id_op__49A7F3D9");
        });

        modelBuilder.Entity<EquOverhall>(entity =>
        {
            entity.ToTable("equ_overhall");

            entity.HasIndex(e => e.Eid, "IX_equ_overhall");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Horometro).HasColumnName("horometro");
            entity.Property(e => e.IdDocumentoOt).HasColumnName("id_documento.ot");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Overhall)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("overhall");
            entity.Property(e => e.OverhallCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("overhall_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdDocumentoOtNavigation).WithMany(p => p.EquOverhalls)
                .HasForeignKey(d => d.IdDocumentoOt)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_overhall_id_documento_ot");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.EquOverhalls)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_overhall_id_equipo");
        });

        modelBuilder.Entity<EquPagoAlquiler>(entity =>
        {
            entity.ToTable("equ_pagoAlquiler");

            entity.HasIndex(e => e.Eid, "IX_equ_pagoAlquiler");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaEsperadaPagoFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaEsperadaPago_ff");
            entity.Property(e => e.FechaFacturaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_factura_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdDocumentoAlquiler).HasColumnName("id_documento.alquiler");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.NumeroFactura)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("numeroFactura");
            entity.Property(e => e.PagoAlquiler)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pagoAlquiler");
            entity.Property(e => e.PagoAlquilerCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pagoAlquiler_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorFacturado)
                .HasColumnType("money")
                .HasColumnName("valorFacturado");
            entity.Property(e => e.ValorPorCobrar)
                .HasColumnType("money")
                .HasColumnName("valorPorCobrar");

            entity.HasOne(d => d.IdDocumentoAlquilerNavigation).WithMany(p => p.EquPagoAlquilers)
                .HasForeignKey(d => d.IdDocumentoAlquiler)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_pagoAlquiler_id_documento_alquiler");
        });

        modelBuilder.Entity<EquPrestamo>(entity =>
        {
            entity.ToTable("equ_prestamo");

            entity.HasIndex(e => e.Eid, "IX_equ_prestamo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCompromisoFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCompromiso_ff");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaPrestamoFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaPrestamo_ff");
            entity.Property(e => e.IdEstadoPrestamo).HasColumnName("id_estadoPrestamo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioEntrego).HasColumnName("id_usuario_entrego");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Notas)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("notas");
            entity.Property(e => e.Prestamo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("prestamo");
            entity.Property(e => e.PrestamoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("prestamo_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdEstadoPrestamoNavigation).WithMany(p => p.EquPrestamos)
                .HasForeignKey(d => d.IdEstadoPrestamo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_prestamo_id_estadoPrestamo");

            entity.HasOne(d => d.IdUsuarioEntregoNavigation).WithMany(p => p.EquPrestamos)
                .HasForeignKey(d => d.IdUsuarioEntrego)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_prestamo_id_usuario_entrego");
        });

        modelBuilder.Entity<EquPrestamoEquipo>(entity =>
        {
            entity.ToTable("equ_prestamo_equipo");

            entity.HasIndex(e => e.Eid, "IX_equ_prestamo_equipo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaDevolucionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaDevolucion_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdPrestamo).HasColumnName("id_prestamo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PrestamoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("prestamo_equipo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.EquPrestamoEquipos)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_prestamo_equipo_id_equipo");

            entity.HasOne(d => d.IdPrestamoNavigation).WithMany(p => p.EquPrestamoEquipos)
                .HasForeignKey(d => d.IdPrestamo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_prestamo_equipo_id_prestamo");
        });

        modelBuilder.Entity<EquTipoAtributo>(entity =>
        {
            entity.ToTable("equ_tipoAtributo");

            entity.HasIndex(e => e.Eid, "IX_equ_tipoAtributo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PrefijoControl)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("prefijoControl");
            entity.Property(e => e.TipoAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoAtributo");
            entity.Property(e => e.TipoAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoAtributo_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<EquTipoFalla>(entity =>
        {
            entity.ToTable("equ_tipoFalla");

            entity.HasIndex(e => e.Eid, "IX_equ_tipoFalla");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TipoFalla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoFalla");
            entity.Property(e => e.TipoFallaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoFalla_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<EquTipoTrazabilidad>(entity =>
        {
            entity.ToTable("equ_tipoTrazabilidad");

            entity.HasIndex(e => e.Eid, "IX_equ_tipoTrazabilidad");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TipoTrazabilidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoTrazabilidad");
            entity.Property(e => e.TipoTrazabilidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoTrazabilidad_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<EquTrazabilidad>(entity =>
        {
            entity.ToTable("equ_trazabilidad");

            entity.HasIndex(e => e.Eid, "IX_equ_trazabilidad");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsSoporte).HasColumnName("esSoporte");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Horometro).HasColumnName("horometro");
            entity.Property(e => e.IdCicloHorometro).HasColumnName("id_cicloHorometro");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdDocumentoAlquiler).HasColumnName("id_documento.alquiler");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdEquipoPadre).HasColumnName("id_equipo_padre");
            entity.Property(e => e.IdEstadoEquipo).HasColumnName("id_estadoEquipo");
            entity.Property(e => e.IdEvento).HasColumnName("id_evento");
            entity.Property(e => e.IdPosicion).HasColumnName("id_posicion");
            entity.Property(e => e.IdPrestamo).HasColumnName("id_prestamo");
            entity.Property(e => e.IdReporteTecnico).HasColumnName("id_reporteTecnico");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdTipoTrazabilidad).HasColumnName("id_tipoTrazabilidad");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Trazabilidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("trazabilidad");
            entity.Property(e => e.TrazabilidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("trazabilidad_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCicloHorometroNavigation).WithMany(p => p.EquTrazabilidads)
                .HasForeignKey(d => d.IdCicloHorometro)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_trazabilidad_id_cicloHorometro");

            entity.HasOne(d => d.IdDocumentoNavigation).WithMany(p => p.EquTrazabilidads)
                .HasForeignKey(d => d.IdDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_trazabilidad_id_documento");

            entity.HasOne(d => d.IdDocumentoAlquilerNavigation).WithMany(p => p.EquTrazabilidads)
                .HasForeignKey(d => d.IdDocumentoAlquiler)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_trazabilidad_id_documento_alquiler");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.EquTrazabilidadIdEquipoNavigations)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_trazabilidad_id_equipo");

            entity.HasOne(d => d.IdEquipoPadreNavigation).WithMany(p => p.EquTrazabilidadIdEquipoPadreNavigations)
                .HasForeignKey(d => d.IdEquipoPadre)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_trazabilidad_id_equipo_padre");

            entity.HasOne(d => d.IdEventoNavigation).WithMany(p => p.EquTrazabilidads)
                .HasForeignKey(d => d.IdEvento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_trazabilidad_id_evento");

            entity.HasOne(d => d.IdPosicionNavigation).WithMany(p => p.EquTrazabilidads)
                .HasForeignKey(d => d.IdPosicion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_trazabilidad_id_posicion");

            entity.HasOne(d => d.IdPrestamoNavigation).WithMany(p => p.EquTrazabilidads)
                .HasForeignKey(d => d.IdPrestamo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_trazabilidad_id_prestamo");

            entity.HasOne(d => d.IdReporteTecnicoNavigation).WithMany(p => p.EquTrazabilidads)
                .HasForeignKey(d => d.IdReporteTecnico)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_trazabilidad_id_reporteTecnico");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.EquTrazabilidads)
                .HasForeignKey(d => d.IdSucursal)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_trazabilidad_id_sucursal");

            entity.HasOne(d => d.IdTerceroNavigation).WithMany(p => p.EquTrazabilidads)
                .HasForeignKey(d => d.IdTercero)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_trazabilidad_id_tercero");

            entity.HasOne(d => d.IdTipoTrazabilidadNavigation).WithMany(p => p.EquTrazabilidads)
                .HasForeignKey(d => d.IdTipoTrazabilidad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_equ_trazabilidad_id_tipoTrazabilidad");
        });

        modelBuilder.Entity<Errore>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("_errores");

            entity.Property(e => e.Cliente)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("cliente");
            entity.Property(e => e.Error)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("error");
            entity.Property(e => e.ErrorCodigo)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("error_codigo");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioModifico)
                .HasDefaultValue(0)
                .HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Seguimiento)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("seguimiento");
            entity.Property(e => e.Version)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("version");
        });

        modelBuilder.Entity<GasDetalleGasto>(entity =>
        {
            entity.ToTable("gas_detalleGasto");

            entity.HasIndex(e => e.Eid, "IX_gas_detalleGasto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.DetalleGasto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("detalleGasto");
            entity.Property(e => e.DetalleGastoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("detalleGasto_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdDocumentoGasto).HasColumnName("id_documento.gasto");
            entity.Property(e => e.IdGasto).HasColumnName("id_gasto");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor).HasColumnName("valor");

            entity.HasOne(d => d.IdCatalogoNavigation).WithMany(p => p.GasDetalleGastos)
                .HasForeignKey(d => d.IdCatalogo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gas_detalleGasto_id_catalogo");

            entity.HasOne(d => d.IdGastoNavigation).WithMany(p => p.GasDetalleGastos)
                .HasForeignKey(d => d.IdGasto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gas_detalleGasto_id_gasto");
        });

        modelBuilder.Entity<GasDocumentoOtDetalleGasto>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_gas_documento_ot_detalleGasto");

            entity.ToTable("gas_documento.ot_detalleGasto");

            entity.HasIndex(e => e.Eid, "IX_gas_documento_ot_detalleGasto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DocumentoOtDetalleGasto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.ot_detalleGasto");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdDetalleGasto).HasColumnName("id_detalleGasto");
            entity.Property(e => e.IdDocumentoGasto).HasColumnName("id_documento.gasto");
            entity.Property(e => e.IdDocumentoOt).HasColumnName("id_documento.ot");
            entity.Property(e => e.IdItemDocumento).HasColumnName("id_itemDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdDetalleGastoNavigation).WithMany(p => p.GasDocumentoOtDetalleGastos)
                .HasForeignKey(d => d.IdDetalleGasto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gas_documento_ot_detalleGasto_id_detalleGasto");

            entity.HasOne(d => d.IdDocumentoOtNavigation).WithMany(p => p.GasDocumentoOtDetalleGastos)
                .HasForeignKey(d => d.IdDocumentoOt)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gas_documento_ot_detalleGasto_id_documento_ot");

            entity.HasOne(d => d.IdItemDocumentoNavigation).WithMany(p => p.GasDocumentoOtDetalleGastos)
                .HasForeignKey(d => d.IdItemDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gas_documento_ot_detalleGasto_id_itemDocumento");
        });

        modelBuilder.Entity<GasGasto>(entity =>
        {
            entity.ToTable("gas_gasto");

            entity.HasIndex(e => e.Eid, "IX_gas_gasto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Concepto)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("concepto");
            entity.Property(e => e.Consignado)
                .HasDefaultValue(true)
                .HasColumnName("consignado");
            entity.Property(e => e.Dias)
                .HasDefaultValue(1)
                .HasColumnName("dias");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Gasto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gasto");
            entity.Property(e => e.GastoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gasto_codigo");
            entity.Property(e => e.IdEstadoTipoDocumento).HasColumnName("id_estadoTipoDocumento");
            entity.Property(e => e.IdTipoGasto).HasColumnName("id_tipoGasto");
            entity.Property(e => e.IdUsuarioAprobo).HasColumnName("id_usuario_aprobo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdUsuarioSolicitante).HasColumnName("id_usuario_solicitante");
            entity.Property(e => e.Numero).HasColumnName("numero");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor).HasColumnName("valor");

            entity.HasOne(d => d.IdEstadoTipoDocumentoNavigation).WithMany(p => p.GasGastos)
                .HasForeignKey(d => d.IdEstadoTipoDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gas_gasto_id_estadoTipoDocumento");

            entity.HasOne(d => d.IdTipoGastoNavigation).WithMany(p => p.GasGastos)
                .HasForeignKey(d => d.IdTipoGasto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gas_gasto_id_tipoGasto");

            entity.HasOne(d => d.IdUsuarioAproboNavigation).WithMany(p => p.GasGastoIdUsuarioAproboNavigations)
                .HasForeignKey(d => d.IdUsuarioAprobo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gas_gasto_id_usuario_aprobo");

            entity.HasOne(d => d.IdUsuarioSolicitanteNavigation).WithMany(p => p.GasGastoIdUsuarioSolicitanteNavigations)
                .HasForeignKey(d => d.IdUsuarioSolicitante)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gas_gasto_id_usuario_solicitante");
        });

        modelBuilder.Entity<GasTipoGasto>(entity =>
        {
            entity.ToTable("gas_tipoGasto");

            entity.HasIndex(e => e.Eid, "IX_gas_tipoGasto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TipoGasto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoGasto");
            entity.Property(e => e.TipoGastoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoGasto_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<GenAccesosSamm>(entity =>
        {
            entity.ToTable("gen_accesosSamm");

            entity.HasIndex(e => e.Eid, "IX_gen_accesosSamm");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AccesosSamm)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("accesosSamm");
            entity.Property(e => e.AccesosSammCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("accesosSamm_codigo");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DireccionIp)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("direccionIP");
            entity.Property(e => e.Edita).HasColumnName("edita");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsHijo).HasColumnName("esHijo");
            entity.Property(e => e.EsSalida).HasColumnName("esSalida");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<GenAccionNotificacion>(entity =>
        {
            entity.ToTable("gen_accionNotificacion");

            entity.HasIndex(e => e.Eid, "IX_gen_accionNotificacion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AccionNotificacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("accionNotificacion");
            entity.Property(e => e.AccionNotificacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("accionNotificacion_codigo");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdPuntoIntegracion).HasColumnName("id_puntoIntegracion");
            entity.Property(e => e.IdTipoNotificacion).HasColumnName("id_tipoNotificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdPuntoIntegracionNavigation).WithMany(p => p.GenAccionNotificacions)
                .HasForeignKey(d => d.IdPuntoIntegracion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gen_accionNotificacion_id_puntoIntegracion");

            entity.HasOne(d => d.IdTipoNotificacionNavigation).WithMany(p => p.GenAccionNotificacions)
                .HasForeignKey(d => d.IdTipoNotificacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gen_accionNotificacion_id_tipoNotificacion");
        });

        modelBuilder.Entity<GenArchivo>(entity =>
        {
            entity.ToTable("gen_archivo");

            entity.HasIndex(e => e.Eid, "IX_gen_archivo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Archivo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("archivo");
            entity.Property(e => e.ArchivoBinario)
                .HasColumnType("image")
                .HasColumnName("archivoBinario");
            entity.Property(e => e.ArchivoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("archivo_codigo");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("descripcion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsPrincipal)
                .HasDefaultValue(false)
                .HasColumnName("esPrincipal");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdObjeto).HasColumnName("idObjeto");
            entity.Property(e => e.IdTipoArchivo).HasColumnName("id_tipoArchivo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Link)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("link");
            entity.Property(e => e.Tabla)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("tabla");
            entity.Property(e => e.Tamano).HasColumnName("tamano");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<GenBodega>(entity =>
        {
            entity.ToTable("gen_bodega");

            entity.HasIndex(e => e.Eid, "IX_gen_bodega");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Bodega)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("bodega");
            entity.Property(e => e.BodegaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("bodega_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.SalidasEnRojo)
                .HasDefaultValue(true)
                .HasColumnName("salidasEnRojo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.UsaLocalizacion).HasColumnName("usaLocalizacion");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.GenBodegas)
                .HasForeignKey(d => d.IdSucursal)
                .HasConstraintName("FK_gen_bodega_id_sucursal");
        });

        modelBuilder.Entity<GenBodegaUsuario>(entity =>
        {
            entity.ToTable("gen_bodega_usuario");

            entity.HasIndex(e => e.Eid, "IX_gen_bodega_usuario");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.BodegaUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("bodega_usuario");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdBodega).HasColumnName("id_bodega");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Sugerir).HasColumnName("sugerir");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdBodegaNavigation).WithMany(p => p.GenBodegaUsuarios)
                .HasForeignKey(d => d.IdBodega)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gen_bodega_usuario_id_bodega");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.GenBodegaUsuarios)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gen_bodega_usuario_id_usuario");
        });

        modelBuilder.Entity<GenConfig>(entity =>
        {
            entity.ToTable("gen_config");

            entity.HasIndex(e => e.Eid, "IX_gen_config");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Config)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("config");
            entity.Property(e => e.ConfigCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("config_codigo");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("descripcion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdObjeto).HasColumnName("idObjeto");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Modulo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("modulo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<GenConfiguracionAtributo>(entity =>
        {
            entity.ToTable("gen_configuracionAtributos");

            entity.HasIndex(e => e.Eid, "IX_gen_configuracionAtributos");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.ConfiguracionAtributos)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("configuracionAtributos");
            entity.Property(e => e.ConfiguracionAtributosCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("configuracionAtributos_codigo");
            entity.Property(e => e.Defecto)
                .HasMaxLength(200)
                .HasDefaultValue("")
                .HasColumnName("defecto");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsObligatorio).HasColumnName("esObligatorio");
            entity.Property(e => e.EsResaltado).HasColumnName("esResaltado");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdAtributo).HasColumnName("id_atributo");
            entity.Property(e => e.IdFormulario).HasColumnName("id_formulario");
            entity.Property(e => e.IdTablaRelacion).HasColumnName("id_tabla_relacion");
            entity.Property(e => e.IdTablaResultado).HasColumnName("id_tabla_resultado");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdAtributoNavigation).WithMany(p => p.GenConfiguracionAtributos)
                .HasForeignKey(d => d.IdAtributo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gen_configuracionAtributos_id_atributo");

            entity.HasOne(d => d.IdFormularioNavigation).WithMany(p => p.GenConfiguracionAtributos)
                .HasForeignKey(d => d.IdFormulario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gen_configuracionAtributos_id_formulario");

            entity.HasOne(d => d.IdTablaRelacionNavigation).WithMany(p => p.GenConfiguracionAtributoIdTablaRelacionNavigations)
                .HasForeignKey(d => d.IdTablaRelacion)
                .HasConstraintName("FK_gen_configuracionAtributos_id_tabla_relacion");

            entity.HasOne(d => d.IdTablaResultadoNavigation).WithMany(p => p.GenConfiguracionAtributoIdTablaResultadoNavigations)
                .HasForeignKey(d => d.IdTablaResultado)
                .HasConstraintName("FK_gen_configuracionAtributos_id_tabla_resultado");
        });

        modelBuilder.Entity<GenConfiguracionServicio>(entity =>
        {
            entity.ToTable("gen_configuracionServicio");

            entity.HasIndex(e => e.Eid, "IX_gen_configuracionServicio");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.ConfiguracionServicio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("configuracionServicio");
            entity.Property(e => e.ConfiguracionServicioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("configuracionServicio_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogo)
                .HasDefaultValue(0)
                .HasColumnName("id_catalogo");
            entity.Property(e => e.IdTercero)
                .HasDefaultValue(0)
                .HasColumnName("id_tercero");
            entity.Property(e => e.IdTipoServicio)
                .HasDefaultValue(0)
                .HasColumnName("id_tipoServicio");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCatalogoNavigation).WithMany(p => p.GenConfiguracionServicios)
                .HasForeignKey(d => d.IdCatalogo)
                .HasConstraintName("FK__gen_confi__id_ca__7A16210A");

            entity.HasOne(d => d.IdTerceroNavigation).WithMany(p => p.GenConfiguracionServicios)
                .HasForeignKey(d => d.IdTercero)
                .HasConstraintName("FK__gen_confi__id_te__76459026");

            entity.HasOne(d => d.IdTipoServicioNavigation).WithMany(p => p.GenConfiguracionServicios)
                .HasForeignKey(d => d.IdTipoServicio)
                .HasConstraintName("FK__gen_confi__id_ti__782DD898");
        });

        modelBuilder.Entity<GenDetalleFormulario>(entity =>
        {
            entity.ToTable("gen_detalleFormulario");

            entity.HasIndex(e => e.Eid, "IX_gen_detalleFormulario");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Defecto)
                .HasMaxLength(200)
                .HasDefaultValue("")
                .HasColumnName("defecto");
            entity.Property(e => e.DetalleFormulario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("detalleFormulario");
            entity.Property(e => e.DetalleFormularioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("detalleFormulario_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsObligatorio).HasColumnName("esObligatorio");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdColumna).HasColumnName("id_columna");
            entity.Property(e => e.IdFormulario).HasColumnName("id_formulario");
            entity.Property(e => e.IdTipoDato).HasColumnName("id_tipoDato");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdColumnaNavigation).WithMany(p => p.GenDetalleFormularios)
                .HasForeignKey(d => d.IdColumna)
                .HasConstraintName("FK_gen_detalleFormulario_id_columna");

            entity.HasOne(d => d.IdFormularioNavigation).WithMany(p => p.GenDetalleFormularios)
                .HasForeignKey(d => d.IdFormulario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gen_detalleFormulario_id_formulario");

            entity.HasOne(d => d.IdTipoDatoNavigation).WithMany(p => p.GenDetalleFormularios)
                .HasForeignKey(d => d.IdTipoDato)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gen_detalleFormulario_id_tipoDato");
        });

        modelBuilder.Entity<GenDetalleRegistroEnvio>(entity =>
        {
            entity.ToTable("gen_detalleRegistroEnvio");

            entity.HasIndex(e => e.Eid, "IX_gen_detalleRegistroEnvio");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DetalleRegistroEnvio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("detalleRegistroEnvio");
            entity.Property(e => e.DetalleRegistroEnvioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("detalleRegistroEnvio_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Email)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("email");
            entity.Property(e => e.Enviado).HasColumnName("enviado");
            entity.Property(e => e.Enviar).HasColumnName("enviar");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdObjeto).HasColumnName("idObjeto");
            entity.Property(e => e.IdRegistroEnvio).HasColumnName("id_registroEnvio");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdRegistroEnvioNavigation).WithMany(p => p.GenDetalleRegistroEnvios)
                .HasForeignKey(d => d.IdRegistroEnvio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__gen_detal__id_re__5FD660C3");
        });

        modelBuilder.Entity<GenDiaFestivo>(entity =>
        {
            entity.ToTable("gen_diaFestivo");

            entity.HasIndex(e => e.Eid, "IX_gen_diaFestivo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DiaFestivo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("diaFestivo");
            entity.Property(e => e.DiaFestivoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("diaFestivo_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<GenEmpresa>(entity =>
        {
            entity.ToTable("gen_empresa");

            entity.HasIndex(e => e.Eid, "IX_gen_empresa");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Codigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("codigo");
            entity.Property(e => e.CostoAdministrativoMes)
                .HasColumnType("money")
                .HasColumnName("costoAdministrativoMes");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Empresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("empresa");
            entity.Property(e => e.EmpresaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("empresa_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdEmpresa).HasColumnName("id_empresa");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdEmpresaNavigation).WithMany(p => p.InverseIdEmpresaNavigation)
                .HasForeignKey(d => d.IdEmpresa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gen_empresa_id_empresa");
        });

        modelBuilder.Entity<GenEnvioCorreo>(entity =>
        {
            entity.ToTable("gen_envioCorreo");

            entity.HasIndex(e => e.Eid, "IX_gen_envioCorreo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.AdjuntarArchivo).HasColumnName("adjuntarArchivo");
            entity.Property(e => e.CantidadMensajes).HasColumnName("cantidadMensajes");
            entity.Property(e => e.CantidadReintento).HasColumnName("cantidadReintento");
            entity.Property(e => e.CorreoAdicional)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("correoAdicional");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EnvioCorreo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("envioCorreo");
            entity.Property(e => e.EnvioCorreoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("envioCorreo_codigo");
            entity.Property(e => e.Estrategia)
                .HasDefaultValue(1)
                .HasColumnName("estrategia");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdEstadoTipoDocumento).HasColumnName("id_estadoTipoDocumento");
            entity.Property(e => e.IdRemitenteCorreo).HasColumnName("id_remitenteCorreo");
            entity.Property(e => e.IdReporte).HasColumnName("id_reporte");
            entity.Property(e => e.IdSubtipoDocumento).HasColumnName("id_subtipoDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PlantillaAdjunto)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("plantillaAdjunto");
            entity.Property(e => e.Tabla)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("tabla");
            entity.Property(e => e.TiempoPorMensajes).HasColumnName("tiempo_por_mensajes");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdEstadoTipoDocumentoNavigation).WithMany(p => p.GenEnvioCorreos)
                .HasForeignKey(d => d.IdEstadoTipoDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gen_envioCorreo_id_estadoTipoDocumento");

            entity.HasOne(d => d.IdRemitenteCorreoNavigation).WithMany(p => p.GenEnvioCorreos)
                .HasForeignKey(d => d.IdRemitenteCorreo)
                .HasConstraintName("FK__gen_envio__id_re__3D42E84B");

            entity.HasOne(d => d.IdReporteNavigation).WithMany(p => p.GenEnvioCorreos)
                .HasForeignKey(d => d.IdReporte)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gen_envioCorreo_id_reporte");

            entity.HasOne(d => d.IdSubtipoDocumentoNavigation).WithMany(p => p.GenEnvioCorreos)
                .HasForeignKey(d => d.IdSubtipoDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gen_envioCorreo_id_subtipoDocumento");
        });

        modelBuilder.Entity<GenFamilium>(entity =>
        {
            entity.ToTable("gen_familia");

            entity.HasIndex(e => e.Eid, "IX_gen_familia");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Familia)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("familia");
            entity.Property(e => e.FamiliaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("familia_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdFamilia).HasColumnName("id_familia");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdFamiliaNavigation).WithMany(p => p.InverseIdFamiliaNavigation)
                .HasForeignKey(d => d.IdFamilia)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gen_familia_id_familia");
        });

        modelBuilder.Entity<GenFirma>(entity =>
        {
            entity.ToTable("gen_firma");

            entity.HasIndex(e => e.Eid, "IX_gen_firma");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Archivobinario)
                .HasColumnType("image")
                .HasColumnName("archivobinario");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_fh");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Firma)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("firma");
            entity.Property(e => e.FirmaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("firma_codigo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Idobjeto).HasColumnName("idobjeto");
            entity.Property(e => e.Tabla)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("tabla");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<GenFirmaContacto>(entity =>
        {
            entity.ToTable("gen_firmaContacto");

            entity.HasIndex(e => e.Eid, "IX_gen_firmaContacto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Archivobinario)
                .HasColumnType("image")
                .HasColumnName("archivobinario");
            entity.Property(e => e.Codigoacceso)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("codigoacceso");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_fh");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FirmaContacto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("firmaContacto");
            entity.Property(e => e.FirmaContactoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("firmaContacto_codigo");
            entity.Property(e => e.IdContacto).HasColumnName("id_contacto");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<GenFormulario>(entity =>
        {
            entity.ToTable("gen_formulario");

            entity.HasIndex(e => e.Eid, "IX_gen_formulario");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Duplicar).HasColumnName("duplicar");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EliminarIntermedias).HasColumnName("eliminarIntermedias");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Formulario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("formulario");
            entity.Property(e => e.FormularioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("formulario_codigo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<GenImpuesto>(entity =>
        {
            entity.ToTable("gen_impuesto");

            entity.HasIndex(e => e.Eid, "IX_gen_impuesto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Impuesto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("impuesto");
            entity.Property(e => e.ImpuestoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("impuesto_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor).HasColumnName("valor");
        });

        modelBuilder.Entity<GenLocalizacion>(entity =>
        {
            entity.ToTable("gen_localizacion");

            entity.HasIndex(e => e.Eid, "IX_gen_localizacion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Existencia).HasColumnName("existencia");
            entity.Property(e => e.ExistenciaMaxima).HasColumnName("existenciaMaxima");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogoBodega).HasColumnName("id_catalogo_bodega");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Localizacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("localizacion");
            entity.Property(e => e.LocalizacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("localizacion_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<GenLocalizacionItemDocumento>(entity =>
        {
            entity.ToTable("gen_localizacion_itemDocumento");

            entity.HasIndex(e => e.Eid, "IX_gen_localizacion_itemDocumento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdItemDocumento).HasColumnName("id_itemDocumento");
            entity.Property(e => e.IdLocalizacion).HasColumnName("id_localizacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.LocalizacionItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("localizacion_itemDocumento");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<GenMonedum>(entity =>
        {
            entity.ToTable("gen_moneda");

            entity.HasIndex(e => e.Eid, "IX_gen_moneda");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Abreviatura)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("abreviatura");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Cambio).HasColumnName("cambio");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Moneda)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("moneda");
            entity.Property(e => e.MonedaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("moneda_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<GenNotificacion>(entity =>
        {
            entity.ToTable("gen_notificacion");

            entity.HasIndex(e => e.Eid, "IX_gen_notificacion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Datos)
                .HasDefaultValue("")
                .HasColumnName("datos");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdTipoNotificacion).HasColumnName("id_tipoNotificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioDestino).HasColumnName("id_usuario_destino");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdUsuarioOrigen).HasColumnName("id_usuario_origen");
            entity.Property(e => e.Notificacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("notificacion");
            entity.Property(e => e.NotificacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("notificacion_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdTipoNotificacionNavigation).WithMany(p => p.GenNotificacions)
                .HasForeignKey(d => d.IdTipoNotificacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gen_notificacion_id_tipoNotificacion");

            entity.HasOne(d => d.IdUsuarioDestinoNavigation).WithMany(p => p.GenNotificacionIdUsuarioDestinoNavigations)
                .HasForeignKey(d => d.IdUsuarioDestino)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gen_notificacion_id_usuario_destino");

            entity.HasOne(d => d.IdUsuarioOrigenNavigation).WithMany(p => p.GenNotificacionIdUsuarioOrigenNavigations)
                .HasForeignKey(d => d.IdUsuarioOrigen)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gen_notificacion_id_usuario_origen");
        });

        modelBuilder.Entity<GenPresupuestoEmpresa>(entity =>
        {
            entity.ToTable("gen_presupuestoEmpresa");

            entity.HasIndex(e => e.Eid, "IX_gen_presupuestoEmpresa");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFinFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFin_ff");
            entity.Property(e => e.FechaInicioFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicio_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdEmpresa).HasColumnName("id_empresa");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PresupuestoEmpresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("presupuestoEmpresa");
            entity.Property(e => e.PresupuestoEmpresaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("presupuestoEmpresa_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor).HasColumnType("money");

            entity.HasOne(d => d.IdEmpresaNavigation).WithMany(p => p.GenPresupuestoEmpresas)
                .HasForeignKey(d => d.IdEmpresa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gen_presupuestoEmpresa_id_empresa");
        });

        modelBuilder.Entity<GenRegistroEnvio>(entity =>
        {
            entity.ToTable("gen_registroEnvio");

            entity.HasIndex(e => e.Eid, "IX_gen_registroEnvio");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdEnvioCorreo).HasColumnName("id_envioCorreo");
            entity.Property(e => e.IdRegistroEnvio).HasColumnName("id_registroEnvio");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.RegistroEnvio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("registroEnvio");
            entity.Property(e => e.RegistroEnvioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("registroEnvio_codigo");
            entity.Property(e => e.Reintentar).HasColumnName("reintentar");
            entity.Property(e => e.Tabla)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("tabla");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdEnvioCorreoNavigation).WithMany(p => p.GenRegistroEnvios)
                .HasForeignKey(d => d.IdEnvioCorreo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__gen_regis__id_en__58353EFB");

            entity.HasOne(d => d.IdRegistroEnvioNavigation).WithMany(p => p.InverseIdRegistroEnvioNavigation)
                .HasForeignKey(d => d.IdRegistroEnvio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__gen_regis__id_re__5A1D876D");
        });

        modelBuilder.Entity<GenRemitenteCorreo>(entity =>
        {
            entity.ToTable("gen_remitenteCorreo");

            entity.HasIndex(e => e.Eid, "IX_gen_remitenteCorreo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.ArchivoCertificado)
                .HasMaxLength(800)
                .IsUnicode(false)
                .HasColumnName("archivoCertificado");
            entity.Property(e => e.Certificado).HasColumnName("certificado");
            entity.Property(e => e.Credenciales)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("credenciales");
            entity.Property(e => e.CuentaCertificado)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("cuentaCertificado");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsGsuite).HasColumnName("esGSuite");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Puerto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("puerto");
            entity.Property(e => e.RemitenteCorreo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("remitenteCorreo");
            entity.Property(e => e.RemitenteCorreoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("remitenteCorreo_codigo");
            entity.Property(e => e.Servidor)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("servidor");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<GenTipoArchivo>(entity =>
        {
            entity.ToTable("gen_tipoArchivo");

            entity.HasIndex(e => e.Eid, "IX_gen_tipoArchivo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TipoArchivo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoArchivo");
            entity.Property(e => e.TipoArchivoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoArchivo_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<GenTipoDato>(entity =>
        {
            entity.ToTable("gen_tipoDato");

            entity.HasIndex(e => e.Eid, "IX_gen_tipoDato");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TipoDato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoDato");
            entity.Property(e => e.TipoDatoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoDato_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<GenTipoNotificacion>(entity =>
        {
            entity.ToTable("gen_tipoNotificacion");

            entity.HasIndex(e => e.Eid, "IX_gen_tipoNotificacion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TipoNotificacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoNotificacion");
            entity.Property(e => e.TipoNotificacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoNotificacion_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<GenTipoServicio>(entity =>
        {
            entity.ToTable("gen_tipoServicio");

            entity.HasIndex(e => e.Eid, "IX_gen_tipoServicio");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DiasGarantia).HasColumnName("diasGarantia");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TieneGarantia).HasColumnName("tieneGarantia");
            entity.Property(e => e.TipoServicio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoServicio");
            entity.Property(e => e.TipoServicioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoServicio_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<GenUnidad>(entity =>
        {
            entity.ToTable("gen_unidad");

            entity.HasIndex(e => e.Eid, "IX_gen_unidad");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Unidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("unidad");
            entity.Property(e => e.UnidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("unidad_codigo");
        });

        modelBuilder.Entity<GenZona>(entity =>
        {
            entity.ToTable("gen_zona");

            entity.HasIndex(e => e.Eid, "IX_gen_zona");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CodigoExterno)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("codigoExterno");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdZona).HasColumnName("id_zona");
            entity.Property(e => e.Nivel).HasColumnName("nivel");
            entity.Property(e => e.TiempoDesplazamiento).HasColumnName("tiempoDesplazamiento");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Zona)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("zona");
            entity.Property(e => e.ZonaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("zona_codigo");

            entity.HasOne(d => d.IdZonaNavigation).WithMany(p => p.InverseIdZonaNavigation)
                .HasForeignKey(d => d.IdZona)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gen_zona_id_zona");
        });

        modelBuilder.Entity<GeoUbicacion>(entity =>
        {
            entity.ToTable("geo_ubicacion");

            entity.HasIndex(e => e.Eid, "IX_geo_ubicacion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_fh");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdObjeto)
                .HasDefaultValue(0)
                .HasColumnName("idObjeto");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Latitud)
                .HasDefaultValue(0.0)
                .HasColumnName("latitud");
            entity.Property(e => e.Longitud)
                .HasDefaultValue(0.0)
                .HasColumnName("longitud");
            entity.Property(e => e.Tabla)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("tabla");
            entity.Property(e => e.Ubicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ubicacion");
            entity.Property(e => e.UbicacionCodigo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ubicacion_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<GuiAplicacion>(entity =>
        {
            entity.ToTable("gui_aplicacion");

            entity.HasIndex(e => e.Eid, "IX_gui_aplicacion");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Aplicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("aplicacion");
            entity.Property(e => e.AplicacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("aplicacion_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<GuiAyudum>(entity =>
        {
            entity.ToTable("gui_ayuda");

            entity.HasIndex(e => e.Eid, "IX_gui_ayuda");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Ayuda)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ayuda");
            entity.Property(e => e.AyudaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ayuda_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdAyuda).HasColumnName("id_ayuda");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdAyudaNavigation).WithMany(p => p.InverseIdAyudaNavigation)
                .HasForeignKey(d => d.IdAyuda)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gui_ayuda_id_ayuda");
        });

        modelBuilder.Entity<GuiBloqueHome>(entity =>
        {
            entity.ToTable("gui_bloqueHome");

            entity.HasIndex(e => e.Eid, "IX_gui_bloqueHome");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Actualizacion)
                .HasDefaultValue(false)
                .HasColumnName("actualizacion");
            entity.Property(e => e.BloqueHome)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("bloqueHome");
            entity.Property(e => e.BloqueHomeCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("bloqueHome_codigo");
            entity.Property(e => e.ColorModulo)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("colorModulo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsGenerico)
                .HasDefaultValue(true)
                .HasColumnName("esGenerico");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Filtro)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("filtro");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.NombreControl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("nombreControl");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.UrlBusqueda)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("urlBusqueda");
            entity.Property(e => e.UrlNuevo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("urlNuevo");
        });

        modelBuilder.Entity<GuiCampoTexto>(entity =>
        {
            entity.ToTable("gui_campoTexto");

            entity.HasIndex(e => e.Eid, "IX_gui_campoTexto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CampoTexto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("campoTexto");
            entity.Property(e => e.CampoTextoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("campoTexto_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsHtml).HasColumnName("esHTML");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdFuncionalidad).HasColumnName("id_funcionalidad");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdFuncionalidadNavigation).WithMany(p => p.GuiCampoTextos)
                .HasForeignKey(d => d.IdFuncionalidad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gui_campoTexto_id_funcionalidad");
        });

        modelBuilder.Entity<GuiDetalleBloqueHome>(entity =>
        {
            entity.ToTable("gui_detalleBloqueHome");

            entity.HasIndex(e => e.Eid, "IX_gui_detalleBloqueHome");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DetalleBloqueHome)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("detalleBloqueHome");
            entity.Property(e => e.DetalleBloqueHomeCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("detalleBloqueHome_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EstrategiaFecha)
                .HasDefaultValue(0)
                .HasColumnName("estrategiaFecha");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdBloqueHome).HasColumnName("id_bloqueHome");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.ItemsTab)
                .HasDefaultValue(0)
                .HasColumnName("itemsTab");
            entity.Property(e => e.Orden)
                .HasDefaultValue(0)
                .HasColumnName("orden");
            entity.Property(e => e.OrdenResultados).HasColumnName("ordenResultados");
            entity.Property(e => e.PosicionTab)
                .HasDefaultValue(0)
                .HasColumnName("posicionTab");
            entity.Property(e => e.TipoBloqueHome)
                .HasDefaultValue(0)
                .HasColumnName("tipoBloqueHome");
            entity.Property(e => e.TipoCampo)
                .HasDefaultValue(0)
                .HasColumnName("tipoCampo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdBloqueHomeNavigation).WithMany(p => p.GuiDetalleBloqueHomes)
                .HasForeignKey(d => d.IdBloqueHome)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gui_detalleBloqueHome_id_bloqueHome");
        });

        modelBuilder.Entity<GuiFuncionalidad>(entity =>
        {
            entity.ToTable("gui_funcionalidad");

            entity.HasIndex(e => e.Eid, "IX_gui_funcionalidad");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsMenu).HasColumnName("esMenu");
            entity.Property(e => e.EsMvc)
                .HasDefaultValue(false)
                .HasColumnName("esMvc");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Funcionalidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("funcionalidad");
            entity.Property(e => e.FuncionalidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("funcionalidad_codigo");
            entity.Property(e => e.IdAplicacion).HasColumnName("id_aplicacion");
            entity.Property(e => e.IdFuncionalidad).HasColumnName("id_funcionalidad");
            entity.Property(e => e.IdTipoFuncionalidad).HasColumnName("id_tipoFuncionalidad");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.NombreComando)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombreComando");
            entity.Property(e => e.NombreControl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombreControl");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.TargetUrl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("targetUrl");
            entity.Property(e => e.ToolTip)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("toolTip");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Url)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("url");
            entity.Property(e => e.UrlFormulario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("urlFormulario");
            entity.Property(e => e.UrlImagen)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("urlImagen");

            entity.HasOne(d => d.IdAplicacionNavigation).WithMany(p => p.GuiFuncionalidads)
                .HasForeignKey(d => d.IdAplicacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__gui_funci__id_ap__56639BD0");

            entity.HasOne(d => d.IdFuncionalidadNavigation).WithMany(p => p.InverseIdFuncionalidadNavigation)
                .HasForeignKey(d => d.IdFuncionalidad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gui_funcionalidad_id_funcionalidad");

            entity.HasOne(d => d.IdTipoFuncionalidadNavigation).WithMany(p => p.GuiFuncionalidads)
                .HasForeignKey(d => d.IdTipoFuncionalidad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gui_funcionalidad_id_tipoFuncionalidad");
        });

        modelBuilder.Entity<GuiTextoDefecto>(entity =>
        {
            entity.ToTable("gui_textoDefecto");

            entity.HasIndex(e => e.Eid, "IX_gui_textoDefecto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCampoTexto).HasColumnName("id_campoTexto");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Texto)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasDefaultValue("");
            entity.Property(e => e.TextoDefecto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("textoDefecto");
            entity.Property(e => e.TextoDefectoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("textoDefecto_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCampoTextoNavigation).WithMany(p => p.GuiTextoDefectos)
                .HasForeignKey(d => d.IdCampoTexto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_gui_textoDefecto_id_campoTexto");
        });

        modelBuilder.Entity<GuiTipoFuncionalidad>(entity =>
        {
            entity.ToTable("gui_tipoFuncionalidad");

            entity.HasIndex(e => e.Eid, "IX_gui_tipoFuncionalidad");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TipoFuncionalidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoFuncionalidad");
            entity.Property(e => e.TipoFuncionalidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoFuncionalidad_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<Idae>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("_idae");

            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.K)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("k");
            entity.Property(e => e.V)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("v");
        });

        modelBuilder.Entity<LicCatalogoParametro>(entity =>
        {
            entity.ToTable("lic_catalogo_parametro");

            entity.HasIndex(e => e.Eid, "IX_lic_catalogo_parametro");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CatalogoParametro)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo_parametro");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdParametro).HasColumnName("id_parametro");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorXdefecto)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("valorXdefecto");

            entity.HasOne(d => d.IdCatalogoNavigation).WithMany(p => p.LicCatalogoParametros)
                .HasForeignKey(d => d.IdCatalogo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_lic_catalogo_parametro_id_catalogo");

            entity.HasOne(d => d.IdParametroNavigation).WithMany(p => p.LicCatalogoParametros)
                .HasForeignKey(d => d.IdParametro)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_lic_catalogo_parametro_id_parametro");
        });

        modelBuilder.Entity<LicLicenciaParametro>(entity =>
        {
            entity.ToTable("lic_licencia_parametro");

            entity.HasIndex(e => e.Eid, "IX_lic_licencia_parametro");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsParteSerial).HasColumnName("esParteSerial");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdLicencia).HasColumnName("id_licencia");
            entity.Property(e => e.IdParametro).HasColumnName("id_parametro");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.LicenciaParametro)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("licencia_parametro");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("valor");

            entity.HasOne(d => d.IdLicenciaNavigation).WithMany(p => p.LicLicenciaParametros)
                .HasForeignKey(d => d.IdLicencia)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_lic_licencia_parametro_id_licencia");

            entity.HasOne(d => d.IdParametroNavigation).WithMany(p => p.LicLicenciaParametros)
                .HasForeignKey(d => d.IdParametro)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_lic_licencia_parametro_id_parametro");
        });

        modelBuilder.Entity<LicLicencium>(entity =>
        {
            entity.ToTable("lic_licencia");

            entity.HasIndex(e => e.Eid, "IX_lic_licencia");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Clave)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("clave");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFinFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFin_ff");
            entity.Property(e => e.FechaInicioFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicio_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Licencia)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("licencia");
            entity.Property(e => e.LicenciaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("licencia_codigo");
            entity.Property(e => e.Serial)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("serial");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCatalogoNavigation).WithMany(p => p.LicLicencia)
                .HasForeignKey(d => d.IdCatalogo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_lic_licencia_id_catalogo");

            entity.HasOne(d => d.IdTerceroNavigation).WithMany(p => p.LicLicencia)
                .HasForeignKey(d => d.IdTercero)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_lic_licencia_id_tercero");
        });

        modelBuilder.Entity<LicParametro>(entity =>
        {
            entity.ToTable("lic_parametro");

            entity.HasIndex(e => e.Eid, "IX_lic_parametro");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("descripcion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Parametro)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("parametro");
            entity.Property(e => e.ParametroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("parametro_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<OrtCanalAtencion>(entity =>
        {
            entity.ToTable("ort_canalAtencion");

            entity.HasIndex(e => e.Eid, "IX_ort_canalAtencion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CanalAtencion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("canalAtencion");
            entity.Property(e => e.CanalAtencionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("canalAtencion_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<OrtDepartamentoSolicitud>(entity =>
        {
            entity.ToTable("ort_departamentoSolicitud");

            entity.HasIndex(e => e.Eid, "IX_ort_departamentoSolicitud");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.DepartamentoSolicitud)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("departamentoSolicitud");
            entity.Property(e => e.DepartamentoSolicitudCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("departamentoSolicitud_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.RecibeSolicitudes)
                .HasDefaultValue(true)
                .HasColumnName("recibeSolicitudes");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<OrtMotivoCancelacion>(entity =>
        {
            entity.ToTable("ort_motivoCancelacion");

            entity.HasIndex(e => e.Eid, "IX_ort_motivoCancelacion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MotivoCancelacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("motivoCancelacion");
            entity.Property(e => e.MotivoCancelacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("motivoCancelacion_codigo");
            entity.Property(e => e.ResponsableServicio).HasColumnName("responsableServicio");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<OrtProgramacion>(entity =>
        {
            entity.ToTable("ort_programacion");

            entity.HasIndex(e => e.IdDocumentoOt, "IX_id_documento_ot");

            entity.HasIndex(e => e.IdReporteTecnico, "IX_id_reporteTecnico");

            entity.HasIndex(e => e.IdUsuario, "IX_id_usuario");

            entity.HasIndex(e => e.Eid, "IX_ort_programacion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Comentario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("comentario");
            entity.Property(e => e.Costo).HasColumnName("costo");
            entity.Property(e => e.DesdeFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("desde_fh");
            entity.Property(e => e.Duracion).HasColumnName("duracion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogoActividad).HasColumnName("id_catalogo.actividad");
            entity.Property(e => e.IdDocumentoOt).HasColumnName("id_documento.ot");
            entity.Property(e => e.IdMotivoCancelacion).HasColumnName("id_motivoCancelacion");
            entity.Property(e => e.IdProgramacion).HasColumnName("id_programacion");
            entity.Property(e => e.IdReporteTecnico).HasColumnName("id_reporteTecnico");
            entity.Property(e => e.IdSoporteItemDocumento).HasColumnName("id_soporteItemDocumento");
            entity.Property(e => e.IdTipoProgramacion).HasColumnName("id_tipoProgramacion");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Programacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("programacion");
            entity.Property(e => e.ProgramacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("programacion_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCatalogoActividadNavigation).WithMany(p => p.OrtProgramacions)
                .HasForeignKey(d => d.IdCatalogoActividad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ort_programacion_id_catalogo_actividad");

            entity.HasOne(d => d.IdDocumentoOtNavigation).WithMany(p => p.OrtProgramacions)
                .HasForeignKey(d => d.IdDocumentoOt)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ort_programacion_id_documento_ot");

            entity.HasOne(d => d.IdMotivoCancelacionNavigation).WithMany(p => p.OrtProgramacions)
                .HasForeignKey(d => d.IdMotivoCancelacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ort_programacion_id_motivoCancelacion");

            entity.HasOne(d => d.IdProgramacionNavigation).WithMany(p => p.InverseIdProgramacionNavigation)
                .HasForeignKey(d => d.IdProgramacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ort_programacion_id_programacion");

            entity.HasOne(d => d.IdReporteTecnicoNavigation).WithMany(p => p.OrtProgramacions)
                .HasForeignKey(d => d.IdReporteTecnico)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ort_programacion_id_reporteTecnico");

            entity.HasOne(d => d.IdSoporteItemDocumentoNavigation).WithMany(p => p.OrtProgramacions)
                .HasForeignKey(d => d.IdSoporteItemDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ort_programacion_id_soporteItemDocumento");

            entity.HasOne(d => d.IdTipoProgramacionNavigation).WithMany(p => p.OrtProgramacions)
                .HasForeignKey(d => d.IdTipoProgramacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ort_programacion_id_tipoProgramacion");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.OrtProgramacions)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ort_programacion_id_usuario");
        });

        modelBuilder.Entity<OrtReporteTecnico>(entity =>
        {
            entity.ToTable("ort_reporteTecnico");

            entity.HasIndex(e => e.Eid, "IX_ort_reporteTecnico");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Compromisos)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("compromisos");
            entity.Property(e => e.Diagnostico)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("diagnostico");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCanalAtencion)
                .HasDefaultValue(0)
                .HasColumnName("id_canalAtencion");
            entity.Property(e => e.IdDocumentoGasto).HasColumnName("id_documento.gasto");
            entity.Property(e => e.IdGasto).HasColumnName("id_gasto");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Numero)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("numero");
            entity.Property(e => e.Recomendaciones)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("recomendaciones");
            entity.Property(e => e.ReporteTecnico)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("reporteTecnico");
            entity.Property(e => e.ReporteTecnicoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("reporteTecnico_codigo");
            entity.Property(e => e.Trabajos)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("trabajos");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCanalAtencionNavigation).WithMany(p => p.OrtReporteTecnicos)
                .HasForeignKey(d => d.IdCanalAtencion)
                .HasConstraintName("FK__ort_repor__id_ca__5C10BCD7");

            entity.HasOne(d => d.IdDocumentoGastoNavigation).WithMany(p => p.OrtReporteTecnicos)
                .HasForeignKey(d => d.IdDocumentoGasto)
                .HasConstraintName("FK_ort_reporteTecnico_doc_documento_gasto");

            entity.HasOne(d => d.IdGastoNavigation).WithMany(p => p.OrtReporteTecnicos)
                .HasForeignKey(d => d.IdGasto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ort_reporteTecnico_id_gasto");
        });

        modelBuilder.Entity<OrtReporteTecnicoFalla>(entity =>
        {
            entity.ToTable("ort_reporteTecnico_falla");

            entity.HasIndex(e => e.Eid, "IX_ort_reporteTecnico_falla");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdFalla).HasColumnName("id_falla");
            entity.Property(e => e.IdFallaCausa).HasColumnName("id_falla_causa");
            entity.Property(e => e.IdFallaEfecto).HasColumnName("id_falla_efecto");
            entity.Property(e => e.IdReporteTecnico).HasColumnName("id_reporteTecnico");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.ReporteTecnicoFalla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("reporteTecnico_falla");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdFallaNavigation).WithMany(p => p.OrtReporteTecnicoFallaIdFallaNavigations)
                .HasForeignKey(d => d.IdFalla)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ort_reporteTecnico_falla_id_falla");

            entity.HasOne(d => d.IdFallaCausaNavigation).WithMany(p => p.OrtReporteTecnicoFallaIdFallaCausaNavigations)
                .HasForeignKey(d => d.IdFallaCausa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ort_repor__id_fa__75274EBB");

            entity.HasOne(d => d.IdFallaEfectoNavigation).WithMany(p => p.OrtReporteTecnicoFallaIdFallaEfectoNavigations)
                .HasForeignKey(d => d.IdFallaEfecto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ort_repor__id_fa__770F972D");

            entity.HasOne(d => d.IdReporteTecnicoNavigation).WithMany(p => p.OrtReporteTecnicoFallas)
                .HasForeignKey(d => d.IdReporteTecnico)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ort_reporteTecnico_falla_id_reporteTecnico");
        });

        modelBuilder.Entity<OrtReporteTecnicoOt>(entity =>
        {
            entity.ToTable("ort_reporteTecnico_ot");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdDocumentoOt).HasColumnName("id_documento.ot");
            entity.Property(e => e.IdReporteTecnico).HasColumnName("id_reporteTecnico");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .HasColumnName("observaciones");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<OrtTipoProgramacion>(entity =>
        {
            entity.ToTable("ort_tipoProgramacion");

            entity.HasIndex(e => e.Eid, "IX_ort_tipoProgramacion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TipoProgramacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoProgramacion");
            entity.Property(e => e.TipoProgramacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoProgramacion_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<OrtVale>(entity =>
        {
            entity.ToTable("ort_vale");

            entity.HasIndex(e => e.Eid, "IX_ort_vale");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdDocumentoOt).HasColumnName("id_documento.ot");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Vale)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("vale");
            entity.Property(e => e.ValeCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("vale_codigo");

            entity.HasOne(d => d.IdDocumentoOtNavigation).WithMany(p => p.OrtVales)
                .HasForeignKey(d => d.IdDocumentoOt)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ort_vale_id_documento_ot");
        });

        modelBuilder.Entity<ProActividad>(entity =>
        {
            entity.ToTable("pro_actividad");

            entity.HasIndex(e => e.Eid, "IX_pro_actividad");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Actividad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("actividad");
            entity.Property(e => e.ActividadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("actividad_codigo");
            entity.Property(e => e.DescripcionDetallada)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasDefaultValueSql("((0))")
                .HasColumnName("descripcionDetallada");
            entity.Property(e => e.Duracion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValueSql("((0))")
                .HasColumnName("duracion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaInicioReal)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicioReal");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaTerminacionPlaneada)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaTerminacionPlaneada");
            entity.Property(e => e.FechaTerminacionProyectada)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaTerminacionProyectada");
            entity.Property(e => e.FechaTerminacionReal)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaTerminacionReal");
            entity.Property(e => e.FechainicioPlaneada)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechainicioPlaneada");
            entity.Property(e => e.FechainicioProyectada)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechainicioProyectada");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ProActividadEjecutor>(entity =>
        {
            entity.ToTable("pro_actividad_ejecutor");

            entity.HasIndex(e => e.Eid, "IX_pro_actividad_ejecutor");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.ActividadEjecutor)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("actividad_ejecutor");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdActividad).HasColumnName("id_actividad");
            entity.Property(e => e.IdEjecutores).HasColumnName("id_ejecutores");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdActividadNavigation).WithMany(p => p.ProActividadEjecutors)
                .HasForeignKey(d => d.IdActividad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_actividad_ejecutor_id_actividad");

            entity.HasOne(d => d.IdEjecutoresNavigation).WithMany(p => p.ProActividadEjecutors)
                .HasForeignKey(d => d.IdEjecutores)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_actividad_ejecutor_id_ejecutores");
        });

        modelBuilder.Entity<ProActividadEtapa>(entity =>
        {
            entity.ToTable("pro_actividad_etapa");

            entity.HasIndex(e => e.Eid, "IX_pro_actividad_etapa");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.ActividadEtapa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("actividad_etapa");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdActividad).HasColumnName("id_actividad");
            entity.Property(e => e.IdEtapa).HasColumnName("id_etapa");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdActividadNavigation).WithMany(p => p.ProActividadEtapas)
                .HasForeignKey(d => d.IdActividad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_actividad_etapa_id_actividad");

            entity.HasOne(d => d.IdEtapaNavigation).WithMany(p => p.ProActividadEtapas)
                .HasForeignKey(d => d.IdEtapa)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_actividad_etapa_id_etapa");
        });

        modelBuilder.Entity<ProActividadHito>(entity =>
        {
            entity.ToTable("pro_actividad_hito");

            entity.HasIndex(e => e.Eid, "IX_pro_actividad_hito");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.ActividadHito)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("actividad_hito");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdActividad).HasColumnName("id_actividad");
            entity.Property(e => e.IdHito).HasColumnName("id_hito");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdActividadNavigation).WithMany(p => p.ProActividadHitos)
                .HasForeignKey(d => d.IdActividad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_actividad_hito_id_actividad");

            entity.HasOne(d => d.IdHitoNavigation).WithMany(p => p.ProActividadHitos)
                .HasForeignKey(d => d.IdHito)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_actividad_hito_id_hito");
        });

        modelBuilder.Entity<ProActividadPredecesora>(entity =>
        {
            entity.ToTable("pro_actividadPredecesora");

            entity.HasIndex(e => e.Eid, "IX_pro_actividadPredecesora");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.ActividadPredecesora)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("actividadPredecesora");
            entity.Property(e => e.ActividadPredecesoraCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("actividadPredecesora_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdActividadDestino).HasColumnName("id_actividad_destino");
            entity.Property(e => e.IdActividadOrigen).HasColumnName("id_actividad_origen");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ProActividadRecursoFisico>(entity =>
        {
            entity.ToTable("pro_actividad_recursoFisico");

            entity.HasIndex(e => e.Eid, "IX_pro_actividad_recursoFisico");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.ActividadRecursoFisico)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("actividad_recursoFisico");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.Duracion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValueSql("((0))")
                .HasColumnName("duracion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdActividad).HasColumnName("id_actividad");
            entity.Property(e => e.IdRecursoFisico).HasColumnName("id_recursoFisico");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdActividadNavigation).WithMany(p => p.ProActividadRecursoFisicos)
                .HasForeignKey(d => d.IdActividad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_actividad_recursoFisico_id_actividad");

            entity.HasOne(d => d.IdRecursoFisicoNavigation).WithMany(p => p.ProActividadRecursoFisicos)
                .HasForeignKey(d => d.IdRecursoFisico)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_actividad_recursoFisico_id_recursoFisico");
        });

        modelBuilder.Entity<ProCalidad>(entity =>
        {
            entity.ToTable("pro_calidad");

            entity.HasIndex(e => e.Eid, "IX_pro_calidad");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Calidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("calidad");
            entity.Property(e => e.CalidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("calidad_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ProEjecutore>(entity =>
        {
            entity.ToTable("pro_ejecutores");

            entity.HasIndex(e => e.Eid, "IX_pro_ejecutores");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Costo).HasColumnName("costo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Ejecutores)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ejecutores");
            entity.Property(e => e.EjecutoresCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ejecutores_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdHorarioEjecutores).HasColumnName("id_horarioEjecutores");
            entity.Property(e => e.IdHorarioTrabajo).HasColumnName("id_horarioTrabajo");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.UnidadTiempo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("((0))")
                .HasColumnName("unidadTiempo");

            entity.HasOne(d => d.IdHorarioEjecutoresNavigation).WithMany(p => p.ProEjecutores)
                .HasForeignKey(d => d.IdHorarioEjecutores)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_pro_ejecutores_id_horarioEjecutores");

            entity.HasOne(d => d.IdHorarioTrabajoNavigation).WithMany(p => p.ProEjecutores)
                .HasForeignKey(d => d.IdHorarioTrabajo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_pro_ejecutores_id_horarioTrabajo");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.ProEjecutores)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_pro_ejecutores_id_usuario");
        });

        modelBuilder.Entity<ProEjecutoresArchivo>(entity =>
        {
            entity.ToTable("pro_ejecutores_archivo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Aprobado)
                .HasDefaultValue(false)
                .HasColumnName("aprobado");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EjecutoresArchivo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ejecutores_archivo");
            entity.Property(e => e.FechaAprobacion)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("datetime")
                .HasColumnName("fecha_aprobacion");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaRevision)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("datetime")
                .HasColumnName("fecha_revision");
            entity.Property(e => e.IdArchivo).HasColumnName("id_archivo");
            entity.Property(e => e.IdEjecutores).HasColumnName("id_ejecutores");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Revisado)
                .HasDefaultValue(false)
                .HasColumnName("revisado");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdArchivoNavigation).WithMany(p => p.ProEjecutoresArchivos)
                .HasForeignKey(d => d.IdArchivo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_pro_ejecutor_archivo_id_archivo");

            entity.HasOne(d => d.IdEjecutoresNavigation).WithMany(p => p.ProEjecutoresArchivos)
                .HasForeignKey(d => d.IdEjecutores)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_pro_ejecutor_archivo_id_ejecutores");
        });

        modelBuilder.Entity<ProEntregable>(entity =>
        {
            entity.ToTable("pro_entregable");

            entity.HasIndex(e => e.Eid, "IX_pro_entregable");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Entregable)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("entregable");
            entity.Property(e => e.EntregableCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("entregable_codigo");
            entity.Property(e => e.EsExterno)
                .HasDefaultValue(true)
                .HasColumnName("esExterno");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaPlaneada)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaPlaneada");
            entity.Property(e => e.FechaProyectada)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaProyectada");
            entity.Property(e => e.FechaReal)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaReal");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Nombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValueSql("((0))")
                .HasColumnName("nombre");
            entity.Property(e => e.PorcentajePlaneado).HasColumnName("porcentajePlaneado");
            entity.Property(e => e.PorcentajeReal).HasColumnName("porcentajeReal");
            entity.Property(e => e.Producto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValueSql("((0))")
                .HasColumnName("producto");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorPlaneado).HasColumnName("valorPlaneado");
            entity.Property(e => e.ValorReal).HasColumnName("valorReal");
        });

        modelBuilder.Entity<ProEtapa>(entity =>
        {
            entity.ToTable("pro_etapa");

            entity.HasIndex(e => e.Eid, "IX_pro_etapa");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Completado)
                .HasDefaultValue(0)
                .HasColumnName("completado");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasDefaultValueSql("((0))")
                .HasColumnName("descripcion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Etapa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("etapa");
            entity.Property(e => e.EtapaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("etapa_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFinPlaneada)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("datetime")
                .HasColumnName("fechaFinPlaneada");
            entity.Property(e => e.FechaFinPlaneadaFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFinPlaneada_ff");
            entity.Property(e => e.FechaFinProyectada)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("datetime")
                .HasColumnName("fechaFinProyectada");
            entity.Property(e => e.FechaFinProyectadaFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFinProyectada_ff");
            entity.Property(e => e.FechaFinReal)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("datetime")
                .HasColumnName("fechaFinReal");
            entity.Property(e => e.FechaFinRealFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFinReal_ff");
            entity.Property(e => e.FechaInicioPlaneada)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("datetime")
                .HasColumnName("fechaInicioPlaneada");
            entity.Property(e => e.FechaInicioPlaneadaFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicioPlaneada_ff");
            entity.Property(e => e.FechaInicioProyectada)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("datetime")
                .HasColumnName("fechaInicioProyectada");
            entity.Property(e => e.FechaInicioProyectadaFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicioProyectada_ff");
            entity.Property(e => e.FechaInicioReal)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("datetime")
                .HasColumnName("fechaInicioReal");
            entity.Property(e => e.FechaInicioRealFf)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicioReal_ff");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Orden)
                .HasDefaultValue(0)
                .HasColumnName("orden");
            entity.Property(e => e.PorcentajePresupuesto)
                .HasDefaultValue(0.0)
                .HasColumnName("porcentajePresupuesto");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorPresupuesto)
                .HasDefaultValue(0.0m)
                .HasColumnType("money")
                .HasColumnName("valorPresupuesto");
        });

        modelBuilder.Entity<ProFactorexito>(entity =>
        {
            entity.ToTable("pro_factorexito");

            entity.HasIndex(e => e.Eid, "IX_pro_factorexito");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Factorexito)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("factorexito");
            entity.Property(e => e.FactorexitoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("factorexito_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdDocumentoProyecto)
                .HasDefaultValue(0)
                .HasColumnName("id_documento.proyecto");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ProGrupoSesion>(entity =>
        {
            entity.ToTable("pro_GrupoSesion");

            entity.HasIndex(e => e.Eid, "IX_pro_GrupoSesion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GrupoSesion)
                .HasMaxLength(300)
                .IsUnicode(false);
            entity.Property(e => e.GrupoSesionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("GrupoSesion_codigo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ProHito>(entity =>
        {
            entity.ToTable("pro_hito");

            entity.HasIndex(e => e.Eid, "IX_pro_hito");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Hito)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("hito");
            entity.Property(e => e.HitoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("hito_codigo");
            entity.Property(e => e.IdDocumentoProyecto).HasColumnName("id_documento.proyecto");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdDocumentoProyectoNavigation).WithMany(p => p.ProHitos)
                .HasForeignKey(d => d.IdDocumentoProyecto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_pro_hito_id_documento.proyecto");
        });

        modelBuilder.Entity<ProHorarioEjecutore>(entity =>
        {
            entity.ToTable("pro_horarioEjecutores");

            entity.HasIndex(e => e.Eid, "IX_pro_horarioEjecutores");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.HorarioEjecutores)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("horarioEjecutores");
            entity.Property(e => e.HorarioEjecutoresCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("horarioEjecutores_codigo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ProHorarioProyecto>(entity =>
        {
            entity.ToTable("pro_horarioProyecto");

            entity.HasIndex(e => e.Eid, "IX_pro_horarioProyecto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Domingo)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("domingo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Festivos)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("festivos");
            entity.Property(e => e.HorarioProyecto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("horarioProyecto");
            entity.Property(e => e.HorarioProyectoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("horarioProyecto_codigo");
            entity.Property(e => e.IdDocumentoProyecto).HasColumnName("id_documento.proyecto");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Jueves)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("jueves");
            entity.Property(e => e.Lunes)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("lunes");
            entity.Property(e => e.Martes)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("martes");
            entity.Property(e => e.Miercoles)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("miercoles");
            entity.Property(e => e.Sabado)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("sabado");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Viernes)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("viernes");

            entity.HasOne(d => d.IdDocumentoProyectoNavigation).WithMany(p => p.ProHorarioProyectos)
                .HasForeignKey(d => d.IdDocumentoProyecto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_pro_horarioProyecto_id_proyecto");
        });

        modelBuilder.Entity<ProHorarioTrabajo>(entity =>
        {
            entity.ToTable("pro_horarioTrabajo");

            entity.HasIndex(e => e.Eid, "IX_pro_horarioTrabajo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.HorarioTrabajo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("horarioTrabajo");
            entity.Property(e => e.HorarioTrabajoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("horarioTrabajo_codigo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ProRecursoFisico>(entity =>
        {
            entity.ToTable("pro_recursoFisico");

            entity.HasIndex(e => e.Eid, "IX_pro_recursoFisico");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Costo).HasColumnName("costo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsPropio).HasColumnName("esPropio");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.RecursoFisico)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("recursoFisico");
            entity.Property(e => e.RecursoFisicoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("recursoFisico_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.UnidadTiempo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasDefaultValueSql("((0))")
                .HasColumnName("unidadTiempo");

            entity.HasOne(d => d.IdCatalogoNavigation).WithMany(p => p.ProRecursoFisicos)
                .HasForeignKey(d => d.IdCatalogo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_pro_recursoFisico_id_catalogo");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.ProRecursoFisicos)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_pro_recursoFisico_id_equipo");
        });

        modelBuilder.Entity<ProReporteActividad>(entity =>
        {
            entity.ToTable("pro_reporteActividad");

            entity.HasIndex(e => e.Eid, "IX_pro_reporteActividad");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Duracion)
                .HasDefaultValue(0.0)
                .HasColumnName("duracion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaInicio)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_inicio");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdActividad).HasColumnName("id_actividad");
            entity.Property(e => e.IdEjecutores).HasColumnName("id_ejecutores");
            entity.Property(e => e.IdSesionActividad).HasColumnName("id_SesionActividad");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PorcentajeAvance)
                .HasDefaultValue(0.0)
                .HasColumnName("porcentaje_avance");
            entity.Property(e => e.ReporteActividad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("reporteActividad");
            entity.Property(e => e.ReporteActividadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("reporteActividad_codigo");
            entity.Property(e => e.Texto)
                .HasMaxLength(3000)
                .IsUnicode(false)
                .HasColumnName("texto");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdActividadNavigation).WithMany(p => p.ProReporteActividads)
                .HasForeignKey(d => d.IdActividad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_pro_reporteActividad_id_actividad");

            entity.HasOne(d => d.IdEjecutoresNavigation).WithMany(p => p.ProReporteActividads)
                .HasForeignKey(d => d.IdEjecutores)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_pro_reporteActividad_id_ejecutores");

            entity.HasOne(d => d.IdSesionActividadNavigation).WithMany(p => p.ProReporteActividads)
                .HasForeignKey(d => d.IdSesionActividad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_pro_reporteActividad_id_SesionActividad");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.ProReporteActividads)
                .HasForeignKey(d => d.IdSucursal)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_pro_reporteActividad_id_sucursal");
        });

        modelBuilder.Entity<ProRol>(entity =>
        {
            entity.ToTable("pro_rol");

            entity.HasIndex(e => e.Eid, "IX_pro_rol");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Rol)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("rol");
            entity.Property(e => e.RolCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("rol_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ProRolContacto>(entity =>
        {
            entity.ToTable("pro_rol_contacto");

            entity.HasIndex(e => e.Eid, "IX_pro_rol_contacto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdContacto).HasColumnName("id_contacto");
            entity.Property(e => e.IdRol).HasColumnName("id_rol");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.RolContacto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("rol_contacto");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdContactoNavigation).WithMany(p => p.ProRolContactos)
                .HasForeignKey(d => d.IdContacto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_pro_rol_contacto_id_contacto");

            entity.HasOne(d => d.IdRolNavigation).WithMany(p => p.ProRolContactos)
                .HasForeignKey(d => d.IdRol)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_pro_rol_contacto_id_rol");
        });

        modelBuilder.Entity<ProSesionActividad>(entity =>
        {
            entity.ToTable("pro_SesionActividad");

            entity.HasIndex(e => e.Eid, "IX_pro_SesionActividad");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(3000)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.Duracion).HasColumnName("duracion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaInicio)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_inicio");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdActividad).HasColumnName("id_actividad");
            entity.Property(e => e.IdEjecutores).HasColumnName("id_ejecutores");
            entity.Property(e => e.IdGrupoSesion).HasColumnName("id_GrupoSesion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.SesionActividad)
                .HasMaxLength(300)
                .IsUnicode(false);
            entity.Property(e => e.SesionActividadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("SesionActividad_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdActividadNavigation).WithMany(p => p.ProSesionActividads)
                .HasForeignKey(d => d.IdActividad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_pro_SesionActividad_id_actividad");

            entity.HasOne(d => d.IdEjecutoresNavigation).WithMany(p => p.ProSesionActividads)
                .HasForeignKey(d => d.IdEjecutores)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_pro_SesionActividad_id_ejecutores");

            entity.HasOne(d => d.IdGrupoSesionNavigation).WithMany(p => p.ProSesionActividads)
                .HasForeignKey(d => d.IdGrupoSesion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_pro_SesionActividad_id_GrupoSesion");
        });

        modelBuilder.Entity<RepCampoReporte>(entity =>
        {
            entity.ToTable("rep_campoReporte");

            entity.HasIndex(e => e.Eid, "IX_rep_campoReporte");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CampoReporte)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("campoReporte");
            entity.Property(e => e.CampoReporteCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("campoReporte_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsParametro)
                .HasDefaultValue(true)
                .HasColumnName("esParametro");
            entity.Property(e => e.EsSerie).HasColumnName("esSerie");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdReporte).HasColumnName("id_reporte");
            entity.Property(e => e.IdTipoCampoReporte).HasColumnName("id_tipoCampoReporte");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.ParametroTotal)
                .HasDefaultValue(true)
                .HasColumnName("parametroTotal");
            entity.Property(e => e.Tabla)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("tabla");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorDefecto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("valorDefecto");

            entity.HasOne(d => d.IdReporteNavigation).WithMany(p => p.RepCampoReportes)
                .HasForeignKey(d => d.IdReporte)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_rep_campoReporte_id_reporte");

            entity.HasOne(d => d.IdTipoCampoReporteNavigation).WithMany(p => p.RepCampoReportes)
                .HasForeignKey(d => d.IdTipoCampoReporte)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_rep_campoReporte_id_tipoCampoReporte");
        });

        modelBuilder.Entity<RepCategorium>(entity =>
        {
            entity.ToTable("rep_categoria");

            entity.HasIndex(e => e.Eid, "IX_rep_categoria");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Categoria)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("categoria");
            entity.Property(e => e.CategoriaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("categoria_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCategoria).HasColumnName("id_categoria");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCategoriaNavigation).WithMany(p => p.InverseIdCategoriaNavigation)
                .HasForeignKey(d => d.IdCategoria)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_rep_categoria_id_categoria");
        });

        modelBuilder.Entity<RepIndicador>(entity =>
        {
            entity.ToTable("rep_indicador");

            entity.HasIndex(e => e.Eid, "IX_rep_indicador");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Cabecera)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cabecera");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdReporte).HasColumnName("id_reporte");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Indicador)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("indicador");
            entity.Property(e => e.IndicadorCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("indicador_codigo");
            entity.Property(e => e.Seccion1)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seccion1");
            entity.Property(e => e.Seccion2)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seccion2");
            entity.Property(e => e.Seccion3)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seccion3");
            entity.Property(e => e.Seccion4)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seccion4");
            entity.Property(e => e.Seccion5)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seccion5");
            entity.Property(e => e.Seccion6)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seccion6");
            entity.Property(e => e.Seccion7)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seccion7");
            entity.Property(e => e.Seccion8)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seccion8");
            entity.Property(e => e.Titulo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("titulo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdReporteNavigation).WithMany(p => p.RepIndicadors)
                .HasForeignKey(d => d.IdReporte)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_rep_indicador_id_reporte");
        });

        modelBuilder.Entity<RepOpcionReporte>(entity =>
        {
            entity.ToTable("rep_opcionReporte");

            entity.HasIndex(e => e.Eid, "IX_rep_opcionReporte");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Defecto).HasColumnName("defecto");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdReporte).HasColumnName("id_reporte");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.OpcionReporte)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("opcionReporte");
            entity.Property(e => e.OpcionReporteCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("opcionReporte_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdReporteNavigation).WithMany(p => p.RepOpcionReportes)
                .HasForeignKey(d => d.IdReporte)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_rep_opcionReporte_id_reporte");
        });

        modelBuilder.Entity<RepOrigenDato>(entity =>
        {
            entity.ToTable("rep_origenDato");

            entity.HasIndex(e => e.Eid, "IX_rep_origenDato");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Duracion)
                .HasDefaultValue(0)
                .HasColumnName("duracion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdReporte).HasColumnName("id_reporte");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.OrigenDato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("origenDato");
            entity.Property(e => e.OrigenDatoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("origenDato_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdReporteNavigation).WithMany(p => p.RepOrigenDatos)
                .HasForeignKey(d => d.IdReporte)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_rep_origenDato_id_reporte");
        });

        modelBuilder.Entity<RepReporte>(entity =>
        {
            entity.ToTable("rep_reporte");

            entity.HasIndex(e => e.Eid, "IX_rep_reporte");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Basica).HasColumnName("basica");
            entity.Property(e => e.Cabecera)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("cabecera");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsFormato).HasColumnName("esFormato");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdFuncionalidad).HasColumnName("id_funcionalidad");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.Reporte)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("reporte");
            entity.Property(e => e.ReporteCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("reporte_codigo");
            entity.Property(e => e.TieneGraficos).HasColumnName("tieneGraficos");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdFuncionalidadNavigation).WithMany(p => p.RepReportes)
                .HasForeignKey(d => d.IdFuncionalidad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_rep_reporte_id_funcionalidad");
        });

        modelBuilder.Entity<RepReporteCategorium>(entity =>
        {
            entity.ToTable("rep_reporte_categoria");

            entity.HasIndex(e => e.Eid, "IX_rep_reporte_categoria");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCategoria).HasColumnName("id_categoria");
            entity.Property(e => e.IdReporte).HasColumnName("id_reporte");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.ReporteCategoria)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("reporte_categoria");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCategoriaNavigation).WithMany(p => p.RepReporteCategoria)
                .HasForeignKey(d => d.IdCategoria)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_rep_reporte_categoria_id_categoria");

            entity.HasOne(d => d.IdReporteNavigation).WithMany(p => p.RepReporteCategoria)
                .HasForeignKey(d => d.IdReporte)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_rep_reporte_categoria_id_reporte");
        });

        modelBuilder.Entity<RepTipoCampoReporte>(entity =>
        {
            entity.ToTable("rep_tipoCampoReporte");

            entity.HasIndex(e => e.Eid, "IX_rep_tipoCampoReporte");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TipoCampoReporte)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoCampoReporte");
            entity.Property(e => e.TipoCampoReporteCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoCampoReporte_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<SegCargo>(entity =>
        {
            entity.ToTable("seg_cargo");

            entity.HasIndex(e => e.Eid, "IX_seg_cargo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Cargo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cargo");
            entity.Property(e => e.CargoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cargo_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsAdministrativo).HasColumnName("esAdministrativo");
            entity.Property(e => e.EsComercial)
                .HasDefaultValue(false)
                .HasColumnName("esComercial");
            entity.Property(e => e.EsCoordinador)
                .HasDefaultValue(false)
                .HasColumnName("esCoordinador");
            entity.Property(e => e.EsTecnico)
                .HasDefaultValue(false)
                .HasColumnName("esTecnico");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorHora)
                .HasColumnType("money")
                .HasColumnName("valorHora");
        });

        modelBuilder.Entity<SegCargoActividad>(entity =>
        {
            entity.ToTable("seg_cargo_actividad");

            entity.HasIndex(e => e.Eid, "IX_seg_cargo_actividad");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CargoActividad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cargo_actividad");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCargo).HasColumnName("id_cargo");
            entity.Property(e => e.IdCatalogoActividad).HasColumnName("id_catalogo.actividad");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCargoNavigation).WithMany(p => p.SegCargoActividads)
                .HasForeignKey(d => d.IdCargo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_seg_cargo_actividad_id_cargo");

            entity.HasOne(d => d.IdCatalogoActividadNavigation).WithMany(p => p.SegCargoActividads)
                .HasForeignKey(d => d.IdCatalogoActividad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_seg_cargo_actividad_id_catalogo_actividad");
        });

        modelBuilder.Entity<SegCargoEnvioCorreo>(entity =>
        {
            entity.ToTable("seg_cargo_envioCorreo");

            entity.HasIndex(e => e.Eid, "IX_seg_cargo_envioCorreo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CargoEnvioCorreo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cargo_envioCorreo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCargo).HasColumnName("id_cargo");
            entity.Property(e => e.IdEnvioCorreo).HasColumnName("id_envioCorreo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdCargoNavigation).WithMany(p => p.SegCargoEnvioCorreos)
                .HasForeignKey(d => d.IdCargo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_seg_cargo_envioCorreo_id_cargo");

            entity.HasOne(d => d.IdEnvioCorreoNavigation).WithMany(p => p.SegCargoEnvioCorreos)
                .HasForeignKey(d => d.IdEnvioCorreo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_seg_cargo_envioCorreo_id_envioCorreo");
        });

        modelBuilder.Entity<SegGrupo>(entity =>
        {
            entity.ToTable("seg_grupo");

            entity.HasIndex(e => e.Eid, "IX_seg_grupo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Activo)
                .HasDefaultValue(true)
                .HasColumnName("activo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Grupo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("grupo");
            entity.Property(e => e.GrupoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("grupo_codigo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<SegPerfil>(entity =>
        {
            entity.ToTable("seg_perfil");

            entity.HasIndex(e => e.Eid, "IX_seg_perfil");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MostrarBotones).HasColumnName("mostrarBotones");
            entity.Property(e => e.ParaCliente)
                .HasDefaultValue(false)
                .HasColumnName("paraCliente");
            entity.Property(e => e.ParaProveedor)
                .HasDefaultValue(false)
                .HasColumnName("paraProveedor");
            entity.Property(e => e.Perfil)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("perfil");
            entity.Property(e => e.PerfilCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("perfil_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<SegPerfilBloqueHome>(entity =>
        {
            entity.ToTable("seg_perfil_bloqueHome");

            entity.HasIndex(e => e.Eid, "IX_seg_perfil_bloqueHome");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdBloqueHome).HasColumnName("id_bloqueHome");
            entity.Property(e => e.IdPerfil).HasColumnName("id_perfil");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PerfilBloqueHome)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("perfil_bloqueHome");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdBloqueHomeNavigation).WithMany(p => p.SegPerfilBloqueHomes)
                .HasForeignKey(d => d.IdBloqueHome)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_seg_perfil_bloqueHome_id_bloqueHome");

            entity.HasOne(d => d.IdPerfilNavigation).WithMany(p => p.SegPerfilBloqueHomes)
                .HasForeignKey(d => d.IdPerfil)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_seg_perfil_bloqueHome_id_perfil");
        });

        modelBuilder.Entity<SegPerfilFormulario>(entity =>
        {
            entity.ToTable("seg_perfil_formulario");

            entity.HasIndex(e => e.Eid, "IX_seg_perfil_formulario");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdFormulario).HasColumnName("id_formulario");
            entity.Property(e => e.IdPerfil).HasColumnName("id_perfil");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PerfilFormulario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("perfil_formulario");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdFormularioNavigation).WithMany(p => p.SegPerfilFormularios)
                .HasForeignKey(d => d.IdFormulario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_seg_perfil_formulario_id_formulario");

            entity.HasOne(d => d.IdPerfilNavigation).WithMany(p => p.SegPerfilFormularios)
                .HasForeignKey(d => d.IdPerfil)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_seg_perfil_formulario_id_perfil");
        });

        modelBuilder.Entity<SegPerfilFuncionalidad>(entity =>
        {
            entity.ToTable("seg_perfil_funcionalidad");

            entity.HasIndex(e => e.Eid, "IX_seg_perfil_funcionalidad");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdFuncionalidad).HasColumnName("id_funcionalidad");
            entity.Property(e => e.IdPerfil).HasColumnName("id_perfil");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PerfilFuncionalidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("perfil_funcionalidad");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdFuncionalidadNavigation).WithMany(p => p.SegPerfilFuncionalidads)
                .HasForeignKey(d => d.IdFuncionalidad)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_seg_perfil_funcionalidad_id_funcionalidad");

            entity.HasOne(d => d.IdPerfilNavigation).WithMany(p => p.SegPerfilFuncionalidads)
                .HasForeignKey(d => d.IdPerfil)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_seg_perfil_funcionalidad_id_perfil");
        });

        modelBuilder.Entity<SegPerfilSubtipoDocumento>(entity =>
        {
            entity.ToTable("seg_perfil_subtipoDocumento");

            entity.HasIndex(e => e.Eid, "IX_seg_perfil_subtipoDocumento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdPerfil).HasColumnName("id_perfil");
            entity.Property(e => e.IdSubtipoDocumento).HasColumnName("id_subtipoDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PerfilSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("perfil_subtipoDocumento");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdPerfilNavigation).WithMany(p => p.SegPerfilSubtipoDocumentos)
                .HasForeignKey(d => d.IdPerfil)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_seg_perfil_subtipoDocumento_id_perfil");

            entity.HasOne(d => d.IdSubtipoDocumentoNavigation).WithMany(p => p.SegPerfilSubtipoDocumentos)
                .HasForeignKey(d => d.IdSubtipoDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_seg_perfil_subtipoDocumento_id_subtipoDocumento");
        });

        modelBuilder.Entity<SegPerfilTercero>(entity =>
        {
            entity.ToTable("seg_perfil_tercero");

            entity.HasIndex(e => e.Eid, "IX_seg_perfil_tercero");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdPerfil).HasColumnName("id_perfil");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PerfilTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("perfil_tercero");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdPerfilNavigation).WithMany(p => p.SegPerfilTerceros)
                .HasForeignKey(d => d.IdPerfil)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_seg_perfil_tercero_id_perfil");

            entity.HasOne(d => d.IdTerceroNavigation).WithMany(p => p.SegPerfilTerceros)
                .HasForeignKey(d => d.IdTercero)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_seg_perfil_tercero_id_tercero");
        });

        modelBuilder.Entity<SegRegistroIntegracion>(entity =>
        {
            entity.ToTable("seg_registroIntegracion");

            entity.HasIndex(e => e.Eid, "IX_seg_registroIntegracion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CodigoRespuesta)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("codigoRespuesta");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdObjeto).HasColumnName("idObjeto");
            entity.Property(e => e.IdPuntoIntegracion).HasColumnName("id_puntoIntegracion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Mensaje)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("mensaje");
            entity.Property(e => e.NumeroReintento).HasColumnName("numeroReintento");
            entity.Property(e => e.RegistroIntegracion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("registroIntegracion");
            entity.Property(e => e.RegistroIntegracionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("registroIntegracion_codigo");
            entity.Property(e => e.Respuesta)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("respuesta");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdPuntoIntegracionNavigation).WithMany(p => p.SegRegistroIntegracions)
                .HasForeignKey(d => d.IdPuntoIntegracion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PuntoIntegracionRegistroIntegracion");
        });

        modelBuilder.Entity<SegRegistroPeticion>(entity =>
        {
            entity.ToTable("seg_registroPeticion");

            entity.HasIndex(e => e.Eid, "IX_seg_registroPeticion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Aplicacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValueSql("((0))")
                .HasColumnName("aplicacion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsExitosa).HasColumnName("esExitosa");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MensajeRespuesta)
                .IsUnicode(false)
                .HasColumnName("mensajeRespuesta");
            entity.Property(e => e.Modulo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValueSql("((0))")
                .HasColumnName("modulo");
            entity.Property(e => e.RegistroPeticion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("registroPeticion");
            entity.Property(e => e.RegistroPeticionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("registroPeticion_codigo");
            entity.Property(e => e.TamanoPeticion).HasColumnName("tamanoPeticion");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.UrlServicio)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasDefaultValueSql("((0))")
                .HasColumnName("urlServicio");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.SegRegistroPeticions)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_registroPeticion_usuario_id_usuario");
        });

        modelBuilder.Entity<SegSesion>(entity =>
        {
            entity.ToTable("seg_sesion");

            entity.HasIndex(e => e.Eid, "IX_seg_sesion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Sesion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("sesion");
            entity.Property(e => e.SesionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("sesion_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<SegSesionHistorico>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("seg_sesionHistorico");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Sesion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("sesion");
            entity.Property(e => e.SesionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("sesion_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<SegUsuario>(entity =>
        {
            entity.ToTable("seg_usuario");

            entity.HasIndex(e => e.Eid, "IX_seg_usuario");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AccesoActivo)
                .HasDefaultValue(false)
                .HasColumnName("accesoActivo");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.AplicaRecargo).HasColumnName("aplicaRecargo");
            entity.Property(e => e.CambiarClave)
                .HasDefaultValue(true)
                .HasColumnName("cambiarClave");
            entity.Property(e => e.Clave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("clave");
            entity.Property(e => e.CostoHora)
                .HasColumnType("money")
                .HasColumnName("costoHora");
            entity.Property(e => e.Direccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("direccion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("email");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaIntentoFallidoFh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaIntentoFallido_fh");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaUltimoCambioClaveFh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaUltimoCambioClave_fh");
            entity.Property(e => e.FechaUltimoIngresoFh)
                .HasDefaultValueSql("(((1)/(1))/(1900))")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaUltimoIngreso_fh");
            entity.Property(e => e.Habilitado)
                .HasDefaultValue(true)
                .HasColumnName("habilitado");
            entity.Property(e => e.IdCargo).HasColumnName("id_cargo");
            entity.Property(e => e.IdDispositivo)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("idDispositivo");
            entity.Property(e => e.IdGrupo).HasColumnName("id_grupo");
            entity.Property(e => e.IdPerfil).HasColumnName("id_perfil");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdZona).HasColumnName("id_zona");
            entity.Property(e => e.Identificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("identificacion");
            entity.Property(e => e.IntentosFallidos)
                .HasDefaultValue(0)
                .HasColumnName("intentosFallidos");
            entity.Property(e => e.Nombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("nombre");
            entity.Property(e => e.NumeroIngresos)
                .HasDefaultValue(0)
                .HasColumnName("numeroIngresos");
            entity.Property(e => e.PorcentajeComision).HasColumnName("porcentajeComision");
            entity.Property(e => e.Preferencias)
                .HasColumnType("image")
                .HasColumnName("preferencias");
            entity.Property(e => e.Profesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("profesion");
            entity.Property(e => e.Sexo).HasColumnName("sexo");
            entity.Property(e => e.Telefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("telefono");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Usuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("usuario");
            entity.Property(e => e.UsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("usuario_codigo");

            entity.HasOne(d => d.IdCargoNavigation).WithMany(p => p.SegUsuarios)
                .HasForeignKey(d => d.IdCargo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_seg_usuario_id_cargo");

            entity.HasOne(d => d.IdGrupoNavigation).WithMany(p => p.SegUsuarios)
                .HasForeignKey(d => d.IdGrupo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_seg_usuario_id_grupo");

            entity.HasOne(d => d.IdPerfilNavigation).WithMany(p => p.SegUsuarios)
                .HasForeignKey(d => d.IdPerfil)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_seg_usuario_id_perfil");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.InverseIdUsuarioNavigation)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_seg_usuario_id_usuario");

            entity.HasOne(d => d.IdZonaNavigation).WithMany(p => p.SegUsuarios)
                .HasForeignKey(d => d.IdZona)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_seg_usuario_id_zona");
        });

        modelBuilder.Entity<SegUsuarioCatalogoEquipo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_seg_usuario_catalogo_equipo");

            entity.ToTable("seg_usuario_catalogo.equipo");

            entity.HasIndex(e => e.Eid, "IX_seg_usuario_catalogo_equipo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCatalogoEquipo).HasColumnName("id_catalogo.equipo");
            entity.Property(e => e.IdTipoServicio).HasColumnName("id_tipoServicio");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.UsuarioCatalogoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("usuario_catalogo.equipo");

            entity.HasOne(d => d.IdCatalogoEquipoNavigation).WithMany(p => p.SegUsuarioCatalogoEquipos)
                .HasForeignKey(d => d.IdCatalogoEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_seg_usuario_catalogo_equipo_id_catalogo_equipo");

            entity.HasOne(d => d.IdTipoServicioNavigation).WithMany(p => p.SegUsuarioCatalogoEquipos)
                .HasForeignKey(d => d.IdTipoServicio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_seg_usuario_catalogo_equipo_id_tipoServicio");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.SegUsuarioCatalogoEquipos)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_seg_usuario_catalogo_equipo_id_usuario");
        });

        modelBuilder.Entity<SynCampoIntegracion>(entity =>
        {
            entity.ToTable("syn_campoIntegracion");

            entity.HasIndex(e => e.Eid, "IX_syn_campoIntegracion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CampoEnlace)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("campoEnlace");
            entity.Property(e => e.CampoIntegracion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("campoIntegracion");
            entity.Property(e => e.CampoIntegracionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("campoIntegracion_codigo");
            entity.Property(e => e.CampoLocal)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("campoLocal");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsLlave)
                .HasDefaultValue(false)
                .HasColumnName("esLlave");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdPuntoIntegracion)
                .HasDefaultValue(0)
                .HasColumnName("id_puntoIntegracion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Longitud)
                .HasDefaultValue(0)
                .HasColumnName("longitud");
            entity.Property(e => e.Orden)
                .HasDefaultValue(0)
                .HasColumnName("orden");
            entity.Property(e => e.TablaAuxiliar)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("tablaAuxiliar");
            entity.Property(e => e.TipoDato)
                .HasDefaultValue(0)
                .HasColumnName("tipoDato");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorXdefecto)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("valorXDefecto");

            entity.HasOne(d => d.IdPuntoIntegracionNavigation).WithMany(p => p.SynCampoIntegracions)
                .HasForeignKey(d => d.IdPuntoIntegracion)
                .HasConstraintName("FK__syn_campo__id_pu__562DC64F");
        });

        modelBuilder.Entity<SynPuntoIntegracion>(entity =>
        {
            entity.ToTable("syn_puntoIntegracion");

            entity.HasIndex(e => e.Eid, "IX_syn_puntoIntegracion");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CantidadReintentos).HasColumnName("cantidadReintentos");
            entity.Property(e => e.CodigosReintentos)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("codigosReintentos");
            entity.Property(e => e.Condicion)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("condicion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdPuntoIntegracion)
                .HasDefaultValue(0)
                .HasColumnName("id_puntoIntegracion");
            entity.Property(e => e.IdSistemaIntegrar)
                .HasDefaultValue(0)
                .HasColumnName("id_sistemaIntegrar");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IntervaloReintentos).HasColumnName("intervaloReintentos");
            entity.Property(e => e.Metodo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("metodo");
            entity.Property(e => e.PuntoIntegracion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("puntoIntegracion");
            entity.Property(e => e.PuntoIntegracionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("puntoIntegracion_codigo");
            entity.Property(e => e.TablaLocal)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("tablaLocal");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.UrlConsumir)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("urlConsumir");

            entity.HasOne(d => d.IdPuntoIntegracionNavigation).WithMany(p => p.InverseIdPuntoIntegracionNavigation)
                .HasForeignKey(d => d.IdPuntoIntegracion)
                .HasConstraintName("FK__syn_punto__id_pu__46EB82BF");

            entity.HasOne(d => d.IdSistemaIntegrarNavigation).WithMany(p => p.SynPuntoIntegracions)
                .HasForeignKey(d => d.IdSistemaIntegrar)
                .HasConstraintName("FK__syn_punto__id_si__54457DDD");
        });

        modelBuilder.Entity<SynPuntoIntegracionEstadoTipoDocumento>(entity =>
        {
            entity.ToTable("syn_puntoIntegracion_estadoTipoDocumento");

            entity.HasIndex(e => e.Eid, "IX_syn_puntoIntegracion_estadoTipoDocumento");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdEstadoTipoDocumento)
                .HasDefaultValue(0)
                .HasColumnName("id_estadoTipoDocumento");
            entity.Property(e => e.IdPuntoIntegracion)
                .HasDefaultValue(0)
                .HasColumnName("id_puntoIntegracion");
            entity.Property(e => e.IdRolEstado).HasColumnName("idRolEstado");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PuntoIntegracionEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("puntoIntegracion_estadoTipoDocumento");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdEstadoTipoDocumentoNavigation).WithMany(p => p.SynPuntoIntegracionEstadoTipoDocumentos)
                .HasForeignKey(d => d.IdEstadoTipoDocumento)
                .HasConstraintName("FK__syn_punto__id_es__58160EC1");

            entity.HasOne(d => d.IdPuntoIntegracionNavigation).WithMany(p => p.SynPuntoIntegracionEstadoTipoDocumentos)
                .HasForeignKey(d => d.IdPuntoIntegracion)
                .HasConstraintName("FK__syn_punto__id_pu__5074ECF9");
        });

        modelBuilder.Entity<SynPuntoIntegracionTabla>(entity =>
        {
            entity.ToTable("syn_puntoIntegracionTabla");

            entity.HasIndex(e => e.Eid, "IX_syn_puntoIntegracionTabla");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdPuntoIntegracion).HasColumnName("id_puntoIntegracion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.PuntoIntegracionTabla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("puntoIntegracionTabla");
            entity.Property(e => e.PuntoIntegracionTablaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("puntoIntegracionTabla_codigo");
            entity.Property(e => e.Tabla)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("tabla");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdPuntoIntegracionNavigation).WithMany(p => p.SynPuntoIntegracionTablas)
                .HasForeignKey(d => d.IdPuntoIntegracion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__syn_punto__id_pu__246C4D89");
        });

        modelBuilder.Entity<SynSistemaIntegrar>(entity =>
        {
            entity.ToTable("syn_sistemaIntegrar");

            entity.HasIndex(e => e.Eid, "IX_syn_sistemaIntegrar");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Clave)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("clave");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EstructuraResponseAutenticar)
                .IsUnicode(false)
                .HasColumnName("estructuraResponseAutenticar");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdTipoAutenticacion).HasColumnName("id_tipoAutenticacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MetodoAutenticar)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("metodoAutenticar");
            entity.Property(e => e.SistemaIntegrar)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("sistemaIntegrar");
            entity.Property(e => e.SistemaIntegrarCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("sistemaIntegrar_codigo");
            entity.Property(e => e.Token)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("token");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.UrlAutenticar)
                .HasMaxLength(800)
                .IsUnicode(false)
                .HasColumnName("urlAutenticar");
            entity.Property(e => e.Usuario)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("usuario");

            entity.HasOne(d => d.IdTipoAutenticacionNavigation).WithMany(p => p.SynSistemaIntegrars)
                .HasForeignKey(d => d.IdTipoAutenticacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__syn_siste__id_ti__38734636");
        });

        modelBuilder.Entity<SynTipoAutenticacion>(entity =>
        {
            entity.ToTable("syn_tipoAutenticacion");

            entity.HasIndex(e => e.Eid, "IX_syn_tipoAutenticacion");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TipoAutenticacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoAutenticacion");
            entity.Property(e => e.TipoAutenticacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoAutenticacion_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<Tabla>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_tablas");

            entity.ToTable("_tablas");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Tabla1)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("tabla");
        });

        modelBuilder.Entity<TaxNivelTax>(entity =>
        {
            entity.ToTable("tax_nivelTax");

            entity.HasIndex(e => e.Eid, "IX_tax_nivelTax");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.ColumnaPrincipal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("columnaPrincipal");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsEquipo).HasColumnName("esEquipo");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Filtro)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("filtro");
            entity.Property(e => e.IdNivelTax).HasColumnName("id_nivelTax");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.NivelTax)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("nivelTax");
            entity.Property(e => e.NivelTaxCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nivelTax_codigo");
            entity.Property(e => e.Tabla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("tabla");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdNivelTaxNavigation).WithMany(p => p.InverseIdNivelTaxNavigation)
                .HasForeignKey(d => d.IdNivelTax)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tax_nivelTax_id_nivelTax");
        });

        modelBuilder.Entity<TaxObjetoTax>(entity =>
        {
            entity.ToTable("tax_objetoTax");

            entity.HasIndex(e => e.Eid, "IX_tax_objetoTax");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdNivelTax).HasColumnName("id_nivelTax");
            entity.Property(e => e.IdObjTax).HasColumnName("id_objTax");
            entity.Property(e => e.IdTablaTax).HasColumnName("id_tablaTax");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.ObjetoTax)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("objetoTax");
            entity.Property(e => e.ObjetoTaxCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("objetoTax_codigo");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.Tabla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("tabla");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdNivelTaxNavigation).WithMany(p => p.TaxObjetoTaxes)
                .HasForeignKey(d => d.IdNivelTax)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_tax_objetoTax_id_nivelTax");
        });

        modelBuilder.Entity<TerCargoContacto>(entity =>
        {
            entity.ToTable("ter_cargoContacto");

            entity.HasIndex(e => e.Eid, "IX_ter_cargoContacto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.CargoContacto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cargoContacto");
            entity.Property(e => e.CargoContactoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cargoContacto_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<TerContacto>(entity =>
        {
            entity.ToTable("ter_contacto");

            entity.HasIndex(e => e.Eid, "IX_ter_contacto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.AccesoActivo)
                .HasDefaultValue(true)
                .HasColumnName("accesoActivo");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Cargo)
                .HasMaxLength(100)
                .HasColumnName("cargo");
            entity.Property(e => e.CodigoAcceso)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasDefaultValue(" ")
                .HasColumnName("codigoAcceso");
            entity.Property(e => e.Contacto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("contacto");
            entity.Property(e => e.ContactoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("contacto_codigo");
            entity.Property(e => e.Direccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasDefaultValue("");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Fax)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdCargoContacto).HasColumnName("id_cargoContacto");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Telefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("telefono");
            entity.Property(e => e.TelefonoMovil)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("telefonoMovil");
            entity.Property(e => e.TerCargoContactoIdUsuarioCreo).HasColumnName("ter_cargoContacto_id_usuario_Creo");
            entity.Property(e => e.TerCargoContactoIdUsuarioModifico).HasColumnName("ter_cargoContacto_id_usuario_Modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdTerceroNavigation).WithMany(p => p.TerContactos)
                .HasForeignKey(d => d.IdTercero)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_contacto_id_tercero");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.TerContactos)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_contacto_id_usuario");
        });

        modelBuilder.Entity<TerContactoEquipo>(entity =>
        {
            entity.ToTable("ter_contacto_equipo");

            entity.HasIndex(e => e.Eid, "IX_ter_contacto_equipo");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.ContactoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("contacto_equipo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EstadoContacto).HasColumnName("estado_contacto");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdContacto).HasColumnName("id_contacto");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdContactoNavigation).WithMany(p => p.TerContactoEquipos)
                .HasForeignKey(d => d.IdContacto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ter_conta__id_co__423CA792");

            entity.HasOne(d => d.IdEquipoNavigation).WithMany(p => p.TerContactoEquipos)
                .HasForeignKey(d => d.IdEquipo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ter_conta__id_eq__3D77F275");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.TerContactoEquipos)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ter_conta__id_us__3F603AE7");
        });

        modelBuilder.Entity<TerContactoSucursal>(entity =>
        {
            entity.ToTable("ter_contacto_sucursal");

            entity.HasIndex(e => e.Eid, "IX_ter_contacto_sucursal");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.ContactoSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("contacto_sucursal");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdContacto).HasColumnName("id_contacto");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdContactoNavigation).WithMany(p => p.TerContactoSucursals)
                .HasForeignKey(d => d.IdContacto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_contacto_sucursal_id_contacto");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.TerContactoSucursals)
                .HasForeignKey(d => d.IdSucursal)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_contacto_sucursal_id_sucursal");
        });

        modelBuilder.Entity<TerEstadoTercero>(entity =>
        {
            entity.ToTable("ter_estadoTercero");

            entity.HasIndex(e => e.Eid, "IX_ter_estadoTercero");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EstadoTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("estadoTercero");
            entity.Property(e => e.EstadoTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("estadoTercero_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<TerNaturalezaTercero>(entity =>
        {
            entity.ToTable("ter_naturalezaTercero");

            entity.HasIndex(e => e.Eid, "IX_ter_naturalezaTercero");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.NaturalezaTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("naturalezaTercero");
            entity.Property(e => e.NaturalezaTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("naturalezaTercero_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<TerSector>(entity =>
        {
            entity.ToTable("ter_sector");

            entity.HasIndex(e => e.Eid, "IX_ter_sector");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Sector)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("sector");
            entity.Property(e => e.SectorCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("sector_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<TerSucursal>(entity =>
        {
            entity.ToTable("ter_sucursal");

            entity.HasIndex(e => e.Eid, "IX_ter_sucursal");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Cargo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("cargo");
            entity.Property(e => e.Codigorecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("codigorecursiva");
            entity.Property(e => e.Contacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("contacto");
            entity.Property(e => e.Direccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasDefaultValue("");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Fax)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdEstadoTercero).HasColumnName("id_estadoTercero");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdUsuarioAsesor).HasColumnName("id_usuario_asesor");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdUsuarioTecnico).HasColumnName("id_usuario_tecnico");
            entity.Property(e => e.IdZona).HasColumnName("id_zona");
            entity.Property(e => e.ParaAlquiler).HasColumnName("paraAlquiler");
            entity.Property(e => e.ParaSoporte).HasColumnName("paraSoporte");
            entity.Property(e => e.ParaVenta).HasColumnName("paraVenta");
            entity.Property(e => e.Sucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("sucursal");
            entity.Property(e => e.SucursalCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("sucursal_codigo");
            entity.Property(e => e.Telefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("telefono");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdEstadoTerceroNavigation).WithMany(p => p.TerSucursals)
                .HasForeignKey(d => d.IdEstadoTercero)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_sucursal_id_estadoTercero");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.InverseIdSucursalNavigation)
                .HasForeignKey(d => d.IdSucursal)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_sucursal_id_sucursal");

            entity.HasOne(d => d.IdTerceroNavigation).WithMany(p => p.TerSucursals)
                .HasForeignKey(d => d.IdTercero)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_sucursal_id_tercero");

            entity.HasOne(d => d.IdUsuarioAsesorNavigation).WithMany(p => p.TerSucursalIdUsuarioAsesorNavigations)
                .HasForeignKey(d => d.IdUsuarioAsesor)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_sucursal_id_usuario_asesor");

            entity.HasOne(d => d.IdUsuarioTecnicoNavigation).WithMany(p => p.TerSucursalIdUsuarioTecnicoNavigations)
                .HasForeignKey(d => d.IdUsuarioTecnico)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_sucursal_id_usuario_tecnico");

            entity.HasOne(d => d.IdZonaNavigation).WithMany(p => p.TerSucursals)
                .HasForeignKey(d => d.IdZona)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_sucursal_id_zona");
        });

        modelBuilder.Entity<TerSucursalListaprecio>(entity =>
        {
            entity.ToTable("ter_sucursal_listaprecio");

            entity.HasIndex(e => e.Eid, "IX_ter_sucursal_listaprecio");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdListaprecio).HasColumnName("id_listaprecio");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.SucursalListaprecio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("sucursal_listaprecio");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdListaprecioNavigation).WithMany(p => p.TerSucursalListaprecios)
                .HasForeignKey(d => d.IdListaprecio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_sucursal_listaprecio_id_listaprecio");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.TerSucursalListaprecios)
                .HasForeignKey(d => d.IdSucursal)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_sucursal_listaprecio_id_sucursal");
        });

        modelBuilder.Entity<TerSucursalUsuario>(entity =>
        {
            entity.ToTable("ter_sucursal_usuario");

            entity.HasIndex(e => e.Eid, "IX_ter_sucursal_usuario");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.SucursalUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("sucursal_usuario");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdSucursalNavigation).WithMany(p => p.TerSucursalUsuarios)
                .HasForeignKey(d => d.IdSucursal)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_sucursal_usuario_id_sucursal");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.TerSucursalUsuarios)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_sucursal_usuario_id_usuario");
        });

        modelBuilder.Entity<TerTercero>(entity =>
        {
            entity.ToTable("ter_tercero");

            entity.HasIndex(e => e.Eid, "IX_ter_tercero");

            entity.HasIndex(e => e.TerceroNit, "IX_ter_tercero_tercero_nit");

            entity.HasIndex(e => e.TerceroNombreCorto, "IX_ter_tercero_tercero_nombreCorto");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Clasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("clasificacion");
            entity.Property(e => e.Contacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("contacto");
            entity.Property(e => e.Direccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("direccion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.EsCliente)
                .HasDefaultValue(true)
                .HasColumnName("esCliente");
            entity.Property(e => e.EsEmpresaPropia).HasColumnName("esEmpresaPropia");
            entity.Property(e => e.EsFabricante).HasColumnName("esFabricante");
            entity.Property(e => e.EsProspecto).HasColumnName("esProspecto");
            entity.Property(e => e.EsProveedor).HasColumnName("esProveedor");
            entity.Property(e => e.EsTransportador).HasColumnName("esTransportador");
            entity.Property(e => e.Fax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fax");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdEstadoTercero).HasColumnName("id_estadoTercero");
            entity.Property(e => e.IdFormaPago)
                .HasDefaultValue(0)
                .HasColumnName("id_formaPago");
            entity.Property(e => e.IdNaturalezaTercero).HasColumnName("id_naturalezaTercero");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdZona).HasColumnName("id_zona");
            entity.Property(e => e.Notas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("notas");
            entity.Property(e => e.Representante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("representante");
            entity.Property(e => e.Telefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("telefono");
            entity.Property(e => e.Tercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tercero");
            entity.Property(e => e.TerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tercero_codigo");
            entity.Property(e => e.TerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("tercero_nit");
            entity.Property(e => e.TerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("tercero_nombreCorto");
            entity.Property(e => e.TiempoEntrega).HasColumnName("tiempoEntrega");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Website)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("website");

            entity.HasOne(d => d.IdEstadoTerceroNavigation).WithMany(p => p.TerTerceros)
                .HasForeignKey(d => d.IdEstadoTercero)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_tercero_id_estadoTercero");

            entity.HasOne(d => d.IdFormaPagoNavigation).WithMany(p => p.TerTerceros)
                .HasForeignKey(d => d.IdFormaPago)
                .HasConstraintName("FK__ter_terce__id_fo__698B7EDD");

            entity.HasOne(d => d.IdNaturalezaTerceroNavigation).WithMany(p => p.TerTerceros)
                .HasForeignKey(d => d.IdNaturalezaTercero)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_tercero_id_naturalezaTercero");

            entity.HasOne(d => d.IdZonaNavigation).WithMany(p => p.TerTerceros)
                .HasForeignKey(d => d.IdZona)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_tercero_id_zona");
        });

        modelBuilder.Entity<TerTerceroListaprecio>(entity =>
        {
            entity.ToTable("ter_tercero_listaprecio");

            entity.HasIndex(e => e.Eid, "IX_ter_tercero_listaprecio");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdListaprecio).HasColumnName("id_listaprecio");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TerceroListaprecio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tercero_listaprecio");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdListaprecioNavigation).WithMany(p => p.TerTerceroListaprecios)
                .HasForeignKey(d => d.IdListaprecio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_tercero_listaprecio_id_listaprecio");

            entity.HasOne(d => d.IdTerceroNavigation).WithMany(p => p.TerTerceroListaprecios)
                .HasForeignKey(d => d.IdTercero)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_tercero_listaprecio_id_tercero");
        });

        modelBuilder.Entity<TerTerceroSector>(entity =>
        {
            entity.ToTable("ter_tercero_sector");

            entity.HasIndex(e => e.Eid, "IX_ter_tercero_sector");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdSector).HasColumnName("id_sector");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TerceroSector)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tercero_sector");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdSectorNavigation).WithMany(p => p.TerTerceroSectors)
                .HasForeignKey(d => d.IdSector)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_tercero_sector_id_sector");

            entity.HasOne(d => d.IdTerceroNavigation).WithMany(p => p.TerTerceroSectors)
                .HasForeignKey(d => d.IdTercero)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_tercero_sector_id_tercero");
        });

        modelBuilder.Entity<TerTerceroUsuario>(entity =>
        {
            entity.ToTable("ter_tercero_usuario");

            entity.HasIndex(e => e.Eid, "IX_ter_tercero_usuario");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TerceroUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tercero_usuario");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");

            entity.HasOne(d => d.IdTerceroNavigation).WithMany(p => p.TerTerceroUsuarios)
                .HasForeignKey(d => d.IdTercero)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_tercero_usuario_id_tercero");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.TerTerceroUsuarios)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_ter_tercero_usuario_id_usuario");
        });

        modelBuilder.Entity<VAlquileresPreliquidar>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_alquileresPreliquidar");

            entity.Property(e => e.FechaAlq)
                .HasMaxLength(7)
                .IsUnicode(false)
                .HasColumnName("fechaALQ");
            entity.Property(e => e.IdAlquiler).HasColumnName("idAlquiler");
            entity.Property(e => e.UltimaFactura).HasColumnType("smalldatetime");
        });

        modelBuilder.Entity<VChecklistToda>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_checklistTodas");

            entity.Property(e => e.EsVariable).HasColumnName("esVariable");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdLista).HasColumnName("id_lista");
            entity.Property(e => e.IdsOpciones)
                .HasMaxLength(500)
                .HasColumnName("IDsOpciones");
            entity.Property(e => e.Item)
                .HasMaxLength(900)
                .IsUnicode(false)
                .HasColumnName("item");
            entity.Property(e => e.Obligatorio).HasColumnName("obligatorio");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.Rango)
                .HasMaxLength(2)
                .IsUnicode(false)
                .HasColumnName("rango");
            entity.Property(e => e.Seccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seccion");
            entity.Property(e => e.TextosOpciones)
                .HasMaxLength(500)
                .HasColumnName("textosOpciones");
            entity.Property(e => e.Tipo).HasColumnName("tipo");
        });

        modelBuilder.Entity<VCorreosAenviar>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_correosAEnviar");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.Os)
                .HasMaxLength(25)
                .IsUnicode(false)
                .HasColumnName("os");
            entity.Property(e => e.SerialEquipo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("serialEquipo");
        });

        modelBuilder.Entity<VDatCot>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_datCot");

            entity.Property(e => e.Doc)
                .IsUnicode(false)
                .HasColumnName("doc");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdNetsuite)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("idNetsuite");
        });

        modelBuilder.Entity<VDocPruebaSop>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_doc_prueba_sop");

            entity.Property(e => e.Cuerpo)
                .HasMaxLength(47)
                .IsUnicode(false)
                .HasColumnName("CUERPO");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
        });

        modelBuilder.Entity<VDocumentoSucursal>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_documentoSucursal");

            entity.Property(e => e.CodigoRecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("codigoRecursiva");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
        });

        modelBuilder.Entity<VDocumentosPadreAsociar>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_documentosPadreAsociar");

            entity.Property(e => e.DocumentoNumero).HasColumnName("documento_numero");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCliente).HasColumnName("id_cliente");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdEstadoTipoDocumento).HasColumnName("id_estadoTipoDocumento");
            entity.Property(e => e.IdSubtipoDocumento).HasColumnName("id_subtipoDocumento");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.Prefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("prefijo");
        });

        modelBuilder.Entity<VHorarioTrabajo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_HorarioTrabajo");

            entity.Property(e => e.HorarioTrabajo)
                .HasMaxLength(2052)
                .IsUnicode(false)
                .HasColumnName("horarioTrabajo");
        });

        modelBuilder.Entity<VInformeIngreso>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_informe_ingreso");

            entity.Property(e => e.Cuerpo)
                .HasMaxLength(538)
                .IsUnicode(false)
                .HasColumnName("CUERPO");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.Encabezado)
                .IsUnicode(false)
                .HasColumnName("ENCABEZADO");
            entity.Property(e => e.Id).HasColumnName("id");
        });

        modelBuilder.Entity<VReglaEnvioCorreo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_reglaEnvioCorreo");

            entity.Property(e => e.CorreoAdicional)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("correoAdicional");
            entity.Property(e => e.EnvioCorreo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("envioCorreo");
            entity.Property(e => e.EnvioCorreoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("envioCorreo_codigo");
            entity.Property(e => e.Estrategia).HasColumnName("estrategia");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.IdReporte).HasColumnName("id_reporte");
            entity.Property(e => e.PlantillaAdjunto)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("plantillaAdjunto");
            entity.Property(e => e.Tabla)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("tabla");
        });

        modelBuilder.Entity<VRepuestosalquilable>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("v_repuestosalquilables");

            entity.Property(e => e.Id).HasColumnName("id");
        });

        modelBuilder.Entity<ViewAlqDetalleLiquidacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_alq_detalleLiquidacion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.DetalleLiquidacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("detalleLiquidacion");
            entity.Property(e => e.DetalleLiquidacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("detalleLiquidacion_codigo");
            entity.Property(e => e.Dias).HasColumnName("dias");
            entity.Property(e => e.DisEventoAfectaCliente).HasColumnName("dis_evento_afectaCliente");
            entity.Property(e => e.DisEventoAfectaProduccion).HasColumnName("dis_evento_afectaProduccion");
            entity.Property(e => e.DisEventoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dis_evento_codigo");
            entity.Property(e => e.DisEventoDuracionHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("dis_evento_duracion_hh");
            entity.Property(e => e.DisEventoEvento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("dis_evento_evento");
            entity.Property(e => e.DisEventoEventoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dis_evento_evento_codigo");
            entity.Property(e => e.DisEventoEventoTipo).HasColumnName("dis_evento_eventoTipo");
            entity.Property(e => e.DisEventoFechaHoraEstimadaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("dis_evento_fechaHoraEstimada_fh");
            entity.Property(e => e.DisEventoFechaHoraInicioFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("dis_evento_fechaHoraInicio_ff");
            entity.Property(e => e.DisEventoIdEquipo).HasColumnName("dis_evento_id_equipo");
            entity.Property(e => e.DisEventoIdEstadoEquipo).HasColumnName("dis_evento_id_estadoEquipo");
            entity.Property(e => e.DisEventoIdEstadoEvento).HasColumnName("dis_evento_id_estadoEvento");
            entity.Property(e => e.DisEventoIdFalla).HasColumnName("dis_evento_id_falla");
            entity.Property(e => e.DisEventoIdFallaCausa).HasColumnName("dis_evento_id_falla_causa");
            entity.Property(e => e.DisEventoIdMetodoDeteccion).HasColumnName("dis_evento_id_metodoDeteccion");
            entity.Property(e => e.DisEventoIdMotivoEvento).HasColumnName("dis_evento_id_motivoEvento");
            entity.Property(e => e.DisEventoIdUsuario).HasColumnName("dis_evento_id_usuario");
            entity.Property(e => e.DisEventoNotas)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("dis_evento_notas");
            entity.Property(e => e.DocDocumentoMovimientoCosto).HasColumnName("doc_documento_movimiento_costo");
            entity.Property(e => e.DocDocumentoMovimientoCostoPlaneado).HasColumnName("doc_documento_movimiento_costoPlaneado");
            entity.Property(e => e.DocDocumentoMovimientoDescuento).HasColumnName("doc_documento_movimiento_descuento");
            entity.Property(e => e.DocDocumentoMovimientoDescuentoPlaneado).HasColumnName("doc_documento_movimiento_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoMovimientoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_movimiento_documento");
            entity.Property(e => e.DocDocumentoMovimientoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_movimiento_documento_codigo");
            entity.Property(e => e.DocDocumentoMovimientoDocumentoNumero).HasColumnName("doc_documento_movimiento_documento_numero");
            entity.Property(e => e.DocDocumentoMovimientoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_movimiento_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoMovimientoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_movimiento_fecha_fh");
            entity.Property(e => e.DocDocumentoMovimientoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_movimiento_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoMovimientoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_movimiento_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoMovimientoIdDocumento).HasColumnName("doc_documento_movimiento_id_documento");
            entity.Property(e => e.DocDocumentoMovimientoIdEstadoTipoDocumento).HasColumnName("doc_documento_movimiento_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoMovimientoIdMoneda).HasColumnName("doc_documento_movimiento_id_moneda");
            entity.Property(e => e.DocDocumentoMovimientoIdMotivoestado).HasColumnName("doc_documento_movimiento_id_motivoestado");
            entity.Property(e => e.DocDocumentoMovimientoIdPrioridadDocumento).HasColumnName("doc_documento_movimiento_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoMovimientoIdSubtipoDocumento).HasColumnName("doc_documento_movimiento_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoMovimientoIdTerceroCliente).HasColumnName("doc_documento_movimiento_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoMovimientoIdTerceroProveedor).HasColumnName("doc_documento_movimiento_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoMovimientoIva).HasColumnName("doc_documento_movimiento_iva");
            entity.Property(e => e.DocDocumentoMovimientoIvaPlaneado).HasColumnName("doc_documento_movimiento_ivaPlaneado");
            entity.Property(e => e.DocDocumentoMovimientoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_movimiento_prefijo");
            entity.Property(e => e.DocDocumentoMovimientoRentabilidad).HasColumnName("doc_documento_movimiento_rentabilidad");
            entity.Property(e => e.DocDocumentoMovimientoSubtotal).HasColumnName("doc_documento_movimiento_subtotal");
            entity.Property(e => e.DocDocumentoMovimientoSubtotalPlaneado).HasColumnName("doc_documento_movimiento_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoMovimientoTotal).HasColumnName("doc_documento_movimiento_total");
            entity.Property(e => e.DocDocumentoMovimientoTotalPlaneado).HasColumnName("doc_documento_movimiento_totalPlaneado");
            entity.Property(e => e.DocDocumentoMovimientoTrm).HasColumnName("doc_documento_movimiento_trm");
            entity.Property(e => e.DocItemDocumentoAfectoInventario).HasColumnName("doc_itemDocumento_afectoInventario");
            entity.Property(e => e.DocItemDocumentoCantAuxiliar).HasColumnName("doc_itemDocumento_cantAuxiliar");
            entity.Property(e => e.DocItemDocumentoCantidadEjecutado).HasColumnName("doc_itemDocumento_cantidadEjecutado");
            entity.Property(e => e.DocItemDocumentoCantidadPlaneado).HasColumnName("doc_itemDocumento_cantidadPlaneado");
            entity.Property(e => e.DocItemDocumentoCostear).HasColumnName("doc_itemDocumento_costear");
            entity.Property(e => e.DocItemDocumentoCostoEjecutado).HasColumnName("doc_itemDocumento_costoEjecutado");
            entity.Property(e => e.DocItemDocumentoCostoPlaneado).HasColumnName("doc_itemDocumento_costoPlaneado");
            entity.Property(e => e.DocItemDocumentoDetalle)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_detalle");
            entity.Property(e => e.DocItemDocumentoDtoEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_dtoEjecutado");
            entity.Property(e => e.DocItemDocumentoDtoPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_dtoPlaneado");
            entity.Property(e => e.DocItemDocumentoEsUrgente).HasColumnName("doc_itemDocumento_esUrgente");
            entity.Property(e => e.DocItemDocumentoHorasFestivas).HasColumnName("doc_itemDocumento_horasFestivas");
            entity.Property(e => e.DocItemDocumentoHorasGarantia).HasColumnName("doc_itemDocumento_horasGarantia");
            entity.Property(e => e.DocItemDocumentoHorasNocturnas).HasColumnName("doc_itemDocumento_horasNocturnas");
            entity.Property(e => e.DocItemDocumentoHorasOrdinales).HasColumnName("doc_itemDocumento_horasOrdinales");
            entity.Property(e => e.DocItemDocumentoIdBodega).HasColumnName("doc_itemDocumento_id_bodega");
            entity.Property(e => e.DocItemDocumentoIdCatalogo).HasColumnName("doc_itemDocumento_id_catalogo");
            entity.Property(e => e.DocItemDocumentoIdCentroCosto).HasColumnName("doc_itemDocumento_id_centroCosto");
            entity.Property(e => e.DocItemDocumentoIdDocumento).HasColumnName("doc_itemDocumento_id_documento");
            entity.Property(e => e.DocItemDocumentoIdIncoterm).HasColumnName("doc_itemDocumento_id_incoterm");
            entity.Property(e => e.DocItemDocumentoIdItemDocumento).HasColumnName("doc_itemDocumento_id_itemDocumento");
            entity.Property(e => e.DocItemDocumentoIdItemDocumentoSuperior).HasColumnName("doc_itemDocumento_id_itemDocumento_superior");
            entity.Property(e => e.DocItemDocumentoIdListaprecio).HasColumnName("doc_itemDocumento_id_listaprecio");
            entity.Property(e => e.DocItemDocumentoItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_itemDocumento");
            entity.Property(e => e.DocItemDocumentoItemDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_itemDocumento_codigo");
            entity.Property(e => e.DocItemDocumentoIvaEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_ivaEjecutado");
            entity.Property(e => e.DocItemDocumentoIvaPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_ivaPlaneado");
            entity.Property(e => e.DocItemDocumentoPorcdescuento).HasColumnName("doc_itemDocumento_porcdescuento");
            entity.Property(e => e.DocItemDocumentoPorcdto).HasColumnName("doc_itemDocumento_porcdto");
            entity.Property(e => e.DocItemDocumentoPorcentajeCliente).HasColumnName("doc_itemDocumento_porcentajeCliente");
            entity.Property(e => e.DocItemDocumentoPorcentajeDistribuidor).HasColumnName("doc_itemDocumento_porcentajeDistribuidor");
            entity.Property(e => e.DocItemDocumentoPorcentajeFabricante).HasColumnName("doc_itemDocumento_porcentajeFabricante");
            entity.Property(e => e.DocItemDocumentoPorciva).HasColumnName("doc_itemDocumento_porciva");
            entity.Property(e => e.DocItemDocumentoSubtotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_subtotalEjecutado");
            entity.Property(e => e.DocItemDocumentoSubtotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_subtotalPlaneado");
            entity.Property(e => e.DocItemDocumentoTotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_totalEjecutado");
            entity.Property(e => e.DocItemDocumentoTotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_totalPlaneado");
            entity.Property(e => e.DocItemDocumentoValorUnitarioEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_valorUnitarioEjecutado");
            entity.Property(e => e.DocItemDocumentoValorUnitarioPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_valorUnitarioPlaneado");
            entity.Property(e => e.DocItemDocumentoVencimientoGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_itemDocumento_vencimientoGarantia_ff");
            entity.Property(e => e.DocItemDocumentoVrbase).HasColumnName("doc_itemDocumento_vrbase");
            entity.Property(e => e.DocItemDocumentoVrenlista).HasColumnName("doc_itemDocumento_vrenlista");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquDetalleAlquilerBloquearDespacho).HasColumnName("equ_detalleAlquiler_bloquearDespacho");
            entity.Property(e => e.EquDetalleAlquilerCantidadAlquilada).HasColumnName("equ_detalleAlquiler_cantidadAlquilada");
            entity.Property(e => e.EquDetalleAlquilerCantidadSolicitada).HasColumnName("equ_detalleAlquiler_cantidadSolicitada");
            entity.Property(e => e.EquDetalleAlquilerDetalleAlquiler)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_detalleAlquiler_detalleAlquiler");
            entity.Property(e => e.EquDetalleAlquilerDetalleAlquilerCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_detalleAlquiler_detalleAlquiler_codigo");
            entity.Property(e => e.EquDetalleAlquilerEsSerializado).HasColumnName("equ_detalleAlquiler_esSerializado");
            entity.Property(e => e.EquDetalleAlquilerEstadoalquiler).HasColumnName("equ_detalleAlquiler_estadoalquiler");
            entity.Property(e => e.EquDetalleAlquilerFechaDespachoFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_detalleAlquiler_fechaDespacho_ff");
            entity.Property(e => e.EquDetalleAlquilerFechaDevolucionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_detalleAlquiler_fechaDevolucion_ff");
            entity.Property(e => e.EquDetalleAlquilerFechaInicioFacturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_detalleAlquiler_fechaInicioFactura_fh");
            entity.Property(e => e.EquDetalleAlquilerFechaUltimaFacturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_detalleAlquiler_fechaUltimaFactura_fh");
            entity.Property(e => e.EquDetalleAlquilerIdCatalogo).HasColumnName("equ_detalleAlquiler_id_catalogo");
            entity.Property(e => e.EquDetalleAlquilerIdDocumentoAlquiler).HasColumnName("equ_detalleAlquiler_id_documento.alquiler");
            entity.Property(e => e.EquDetalleAlquilerIdEquipo).HasColumnName("equ_detalleAlquiler_id_equipo");
            entity.Property(e => e.EquDetalleAlquilerIdSucursal).HasColumnName("equ_detalleAlquiler_id_sucursal");
            entity.Property(e => e.EquDetalleAlquilerIdTercero).HasColumnName("equ_detalleAlquiler_id_tercero");
            entity.Property(e => e.EquDetalleAlquilerValorHora)
                .HasColumnType("money")
                .HasColumnName("equ_detalleAlquiler_valorHora");
            entity.Property(e => e.EquDetalleAlquilerValorHoraStandBy)
                .HasColumnType("money")
                .HasColumnName("equ_detalleAlquiler_ValorHoraStandBy");
            entity.Property(e => e.EquDetalleAlquilerValorMes).HasColumnName("equ_detalleAlquiler_valorMes");
            entity.Property(e => e.EquDetalleAlquilerValorMulta)
                .HasColumnType("money")
                .HasColumnName("equ_detalleAlquiler_valorMulta");
            entity.Property(e => e.EquDetalleAlquilerValorPeriodo)
                .HasColumnType("money")
                .HasColumnName("equ_detalleAlquiler_valorPeriodo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFinFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFin_fh");
            entity.Property(e => e.FechaInicioFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicio_fh");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Horometro).HasColumnName("horometro");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDetalleAlquiler).HasColumnName("id_detalleAlquiler");
            entity.Property(e => e.IdDocumentoMovimiento).HasColumnName("id_documento_movimiento");
            entity.Property(e => e.IdEvento).HasColumnName("id_evento");
            entity.Property(e => e.IdItemDocumento).HasColumnName("id_itemDocumento");
            entity.Property(e => e.IdTarifa).HasColumnName("id_tarifa");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Saldo).HasColumnName("saldo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewAlqDetallealquilerItemdocumento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_alq_detallealquiler_itemdocumento");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DetallealquilerItemdocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("detallealquiler_itemdocumento");
            entity.Property(e => e.DocItemDocumentoAfectoInventario).HasColumnName("doc_itemDocumento_afectoInventario");
            entity.Property(e => e.DocItemDocumentoCantidadEjecutado).HasColumnName("doc_itemDocumento_cantidadEjecutado");
            entity.Property(e => e.DocItemDocumentoCantidadPlaneado).HasColumnName("doc_itemDocumento_cantidadPlaneado");
            entity.Property(e => e.DocItemDocumentoCostear).HasColumnName("doc_itemDocumento_costear");
            entity.Property(e => e.DocItemDocumentoCostoEjecutado).HasColumnName("doc_itemDocumento_costoEjecutado");
            entity.Property(e => e.DocItemDocumentoCostoPlaneado).HasColumnName("doc_itemDocumento_costoPlaneado");
            entity.Property(e => e.DocItemDocumentoDetalle)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_detalle");
            entity.Property(e => e.DocItemDocumentoDtoEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_dtoEjecutado");
            entity.Property(e => e.DocItemDocumentoDtoPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_dtoPlaneado");
            entity.Property(e => e.DocItemDocumentoEsUrgente).HasColumnName("doc_itemDocumento_esUrgente");
            entity.Property(e => e.DocItemDocumentoHorasFestivas).HasColumnName("doc_itemDocumento_horasFestivas");
            entity.Property(e => e.DocItemDocumentoHorasGarantia).HasColumnName("doc_itemDocumento_horasGarantia");
            entity.Property(e => e.DocItemDocumentoHorasNocturnas).HasColumnName("doc_itemDocumento_horasNocturnas");
            entity.Property(e => e.DocItemDocumentoHorasOrdinales).HasColumnName("doc_itemDocumento_horasOrdinales");
            entity.Property(e => e.DocItemDocumentoIdBodega).HasColumnName("doc_itemDocumento_id_bodega");
            entity.Property(e => e.DocItemDocumentoIdCatalogo).HasColumnName("doc_itemDocumento_id_catalogo");
            entity.Property(e => e.DocItemDocumentoIdCentroCosto).HasColumnName("doc_itemDocumento_id_centroCosto");
            entity.Property(e => e.DocItemDocumentoIdDocumento).HasColumnName("doc_itemDocumento_id_documento");
            entity.Property(e => e.DocItemDocumentoIdIncoterm).HasColumnName("doc_itemDocumento_id_incoterm");
            entity.Property(e => e.DocItemDocumentoIdItemDocumento).HasColumnName("doc_itemDocumento_id_itemDocumento");
            entity.Property(e => e.DocItemDocumentoIdItemDocumentoSuperior).HasColumnName("doc_itemDocumento_id_itemDocumento_superior");
            entity.Property(e => e.DocItemDocumentoIdListaprecio).HasColumnName("doc_itemDocumento_id_listaprecio");
            entity.Property(e => e.DocItemDocumentoItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_itemDocumento");
            entity.Property(e => e.DocItemDocumentoItemDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_itemDocumento_codigo");
            entity.Property(e => e.DocItemDocumentoIvaEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_ivaEjecutado");
            entity.Property(e => e.DocItemDocumentoIvaPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_ivaPlaneado");
            entity.Property(e => e.DocItemDocumentoPorcdto).HasColumnName("doc_itemDocumento_porcdto");
            entity.Property(e => e.DocItemDocumentoPorcentajeCliente).HasColumnName("doc_itemDocumento_porcentajeCliente");
            entity.Property(e => e.DocItemDocumentoPorcentajeDistribuidor).HasColumnName("doc_itemDocumento_porcentajeDistribuidor");
            entity.Property(e => e.DocItemDocumentoPorcentajeFabricante).HasColumnName("doc_itemDocumento_porcentajeFabricante");
            entity.Property(e => e.DocItemDocumentoPorciva).HasColumnName("doc_itemDocumento_porciva");
            entity.Property(e => e.DocItemDocumentoSubtotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_subtotalEjecutado");
            entity.Property(e => e.DocItemDocumentoSubtotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_subtotalPlaneado");
            entity.Property(e => e.DocItemDocumentoTotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_totalEjecutado");
            entity.Property(e => e.DocItemDocumentoTotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_totalPlaneado");
            entity.Property(e => e.DocItemDocumentoValorUnitarioEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_valorUnitarioEjecutado");
            entity.Property(e => e.DocItemDocumentoValorUnitarioPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_valorUnitarioPlaneado");
            entity.Property(e => e.DocItemDocumentoVencimientoGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_itemDocumento_vencimientoGarantia_ff");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquDetalleAlquilerCantidadAlquilada).HasColumnName("equ_detalleAlquiler_cantidadAlquilada");
            entity.Property(e => e.EquDetalleAlquilerCantidadSolicitada).HasColumnName("equ_detalleAlquiler_cantidadSolicitada");
            entity.Property(e => e.EquDetalleAlquilerDetalleAlquiler)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_detalleAlquiler_detalleAlquiler");
            entity.Property(e => e.EquDetalleAlquilerDetalleAlquilerCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_detalleAlquiler_detalleAlquiler_codigo");
            entity.Property(e => e.EquDetalleAlquilerEstadoalquiler).HasColumnName("equ_detalleAlquiler_estadoalquiler");
            entity.Property(e => e.EquDetalleAlquilerFechaDespachoFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_detalleAlquiler_fechaDespacho_ff");
            entity.Property(e => e.EquDetalleAlquilerFechaDevolucionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_detalleAlquiler_fechaDevolucion_ff");
            entity.Property(e => e.EquDetalleAlquilerFechaInicioFacturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_detalleAlquiler_fechaInicioFactura_fh");
            entity.Property(e => e.EquDetalleAlquilerFechaUltimaFacturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_detalleAlquiler_fechaUltimaFactura_fh");
            entity.Property(e => e.EquDetalleAlquilerIdCatalogo).HasColumnName("equ_detalleAlquiler_id_catalogo");
            entity.Property(e => e.EquDetalleAlquilerIdDocumentoAlquiler).HasColumnName("equ_detalleAlquiler_id_documento.alquiler");
            entity.Property(e => e.EquDetalleAlquilerIdEquipo).HasColumnName("equ_detalleAlquiler_id_equipo");
            entity.Property(e => e.EquDetalleAlquilerIdSucursal).HasColumnName("equ_detalleAlquiler_id_sucursal");
            entity.Property(e => e.EquDetalleAlquilerIdTercero).HasColumnName("equ_detalleAlquiler_id_tercero");
            entity.Property(e => e.EquDetalleAlquilerValorHora)
                .HasColumnType("money")
                .HasColumnName("equ_detalleAlquiler_valorHora");
            entity.Property(e => e.EquDetalleAlquilerValorHoraStandBy)
                .HasColumnType("money")
                .HasColumnName("equ_detalleAlquiler_ValorHoraStandBy");
            entity.Property(e => e.EquDetalleAlquilerValorMes).HasColumnName("equ_detalleAlquiler_valorMes");
            entity.Property(e => e.EquDetalleAlquilerValorMulta)
                .HasColumnType("money")
                .HasColumnName("equ_detalleAlquiler_valorMulta");
            entity.Property(e => e.EquDetalleAlquilerValorPeriodo)
                .HasColumnType("money")
                .HasColumnName("equ_detalleAlquiler_valorPeriodo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDetallealquiler).HasColumnName("id_detallealquiler");
            entity.Property(e => e.IdItemdocumento).HasColumnName("id_itemdocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewAlqHistoricoAlquiler>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_alq_historicoAlquiler");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocDocumentoCosto).HasColumnName("doc_documento_costo");
            entity.Property(e => e.DocDocumentoCostoPlaneado).HasColumnName("doc_documento_costoPlaneado");
            entity.Property(e => e.DocDocumentoDescuento).HasColumnName("doc_documento_descuento");
            entity.Property(e => e.DocDocumentoDescuentoPlaneado).HasColumnName("doc_documento_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento");
            entity.Property(e => e.DocDocumentoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento_codigo");
            entity.Property(e => e.DocDocumentoDocumentoNumero).HasColumnName("doc_documento_documento_numero");
            entity.Property(e => e.DocDocumentoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fecha_fh");
            entity.Property(e => e.DocDocumentoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoIdDocumento).HasColumnName("doc_documento_id_documento");
            entity.Property(e => e.DocDocumentoIdEstadoTipoDocumento).HasColumnName("doc_documento_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoIdMoneda).HasColumnName("doc_documento_id_moneda");
            entity.Property(e => e.DocDocumentoIdMotivoestado).HasColumnName("doc_documento_id_motivoestado");
            entity.Property(e => e.DocDocumentoIdPrioridadDocumento).HasColumnName("doc_documento_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoIdSubtipoDocumento).HasColumnName("doc_documento_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoIdTerceroCliente).HasColumnName("doc_documento_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoIdTerceroProveedor).HasColumnName("doc_documento_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoIdUsuarioAsignado).HasColumnName("doc_documento_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoIva).HasColumnName("doc_documento_iva");
            entity.Property(e => e.DocDocumentoIvaPlaneado).HasColumnName("doc_documento_ivaPlaneado");
            entity.Property(e => e.DocDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_prefijo");
            entity.Property(e => e.DocDocumentoRentabilidad).HasColumnName("doc_documento_rentabilidad");
            entity.Property(e => e.DocDocumentoSubtotal).HasColumnName("doc_documento_subtotal");
            entity.Property(e => e.DocDocumentoSubtotalPlaneado).HasColumnName("doc_documento_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoTotal).HasColumnName("doc_documento_total");
            entity.Property(e => e.DocDocumentoTotalPlaneado).HasColumnName("doc_documento_totalPlaneado");
            entity.Property(e => e.DocDocumentoTrm).HasColumnName("doc_documento_trm");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquEquipoCosto)
                .HasColumnType("money")
                .HasColumnName("equ_equipo_costo");
            entity.Property(e => e.EquEquipoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo");
            entity.Property(e => e.EquEquipoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_codigo");
            entity.Property(e => e.EquEquipoEquipoSerial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_serial");
            entity.Property(e => e.EquEquipoFechaImportacionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaImportacion_ff");
            entity.Property(e => e.EquEquipoFechaPuestaMarchaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaPuestaMarcha_fh");
            entity.Property(e => e.EquEquipoGarantiaCancelada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_garantiaCancelada");
            entity.Property(e => e.EquEquipoHorasGarantia).HasColumnName("equ_equipo_horasGarantia");
            entity.Property(e => e.EquEquipoHorometroActual).HasColumnName("equ_equipo_horometroActual");
            entity.Property(e => e.EquEquipoIdCatalogoEquipo).HasColumnName("equ_equipo_id_catalogo.equipo");
            entity.Property(e => e.EquEquipoIdCentroCosto).HasColumnName("equ_equipo_id_centroCosto");
            entity.Property(e => e.EquEquipoIdEquipo).HasColumnName("equ_equipo_id_equipo");
            entity.Property(e => e.EquEquipoIdEstadoEquipo).HasColumnName("equ_equipo_id_estadoEquipo");
            entity.Property(e => e.EquEquipoIdSistema).HasColumnName("equ_equipo_id_sistema");
            entity.Property(e => e.EquEquipoIdSucursal).HasColumnName("equ_equipo_id_sucursal");
            entity.Property(e => e.EquEquipoIdTercero).HasColumnName("equ_equipo_id_tercero");
            entity.Property(e => e.EquEquipoIdTerceroComprador).HasColumnName("equ_equipo_id_tercero_comprador");
            entity.Property(e => e.EquEquipoIdTerceroServicio).HasColumnName("equ_equipo_id_tercero_servicio");
            entity.Property(e => e.EquEquipoIdVersionEquipo).HasColumnName("equ_equipo_id_versionEquipo");
            entity.Property(e => e.EquEquipoIdZona).HasColumnName("equ_equipo_id_zona");
            entity.Property(e => e.EquEquipoNombreContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_nombreContacto");
            entity.Property(e => e.EquEquipoObservaciones)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_observaciones");
            entity.Property(e => e.EquEquipoPromedioHoras).HasColumnName("equ_equipo_promedioHoras");
            entity.Property(e => e.EquEquipoTelefonoContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_telefonoContacto");
            entity.Property(e => e.EquEquipoUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_ubicacion");
            entity.Property(e => e.EquEquipoUltimaLecturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_ultimaLectura_fh");
            entity.Property(e => e.EquEquipoVencimientoGarantiaDistribuidorFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaDistribuidor_ff");
            entity.Property(e => e.EquEquipoVencimientoGarantiaFabricaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaFabrica_ff");
            entity.Property(e => e.EquEstadoEquipoActivo).HasColumnName("equ_estadoEquipo_activo");
            entity.Property(e => e.EquEstadoEquipoEstadoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_estadoEquipo_estadoEquipo");
            entity.Property(e => e.EquEstadoEquipoEstadoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_estadoEquipo_estadoEquipo_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaEstado)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaEstado");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.HistoricoAlquiler)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("historicoAlquiler");
            entity.Property(e => e.HistoricoAlquilerCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("historicoAlquiler_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdEstadoEquipo).HasColumnName("id_estadoEquipo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewAlqTarifa>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_alq_tarifa");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.AlqTipoTarifaTipoTarifa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("alq_tipoTarifa_tipoTarifa");
            entity.Property(e => e.AlqTipoTarifaTipoTarifaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("alq_tipoTarifa_tipoTarifa_codigo");
            entity.Property(e => e.AlqTipoTarifaValor)
                .HasColumnType("decimal(10, 1)")
                .HasColumnName("alq_tipoTarifa_valor");
            entity.Property(e => e.CantidadIncluida).HasColumnName("cantidadIncluida");
            entity.Property(e => e.DocItemDocumentoAfectoInventario).HasColumnName("doc_itemDocumento_afectoInventario");
            entity.Property(e => e.DocItemDocumentoCantidadEjecutado).HasColumnName("doc_itemDocumento_cantidadEjecutado");
            entity.Property(e => e.DocItemDocumentoCantidadPlaneado).HasColumnName("doc_itemDocumento_cantidadPlaneado");
            entity.Property(e => e.DocItemDocumentoCostear).HasColumnName("doc_itemDocumento_costear");
            entity.Property(e => e.DocItemDocumentoCostoEjecutado).HasColumnName("doc_itemDocumento_costoEjecutado");
            entity.Property(e => e.DocItemDocumentoCostoPlaneado).HasColumnName("doc_itemDocumento_costoPlaneado");
            entity.Property(e => e.DocItemDocumentoDetalle)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_detalle");
            entity.Property(e => e.DocItemDocumentoDtoEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_dtoEjecutado");
            entity.Property(e => e.DocItemDocumentoDtoPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_dtoPlaneado");
            entity.Property(e => e.DocItemDocumentoEsUrgente).HasColumnName("doc_itemDocumento_esUrgente");
            entity.Property(e => e.DocItemDocumentoHorasFestivas).HasColumnName("doc_itemDocumento_horasFestivas");
            entity.Property(e => e.DocItemDocumentoHorasGarantia).HasColumnName("doc_itemDocumento_horasGarantia");
            entity.Property(e => e.DocItemDocumentoHorasNocturnas).HasColumnName("doc_itemDocumento_horasNocturnas");
            entity.Property(e => e.DocItemDocumentoHorasOrdinales).HasColumnName("doc_itemDocumento_horasOrdinales");
            entity.Property(e => e.DocItemDocumentoIdBodega).HasColumnName("doc_itemDocumento_id_bodega");
            entity.Property(e => e.DocItemDocumentoIdCatalogo).HasColumnName("doc_itemDocumento_id_catalogo");
            entity.Property(e => e.DocItemDocumentoIdCentroCosto).HasColumnName("doc_itemDocumento_id_centroCosto");
            entity.Property(e => e.DocItemDocumentoIdDocumento).HasColumnName("doc_itemDocumento_id_documento");
            entity.Property(e => e.DocItemDocumentoIdIncoterm).HasColumnName("doc_itemDocumento_id_incoterm");
            entity.Property(e => e.DocItemDocumentoIdItemDocumento).HasColumnName("doc_itemDocumento_id_itemDocumento");
            entity.Property(e => e.DocItemDocumentoIdItemDocumentoSuperior).HasColumnName("doc_itemDocumento_id_itemDocumento_superior");
            entity.Property(e => e.DocItemDocumentoIdListaprecio).HasColumnName("doc_itemDocumento_id_listaprecio");
            entity.Property(e => e.DocItemDocumentoItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_itemDocumento");
            entity.Property(e => e.DocItemDocumentoItemDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_itemDocumento_codigo");
            entity.Property(e => e.DocItemDocumentoIvaEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_ivaEjecutado");
            entity.Property(e => e.DocItemDocumentoIvaPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_ivaPlaneado");
            entity.Property(e => e.DocItemDocumentoPorcdto).HasColumnName("doc_itemDocumento_porcdto");
            entity.Property(e => e.DocItemDocumentoPorcentajeCliente).HasColumnName("doc_itemDocumento_porcentajeCliente");
            entity.Property(e => e.DocItemDocumentoPorcentajeDistribuidor).HasColumnName("doc_itemDocumento_porcentajeDistribuidor");
            entity.Property(e => e.DocItemDocumentoPorcentajeFabricante).HasColumnName("doc_itemDocumento_porcentajeFabricante");
            entity.Property(e => e.DocItemDocumentoPorciva).HasColumnName("doc_itemDocumento_porciva");
            entity.Property(e => e.DocItemDocumentoSubtotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_subtotalEjecutado");
            entity.Property(e => e.DocItemDocumentoSubtotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_subtotalPlaneado");
            entity.Property(e => e.DocItemDocumentoTotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_totalEjecutado");
            entity.Property(e => e.DocItemDocumentoTotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_totalPlaneado");
            entity.Property(e => e.DocItemDocumentoValorUnitarioEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_valorUnitarioEjecutado");
            entity.Property(e => e.DocItemDocumentoValorUnitarioPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_valorUnitarioPlaneado");
            entity.Property(e => e.DocItemDocumentoVencimientoGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_itemDocumento_vencimientoGarantia_ff");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquDetalleAlquilerCantidadAlquilada).HasColumnName("equ_detalleAlquiler_cantidadAlquilada");
            entity.Property(e => e.EquDetalleAlquilerCantidadSolicitada).HasColumnName("equ_detalleAlquiler_cantidadSolicitada");
            entity.Property(e => e.EquDetalleAlquilerDetalleAlquiler)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_detalleAlquiler_detalleAlquiler");
            entity.Property(e => e.EquDetalleAlquilerDetalleAlquilerCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_detalleAlquiler_detalleAlquiler_codigo");
            entity.Property(e => e.EquDetalleAlquilerEstadoalquiler).HasColumnName("equ_detalleAlquiler_estadoalquiler");
            entity.Property(e => e.EquDetalleAlquilerFechaDespachoFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_detalleAlquiler_fechaDespacho_ff");
            entity.Property(e => e.EquDetalleAlquilerFechaDevolucionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_detalleAlquiler_fechaDevolucion_ff");
            entity.Property(e => e.EquDetalleAlquilerFechaInicioFacturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_detalleAlquiler_fechaInicioFactura_fh");
            entity.Property(e => e.EquDetalleAlquilerFechaUltimaFacturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_detalleAlquiler_fechaUltimaFactura_fh");
            entity.Property(e => e.EquDetalleAlquilerIdCatalogo).HasColumnName("equ_detalleAlquiler_id_catalogo");
            entity.Property(e => e.EquDetalleAlquilerIdDocumentoAlquiler).HasColumnName("equ_detalleAlquiler_id_documento.alquiler");
            entity.Property(e => e.EquDetalleAlquilerIdEquipo).HasColumnName("equ_detalleAlquiler_id_equipo");
            entity.Property(e => e.EquDetalleAlquilerIdSucursal).HasColumnName("equ_detalleAlquiler_id_sucursal");
            entity.Property(e => e.EquDetalleAlquilerIdTercero).HasColumnName("equ_detalleAlquiler_id_tercero");
            entity.Property(e => e.EquDetalleAlquilerValorHora)
                .HasColumnType("money")
                .HasColumnName("equ_detalleAlquiler_valorHora");
            entity.Property(e => e.EquDetalleAlquilerValorHoraStandBy)
                .HasColumnType("money")
                .HasColumnName("equ_detalleAlquiler_ValorHoraStandBy");
            entity.Property(e => e.EquDetalleAlquilerValorMes).HasColumnName("equ_detalleAlquiler_valorMes");
            entity.Property(e => e.EquDetalleAlquilerValorMulta)
                .HasColumnType("money")
                .HasColumnName("equ_detalleAlquiler_valorMulta");
            entity.Property(e => e.EquDetalleAlquilerValorPeriodo)
                .HasColumnType("money")
                .HasColumnName("equ_detalleAlquiler_valorPeriodo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.HorasIncluidas).HasColumnName("horasIncluidas");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDetalleAlquiler).HasColumnName("id_detalleAlquiler");
            entity.Property(e => e.IdItemDocumento).HasColumnName("id_itemDocumento");
            entity.Property(e => e.IdTipoTarifa).HasColumnName("id_tipoTarifa");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Tarifa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tarifa");
            entity.Property(e => e.TarifaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tarifa_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewAlqTipoTarifa>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_alq_tipoTarifa");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TipoTarifa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoTarifa");
            entity.Property(e => e.TipoTarifaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoTarifa_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor)
                .HasColumnType("decimal(10, 1)")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<ViewCatAtributo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_atributo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Atributo)
                .HasMaxLength(900)
                .IsUnicode(false)
                .HasColumnName("atributo");
            entity.Property(e => e.AtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("atributo_codigo");
            entity.Property(e => e.CatSeccionAtributoIdUsoSeccionAtributo).HasColumnName("cat_seccionAtributo_id_usoSeccionAtributo");
            entity.Property(e => e.CatSeccionAtributoOrden).HasColumnName("cat_seccionAtributo_orden");
            entity.Property(e => e.CatSeccionAtributoSeccionAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_seccionAtributo_seccionAtributo");
            entity.Property(e => e.CatSeccionAtributoSeccionAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_seccionAtributo_seccionAtributo_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquTipoAtributoPrefijoControl)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("equ_tipoAtributo_prefijoControl");
            entity.Property(e => e.EquTipoAtributoTipoAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_tipoAtributo_tipoAtributo");
            entity.Property(e => e.EquTipoAtributoTipoAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_tipoAtributo_tipoAtributo_codigo");
            entity.Property(e => e.EsObligatorio).HasColumnName("esObligatorio");
            entity.Property(e => e.EsVariable).HasColumnName("esVariable");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenUnidadUnidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_unidad_unidad");
            entity.Property(e => e.GenUnidadUnidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_unidad_unidad_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdSeccionAtributo).HasColumnName("id_seccionAtributo");
            entity.Property(e => e.IdTipoAtributo).HasColumnName("id_tipoAtributo");
            entity.Property(e => e.IdUnidad).HasColumnName("id_unidad");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.NombreControl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombreControl");
            entity.Property(e => e.Resaltado).HasColumnName("resaltado");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorMinimo).HasColumnName("valorMinimo");
        });

        modelBuilder.Entity<ViewCatAtributoOpcionAtributo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_atributo_opcionAtributo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.AtributoOpcionAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("atributo_opcionAtributo");
            entity.Property(e => e.CatAtributoAtributo)
                .HasMaxLength(900)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_atributo");
            entity.Property(e => e.CatAtributoAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_atributo_codigo");
            entity.Property(e => e.CatAtributoEsObligatorio).HasColumnName("cat_atributo_esObligatorio");
            entity.Property(e => e.CatAtributoEsVariable).HasColumnName("cat_atributo_esVariable");
            entity.Property(e => e.CatAtributoIdSeccionAtributo).HasColumnName("cat_atributo_id_seccionAtributo");
            entity.Property(e => e.CatAtributoIdTipoAtributo).HasColumnName("cat_atributo_id_tipoAtributo");
            entity.Property(e => e.CatAtributoIdUnidad).HasColumnName("cat_atributo_id_unidad");
            entity.Property(e => e.CatAtributoNombreControl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_nombreControl");
            entity.Property(e => e.CatAtributoResaltado).HasColumnName("cat_atributo_resaltado");
            entity.Property(e => e.CatAtributoValorMaximo).HasColumnName("cat_atributo_ValorMaximo");
            entity.Property(e => e.CatAtributoValorMinimo).HasColumnName("cat_atributo_valorMinimo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquOpcionAtributoIdAtributo).HasColumnName("equ_opcionAtributo_id_atributo");
            entity.Property(e => e.EquOpcionAtributoOpcionAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_opcionAtributo_opcionAtributo");
            entity.Property(e => e.EquOpcionAtributoOpcionAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_opcionAtributo_opcionAtributo_codigo");
            entity.Property(e => e.EquOpcionAtributoOrden).HasColumnName("equ_opcionAtributo_orden");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdAtributo).HasColumnName("id_atributo");
            entity.Property(e => e.IdOpcionAtributo).HasColumnName("id_opcionAtributo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatCatalogo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_catalogo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.BloquearCostear).HasColumnName("bloquearCostear");
            entity.Property(e => e.CatSubtipoCatalogoIdTipoCatalogo).HasColumnName("cat_subtipoCatalogo_id_tipoCatalogo");
            entity.Property(e => e.CatSubtipoCatalogoSubtipoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_subtipoCatalogo_subtipoCatalogo");
            entity.Property(e => e.CatSubtipoCatalogoSubtipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_subtipoCatalogo_subtipoCatalogo_codigo");
            entity.Property(e => e.Catalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo");
            entity.Property(e => e.CatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("catalogo_codigo");
            entity.Property(e => e.CodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("codigoInventario");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsNacional).HasColumnName("esNacional");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenFamiliaFamilia)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_familia_familia");
            entity.Property(e => e.GenFamiliaFamiliaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_familia_familia_codigo");
            entity.Property(e => e.GenFamiliaIdFamilia).HasColumnName("gen_familia_id_familia");
            entity.Property(e => e.GenImpuestoImpuesto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_impuesto_impuesto");
            entity.Property(e => e.GenImpuestoImpuestoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_impuesto_impuesto_codigo");
            entity.Property(e => e.GenImpuestoValor).HasColumnName("gen_impuesto_valor");
            entity.Property(e => e.GenUnidadUnidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_unidad_unidad");
            entity.Property(e => e.GenUnidadUnidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_unidad_unidad_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdFamilia).HasColumnName("id_familia");
            entity.Property(e => e.IdImpuesto).HasColumnName("id_impuesto");
            entity.Property(e => e.IdSubtipoCatalogo).HasColumnName("id_subtipoCatalogo");
            entity.Property(e => e.IdUnidad).HasColumnName("id_unidad");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PrecioVenta)
                .HasColumnType("money")
                .HasColumnName("precioVenta");
            entity.Property(e => e.TiempoConsecucion).HasColumnName("tiempoConsecucion");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatCatalogoActividad>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_catalogo_actividad");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoActividadBloquearCostear).HasColumnName("cat_catalogo_actividad_bloquearCostear");
            entity.Property(e => e.CatCatalogoActividadCatSubtipoCatalogoIdTipoCatalogo).HasColumnName("cat_catalogo_actividad_cat_subtipoCatalogo_id_tipoCatalogo");
            entity.Property(e => e.CatCatalogoActividadCatSubtipoCatalogoSubtipoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_actividad_cat_subtipoCatalogo_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoActividadCatSubtipoCatalogoSubtipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_actividad_cat_subtipoCatalogo_subtipoCatalogo_codigo");
            entity.Property(e => e.CatCatalogoActividadCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_actividad_catalogo_codigo");
            entity.Property(e => e.CatCatalogoActividadCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_actividad_codigoInventario");
            entity.Property(e => e.CatCatalogoActividadDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_actividad_descripcion");
            entity.Property(e => e.CatCatalogoActividadEsNacional).HasColumnName("cat_catalogo_actividad_esNacional");
            entity.Property(e => e.CatCatalogoActividadGenFamiliaFamilia)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_actividad_gen_familia_familia");
            entity.Property(e => e.CatCatalogoActividadGenFamiliaFamiliaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_actividad_gen_familia_familia_codigo");
            entity.Property(e => e.CatCatalogoActividadGenFamiliaIdFamilia).HasColumnName("cat_catalogo_actividad_gen_familia_id_familia");
            entity.Property(e => e.CatCatalogoActividadGenImpuestoImpuesto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_actividad_gen_impuesto_impuesto");
            entity.Property(e => e.CatCatalogoActividadGenImpuestoImpuestoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_actividad_gen_impuesto_impuesto_codigo");
            entity.Property(e => e.CatCatalogoActividadGenImpuestoValor).HasColumnName("cat_catalogo_actividad_gen_impuesto_valor");
            entity.Property(e => e.CatCatalogoActividadGenUnidadUnidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_actividad_gen_unidad_unidad");
            entity.Property(e => e.CatCatalogoActividadGenUnidadUnidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_actividad_gen_unidad_unidad_codigo");
            entity.Property(e => e.CatCatalogoActividadIdFamilia).HasColumnName("cat_catalogo_actividad_id_familia");
            entity.Property(e => e.CatCatalogoActividadIdImpuesto).HasColumnName("cat_catalogo_actividad_id_impuesto");
            entity.Property(e => e.CatCatalogoActividadIdSubtipoCatalogo).HasColumnName("cat_catalogo_actividad_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoActividadIdUnidad).HasColumnName("cat_catalogo_actividad_id_unidad");
            entity.Property(e => e.CatCatalogoActividadPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_actividad_precioVenta");
            entity.Property(e => e.CatCatalogoActividadTiempoConsecucion).HasColumnName("cat_catalogo_actividad_tiempoConsecucion");
            entity.Property(e => e.CatalogoActividad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo.actividad");
            entity.Property(e => e.DiasGarantia).HasColumnName("dias_garantia");
            entity.Property(e => e.DuracionEstimada).HasColumnName("duracionEstimada");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsProductiva).HasColumnName("esProductiva");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Procedimiento)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("procedimiento");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatCatalogoBodega>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_catalogo_bodega");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoBloquearCostear).HasColumnName("cat_catalogo_bloquearCostear");
            entity.Property(e => e.CatCatalogoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo");
            entity.Property(e => e.CatCatalogoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_codigoInventario");
            entity.Property(e => e.CatCatalogoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_descripcion");
            entity.Property(e => e.CatCatalogoEsNacional).HasColumnName("cat_catalogo_esNacional");
            entity.Property(e => e.CatCatalogoIdFamilia).HasColumnName("cat_catalogo_id_familia");
            entity.Property(e => e.CatCatalogoIdImpuesto).HasColumnName("cat_catalogo_id_impuesto");
            entity.Property(e => e.CatCatalogoIdSubTipoCatalogo).HasColumnName("cat_catalogo_id_subTipoCatalogo");
            entity.Property(e => e.CatCatalogoIdUnidad).HasColumnName("cat_catalogo_id_unidad");
            entity.Property(e => e.CatCatalogoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_precioVenta");
            entity.Property(e => e.CatCatalogoTiempoConsecucion).HasColumnName("cat_catalogo_tiempoConsecucion");
            entity.Property(e => e.CatalogoBodega)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo_bodega");
            entity.Property(e => e.Costo)
                .HasColumnType("money")
                .HasColumnName("costo");
            entity.Property(e => e.Disponible).HasColumnName("disponible");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EnOrdenes).HasColumnName("enOrdenes");
            entity.Property(e => e.Existencia).HasColumnName("existencia");
            entity.Property(e => e.ExistenciaMaxima).HasColumnName("existenciaMaxima");
            entity.Property(e => e.ExistenciaMinima).HasColumnName("existenciaMinima");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenBodegaBodega)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_bodega_bodega");
            entity.Property(e => e.GenBodegaBodegaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_bodega_bodega_codigo");
            entity.Property(e => e.GenBodegaSalidasEnRojo).HasColumnName("gen_bodega_salidasEnRojo");
            entity.Property(e => e.GenBodegaUsaLocalizacion).HasColumnName("gen_bodega_usaLocalizacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdBodega).HasColumnName("id_bodega");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Localizacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("localizacion");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Reservado).HasColumnName("reservado");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatCatalogoEquipo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_catalogo_equipo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoEquipoBloquearCostear).HasColumnName("cat_catalogo_equipo_bloquearCostear");
            entity.Property(e => e.CatCatalogoEquipoCatSubtipoCatalogoIdTipoCatalogo).HasColumnName("cat_catalogo_equipo_cat_subtipoCatalogo_id_tipoCatalogo");
            entity.Property(e => e.CatCatalogoEquipoCatSubtipoCatalogoSubtipoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_cat_subtipoCatalogo_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoEquipoCatSubtipoCatalogoSubtipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_cat_subtipoCatalogo_subtipoCatalogo_codigo");
            entity.Property(e => e.CatCatalogoEquipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoEquipoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_codigoInventario");
            entity.Property(e => e.CatCatalogoEquipoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_descripcion");
            entity.Property(e => e.CatCatalogoEquipoEsNacional).HasColumnName("cat_catalogo_equipo_esNacional");
            entity.Property(e => e.CatCatalogoEquipoGenFamiliaFamilia)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_gen_familia_familia");
            entity.Property(e => e.CatCatalogoEquipoGenFamiliaFamiliaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_gen_familia_familia_codigo");
            entity.Property(e => e.CatCatalogoEquipoGenFamiliaIdFamilia).HasColumnName("cat_catalogo_equipo_gen_familia_id_familia");
            entity.Property(e => e.CatCatalogoEquipoGenImpuestoImpuesto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_gen_impuesto_impuesto");
            entity.Property(e => e.CatCatalogoEquipoGenImpuestoImpuestoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_gen_impuesto_impuesto_codigo");
            entity.Property(e => e.CatCatalogoEquipoGenImpuestoValor).HasColumnName("cat_catalogo_equipo_gen_impuesto_valor");
            entity.Property(e => e.CatCatalogoEquipoGenUnidadUnidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_gen_unidad_unidad");
            entity.Property(e => e.CatCatalogoEquipoGenUnidadUnidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_gen_unidad_unidad_codigo");
            entity.Property(e => e.CatCatalogoEquipoIdFamilia).HasColumnName("cat_catalogo_equipo_id_familia");
            entity.Property(e => e.CatCatalogoEquipoIdImpuesto).HasColumnName("cat_catalogo_equipo_id_impuesto");
            entity.Property(e => e.CatCatalogoEquipoIdSubtipoCatalogo).HasColumnName("cat_catalogo_equipo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoEquipoIdUnidad).HasColumnName("cat_catalogo_equipo_id_unidad");
            entity.Property(e => e.CatCatalogoEquipoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_equipo_precioVenta");
            entity.Property(e => e.CatCatalogoEquipoTiempoConsecucion).HasColumnName("cat_catalogo_equipo_tiempoConsecucion");
            entity.Property(e => e.CatMarcaIdTerceroFabricante).HasColumnName("cat_marca_id_tercero_fabricante");
            entity.Property(e => e.CatMarcaMarca)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_marca_marca");
            entity.Property(e => e.CatMarcaMarcaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_marca_marca_codigo");
            entity.Property(e => e.CatalogoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo.equipo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GarantiaHoras).HasColumnName("garantiaHoras");
            entity.Property(e => e.GarantiaMeses).HasColumnName("garantiaMeses");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdMarca).HasColumnName("id_marca");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.ManejaHorometro).HasColumnName("manejaHorometro");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatCatalogoEquipoAtributo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_catalogo_equipo_atributo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.BloquearCierreOt).HasColumnName("bloquearCierreOT");
            entity.Property(e => e.CatAtributoAtributo)
                .HasMaxLength(900)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_atributo");
            entity.Property(e => e.CatAtributoAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_atributo_codigo");
            entity.Property(e => e.CatAtributoEsObligatorio).HasColumnName("cat_atributo_esObligatorio");
            entity.Property(e => e.CatAtributoEsVariable).HasColumnName("cat_atributo_esVariable");
            entity.Property(e => e.CatAtributoIdSeccionAtributo).HasColumnName("cat_atributo_id_seccionAtributo");
            entity.Property(e => e.CatAtributoIdTipoAtributo).HasColumnName("cat_atributo_id_tipoAtributo");
            entity.Property(e => e.CatAtributoIdUnidad).HasColumnName("cat_atributo_id_unidad");
            entity.Property(e => e.CatAtributoNombreControl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_nombreControl");
            entity.Property(e => e.CatAtributoResaltado).HasColumnName("cat_atributo_resaltado");
            entity.Property(e => e.CatAtributoValorMaximo).HasColumnName("cat_atributo_ValorMaximo");
            entity.Property(e => e.CatAtributoValorMinimo).HasColumnName("cat_atributo_valorMinimo");
            entity.Property(e => e.CatCatalogoEquipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoEquipoCatalogoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.equipo_catalogo.equipo");
            entity.Property(e => e.CatCatalogoEquipoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_codigoInventario");
            entity.Property(e => e.CatCatalogoEquipoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_descripcion");
            entity.Property(e => e.CatCatalogoEquipoEsNacional).HasColumnName("cat_catalogo_equipo_esNacional");
            entity.Property(e => e.CatCatalogoEquipoGarantiaHoras).HasColumnName("cat_catalogo.equipo_garantiaHoras");
            entity.Property(e => e.CatCatalogoEquipoGarantiaMeses).HasColumnName("cat_catalogo.equipo_garantiaMeses");
            entity.Property(e => e.CatCatalogoEquipoIdFamilia).HasColumnName("cat_catalogo_equipo_id_familia");
            entity.Property(e => e.CatCatalogoEquipoIdImpuesto).HasColumnName("cat_catalogo_equipo_id_impuesto");
            entity.Property(e => e.CatCatalogoEquipoIdMarca).HasColumnName("cat_catalogo.equipo_id_marca");
            entity.Property(e => e.CatCatalogoEquipoIdSubTipoCatalogo).HasColumnName("cat_catalogo_equipo_id_subTipoCatalogo");
            entity.Property(e => e.CatCatalogoEquipoIdUnidad).HasColumnName("cat_catalogo_equipo_id_unidad");
            entity.Property(e => e.CatCatalogoEquipoManejaHorometro).HasColumnName("cat_catalogo.equipo_manejaHorometro");
            entity.Property(e => e.CatCatalogoEquipoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_equipo_precioVenta");
            entity.Property(e => e.CatCatalogoEquipoTiempoConsecucion).HasColumnName("cat_catalogo_equipo_tiempoConsecucion");
            entity.Property(e => e.CatalogoEquipoAtributo)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("catalogo.equipo_atributo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdAtributo).HasColumnName("id_atributo");
            entity.Property(e => e.IdCatalogoEquipo).HasColumnName("id_catalogo.equipo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MostrarApi).HasColumnName("mostrarAPI");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Unidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("unidad");
            entity.Property(e => e.ValorMinimo).HasColumnName("valorMinimo");
        });

        modelBuilder.Entity<ViewCatCatalogoEquipoCatalogoTempario>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_catalogo_equipo_catalogo_tempario");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoEquipoBloquearCostear).HasColumnName("cat_catalogo_equipo_bloquearCostear");
            entity.Property(e => e.CatCatalogoEquipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoEquipoCatalogoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.equipo_catalogo.equipo");
            entity.Property(e => e.CatCatalogoEquipoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_codigoInventario");
            entity.Property(e => e.CatCatalogoEquipoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_descripcion");
            entity.Property(e => e.CatCatalogoEquipoEsNacional).HasColumnName("cat_catalogo_equipo_esNacional");
            entity.Property(e => e.CatCatalogoEquipoGarantiaHoras).HasColumnName("cat_catalogo.equipo_garantiaHoras");
            entity.Property(e => e.CatCatalogoEquipoGarantiaMeses).HasColumnName("cat_catalogo.equipo_garantiaMeses");
            entity.Property(e => e.CatCatalogoEquipoIdFamilia).HasColumnName("cat_catalogo_equipo_id_familia");
            entity.Property(e => e.CatCatalogoEquipoIdImpuesto).HasColumnName("cat_catalogo_equipo_id_impuesto");
            entity.Property(e => e.CatCatalogoEquipoIdMarca).HasColumnName("cat_catalogo.equipo_id_marca");
            entity.Property(e => e.CatCatalogoEquipoIdSubTipoCatalogo).HasColumnName("cat_catalogo_equipo_id_subTipoCatalogo");
            entity.Property(e => e.CatCatalogoEquipoIdUnidad).HasColumnName("cat_catalogo_equipo_id_unidad");
            entity.Property(e => e.CatCatalogoEquipoManejaHorometro).HasColumnName("cat_catalogo.equipo_manejaHorometro");
            entity.Property(e => e.CatCatalogoEquipoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_equipo_precioVenta");
            entity.Property(e => e.CatCatalogoEquipoTiempoConsecucion).HasColumnName("cat_catalogo_equipo_tiempoConsecucion");
            entity.Property(e => e.CatCatalogoTemparioBloquearCostear).HasColumnName("cat_catalogo_tempario_bloquearCostear");
            entity.Property(e => e.CatCatalogoTemparioCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_catalogo_codigo");
            entity.Property(e => e.CatCatalogoTemparioCatalogoTempario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.tempario_catalogo.tempario");
            entity.Property(e => e.CatCatalogoTemparioCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_codigoInventario");
            entity.Property(e => e.CatCatalogoTemparioDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_descripcion");
            entity.Property(e => e.CatCatalogoTemparioDetieneEquipos).HasColumnName("cat_catalogo.tempario_detieneEquipos");
            entity.Property(e => e.CatCatalogoTemparioDuracionEstimada).HasColumnName("cat_catalogo.tempario_duracionEstimada");
            entity.Property(e => e.CatCatalogoTemparioEnTaller).HasColumnName("cat_catalogo.tempario_enTaller");
            entity.Property(e => e.CatCatalogoTemparioEsCiclico).HasColumnName("cat_catalogo.tempario_esCiclico");
            entity.Property(e => e.CatCatalogoTemparioEsNacional).HasColumnName("cat_catalogo_tempario_esNacional");
            entity.Property(e => e.CatCatalogoTemparioFacturaTodo).HasColumnName("cat_catalogo.tempario_facturaTodo");
            entity.Property(e => e.CatCatalogoTemparioHorasDetencion).HasColumnName("cat_catalogo.tempario_horasDetencion");
            entity.Property(e => e.CatCatalogoTemparioIdFamilia).HasColumnName("cat_catalogo_tempario_id_familia");
            entity.Property(e => e.CatCatalogoTemparioIdImpuesto).HasColumnName("cat_catalogo_tempario_id_impuesto");
            entity.Property(e => e.CatCatalogoTemparioIdSubTipoCatalogo).HasColumnName("cat_catalogo_tempario_id_subTipoCatalogo");
            entity.Property(e => e.CatCatalogoTemparioIdTipoServicio).HasColumnName("cat_catalogo.tempario_id_tipoServicio");
            entity.Property(e => e.CatCatalogoTemparioIdUnidad).HasColumnName("cat_catalogo_tempario_id_unidad");
            entity.Property(e => e.CatCatalogoTemparioIncluirMenores).HasColumnName("cat_catalogo.tempario_incluirMenores");
            entity.Property(e => e.CatCatalogoTemparioModoAjuste).HasColumnName("cat_catalogo.tempario_modoAjuste");
            entity.Property(e => e.CatCatalogoTemparioPeriodoDias).HasColumnName("cat_catalogo.tempario_periodoDias");
            entity.Property(e => e.CatCatalogoTemparioPeriodoHoras).HasColumnName("cat_catalogo.tempario_periodoHoras");
            entity.Property(e => e.CatCatalogoTemparioPorcGarantia).HasColumnName("cat_catalogo.tempario_porcGarantia");
            entity.Property(e => e.CatCatalogoTemparioPorcTropicalizacion).HasColumnName("cat_catalogo.tempario_porcTropicalizacion");
            entity.Property(e => e.CatCatalogoTemparioPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_tempario_precioVenta");
            entity.Property(e => e.CatCatalogoTemparioProyectar).HasColumnName("cat_catalogo.tempario_proyectar");
            entity.Property(e => e.CatCatalogoTemparioTiempoConsecucion).HasColumnName("cat_catalogo_tempario_tiempoConsecucion");
            entity.Property(e => e.CatSubtipocatalogoSubtipocatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_subtipocatalogo_subtipocatalogo");
            entity.Property(e => e.CatalogoEquipoCatalogoTempario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo.equipo_catalogo.tempario");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogoEquipo).HasColumnName("id_catalogo.equipo");
            entity.Property(e => e.IdCatalogoTempario).HasColumnName("id_catalogo.tempario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatCatalogoEquipoPruebaCheckList>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_catalogo_equipo_pruebaCheckList");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoEquipoBloquearCostear).HasColumnName("cat_catalogo_equipo_bloquearCostear");
            entity.Property(e => e.CatCatalogoEquipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoEquipoCatalogoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.equipo_catalogo.equipo");
            entity.Property(e => e.CatCatalogoEquipoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_codigoInventario");
            entity.Property(e => e.CatCatalogoEquipoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_descripcion");
            entity.Property(e => e.CatCatalogoEquipoEsNacional).HasColumnName("cat_catalogo_equipo_esNacional");
            entity.Property(e => e.CatCatalogoEquipoGarantiaHoras).HasColumnName("cat_catalogo.equipo_garantiaHoras");
            entity.Property(e => e.CatCatalogoEquipoGarantiaMeses).HasColumnName("cat_catalogo.equipo_garantiaMeses");
            entity.Property(e => e.CatCatalogoEquipoIdFamilia).HasColumnName("cat_catalogo_equipo_id_familia");
            entity.Property(e => e.CatCatalogoEquipoIdImpuesto).HasColumnName("cat_catalogo_equipo_id_impuesto");
            entity.Property(e => e.CatCatalogoEquipoIdMarca).HasColumnName("cat_catalogo.equipo_id_marca");
            entity.Property(e => e.CatCatalogoEquipoIdSubtipoCatalogo).HasColumnName("cat_catalogo_equipo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoEquipoIdUnidad).HasColumnName("cat_catalogo_equipo_id_unidad");
            entity.Property(e => e.CatCatalogoEquipoManejaHorometro).HasColumnName("cat_catalogo.equipo_manejaHorometro");
            entity.Property(e => e.CatCatalogoEquipoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_equipo_precioVenta");
            entity.Property(e => e.CatCatalogoEquipoTiempoConsecucion).HasColumnName("cat_catalogo_equipo_tiempoConsecucion");
            entity.Property(e => e.CatPruebaCheckListPruebaCheckList)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_pruebaCheckList_pruebaCheckList");
            entity.Property(e => e.CatPruebaCheckListPruebaCheckListCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_pruebaCheckList_pruebaCheckList_codigo");
            entity.Property(e => e.CatalogoEquipoPruebaCheckList)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo.equipo_pruebaCheckList");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogoEquipo).HasColumnName("id_catalogo.equipo");
            entity.Property(e => e.IdPruebaCheckList).HasColumnName("id_pruebaCheckList");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatCatalogoListaPrecio>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_catalogo_listaPrecio");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoBloquearCostear).HasColumnName("cat_catalogo_bloquearCostear");
            entity.Property(e => e.CatCatalogoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo");
            entity.Property(e => e.CatCatalogoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_codigoInventario");
            entity.Property(e => e.CatCatalogoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_descripcion");
            entity.Property(e => e.CatCatalogoEsNacional).HasColumnName("cat_catalogo_esNacional");
            entity.Property(e => e.CatCatalogoIdFamilia).HasColumnName("cat_catalogo_id_familia");
            entity.Property(e => e.CatCatalogoIdImpuesto).HasColumnName("cat_catalogo_id_impuesto");
            entity.Property(e => e.CatCatalogoIdSubtipoCatalogo).HasColumnName("cat_catalogo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoIdUnidad).HasColumnName("cat_catalogo_id_unidad");
            entity.Property(e => e.CatCatalogoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_precioVenta");
            entity.Property(e => e.CatCatalogoTiempoConsecucion).HasColumnName("cat_catalogo_tiempoConsecucion");
            entity.Property(e => e.CatListaPrecioEsPrivado).HasColumnName("cat_listaPrecio_esPrivado");
            entity.Property(e => e.CatListaPrecioIdMoneda).HasColumnName("cat_listaPrecio_id_moneda");
            entity.Property(e => e.CatListaPrecioListaPrecio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_listaPrecio_listaPrecio");
            entity.Property(e => e.CatListaPrecioListaPrecioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_listaPrecio_listaPrecio_codigo");
            entity.Property(e => e.CatListaPrecioParaCompra).HasColumnName("cat_listaPrecio_paraCompra");
            entity.Property(e => e.CatListaPrecioPorcentajeDescuento).HasColumnName("cat_listaPrecio_porcentajeDescuento");
            entity.Property(e => e.CatalogoListaPrecio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo_listaPrecio");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdListaPrecio).HasColumnName("id_listaPrecio");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PorcDto).HasColumnName("porcDto");
            entity.Property(e => e.PrecioVenta).HasColumnType("money");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatCatalogoOtro>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_catalogo_otro");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoOtroBloquearCostear).HasColumnName("cat_catalogo_otro_bloquearCostear");
            entity.Property(e => e.CatCatalogoOtroCatSubtipoCatalogoIdTipoCatalogo).HasColumnName("cat_catalogo_otro_cat_subtipoCatalogo_id_tipoCatalogo");
            entity.Property(e => e.CatCatalogoOtroCatSubtipoCatalogoSubtipoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_otro_cat_subtipoCatalogo_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoOtroCatSubtipoCatalogoSubtipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_otro_cat_subtipoCatalogo_subtipoCatalogo_codigo");
            entity.Property(e => e.CatCatalogoOtroCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_otro_catalogo_codigo");
            entity.Property(e => e.CatCatalogoOtroCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_otro_codigoInventario");
            entity.Property(e => e.CatCatalogoOtroDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_otro_descripcion");
            entity.Property(e => e.CatCatalogoOtroEsNacional).HasColumnName("cat_catalogo_otro_esNacional");
            entity.Property(e => e.CatCatalogoOtroGenFamiliaFamilia)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_otro_gen_familia_familia");
            entity.Property(e => e.CatCatalogoOtroGenFamiliaFamiliaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_otro_gen_familia_familia_codigo");
            entity.Property(e => e.CatCatalogoOtroGenFamiliaIdFamilia).HasColumnName("cat_catalogo_otro_gen_familia_id_familia");
            entity.Property(e => e.CatCatalogoOtroGenImpuestoImpuesto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_otro_gen_impuesto_impuesto");
            entity.Property(e => e.CatCatalogoOtroGenImpuestoImpuestoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_otro_gen_impuesto_impuesto_codigo");
            entity.Property(e => e.CatCatalogoOtroGenImpuestoValor).HasColumnName("cat_catalogo_otro_gen_impuesto_valor");
            entity.Property(e => e.CatCatalogoOtroGenUnidadUnidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_otro_gen_unidad_unidad");
            entity.Property(e => e.CatCatalogoOtroGenUnidadUnidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_otro_gen_unidad_unidad_codigo");
            entity.Property(e => e.CatCatalogoOtroIdFamilia).HasColumnName("cat_catalogo_otro_id_familia");
            entity.Property(e => e.CatCatalogoOtroIdImpuesto).HasColumnName("cat_catalogo_otro_id_impuesto");
            entity.Property(e => e.CatCatalogoOtroIdSubTipoCatalogo).HasColumnName("cat_catalogo_otro_id_subTipoCatalogo");
            entity.Property(e => e.CatCatalogoOtroIdUnidad).HasColumnName("cat_catalogo_otro_id_unidad");
            entity.Property(e => e.CatCatalogoOtroPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_otro_precioVenta");
            entity.Property(e => e.CatCatalogoOtroTiempoConsecucion).HasColumnName("cat_catalogo_otro_tiempoConsecucion");
            entity.Property(e => e.CatalogoOtro)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo.otro");
            entity.Property(e => e.Costo)
                .HasColumnType("money")
                .HasColumnName("costo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PeriodoAlquiler).HasColumnName("periodoAlquiler");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatCatalogoProducto>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_catalogo_producto");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoProductoBloquearCostear).HasColumnName("cat_catalogo_producto_bloquearCostear");
            entity.Property(e => e.CatCatalogoProductoCatSubtipoCatalogoIdTipoCatalogo).HasColumnName("cat_catalogo_producto_cat_subtipoCatalogo_id_tipoCatalogo");
            entity.Property(e => e.CatCatalogoProductoCatSubtipoCatalogoSubtipoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_producto_cat_subtipoCatalogo_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoProductoCatSubtipoCatalogoSubtipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_producto_cat_subtipoCatalogo_subtipoCatalogo_codigo");
            entity.Property(e => e.CatCatalogoProductoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_producto_catalogo_codigo");
            entity.Property(e => e.CatCatalogoProductoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_producto_codigoInventario");
            entity.Property(e => e.CatCatalogoProductoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_producto_descripcion");
            entity.Property(e => e.CatCatalogoProductoEsNacional).HasColumnName("cat_catalogo_producto_esNacional");
            entity.Property(e => e.CatCatalogoProductoGenFamiliaFamilia)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_producto_gen_familia_familia");
            entity.Property(e => e.CatCatalogoProductoGenFamiliaFamiliaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_producto_gen_familia_familia_codigo");
            entity.Property(e => e.CatCatalogoProductoGenFamiliaIdFamilia).HasColumnName("cat_catalogo_producto_gen_familia_id_familia");
            entity.Property(e => e.CatCatalogoProductoGenImpuestoImpuesto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_producto_gen_impuesto_impuesto");
            entity.Property(e => e.CatCatalogoProductoGenImpuestoImpuestoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_producto_gen_impuesto_impuesto_codigo");
            entity.Property(e => e.CatCatalogoProductoGenImpuestoValor).HasColumnName("cat_catalogo_producto_gen_impuesto_valor");
            entity.Property(e => e.CatCatalogoProductoGenUnidadUnidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_producto_gen_unidad_unidad");
            entity.Property(e => e.CatCatalogoProductoGenUnidadUnidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_producto_gen_unidad_unidad_codigo");
            entity.Property(e => e.CatCatalogoProductoIdFamilia).HasColumnName("cat_catalogo_producto_id_familia");
            entity.Property(e => e.CatCatalogoProductoIdImpuesto).HasColumnName("cat_catalogo_producto_id_impuesto");
            entity.Property(e => e.CatCatalogoProductoIdSubtipoCatalogo).HasColumnName("cat_catalogo_producto_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoProductoIdUnidad).HasColumnName("cat_catalogo_producto_id_unidad");
            entity.Property(e => e.CatCatalogoProductoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_producto_precioVenta");
            entity.Property(e => e.CatCatalogoProductoTiempoConsecucion).HasColumnName("cat_catalogo_producto_tiempoConsecucion");
            entity.Property(e => e.CatalogoProducto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo.producto");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatCatalogoRepuesto>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_catalogo_repuesto");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoRepuestoBloquearCostear).HasColumnName("cat_catalogo_repuesto_bloquearCostear");
            entity.Property(e => e.CatCatalogoRepuestoCatSubtipoCatalogoIdTipoCatalogo).HasColumnName("cat_catalogo_repuesto_cat_subtipoCatalogo_id_tipoCatalogo");
            entity.Property(e => e.CatCatalogoRepuestoCatSubtipoCatalogoSubtipoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_cat_subtipoCatalogo_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoRepuestoCatSubtipoCatalogoSubtipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_cat_subtipoCatalogo_subtipoCatalogo_codigo");
            entity.Property(e => e.CatCatalogoRepuestoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_catalogo_codigo");
            entity.Property(e => e.CatCatalogoRepuestoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_codigoInventario");
            entity.Property(e => e.CatCatalogoRepuestoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_descripcion");
            entity.Property(e => e.CatCatalogoRepuestoEsNacional).HasColumnName("cat_catalogo_repuesto_esNacional");
            entity.Property(e => e.CatCatalogoRepuestoGenFamiliaFamilia)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_gen_familia_familia");
            entity.Property(e => e.CatCatalogoRepuestoGenFamiliaFamiliaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_gen_familia_familia_codigo");
            entity.Property(e => e.CatCatalogoRepuestoGenFamiliaIdFamilia).HasColumnName("cat_catalogo_repuesto_gen_familia_id_familia");
            entity.Property(e => e.CatCatalogoRepuestoGenImpuestoImpuesto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_gen_impuesto_impuesto");
            entity.Property(e => e.CatCatalogoRepuestoGenImpuestoImpuestoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_gen_impuesto_impuesto_codigo");
            entity.Property(e => e.CatCatalogoRepuestoGenImpuestoValor).HasColumnName("cat_catalogo_repuesto_gen_impuesto_valor");
            entity.Property(e => e.CatCatalogoRepuestoGenUnidadUnidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_gen_unidad_unidad");
            entity.Property(e => e.CatCatalogoRepuestoGenUnidadUnidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_gen_unidad_unidad_codigo");
            entity.Property(e => e.CatCatalogoRepuestoIdFamilia).HasColumnName("cat_catalogo_repuesto_id_familia");
            entity.Property(e => e.CatCatalogoRepuestoIdImpuesto).HasColumnName("cat_catalogo_repuesto_id_impuesto");
            entity.Property(e => e.CatCatalogoRepuestoIdSubTipoCatalogo).HasColumnName("cat_catalogo_repuesto_id_subTipoCatalogo");
            entity.Property(e => e.CatCatalogoRepuestoIdUnidad).HasColumnName("cat_catalogo_repuesto_id_unidad");
            entity.Property(e => e.CatCatalogoRepuestoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_repuesto_precioVenta");
            entity.Property(e => e.CatCatalogoRepuestoTiempoConsecucion).HasColumnName("cat_catalogo_repuesto_tiempoConsecucion");
            entity.Property(e => e.CatMarcaIdTerceroFabricante).HasColumnName("cat_marca_id_tercero_fabricante");
            entity.Property(e => e.CatMarcaMarca)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_marca_marca");
            entity.Property(e => e.CatMarcaMarcaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_marca_marca_codigo");
            entity.Property(e => e.CatalogoRepuesto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo.repuesto");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GarantiaDias).HasColumnName("garantiaDias");
            entity.Property(e => e.GarantiaHoras).HasColumnName("garantiaHoras");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdMarca).HasColumnName("id_marca");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Peso).HasColumnName("peso");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Vigente).HasColumnName("vigente");
        });

        modelBuilder.Entity<ViewCatCatalogoTempario>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_catalogo_tempario");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoTemparioBloquearCostear).HasColumnName("cat_catalogo_tempario_bloquearCostear");
            entity.Property(e => e.CatCatalogoTemparioCatSubtipoCatalogoIdTipoCatalogo).HasColumnName("cat_catalogo_tempario_cat_subtipoCatalogo_id_tipoCatalogo");
            entity.Property(e => e.CatCatalogoTemparioCatSubtipoCatalogoSubtipoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_cat_subtipoCatalogo_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoTemparioCatSubtipoCatalogoSubtipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_cat_subtipoCatalogo_subtipoCatalogo_codigo");
            entity.Property(e => e.CatCatalogoTemparioCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_catalogo_codigo");
            entity.Property(e => e.CatCatalogoTemparioCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_codigoInventario");
            entity.Property(e => e.CatCatalogoTemparioDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_descripcion");
            entity.Property(e => e.CatCatalogoTemparioEsNacional).HasColumnName("cat_catalogo_tempario_esNacional");
            entity.Property(e => e.CatCatalogoTemparioGenFamiliaFamilia)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_gen_familia_familia");
            entity.Property(e => e.CatCatalogoTemparioGenFamiliaFamiliaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_gen_familia_familia_codigo");
            entity.Property(e => e.CatCatalogoTemparioGenFamiliaIdFamilia).HasColumnName("cat_catalogo_tempario_gen_familia_id_familia");
            entity.Property(e => e.CatCatalogoTemparioGenImpuestoImpuesto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_gen_impuesto_impuesto");
            entity.Property(e => e.CatCatalogoTemparioGenImpuestoImpuestoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_gen_impuesto_impuesto_codigo");
            entity.Property(e => e.CatCatalogoTemparioGenImpuestoValor).HasColumnName("cat_catalogo_tempario_gen_impuesto_valor");
            entity.Property(e => e.CatCatalogoTemparioGenUnidadUnidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_gen_unidad_unidad");
            entity.Property(e => e.CatCatalogoTemparioGenUnidadUnidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_gen_unidad_unidad_codigo");
            entity.Property(e => e.CatCatalogoTemparioIdFamilia).HasColumnName("cat_catalogo_tempario_id_familia");
            entity.Property(e => e.CatCatalogoTemparioIdImpuesto).HasColumnName("cat_catalogo_tempario_id_impuesto");
            entity.Property(e => e.CatCatalogoTemparioIdSubtipoCatalogo).HasColumnName("cat_catalogo_tempario_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoTemparioIdUnidad).HasColumnName("cat_catalogo_tempario_id_unidad");
            entity.Property(e => e.CatCatalogoTemparioPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_tempario_precioVenta");
            entity.Property(e => e.CatCatalogoTemparioTiempoConsecucion).HasColumnName("cat_catalogo_tempario_tiempoConsecucion");
            entity.Property(e => e.CatalogoTempario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo.tempario");
            entity.Property(e => e.DetieneEquipos).HasColumnName("detieneEquipos");
            entity.Property(e => e.DuracionEstimada).HasColumnName("duracionEstimada");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EnTaller).HasColumnName("enTaller");
            entity.Property(e => e.EsCiclico).HasColumnName("esCiclico");
            entity.Property(e => e.FacturaTodo).HasColumnName("facturaTodo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenTipoServicioDiasGarantia).HasColumnName("gen_tipoServicio_diasGarantia");
            entity.Property(e => e.GenTipoServicioTieneGarantia).HasColumnName("gen_tipoServicio_tieneGarantia");
            entity.Property(e => e.GenTipoServicioTipoServicio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_tipoServicio_tipoServicio");
            entity.Property(e => e.GenTipoServicioTipoServicioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_tipoServicio_tipoServicio_codigo");
            entity.Property(e => e.HorasDetencion).HasColumnName("horasDetencion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdTipoServicio).HasColumnName("id_tipoServicio");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IncluirMenores).HasColumnName("incluirMenores");
            entity.Property(e => e.ModoAjuste).HasColumnName("modoAjuste");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PeriodoDias).HasColumnName("periodoDias");
            entity.Property(e => e.PeriodoHoras).HasColumnName("periodoHoras");
            entity.Property(e => e.PorcGarantia).HasColumnName("porcGarantia");
            entity.Property(e => e.PorcTropicalizacion).HasColumnName("porcTropicalizacion");
            entity.Property(e => e.Proyectar).HasColumnName("proyectar");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatDetalleRepuesto>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_detalleRepuesto");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.CatCatalogoRepuestoBloquearCostear).HasColumnName("cat_catalogo_repuesto_bloquearCostear");
            entity.Property(e => e.CatCatalogoRepuestoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_catalogo_codigo");
            entity.Property(e => e.CatCatalogoRepuestoCatalogoRepuesto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.repuesto_catalogo.repuesto");
            entity.Property(e => e.CatCatalogoRepuestoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_codigoInventario");
            entity.Property(e => e.CatCatalogoRepuestoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_descripcion");
            entity.Property(e => e.CatCatalogoRepuestoEsNacional).HasColumnName("cat_catalogo_repuesto_esNacional");
            entity.Property(e => e.CatCatalogoRepuestoGarantiaDias).HasColumnName("cat_catalogo.repuesto_garantiaDias");
            entity.Property(e => e.CatCatalogoRepuestoGarantiaHoras).HasColumnName("cat_catalogo.repuesto_garantiaHoras");
            entity.Property(e => e.CatCatalogoRepuestoHijoBloquearCostear).HasColumnName("cat_catalogo_repuesto_hijo_bloquearCostear");
            entity.Property(e => e.CatCatalogoRepuestoHijoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_hijo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoRepuestoHijoCatalogoRepuesto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.repuesto_hijo_catalogo.repuesto");
            entity.Property(e => e.CatCatalogoRepuestoHijoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_hijo_codigoInventario");
            entity.Property(e => e.CatCatalogoRepuestoHijoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_hijo_descripcion");
            entity.Property(e => e.CatCatalogoRepuestoHijoEsNacional).HasColumnName("cat_catalogo_repuesto_hijo_esNacional");
            entity.Property(e => e.CatCatalogoRepuestoHijoGarantiaDias).HasColumnName("cat_catalogo.repuesto_hijo_garantiaDias");
            entity.Property(e => e.CatCatalogoRepuestoHijoGarantiaHoras).HasColumnName("cat_catalogo.repuesto_hijo_garantiaHoras");
            entity.Property(e => e.CatCatalogoRepuestoHijoIdFamilia).HasColumnName("cat_catalogo_repuesto_hijo_id_familia");
            entity.Property(e => e.CatCatalogoRepuestoHijoIdImpuesto).HasColumnName("cat_catalogo_repuesto_hijo_id_impuesto");
            entity.Property(e => e.CatCatalogoRepuestoHijoIdMarca).HasColumnName("cat_catalogo.repuesto_hijo_id_marca");
            entity.Property(e => e.CatCatalogoRepuestoHijoIdSubtipoCatalogo).HasColumnName("cat_catalogo_repuesto_hijo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoRepuestoHijoIdUnidad).HasColumnName("cat_catalogo_repuesto_hijo_id_unidad");
            entity.Property(e => e.CatCatalogoRepuestoHijoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_repuesto_hijo_precioVenta");
            entity.Property(e => e.CatCatalogoRepuestoHijoTiempoConsecucion).HasColumnName("cat_catalogo_repuesto_hijo_tiempoConsecucion");
            entity.Property(e => e.CatCatalogoRepuestoHijoVigente).HasColumnName("cat_catalogo.repuesto_hijo_vigente");
            entity.Property(e => e.CatCatalogoRepuestoIdFamilia).HasColumnName("cat_catalogo_repuesto_id_familia");
            entity.Property(e => e.CatCatalogoRepuestoIdImpuesto).HasColumnName("cat_catalogo_repuesto_id_impuesto");
            entity.Property(e => e.CatCatalogoRepuestoIdMarca).HasColumnName("cat_catalogo.repuesto_id_marca");
            entity.Property(e => e.CatCatalogoRepuestoIdSubtipoCatalogo).HasColumnName("cat_catalogo_repuesto_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoRepuestoIdUnidad).HasColumnName("cat_catalogo_repuesto_id_unidad");
            entity.Property(e => e.CatCatalogoRepuestoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_repuesto_precioVenta");
            entity.Property(e => e.CatCatalogoRepuestoTiempoConsecucion).HasColumnName("cat_catalogo_repuesto_tiempoConsecucion");
            entity.Property(e => e.CatCatalogoRepuestoVigente).HasColumnName("cat_catalogo.repuesto_vigente");
            entity.Property(e => e.DetalleRepuesto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("detalleRepuesto");
            entity.Property(e => e.DetalleRepuestoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("detalleRepuesto_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogoRepuesto).HasColumnName("id_catalogo.repuesto");
            entity.Property(e => e.IdCatalogoRepuestoHijo).HasColumnName("id_catalogo.repuesto_hijo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatDetalleTempario>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_detalleTempario");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CantidadEstandar).HasColumnName("cantidadEstandar");
            entity.Property(e => e.CantidadTropicalizada).HasColumnName("cantidadTropicalizada");
            entity.Property(e => e.CatCatalogoBloquearCostear).HasColumnName("cat_catalogo_bloquearCostear");
            entity.Property(e => e.CatCatalogoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo");
            entity.Property(e => e.CatCatalogoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_codigoInventario");
            entity.Property(e => e.CatCatalogoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_descripcion");
            entity.Property(e => e.CatCatalogoEsNacional).HasColumnName("cat_catalogo_esNacional");
            entity.Property(e => e.CatCatalogoIdFamilia).HasColumnName("cat_catalogo_id_familia");
            entity.Property(e => e.CatCatalogoIdImpuesto).HasColumnName("cat_catalogo_id_impuesto");
            entity.Property(e => e.CatCatalogoIdSubtipoCatalogo).HasColumnName("cat_catalogo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoIdUnidad).HasColumnName("cat_catalogo_id_unidad");
            entity.Property(e => e.CatCatalogoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_precioVenta");
            entity.Property(e => e.CatCatalogoTemparioBloquearCostear).HasColumnName("cat_catalogo_tempario_bloquearCostear");
            entity.Property(e => e.CatCatalogoTemparioCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_catalogo_codigo");
            entity.Property(e => e.CatCatalogoTemparioCatalogoTempario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.tempario_catalogo.tempario");
            entity.Property(e => e.CatCatalogoTemparioCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_codigoInventario");
            entity.Property(e => e.CatCatalogoTemparioDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_descripcion");
            entity.Property(e => e.CatCatalogoTemparioDetieneEquipos).HasColumnName("cat_catalogo.tempario_detieneEquipos");
            entity.Property(e => e.CatCatalogoTemparioDuracionEstimada).HasColumnName("cat_catalogo.tempario_duracionEstimada");
            entity.Property(e => e.CatCatalogoTemparioEnTaller).HasColumnName("cat_catalogo.tempario_enTaller");
            entity.Property(e => e.CatCatalogoTemparioEsCiclico).HasColumnName("cat_catalogo.tempario_esCiclico");
            entity.Property(e => e.CatCatalogoTemparioEsNacional).HasColumnName("cat_catalogo_tempario_esNacional");
            entity.Property(e => e.CatCatalogoTemparioFacturaTodo).HasColumnName("cat_catalogo.tempario_facturaTodo");
            entity.Property(e => e.CatCatalogoTemparioHorasDetencion).HasColumnName("cat_catalogo.tempario_horasDetencion");
            entity.Property(e => e.CatCatalogoTemparioIdFamilia).HasColumnName("cat_catalogo_tempario_id_familia");
            entity.Property(e => e.CatCatalogoTemparioIdImpuesto).HasColumnName("cat_catalogo_tempario_id_impuesto");
            entity.Property(e => e.CatCatalogoTemparioIdSubtipoCatalogo).HasColumnName("cat_catalogo_tempario_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoTemparioIdTipoServicio).HasColumnName("cat_catalogo.tempario_id_tipoServicio");
            entity.Property(e => e.CatCatalogoTemparioIdUnidad).HasColumnName("cat_catalogo_tempario_id_unidad");
            entity.Property(e => e.CatCatalogoTemparioIncluirMenores).HasColumnName("cat_catalogo.tempario_incluirMenores");
            entity.Property(e => e.CatCatalogoTemparioModoAjuste).HasColumnName("cat_catalogo.tempario_modoAjuste");
            entity.Property(e => e.CatCatalogoTemparioPeriodoDias).HasColumnName("cat_catalogo.tempario_periodoDias");
            entity.Property(e => e.CatCatalogoTemparioPeriodoHoras).HasColumnName("cat_catalogo.tempario_periodoHoras");
            entity.Property(e => e.CatCatalogoTemparioPorcGarantia).HasColumnName("cat_catalogo.tempario_porcGarantia");
            entity.Property(e => e.CatCatalogoTemparioPorcTropicalizacion).HasColumnName("cat_catalogo.tempario_porcTropicalizacion");
            entity.Property(e => e.CatCatalogoTemparioPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_tempario_precioVenta");
            entity.Property(e => e.CatCatalogoTemparioProyectar).HasColumnName("cat_catalogo.tempario_proyectar");
            entity.Property(e => e.CatCatalogoTemparioTiempoConsecucion).HasColumnName("cat_catalogo_tempario_tiempoConsecucion");
            entity.Property(e => e.CatCatalogoTiempoConsecucion).HasColumnName("cat_catalogo_tiempoConsecucion");
            entity.Property(e => e.CatDetalleTemparioPadreCantidadEstandar).HasColumnName("cat_detalleTempario_padre_cantidadEstandar");
            entity.Property(e => e.CatDetalleTemparioPadreCantidadTropicalizada).HasColumnName("cat_detalleTempario_padre_cantidadTropicalizada");
            entity.Property(e => e.CatDetalleTemparioPadreDetalleTempario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_detalleTempario_padre_detalleTempario");
            entity.Property(e => e.CatDetalleTemparioPadreDetalleTemparioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_detalleTempario_padre_detalleTempario_codigo");
            entity.Property(e => e.CatDetalleTemparioPadreIdCatalogo).HasColumnName("cat_detalleTempario_padre_id_catalogo");
            entity.Property(e => e.CatDetalleTemparioPadreIdCatalogoTempario).HasColumnName("cat_detalleTempario_padre_id_catalogo.tempario");
            entity.Property(e => e.CatDetalleTemparioPadreIdDetalleTemparioPadre).HasColumnName("cat_detalleTempario_padre_id_detalleTempario_padre");
            entity.Property(e => e.CatDetalleTemparioPadreIdPruebaCheckList).HasColumnName("cat_detalleTempario_padre_id_pruebaCheckList");
            entity.Property(e => e.CatDetalleTemparioPadreIdSistema).HasColumnName("cat_detalleTempario_padre_id_sistema");
            entity.Property(e => e.CatDetalleTemparioPadreOrden).HasColumnName("cat_detalleTempario_padre_orden");
            entity.Property(e => e.CatPruebaCheckListPruebaCheckList)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_pruebaCheckList_pruebaCheckList");
            entity.Property(e => e.CatPruebaCheckListPruebaCheckListCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_pruebaCheckList_pruebaCheckList_codigo");
            entity.Property(e => e.CatSistemaSistema)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_sistema_sistema");
            entity.Property(e => e.CatSistemaSistemaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_sistema_sistema_codigo");
            entity.Property(e => e.DetalleTempario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("detalleTempario");
            entity.Property(e => e.DetalleTemparioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("detalleTempario_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdCatalogoTempario).HasColumnName("id_catalogo.tempario");
            entity.Property(e => e.IdDetalleTemparioPadre).HasColumnName("id_detalleTempario_padre");
            entity.Property(e => e.IdPruebaCheckList).HasColumnName("id_pruebaCheckList");
            entity.Property(e => e.IdSistema).HasColumnName("id_sistema");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatDimension>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_dimension");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.AplicaEnX).HasColumnName("aplicaEnX");
            entity.Property(e => e.AplicaEnY).HasColumnName("aplicaEnY");
            entity.Property(e => e.AplicaEnZ).HasColumnName("aplicaEnZ");
            entity.Property(e => e.Dimension)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("dimension");
            entity.Property(e => e.DimensionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dimension_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatListaPrecio>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_listaPrecio");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsPrivado).HasColumnName("esPrivado");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenMonedaAbreviatura)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("gen_moneda_abreviatura");
            entity.Property(e => e.GenMonedaCambio).HasColumnName("gen_moneda_cambio");
            entity.Property(e => e.GenMonedaMoneda)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_moneda_moneda");
            entity.Property(e => e.GenMonedaMonedaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_moneda_moneda_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdMoneda).HasColumnName("id_moneda");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.ListaPrecio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("listaPrecio");
            entity.Property(e => e.ListaPrecioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("listaPrecio_codigo");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ParaCompra).HasColumnName("paraCompra");
            entity.Property(e => e.PorcentajeDescuento).HasColumnName("porcentajeDescuento");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatMarca>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_marca");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdTerceroFabricante).HasColumnName("id_tercero_fabricante");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Marca)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("marca");
            entity.Property(e => e.MarcaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("marca_codigo");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TerTerceroFabricanteClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fabricante_clasificacion");
            entity.Property(e => e.TerTerceroFabricanteContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fabricante_contacto");
            entity.Property(e => e.TerTerceroFabricanteDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fabricante_direccion");
            entity.Property(e => e.TerTerceroFabricanteEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fabricante_email");
            entity.Property(e => e.TerTerceroFabricanteEsCliente).HasColumnName("ter_tercero_fabricante_esCliente");
            entity.Property(e => e.TerTerceroFabricanteEsEmpresaPropia).HasColumnName("ter_tercero_fabricante_esEmpresaPropia");
            entity.Property(e => e.TerTerceroFabricanteEsFabricante).HasColumnName("ter_tercero_fabricante_esFabricante");
            entity.Property(e => e.TerTerceroFabricanteEsProspecto).HasColumnName("ter_tercero_fabricante_esProspecto");
            entity.Property(e => e.TerTerceroFabricanteEsProveedor).HasColumnName("ter_tercero_fabricante_esProveedor");
            entity.Property(e => e.TerTerceroFabricanteEsTransportador).HasColumnName("ter_tercero_fabricante_esTransportador");
            entity.Property(e => e.TerTerceroFabricanteFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fabricante_fax");
            entity.Property(e => e.TerTerceroFabricanteIdEstadoTercero).HasColumnName("ter_tercero_fabricante_id_estadoTercero");
            entity.Property(e => e.TerTerceroFabricanteIdNaturalezaTercero).HasColumnName("ter_tercero_fabricante_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroFabricanteIdZona).HasColumnName("ter_tercero_fabricante_id_zona");
            entity.Property(e => e.TerTerceroFabricanteNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fabricante_notas");
            entity.Property(e => e.TerTerceroFabricanteRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fabricante_representante");
            entity.Property(e => e.TerTerceroFabricanteTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fabricante_telefono");
            entity.Property(e => e.TerTerceroFabricanteTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fabricante_tercero");
            entity.Property(e => e.TerTerceroFabricanteTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fabricante_tercero_codigo");
            entity.Property(e => e.TerTerceroFabricanteTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fabricante_tercero_nit");
            entity.Property(e => e.TerTerceroFabricanteTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fabricante_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroFabricanteWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fabricante_website");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatPosicion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_posicion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoEquipoComponenteBloquearCostear).HasColumnName("cat_catalogo_equipo_componente_bloquearCostear");
            entity.Property(e => e.CatCatalogoEquipoComponenteCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_componente_catalogo_codigo");
            entity.Property(e => e.CatCatalogoEquipoComponenteCatalogoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.equipo_componente_catalogo.equipo");
            entity.Property(e => e.CatCatalogoEquipoComponenteCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_componente_codigoInventario");
            entity.Property(e => e.CatCatalogoEquipoComponenteDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_componente_descripcion");
            entity.Property(e => e.CatCatalogoEquipoComponenteEsNacional).HasColumnName("cat_catalogo_equipo_componente_esNacional");
            entity.Property(e => e.CatCatalogoEquipoComponenteGarantiaHoras).HasColumnName("cat_catalogo.equipo_componente_garantiaHoras");
            entity.Property(e => e.CatCatalogoEquipoComponenteGarantiaMeses).HasColumnName("cat_catalogo.equipo_componente_garantiaMeses");
            entity.Property(e => e.CatCatalogoEquipoComponenteIdFamilia).HasColumnName("cat_catalogo_equipo_componente_id_familia");
            entity.Property(e => e.CatCatalogoEquipoComponenteIdImpuesto).HasColumnName("cat_catalogo_equipo_componente_id_impuesto");
            entity.Property(e => e.CatCatalogoEquipoComponenteIdMarca).HasColumnName("cat_catalogo.equipo_componente_id_marca");
            entity.Property(e => e.CatCatalogoEquipoComponenteIdSubtipoCatalogo).HasColumnName("cat_catalogo_equipo_componente_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoEquipoComponenteIdUnidad).HasColumnName("cat_catalogo_equipo_componente_id_unidad");
            entity.Property(e => e.CatCatalogoEquipoComponenteManejaHorometro).HasColumnName("cat_catalogo.equipo_componente_manejaHorometro");
            entity.Property(e => e.CatCatalogoEquipoComponentePrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_equipo_componente_precioVenta");
            entity.Property(e => e.CatCatalogoEquipoComponenteTiempoConsecucion).HasColumnName("cat_catalogo_equipo_componente_tiempoConsecucion");
            entity.Property(e => e.CatCatalogoEquipoEquipoBloquearCostear).HasColumnName("cat_catalogo_equipo_equipo_bloquearCostear");
            entity.Property(e => e.CatCatalogoEquipoEquipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_equipo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoEquipoEquipoCatalogoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.equipo_equipo_catalogo.equipo");
            entity.Property(e => e.CatCatalogoEquipoEquipoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_equipo_codigoInventario");
            entity.Property(e => e.CatCatalogoEquipoEquipoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_equipo_descripcion");
            entity.Property(e => e.CatCatalogoEquipoEquipoEsNacional).HasColumnName("cat_catalogo_equipo_equipo_esNacional");
            entity.Property(e => e.CatCatalogoEquipoEquipoGarantiaHoras).HasColumnName("cat_catalogo.equipo_equipo_garantiaHoras");
            entity.Property(e => e.CatCatalogoEquipoEquipoGarantiaMeses).HasColumnName("cat_catalogo.equipo_equipo_garantiaMeses");
            entity.Property(e => e.CatCatalogoEquipoEquipoIdFamilia).HasColumnName("cat_catalogo_equipo_equipo_id_familia");
            entity.Property(e => e.CatCatalogoEquipoEquipoIdImpuesto).HasColumnName("cat_catalogo_equipo_equipo_id_impuesto");
            entity.Property(e => e.CatCatalogoEquipoEquipoIdMarca).HasColumnName("cat_catalogo.equipo_equipo_id_marca");
            entity.Property(e => e.CatCatalogoEquipoEquipoIdSubtipoCatalogo).HasColumnName("cat_catalogo_equipo_equipo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoEquipoEquipoIdUnidad).HasColumnName("cat_catalogo_equipo_equipo_id_unidad");
            entity.Property(e => e.CatCatalogoEquipoEquipoManejaHorometro).HasColumnName("cat_catalogo.equipo_equipo_manejaHorometro");
            entity.Property(e => e.CatCatalogoEquipoEquipoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_equipo_equipo_precioVenta");
            entity.Property(e => e.CatCatalogoEquipoEquipoTiempoConsecucion).HasColumnName("cat_catalogo_equipo_equipo_tiempoConsecucion");
            entity.Property(e => e.CatDimensionXAplicaEnX).HasColumnName("cat_dimension_x_aplicaEnX");
            entity.Property(e => e.CatDimensionXAplicaEnY).HasColumnName("cat_dimension_x_aplicaEnY");
            entity.Property(e => e.CatDimensionXAplicaEnZ).HasColumnName("cat_dimension_x_aplicaEnZ");
            entity.Property(e => e.CatDimensionXDimension)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_dimension_x_dimension");
            entity.Property(e => e.CatDimensionXDimensionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_dimension_x_dimension_codigo");
            entity.Property(e => e.CatDimensionYAplicaEnX).HasColumnName("cat_dimension_y_aplicaEnX");
            entity.Property(e => e.CatDimensionYAplicaEnY).HasColumnName("cat_dimension_y_aplicaEnY");
            entity.Property(e => e.CatDimensionYAplicaEnZ).HasColumnName("cat_dimension_y_aplicaEnZ");
            entity.Property(e => e.CatDimensionYDimension)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_dimension_y_dimension");
            entity.Property(e => e.CatDimensionYDimensionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_dimension_y_dimension_codigo");
            entity.Property(e => e.CatDimensionZAplicaEnX).HasColumnName("cat_dimension_z_aplicaEnX");
            entity.Property(e => e.CatDimensionZAplicaEnY).HasColumnName("cat_dimension_z_aplicaEnY");
            entity.Property(e => e.CatDimensionZAplicaEnZ).HasColumnName("cat_dimension_z_aplicaEnZ");
            entity.Property(e => e.CatDimensionZDimension)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_dimension_z_dimension");
            entity.Property(e => e.CatDimensionZDimensionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_dimension_z_dimension_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogoEquipoComponente).HasColumnName("id_catalogo.equipo_componente");
            entity.Property(e => e.IdCatalogoEquipoEquipo).HasColumnName("id_catalogo.equipo_equipo");
            entity.Property(e => e.IdDimensionX).HasColumnName("id_dimension_x");
            entity.Property(e => e.IdDimensionY).HasColumnName("id_dimension_y");
            entity.Property(e => e.IdDimensionZ).HasColumnName("id_dimension_z");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Posicion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("posicion");
            entity.Property(e => e.PosicionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("posicion_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatPruebaCheckList>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_pruebaCheckList");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PruebaCheckList)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pruebaCheckList");
            entity.Property(e => e.PruebaCheckListCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pruebaCheckList_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatPruebaCheckListAtributo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_pruebaCheckList_atributo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatAtributoAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_atributo");
            entity.Property(e => e.CatAtributoAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_atributo_codigo");
            entity.Property(e => e.CatAtributoEsObligatorio).HasColumnName("cat_atributo_esObligatorio");
            entity.Property(e => e.CatAtributoEsVariable).HasColumnName("cat_atributo_esVariable");
            entity.Property(e => e.CatAtributoIdSeccionAtributo).HasColumnName("cat_atributo_id_seccionAtributo");
            entity.Property(e => e.CatAtributoIdTipoAtributo).HasColumnName("cat_atributo_id_tipoAtributo");
            entity.Property(e => e.CatAtributoIdUnidad).HasColumnName("cat_atributo_id_unidad");
            entity.Property(e => e.CatAtributoNombreControl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_nombreControl");
            entity.Property(e => e.CatAtributoResaltado).HasColumnName("cat_atributo_resaltado");
            entity.Property(e => e.CatAtributoValorMaximo).HasColumnName("cat_atributo_ValorMaximo");
            entity.Property(e => e.CatAtributoValorMinimo).HasColumnName("cat_atributo_valorMinimo");
            entity.Property(e => e.CatPruebaCheckListPruebaCheckList)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_pruebaCheckList_pruebaCheckList");
            entity.Property(e => e.CatPruebaCheckListPruebaCheckListCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_pruebaCheckList_pruebaCheckList_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdAtributo).HasColumnName("id_atributo");
            entity.Property(e => e.IdPruebaCheckList).HasColumnName("id_pruebaCheckList");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.PruebaCheckListAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pruebaCheckList_atributo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatReemplazo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_reemplazo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoRepuesto1BloquearCostear).HasColumnName("cat_catalogo_repuesto_1_bloquearCostear");
            entity.Property(e => e.CatCatalogoRepuesto1CatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_1_catalogo_codigo");
            entity.Property(e => e.CatCatalogoRepuesto1CatalogoRepuesto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.repuesto_1_catalogo.repuesto");
            entity.Property(e => e.CatCatalogoRepuesto1CodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_1_codigoInventario");
            entity.Property(e => e.CatCatalogoRepuesto1Descripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_1_descripcion");
            entity.Property(e => e.CatCatalogoRepuesto1EsNacional).HasColumnName("cat_catalogo_repuesto_1_esNacional");
            entity.Property(e => e.CatCatalogoRepuesto1GarantiaDias).HasColumnName("cat_catalogo.repuesto_1_garantiaDias");
            entity.Property(e => e.CatCatalogoRepuesto1GarantiaHoras).HasColumnName("cat_catalogo.repuesto_1_garantiaHoras");
            entity.Property(e => e.CatCatalogoRepuesto1IdFamilia).HasColumnName("cat_catalogo_repuesto_1_id_familia");
            entity.Property(e => e.CatCatalogoRepuesto1IdImpuesto).HasColumnName("cat_catalogo_repuesto_1_id_impuesto");
            entity.Property(e => e.CatCatalogoRepuesto1IdMarca).HasColumnName("cat_catalogo.repuesto_1_id_marca");
            entity.Property(e => e.CatCatalogoRepuesto1IdSubtipoCatalogo).HasColumnName("cat_catalogo_repuesto_1_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoRepuesto1IdUnidad).HasColumnName("cat_catalogo_repuesto_1_id_unidad");
            entity.Property(e => e.CatCatalogoRepuesto1PrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_repuesto_1_precioVenta");
            entity.Property(e => e.CatCatalogoRepuesto1TiempoConsecucion).HasColumnName("cat_catalogo_repuesto_1_tiempoConsecucion");
            entity.Property(e => e.CatCatalogoRepuesto1Vigente).HasColumnName("cat_catalogo.repuesto_1_vigente");
            entity.Property(e => e.CatCatalogoRepuestoBloquearCostear).HasColumnName("cat_catalogo_repuesto_bloquearCostear");
            entity.Property(e => e.CatCatalogoRepuestoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_catalogo_codigo");
            entity.Property(e => e.CatCatalogoRepuestoCatalogoRepuesto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.repuesto_catalogo.repuesto");
            entity.Property(e => e.CatCatalogoRepuestoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_codigoInventario");
            entity.Property(e => e.CatCatalogoRepuestoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_repuesto_descripcion");
            entity.Property(e => e.CatCatalogoRepuestoEsNacional).HasColumnName("cat_catalogo_repuesto_esNacional");
            entity.Property(e => e.CatCatalogoRepuestoGarantiaDias).HasColumnName("cat_catalogo.repuesto_garantiaDias");
            entity.Property(e => e.CatCatalogoRepuestoGarantiaHoras).HasColumnName("cat_catalogo.repuesto_garantiaHoras");
            entity.Property(e => e.CatCatalogoRepuestoIdFamilia).HasColumnName("cat_catalogo_repuesto_id_familia");
            entity.Property(e => e.CatCatalogoRepuestoIdImpuesto).HasColumnName("cat_catalogo_repuesto_id_impuesto");
            entity.Property(e => e.CatCatalogoRepuestoIdMarca).HasColumnName("cat_catalogo.repuesto_id_marca");
            entity.Property(e => e.CatCatalogoRepuestoIdSubtipoCatalogo).HasColumnName("cat_catalogo_repuesto_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoRepuestoIdUnidad).HasColumnName("cat_catalogo_repuesto_id_unidad");
            entity.Property(e => e.CatCatalogoRepuestoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_repuesto_precioVenta");
            entity.Property(e => e.CatCatalogoRepuestoTiempoConsecucion).HasColumnName("cat_catalogo_repuesto_tiempoConsecucion");
            entity.Property(e => e.CatCatalogoRepuestoVigente).HasColumnName("cat_catalogo.repuesto_vigente");
            entity.Property(e => e.CatTipoReemplazoTipoReemplazo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_tipoReemplazo_tipoReemplazo");
            entity.Property(e => e.CatTipoReemplazoTipoReemplazoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_tipoReemplazo_tipoReemplazo_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogoRepuesto).HasColumnName("id_catalogo.repuesto");
            entity.Property(e => e.IdCatalogoRepuesto1).HasColumnName("id_catalogo.repuesto_1");
            entity.Property(e => e.IdTipoReemplazo).HasColumnName("id_tipoReemplazo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Reemplazo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("reemplazo");
            entity.Property(e => e.ReemplazoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("reemplazo_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatReemplazoCatalogoEquipo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_reemplazo_catalogo_equipo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoEquipoBloquearCostear).HasColumnName("cat_catalogo_equipo_bloquearCostear");
            entity.Property(e => e.CatCatalogoEquipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoEquipoCatalogoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.equipo_catalogo.equipo");
            entity.Property(e => e.CatCatalogoEquipoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_codigoInventario");
            entity.Property(e => e.CatCatalogoEquipoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_descripcion");
            entity.Property(e => e.CatCatalogoEquipoEsNacional).HasColumnName("cat_catalogo_equipo_esNacional");
            entity.Property(e => e.CatCatalogoEquipoGarantiaHoras).HasColumnName("cat_catalogo.equipo_garantiaHoras");
            entity.Property(e => e.CatCatalogoEquipoGarantiaMeses).HasColumnName("cat_catalogo.equipo_garantiaMeses");
            entity.Property(e => e.CatCatalogoEquipoIdFamilia).HasColumnName("cat_catalogo_equipo_id_familia");
            entity.Property(e => e.CatCatalogoEquipoIdImpuesto).HasColumnName("cat_catalogo_equipo_id_impuesto");
            entity.Property(e => e.CatCatalogoEquipoIdMarca).HasColumnName("cat_catalogo.equipo_id_marca");
            entity.Property(e => e.CatCatalogoEquipoIdSubtipoCatalogo).HasColumnName("cat_catalogo_equipo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoEquipoIdUnidad).HasColumnName("cat_catalogo_equipo_id_unidad");
            entity.Property(e => e.CatCatalogoEquipoManejaHorometro).HasColumnName("cat_catalogo.equipo_manejaHorometro");
            entity.Property(e => e.CatCatalogoEquipoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_equipo_precioVenta");
            entity.Property(e => e.CatCatalogoEquipoTiempoConsecucion).HasColumnName("cat_catalogo_equipo_tiempoConsecucion");
            entity.Property(e => e.CatReemplazoIdCatalogoRepuesto).HasColumnName("cat_reemplazo_id_catalogo.repuesto");
            entity.Property(e => e.CatReemplazoIdCatalogoRepuesto1).HasColumnName("cat_reemplazo_id_catalogo.repuesto_1");
            entity.Property(e => e.CatReemplazoIdTipoReemplazo).HasColumnName("cat_reemplazo_id_tipoReemplazo");
            entity.Property(e => e.CatReemplazoReemplazo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_reemplazo_reemplazo");
            entity.Property(e => e.CatReemplazoReemplazoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_reemplazo_reemplazo_codigo");
            entity.Property(e => e.CatVersionEquipoIdCatalogoEquipo).HasColumnName("cat_versionEquipo_id_catalogo.equipo");
            entity.Property(e => e.CatVersionEquipoVersionEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_versionEquipo_versionEquipo");
            entity.Property(e => e.CatVersionEquipoVersionEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_versionEquipo_versionEquipo_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogoEquipo).HasColumnName("id_catalogo.equipo");
            entity.Property(e => e.IdReemplazo).HasColumnName("id_reemplazo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdVersionEquipo).HasColumnName("id_versionEquipo");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ReemplazoCatalogoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("reemplazo_catalogo.equipo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatSeccionAtributo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_seccionAtributo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatUsoSeccionAtributoUsoSeccionAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_usoSeccionAtributo_usoSeccionAtributo");
            entity.Property(e => e.CatUsoSeccionAtributoUsoSeccionAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_usoSeccionAtributo_usoSeccionAtributo_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsoSeccionAtributo).HasColumnName("id_usoSeccionAtributo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.SeccionAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seccionAtributo");
            entity.Property(e => e.SeccionAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seccionAtributo_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatSistema>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_sistema");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatSistemaPadreIdSistema).HasColumnName("cat_sistema_padre_id_sistema");
            entity.Property(e => e.CatSistemaPadreSistema)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_sistema_padre_sistema");
            entity.Property(e => e.CatSistemaPadreSistemaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_sistema_padre_sistema_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdSistema).HasColumnName("id_sistema");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Sistema)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("sistema");
            entity.Property(e => e.SistemaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("sistema_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatSistemaCatalogoEquipo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_sistema_catalogo_equipo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoEquipoBloquearCostear).HasColumnName("cat_catalogo_equipo_bloquearCostear");
            entity.Property(e => e.CatCatalogoEquipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoEquipoCatalogoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.equipo_catalogo.equipo");
            entity.Property(e => e.CatCatalogoEquipoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_codigoInventario");
            entity.Property(e => e.CatCatalogoEquipoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_descripcion");
            entity.Property(e => e.CatCatalogoEquipoEsNacional).HasColumnName("cat_catalogo_equipo_esNacional");
            entity.Property(e => e.CatCatalogoEquipoGarantiaHoras).HasColumnName("cat_catalogo.equipo_garantiaHoras");
            entity.Property(e => e.CatCatalogoEquipoGarantiaMeses).HasColumnName("cat_catalogo.equipo_garantiaMeses");
            entity.Property(e => e.CatCatalogoEquipoIdFamilia).HasColumnName("cat_catalogo_equipo_id_familia");
            entity.Property(e => e.CatCatalogoEquipoIdImpuesto).HasColumnName("cat_catalogo_equipo_id_impuesto");
            entity.Property(e => e.CatCatalogoEquipoIdMarca).HasColumnName("cat_catalogo.equipo_id_marca");
            entity.Property(e => e.CatCatalogoEquipoIdSubtipoCatalogo).HasColumnName("cat_catalogo_equipo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoEquipoIdUnidad).HasColumnName("cat_catalogo_equipo_id_unidad");
            entity.Property(e => e.CatCatalogoEquipoManejaHorometro).HasColumnName("cat_catalogo.equipo_manejaHorometro");
            entity.Property(e => e.CatCatalogoEquipoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_equipo_precioVenta");
            entity.Property(e => e.CatCatalogoEquipoTiempoConsecucion).HasColumnName("cat_catalogo_equipo_tiempoConsecucion");
            entity.Property(e => e.CatSistemaSistema)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_sistema_sistema");
            entity.Property(e => e.CatSistemaSistemaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_sistema_sistema_codigo");
            entity.Property(e => e.CatVersionEquipoIdCatalogoEquipo).HasColumnName("cat_versionEquipo_id_catalogo.equipo");
            entity.Property(e => e.CatVersionEquipoVersionEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_versionEquipo_versionEquipo");
            entity.Property(e => e.CatVersionEquipoVersionEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_versionEquipo_versionEquipo_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogoEquipo).HasColumnName("id_catalogo.equipo");
            entity.Property(e => e.IdSistema).HasColumnName("id_sistema");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdVersionEquipo).HasColumnName("id_versionEquipo");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.SistemaCatalogoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("sistema_catalogo.equipo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatSoporteActividad>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_soporteActividad");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatDetalleTemparioCantidadEstandar).HasColumnName("cat_detalleTempario_cantidadEstandar");
            entity.Property(e => e.CatDetalleTemparioCantidadTropicalizada).HasColumnName("cat_detalleTempario_cantidadTropicalizada");
            entity.Property(e => e.CatDetalleTemparioDetalleTempario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_detalleTempario_detalleTempario");
            entity.Property(e => e.CatDetalleTemparioDetalleTemparioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_detalleTempario_detalleTempario_codigo");
            entity.Property(e => e.CatDetalleTemparioIdCatalogo).HasColumnName("cat_detalleTempario_id_catalogo");
            entity.Property(e => e.CatDetalleTemparioIdCatalogoTempario).HasColumnName("cat_detalleTempario_id_catalogo.tempario");
            entity.Property(e => e.CatDetalleTemparioIdDetalleTemparioPadre).HasColumnName("cat_detalleTempario_id_detalleTempario_padre");
            entity.Property(e => e.CatDetalleTemparioIdPruebaCheckList).HasColumnName("cat_detalleTempario_id_pruebaCheckList");
            entity.Property(e => e.CatDetalleTemparioIdSistema).HasColumnName("cat_detalleTempario_id_sistema");
            entity.Property(e => e.CatDetalleTemparioOrden).HasColumnName("cat_detalleTempario_orden");
            entity.Property(e => e.Duracion).HasColumnName("duracion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCargo).HasColumnName("id_cargo");
            entity.Property(e => e.IdDetalleTempario).HasColumnName("id_detalleTempario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.SegCargoCargo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_cargo_cargo");
            entity.Property(e => e.SegCargoCargoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_cargo_cargo_codigo");
            entity.Property(e => e.SegCargoEsAdministrativo).HasColumnName("seg_cargo_esAdministrativo");
            entity.Property(e => e.SegCargoEsComercial).HasColumnName("seg_cargo_esComercial");
            entity.Property(e => e.SegCargoEsCoordinador).HasColumnName("seg_cargo_esCoordinador");
            entity.Property(e => e.SegCargoEsTecnico).HasColumnName("seg_cargo_esTecnico");
            entity.Property(e => e.SegCargoValorHora)
                .HasColumnType("money")
                .HasColumnName("seg_cargo_valorHora");
            entity.Property(e => e.SoporteActividad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("soporteActividad");
            entity.Property(e => e.SoporteActividadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("soporteActividad_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatSubtipoCatalogo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_subtipoCatalogo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatTipoCatalogoAfectaInventario).HasColumnName("cat_tipoCatalogo_afectaInventario");
            entity.Property(e => e.CatTipoCatalogoAfectaProduccion).HasColumnName("cat_tipoCatalogo_afectaProduccion");
            entity.Property(e => e.CatTipoCatalogoTipoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_tipoCatalogo_tipoCatalogo");
            entity.Property(e => e.CatTipoCatalogoTipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_tipoCatalogo_tipoCatalogo_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdTipoCatalogo).HasColumnName("id_tipoCatalogo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.SubtipoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("subtipoCatalogo");
            entity.Property(e => e.SubtipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("subtipoCatalogo_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatTarifa>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_tarifa");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatAtributoAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_atributo");
            entity.Property(e => e.CatAtributoAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_atributo_codigo");
            entity.Property(e => e.CatAtributoEsObligatorio).HasColumnName("cat_atributo_esObligatorio");
            entity.Property(e => e.CatAtributoEsVariable).HasColumnName("cat_atributo_esVariable");
            entity.Property(e => e.CatAtributoIdSeccionAtributo).HasColumnName("cat_atributo_id_seccionAtributo");
            entity.Property(e => e.CatAtributoIdTipoAtributo).HasColumnName("cat_atributo_id_tipoAtributo");
            entity.Property(e => e.CatAtributoIdUnidad).HasColumnName("cat_atributo_id_unidad");
            entity.Property(e => e.CatAtributoNombreControl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_nombreControl");
            entity.Property(e => e.CatAtributoResaltado).HasColumnName("cat_atributo_resaltado");
            entity.Property(e => e.CatAtributoValorMaximo).HasColumnName("cat_atributo_ValorMaximo");
            entity.Property(e => e.CatAtributoValorMinimo).HasColumnName("cat_atributo_valorMinimo");
            entity.Property(e => e.CatCatalogoEquipoBloquearCostear).HasColumnName("cat_catalogo_equipo_bloquearCostear");
            entity.Property(e => e.CatCatalogoEquipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoEquipoCatalogoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.equipo_catalogo.equipo");
            entity.Property(e => e.CatCatalogoEquipoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_codigoInventario");
            entity.Property(e => e.CatCatalogoEquipoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_descripcion");
            entity.Property(e => e.CatCatalogoEquipoEsNacional).HasColumnName("cat_catalogo_equipo_esNacional");
            entity.Property(e => e.CatCatalogoEquipoGarantiaHoras).HasColumnName("cat_catalogo.equipo_garantiaHoras");
            entity.Property(e => e.CatCatalogoEquipoGarantiaMeses).HasColumnName("cat_catalogo.equipo_garantiaMeses");
            entity.Property(e => e.CatCatalogoEquipoIdFamilia).HasColumnName("cat_catalogo_equipo_id_familia");
            entity.Property(e => e.CatCatalogoEquipoIdImpuesto).HasColumnName("cat_catalogo_equipo_id_impuesto");
            entity.Property(e => e.CatCatalogoEquipoIdMarca).HasColumnName("cat_catalogo.equipo_id_marca");
            entity.Property(e => e.CatCatalogoEquipoIdSubTipoCatalogo).HasColumnName("cat_catalogo_equipo_id_subTipoCatalogo");
            entity.Property(e => e.CatCatalogoEquipoIdUnidad).HasColumnName("cat_catalogo_equipo_id_unidad");
            entity.Property(e => e.CatCatalogoEquipoManejaHorometro).HasColumnName("cat_catalogo.equipo_manejaHorometro");
            entity.Property(e => e.CatCatalogoEquipoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_equipo_precioVenta");
            entity.Property(e => e.CatCatalogoEquipoTiempoConsecucion).HasColumnName("cat_catalogo_equipo_tiempoConsecucion");
            entity.Property(e => e.CatMarcaIdTerceroFabricante).HasColumnName("cat_marca_id_tercero_fabricante");
            entity.Property(e => e.CatMarcaMarca)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_marca_marca");
            entity.Property(e => e.CatMarcaMarcaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_marca_marca_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Estrategia).HasColumnName("estrategia");
            entity.Property(e => e.Externo).HasColumnName("externo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenFamiliaFamilia)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_familia_familia");
            entity.Property(e => e.GenFamiliaFamiliaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_familia_familia_codigo");
            entity.Property(e => e.GenFamiliaIdFamilia).HasColumnName("gen_familia_id_familia");
            entity.Property(e => e.GenTipoServicioDiasGarantia).HasColumnName("gen_tipoServicio_diasGarantia");
            entity.Property(e => e.GenTipoServicioTieneGarantia).HasColumnName("gen_tipoServicio_tieneGarantia");
            entity.Property(e => e.GenTipoServicioTipoServicio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_tipoServicio_tipoServicio");
            entity.Property(e => e.GenTipoServicioTipoServicioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_tipoServicio_tipoServicio_codigo");
            entity.Property(e => e.GenZonaCodigoExterno)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("gen_zona_codigoExterno");
            entity.Property(e => e.GenZonaIdZona).HasColumnName("gen_zona_id_zona");
            entity.Property(e => e.GenZonaNivel).HasColumnName("gen_zona_nivel");
            entity.Property(e => e.GenZonaTiempoDesplazamiento).HasColumnName("gen_zona_tiempoDesplazamiento");
            entity.Property(e => e.GenZonaZona)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_zona_zona");
            entity.Property(e => e.GenZonaZonaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_zona_zona_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdAtributo).HasColumnName("id_atributo");
            entity.Property(e => e.IdCargo).HasColumnName("id_cargo");
            entity.Property(e => e.IdCatalogoEquipo).HasColumnName("id_catalogo.equipo");
            entity.Property(e => e.IdFamilia).HasColumnName("id_familia");
            entity.Property(e => e.IdMarca).HasColumnName("id_marca");
            entity.Property(e => e.IdTipoServicio).HasColumnName("id_tipoServicio");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdZona).HasColumnName("id_zona");
            entity.Property(e => e.IncluyeRepuestos).HasColumnName("incluyeRepuestos");
            entity.Property(e => e.Minimo).HasColumnName("minimo");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Precio)
                .HasColumnType("money")
                .HasColumnName("precio");
            entity.Property(e => e.Prioridad).HasColumnName("prioridad");
            entity.Property(e => e.SegCargoCargo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_cargo_cargo");
            entity.Property(e => e.SegCargoCargoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_cargo_cargo_codigo");
            entity.Property(e => e.SegCargoEsAdministrativo).HasColumnName("seg_cargo_esAdministrativo");
            entity.Property(e => e.SegCargoEsComercial).HasColumnName("seg_cargo_esComercial");
            entity.Property(e => e.SegCargoEsCoordinador).HasColumnName("seg_cargo_esCoordinador");
            entity.Property(e => e.SegCargoEsTecnico).HasColumnName("seg_cargo_esTecnico");
            entity.Property(e => e.SegCargoValorHora)
                .HasColumnType("money")
                .HasColumnName("seg_cargo_valorHora");
            entity.Property(e => e.Taller).HasColumnName("taller");
            entity.Property(e => e.Tarifa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tarifa");
            entity.Property(e => e.TarifaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tarifa_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorPorUnidad).HasColumnName("valorPorUnidad");
        });

        modelBuilder.Entity<ViewCatTarifaCatalogo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_tarifaCatalogo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.AlqTipoTarifaTipoTarifa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("alq_tipoTarifa_tipoTarifa");
            entity.Property(e => e.AlqTipoTarifaTipoTarifaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("alq_tipoTarifa_tipoTarifa_codigo");
            entity.Property(e => e.AlqTipoTarifaValor)
                .HasColumnType("decimal(10, 1)")
                .HasColumnName("alq_tipoTarifa_valor");
            entity.Property(e => e.CatCatalogoElementoBloquearCostear).HasColumnName("cat_catalogo_elemento_bloquearCostear");
            entity.Property(e => e.CatCatalogoElementoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_elemento_catalogo");
            entity.Property(e => e.CatCatalogoElementoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_elemento_catalogo_codigo");
            entity.Property(e => e.CatCatalogoElementoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_elemento_codigoInventario");
            entity.Property(e => e.CatCatalogoElementoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_elemento_descripcion");
            entity.Property(e => e.CatCatalogoElementoEsNacional).HasColumnName("cat_catalogo_elemento_esNacional");
            entity.Property(e => e.CatCatalogoElementoIdFamilia).HasColumnName("cat_catalogo_elemento_id_familia");
            entity.Property(e => e.CatCatalogoElementoIdImpuesto).HasColumnName("cat_catalogo_elemento_id_impuesto");
            entity.Property(e => e.CatCatalogoElementoIdSubTipoCatalogo).HasColumnName("cat_catalogo_elemento_id_subTipoCatalogo");
            entity.Property(e => e.CatCatalogoElementoIdUnidad).HasColumnName("cat_catalogo_elemento_id_unidad");
            entity.Property(e => e.CatCatalogoElementoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_elemento_precioVenta");
            entity.Property(e => e.CatCatalogoElementoTiempoConsecucion).HasColumnName("cat_catalogo_elemento_tiempoConsecucion");
            entity.Property(e => e.CatCatalogoTarifaBloquearCostear).HasColumnName("cat_catalogo_tarifa_bloquearCostear");
            entity.Property(e => e.CatCatalogoTarifaCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tarifa_catalogo");
            entity.Property(e => e.CatCatalogoTarifaCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tarifa_catalogo_codigo");
            entity.Property(e => e.CatCatalogoTarifaCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tarifa_codigoInventario");
            entity.Property(e => e.CatCatalogoTarifaDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tarifa_descripcion");
            entity.Property(e => e.CatCatalogoTarifaEsNacional).HasColumnName("cat_catalogo_tarifa_esNacional");
            entity.Property(e => e.CatCatalogoTarifaIdFamilia).HasColumnName("cat_catalogo_tarifa_id_familia");
            entity.Property(e => e.CatCatalogoTarifaIdImpuesto).HasColumnName("cat_catalogo_tarifa_id_impuesto");
            entity.Property(e => e.CatCatalogoTarifaIdSubTipoCatalogo).HasColumnName("cat_catalogo_tarifa_id_subTipoCatalogo");
            entity.Property(e => e.CatCatalogoTarifaIdUnidad).HasColumnName("cat_catalogo_tarifa_id_unidad");
            entity.Property(e => e.CatCatalogoTarifaPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_tarifa_precioVenta");
            entity.Property(e => e.CatCatalogoTarifaTiempoConsecucion).HasColumnName("cat_catalogo_tarifa_tiempoConsecucion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogoElemento).HasColumnName("id_catalogo_elemento");
            entity.Property(e => e.IdCatalogoTarifa).HasColumnName("id_catalogo_tarifa");
            entity.Property(e => e.IdTipotarifa).HasColumnName("id_tipotarifa");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TarifaCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tarifaCatalogo");
            entity.Property(e => e.TarifaCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tarifaCatalogo_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatTarifaRango>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_tarifaRango");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatTarifaEstrategia).HasColumnName("cat_tarifa_estrategia");
            entity.Property(e => e.CatTarifaExterno).HasColumnName("cat_tarifa_externo");
            entity.Property(e => e.CatTarifaIdAtributo).HasColumnName("cat_tarifa_id_atributo");
            entity.Property(e => e.CatTarifaIdCargo).HasColumnName("cat_tarifa_id_cargo");
            entity.Property(e => e.CatTarifaIdCatalogoEquipo).HasColumnName("cat_tarifa_id_catalogo.equipo");
            entity.Property(e => e.CatTarifaIdFamilia).HasColumnName("cat_tarifa_id_familia");
            entity.Property(e => e.CatTarifaIdMarca).HasColumnName("cat_tarifa_id_marca");
            entity.Property(e => e.CatTarifaIdTipoServicio).HasColumnName("cat_tarifa_id_tipoServicio");
            entity.Property(e => e.CatTarifaIdZona).HasColumnName("cat_tarifa_id_zona");
            entity.Property(e => e.CatTarifaIncluyeRepuestos).HasColumnName("cat_tarifa_incluyeRepuestos");
            entity.Property(e => e.CatTarifaMinimo).HasColumnName("cat_tarifa_minimo");
            entity.Property(e => e.CatTarifaPrecio)
                .HasColumnType("money")
                .HasColumnName("cat_tarifa_precio");
            entity.Property(e => e.CatTarifaPrioridad).HasColumnName("cat_tarifa_prioridad");
            entity.Property(e => e.CatTarifaTaller).HasColumnName("cat_tarifa_taller");
            entity.Property(e => e.CatTarifaTarifa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_tarifa_tarifa");
            entity.Property(e => e.CatTarifaTarifaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_tarifa_tarifa_codigo");
            entity.Property(e => e.CatTarifaValorPorUnidad).HasColumnName("cat_tarifa_valorPorUnidad");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdTarifa).HasColumnName("id_tarifa");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Precio).HasColumnName("precio");
            entity.Property(e => e.RangoFin).HasColumnName("rangoFin");
            entity.Property(e => e.RangoInicio).HasColumnName("rangoInicio");
            entity.Property(e => e.TarifaRango)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tarifaRango");
            entity.Property(e => e.TarifaRangoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tarifaRango_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatTipoCatalogo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_tipoCatalogo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.AfectaInventario).HasColumnName("afectaInventario");
            entity.Property(e => e.AfectaProduccion).HasColumnName("afectaProduccion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TipoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoCatalogo");
            entity.Property(e => e.TipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoCatalogo_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatTipoCatalogoListaPrecio>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_tipoCatalogo_listaPrecio");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatListaPrecioEsPrivado).HasColumnName("cat_listaPrecio_esPrivado");
            entity.Property(e => e.CatListaPrecioIdMoneda).HasColumnName("cat_listaPrecio_id_moneda");
            entity.Property(e => e.CatListaPrecioListaPrecio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_listaPrecio_listaPrecio");
            entity.Property(e => e.CatListaPrecioListaPrecioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_listaPrecio_listaPrecio_codigo");
            entity.Property(e => e.CatListaPrecioPorcentajeDescuento).HasColumnName("cat_listaPrecio_porcentajeDescuento");
            entity.Property(e => e.CatTipoCatalogoAfectaInventario).HasColumnName("cat_tipoCatalogo_afectaInventario");
            entity.Property(e => e.CatTipoCatalogoAfectaProduccion).HasColumnName("cat_tipoCatalogo_afectaProduccion");
            entity.Property(e => e.CatTipoCatalogoTipoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_tipoCatalogo_tipoCatalogo");
            entity.Property(e => e.CatTipoCatalogoTipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_tipoCatalogo_tipoCatalogo_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdListaPrecio).HasColumnName("id_listaPrecio");
            entity.Property(e => e.IdTipoCatalogo).HasColumnName("id_tipoCatalogo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Porcentaje).HasColumnName("porcentaje");
            entity.Property(e => e.TipoCatalogoListaPrecio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoCatalogo_listaPrecio");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatTipoReemplazo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_tipoReemplazo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TipoReemplazo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoReemplazo");
            entity.Property(e => e.TipoReemplazoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoReemplazo_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCatUsoSeccionAtributo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_usoSeccionAtributo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.UsoSeccionAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("usoSeccionAtributo");
            entity.Property(e => e.UsoSeccionAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("usoSeccionAtributo_codigo");
        });

        modelBuilder.Entity<ViewCatVersionEquipo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_versionEquipo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoEquipoBloquearCostear).HasColumnName("cat_catalogo_equipo_bloquearCostear");
            entity.Property(e => e.CatCatalogoEquipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoEquipoCatalogoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.equipo_catalogo.equipo");
            entity.Property(e => e.CatCatalogoEquipoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_codigoInventario");
            entity.Property(e => e.CatCatalogoEquipoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_descripcion");
            entity.Property(e => e.CatCatalogoEquipoEsNacional).HasColumnName("cat_catalogo_equipo_esNacional");
            entity.Property(e => e.CatCatalogoEquipoGarantiaHoras).HasColumnName("cat_catalogo.equipo_garantiaHoras");
            entity.Property(e => e.CatCatalogoEquipoGarantiaMeses).HasColumnName("cat_catalogo.equipo_garantiaMeses");
            entity.Property(e => e.CatCatalogoEquipoIdFamilia).HasColumnName("cat_catalogo_equipo_id_familia");
            entity.Property(e => e.CatCatalogoEquipoIdImpuesto).HasColumnName("cat_catalogo_equipo_id_impuesto");
            entity.Property(e => e.CatCatalogoEquipoIdMarca).HasColumnName("cat_catalogo.equipo_id_marca");
            entity.Property(e => e.CatCatalogoEquipoIdSubtipoCatalogo).HasColumnName("cat_catalogo_equipo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoEquipoIdUnidad).HasColumnName("cat_catalogo_equipo_id_unidad");
            entity.Property(e => e.CatCatalogoEquipoManejaHorometro).HasColumnName("cat_catalogo.equipo_manejaHorometro");
            entity.Property(e => e.CatCatalogoEquipoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_equipo_precioVenta");
            entity.Property(e => e.CatCatalogoEquipoTiempoConsecucion).HasColumnName("cat_catalogo_equipo_tiempoConsecucion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogoEquipo).HasColumnName("id_catalogo.equipo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.VersionEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("versionEquipo");
            entity.Property(e => e.VersionEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("versionEquipo_codigo");
        });

        modelBuilder.Entity<ViewCatVersionEquipoDetalleTempario>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cat_versionEquipo_detalleTempario");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatDetalleTemparioCantidadEstandar).HasColumnName("cat_detalleTempario_cantidadEstandar");
            entity.Property(e => e.CatDetalleTemparioCantidadTropicalizada).HasColumnName("cat_detalleTempario_cantidadTropicalizada");
            entity.Property(e => e.CatDetalleTemparioDetalleTempario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_detalleTempario_detalleTempario");
            entity.Property(e => e.CatDetalleTemparioDetalleTemparioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_detalleTempario_detalleTempario_codigo");
            entity.Property(e => e.CatDetalleTemparioIdCatalogo).HasColumnName("cat_detalleTempario_id_catalogo");
            entity.Property(e => e.CatDetalleTemparioIdCatalogoTempario).HasColumnName("cat_detalleTempario_id_catalogo.tempario");
            entity.Property(e => e.CatDetalleTemparioIdDetalleTemparioPadre).HasColumnName("cat_detalleTempario_id_detalleTempario_padre");
            entity.Property(e => e.CatDetalleTemparioIdPruebaCheckList).HasColumnName("cat_detalleTempario_id_pruebaCheckList");
            entity.Property(e => e.CatDetalleTemparioIdSistema).HasColumnName("cat_detalleTempario_id_sistema");
            entity.Property(e => e.CatDetalleTemparioOrden).HasColumnName("cat_detalleTempario_orden");
            entity.Property(e => e.CatVersionEquipoIdCatalogoEquipo).HasColumnName("cat_versionEquipo_id_catalogo.equipo");
            entity.Property(e => e.CatVersionEquipoVersionEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_versionEquipo_versionEquipo");
            entity.Property(e => e.CatVersionEquipoVersionEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_versionEquipo_versionEquipo_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDetalleTempario).HasColumnName("id_detalleTempario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdVersionEquipo).HasColumnName("id_versionEquipo");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.VersionEquipoDetalleTempario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("versionEquipo_detalleTempario");
        });

        modelBuilder.Entity<ViewCntConfigContrato>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cnt_configContrato");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.AproximarA).HasColumnName("aproximarA");
            entity.Property(e => e.CadaN).HasColumnName("cadaN");
            entity.Property(e => e.CatCatalogoTemparioBloquearCostear).HasColumnName("cat_catalogo_tempario_bloquearCostear");
            entity.Property(e => e.CatCatalogoTemparioCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_catalogo_codigo");
            entity.Property(e => e.CatCatalogoTemparioCatalogoTempario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.tempario_catalogo.tempario");
            entity.Property(e => e.CatCatalogoTemparioCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_codigoInventario");
            entity.Property(e => e.CatCatalogoTemparioDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_descripcion");
            entity.Property(e => e.CatCatalogoTemparioDetieneEquipos).HasColumnName("cat_catalogo.tempario_detieneEquipos");
            entity.Property(e => e.CatCatalogoTemparioDuracionEstimada).HasColumnName("cat_catalogo.tempario_duracionEstimada");
            entity.Property(e => e.CatCatalogoTemparioEnTaller).HasColumnName("cat_catalogo.tempario_enTaller");
            entity.Property(e => e.CatCatalogoTemparioEsCiclico).HasColumnName("cat_catalogo.tempario_esCiclico");
            entity.Property(e => e.CatCatalogoTemparioEsNacional).HasColumnName("cat_catalogo_tempario_esNacional");
            entity.Property(e => e.CatCatalogoTemparioFacturaTodo).HasColumnName("cat_catalogo.tempario_facturaTodo");
            entity.Property(e => e.CatCatalogoTemparioHorasDetencion).HasColumnName("cat_catalogo.tempario_horasDetencion");
            entity.Property(e => e.CatCatalogoTemparioIdFamilia).HasColumnName("cat_catalogo_tempario_id_familia");
            entity.Property(e => e.CatCatalogoTemparioIdImpuesto).HasColumnName("cat_catalogo_tempario_id_impuesto");
            entity.Property(e => e.CatCatalogoTemparioIdSubtipoCatalogo).HasColumnName("cat_catalogo_tempario_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoTemparioIdTipoServicio).HasColumnName("cat_catalogo.tempario_id_tipoServicio");
            entity.Property(e => e.CatCatalogoTemparioIdUnidad).HasColumnName("cat_catalogo_tempario_id_unidad");
            entity.Property(e => e.CatCatalogoTemparioIncluirMenores).HasColumnName("cat_catalogo.tempario_incluirMenores");
            entity.Property(e => e.CatCatalogoTemparioModoAjuste).HasColumnName("cat_catalogo.tempario_modoAjuste");
            entity.Property(e => e.CatCatalogoTemparioPeriodoDias).HasColumnName("cat_catalogo.tempario_periodoDias");
            entity.Property(e => e.CatCatalogoTemparioPeriodoHoras).HasColumnName("cat_catalogo.tempario_periodoHoras");
            entity.Property(e => e.CatCatalogoTemparioPorcGarantia).HasColumnName("cat_catalogo.tempario_porcGarantia");
            entity.Property(e => e.CatCatalogoTemparioPorcTropicalizacion).HasColumnName("cat_catalogo.tempario_porcTropicalizacion");
            entity.Property(e => e.CatCatalogoTemparioPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_tempario_precioVenta");
            entity.Property(e => e.CatCatalogoTemparioProyectar).HasColumnName("cat_catalogo.tempario_proyectar");
            entity.Property(e => e.CatCatalogoTemparioTiempoConsecucion).HasColumnName("cat_catalogo_tempario_tiempoConsecucion");
            entity.Property(e => e.CntContratoEquipoContratoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cnt_contratoEquipo_contratoEquipo");
            entity.Property(e => e.CntContratoEquipoContratoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cnt_contratoEquipo_contratoEquipo_codigo");
            entity.Property(e => e.CntContratoEquipoFechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_contratoEquipo_fecha_ff");
            entity.Property(e => e.CntContratoEquipoIdContrato).HasColumnName("cnt_contratoEquipo_id_contrato");
            entity.Property(e => e.CntContratoEquipoIdContratoDetalleVisita).HasColumnName("cnt_contratoEquipo_id_contratoDetalleVisita");
            entity.Property(e => e.CntContratoEquipoIdEquipo).HasColumnName("cnt_contratoEquipo_id_equipo");
            entity.Property(e => e.CntContratoEquipoPrecioServicio)
                .HasColumnType("money")
                .HasColumnName("cnt_contratoEquipo_precioServicio");
            entity.Property(e => e.CntContratoEquipoPrecioVisita)
                .HasColumnType("money")
                .HasColumnName("cnt_contratoEquipo_precioVisita");
            entity.Property(e => e.CntContratoEquipoPromedio).HasColumnName("cnt_contratoEquipo_promedio");
            entity.Property(e => e.ConfigContrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("configContrato");
            entity.Property(e => e.Dia).HasColumnName("dia");
            entity.Property(e => e.DiaHabil).HasColumnName("diaHabil");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Estrategia).HasColumnName("estrategia");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Frecuencia).HasColumnName("frecuencia");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogoTempario).HasColumnName("id_catalogo.tempario");
            entity.Property(e => e.IdContratoEquipo).HasColumnName("id_contratoEquipo");
            entity.Property(e => e.IdTerceroProveedor).HasColumnName("id_tercero_proveedor");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IncluirMenores).HasColumnName("incluirMenores");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PorTrabajo).HasColumnName("porTrabajo");
            entity.Property(e => e.TerTerceroProveedorClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_clasificacion");
            entity.Property(e => e.TerTerceroProveedorContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_contacto");
            entity.Property(e => e.TerTerceroProveedorDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_direccion");
            entity.Property(e => e.TerTerceroProveedorEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_email");
            entity.Property(e => e.TerTerceroProveedorEsCliente).HasColumnName("ter_tercero_proveedor_esCliente");
            entity.Property(e => e.TerTerceroProveedorEsEmpresaPropia).HasColumnName("ter_tercero_proveedor_esEmpresaPropia");
            entity.Property(e => e.TerTerceroProveedorEsFabricante).HasColumnName("ter_tercero_proveedor_esFabricante");
            entity.Property(e => e.TerTerceroProveedorEsProspecto).HasColumnName("ter_tercero_proveedor_esProspecto");
            entity.Property(e => e.TerTerceroProveedorEsProveedor).HasColumnName("ter_tercero_proveedor_esProveedor");
            entity.Property(e => e.TerTerceroProveedorEsTransportador).HasColumnName("ter_tercero_proveedor_esTransportador");
            entity.Property(e => e.TerTerceroProveedorFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_fax");
            entity.Property(e => e.TerTerceroProveedorIdEstadoTercero).HasColumnName("ter_tercero_proveedor_id_estadoTercero");
            entity.Property(e => e.TerTerceroProveedorIdNaturalezaTercero).HasColumnName("ter_tercero_proveedor_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroProveedorIdZona).HasColumnName("ter_tercero_proveedor_id_zona");
            entity.Property(e => e.TerTerceroProveedorNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_notas");
            entity.Property(e => e.TerTerceroProveedorRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_representante");
            entity.Property(e => e.TerTerceroProveedorTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_telefono");
            entity.Property(e => e.TerTerceroProveedorTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_tercero");
            entity.Property(e => e.TerTerceroProveedorTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_tercero_codigo");
            entity.Property(e => e.TerTerceroProveedorTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_tercero_nit");
            entity.Property(e => e.TerTerceroProveedorTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroProveedorWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_website");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCntContrato>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cnt_contrato");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CntPeriodoContratoPeriodoContrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cnt_periodoContrato_periodoContrato");
            entity.Property(e => e.CntPeriodoContratoPeriodoContratoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cnt_periodoContrato_periodoContrato_codigo");
            entity.Property(e => e.CntTipoContratoTipoContrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cnt_tipoContrato_tipoContrato");
            entity.Property(e => e.CntTipoContratoTipoContratoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cnt_tipoContrato_tipoContrato_codigo");
            entity.Property(e => e.Condiciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("condiciones");
            entity.Property(e => e.Contrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("contrato");
            entity.Property(e => e.ContratoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("contrato_codigo");
            entity.Property(e => e.DiasCumplimiento).HasColumnName("diasCumplimiento");
            entity.Property(e => e.DocDocumentoAlquilerCosto).HasColumnName("doc_documento_alquiler_costo");
            entity.Property(e => e.DocDocumentoAlquilerCostoPlaneado).HasColumnName("doc_documento_alquiler_costoPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerDescuento).HasColumnName("doc_documento_alquiler_descuento");
            entity.Property(e => e.DocDocumentoAlquilerDescuentoPlaneado).HasColumnName("doc_documento_alquiler_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerDocumentoAlquiler)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.alquiler_documento.alquiler");
            entity.Property(e => e.DocDocumentoAlquilerDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_documento_codigo");
            entity.Property(e => e.DocDocumentoAlquilerDocumentoNumero).HasColumnName("doc_documento_alquiler_documento_numero");
            entity.Property(e => e.DocDocumentoAlquilerEjecutaDevolucion).HasColumnName("doc_documento.alquiler_ejecutaDevolucion");
            entity.Property(e => e.DocDocumentoAlquilerFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoAlquilerFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_fecha_fh");
            entity.Property(e => e.DocDocumentoAlquilerFechaFinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.alquiler_fechaFin_ff");
            entity.Property(e => e.DocDocumentoAlquilerFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoAlquilerFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoAlquilerIdDocumento).HasColumnName("doc_documento_alquiler_id_documento");
            entity.Property(e => e.DocDocumentoAlquilerIdEstadoTipoDocumento).HasColumnName("doc_documento_alquiler_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoAlquilerIdMoneda).HasColumnName("doc_documento_alquiler_id_moneda");
            entity.Property(e => e.DocDocumentoAlquilerIdMotivoestado).HasColumnName("doc_documento_alquiler_id_motivoestado");
            entity.Property(e => e.DocDocumentoAlquilerIdPrioridadDocumento).HasColumnName("doc_documento_alquiler_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoAlquilerIdSubtipoDocumento).HasColumnName("doc_documento_alquiler_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoAlquilerIdTerceroCliente).HasColumnName("doc_documento_alquiler_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoAlquilerIdTerceroProveedor).HasColumnName("doc_documento_alquiler_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoAlquilerIdUsuarioAsignado).HasColumnName("doc_documento_alquiler_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoAlquilerIdUsuarioEnUso).HasColumnName("doc_documento_alquiler_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoAlquilerIva).HasColumnName("doc_documento_alquiler_iva");
            entity.Property(e => e.DocDocumentoAlquilerIvaPlaneado).HasColumnName("doc_documento_alquiler_ivaPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerMesVencido).HasColumnName("doc_documento.alquiler_mesVencido");
            entity.Property(e => e.DocDocumentoAlquilerObservaciones)
                .HasMaxLength(3000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.alquiler_observaciones");
            entity.Property(e => e.DocDocumentoAlquilerPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_prefijo");
            entity.Property(e => e.DocDocumentoAlquilerRentabilidad).HasColumnName("doc_documento_alquiler_rentabilidad");
            entity.Property(e => e.DocDocumentoAlquilerSubtotal).HasColumnName("doc_documento_alquiler_subtotal");
            entity.Property(e => e.DocDocumentoAlquilerSubtotalPlaneado).HasColumnName("doc_documento_alquiler_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerTotal).HasColumnName("doc_documento_alquiler_total");
            entity.Property(e => e.DocDocumentoAlquilerTotalPlaneado).HasColumnName("doc_documento_alquiler_totalPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerTrm).HasColumnName("doc_documento_alquiler_trm");
            entity.Property(e => e.DocEstadoTipoDocumentoInicialAfectaIndicador).HasColumnName("doc_estadoTipoDocumento_inicial_afectaIndicador");
            entity.Property(e => e.DocEstadoTipoDocumentoInicialAfectaInventario).HasColumnName("doc_estadoTipoDocumento_inicial_afectaInventario");
            entity.Property(e => e.DocEstadoTipoDocumentoInicialColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_inicial_color");
            entity.Property(e => e.DocEstadoTipoDocumentoInicialDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_inicial_descripcion");
            entity.Property(e => e.DocEstadoTipoDocumentoInicialEditaDocumento).HasColumnName("doc_estadoTipoDocumento_inicial_editaDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoInicialEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_inicial_estadoTipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoInicialEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_inicial_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocEstadoTipoDocumentoInicialIdTipoDocumento).HasColumnName("doc_estadoTipoDocumento_inicial_id_tipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoInicialOrden).HasColumnName("doc_estadoTipoDocumento_inicial_orden");
            entity.Property(e => e.DocEstadoTipoDocumentoInicialPuedeRegresar).HasColumnName("doc_estadoTipoDocumento_inicial_puedeRegresar");
            entity.Property(e => e.DocSubtipoDocumentoBloquearDespacho).HasColumnName("doc_subtipoDocumento_bloquearDespacho");
            entity.Property(e => e.DocSubtipoDocumentoCargarSolicitante).HasColumnName("doc_subtipoDocumento_cargarSolicitante");
            entity.Property(e => e.DocSubtipoDocumentoCerrarSol).HasColumnName("doc_subtipoDocumento_cerrarSol");
            entity.Property(e => e.DocSubtipoDocumentoConsecutivo).HasColumnName("doc_subtipoDocumento_consecutivo");
            entity.Property(e => e.DocSubtipoDocumentoEjecutaDevolucion).HasColumnName("doc_subtipoDocumento_ejecutaDevolucion");
            entity.Property(e => e.DocSubtipoDocumentoIdTipoDocumento).HasColumnName("doc_subtipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_prefijo");
            entity.Property(e => e.DocSubtipoDocumentoProgramarPlaneadas).HasColumnName("doc_subtipoDocumento_programarPlaneadas");
            entity.Property(e => e.DocSubtipoDocumentoSolicitudBloquearDespacho).HasColumnName("doc_subtipoDocumento_solicitud_bloquearDespacho");
            entity.Property(e => e.DocSubtipoDocumentoSolicitudCargarSolicitante).HasColumnName("doc_subtipoDocumento_solicitud_cargarSolicitante");
            entity.Property(e => e.DocSubtipoDocumentoSolicitudCerrarSol).HasColumnName("doc_subtipoDocumento_solicitud_cerrarSol");
            entity.Property(e => e.DocSubtipoDocumentoSolicitudConsecutivo).HasColumnName("doc_subtipoDocumento_solicitud_consecutivo");
            entity.Property(e => e.DocSubtipoDocumentoSolicitudEjecutaDevolucion).HasColumnName("doc_subtipoDocumento_solicitud_ejecutaDevolucion");
            entity.Property(e => e.DocSubtipoDocumentoSolicitudIdTipoDocumento).HasColumnName("doc_subtipoDocumento_solicitud_id_tipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoSolicitudPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_solicitud_prefijo");
            entity.Property(e => e.DocSubtipoDocumentoSolicitudProgramarPlaneadas).HasColumnName("doc_subtipoDocumento_solicitud_programarPlaneadas");
            entity.Property(e => e.DocSubtipoDocumentoSolicitudSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_solicitud_subtipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoSolicitudSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_solicitud_subtipoDocumento_codigo");
            entity.Property(e => e.DocSubtipoDocumentoSolicitudValUrgente).HasColumnName("doc_subtipoDocumento_solicitud_valUrgente");
            entity.Property(e => e.DocSubtipoDocumentoSolicitudVerCentroCosto).HasColumnName("doc_subtipoDocumento_solicitud_verCentroCosto");
            entity.Property(e => e.DocSubtipoDocumentoSolicitudVerIncoterm).HasColumnName("doc_subtipoDocumento_solicitud_verIncoterm");
            entity.Property(e => e.DocSubtipoDocumentoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_subtipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_subtipoDocumento_codigo");
            entity.Property(e => e.DocSubtipoDocumentoValUrgente).HasColumnName("doc_subtipoDocumento_valUrgente");
            entity.Property(e => e.DocSubtipoDocumentoVerCentroCosto).HasColumnName("doc_subtipoDocumento_verCentroCosto");
            entity.Property(e => e.DocSubtipoDocumentoVerIncoterm).HasColumnName("doc_subtipoDocumento_verIncoterm");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFin_ff");
            entity.Property(e => e.FechaInicioFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicio_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenTipoServicioDiasGarantia).HasColumnName("gen_tipoServicio_diasGarantia");
            entity.Property(e => e.GenTipoServicioTieneGarantia).HasColumnName("gen_tipoServicio_tieneGarantia");
            entity.Property(e => e.GenTipoServicioTipoServicio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_tipoServicio_tipoServicio");
            entity.Property(e => e.GenTipoServicioTipoServicioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_tipoServicio_tipoServicio_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDepartamentoSolicitud).HasColumnName("id_departamentoSolicitud");
            entity.Property(e => e.IdDocumentoAlquiler).HasColumnName("id_documento.alquiler");
            entity.Property(e => e.IdEstadoTipoDocumentoInicial).HasColumnName("id_estadoTipoDocumento_inicial");
            entity.Property(e => e.IdPeriodoContrato).HasColumnName("id_periodoContrato");
            entity.Property(e => e.IdSubtipoDocumento).HasColumnName("id_subtipoDocumento");
            entity.Property(e => e.IdSubtipoDocumentoSolicitud).HasColumnName("id_subtipoDocumento_solicitud");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdTerceroServicio).HasColumnName("id_tercero_servicio");
            entity.Property(e => e.IdTipoContrato).HasColumnName("id_tipoContrato");
            entity.Property(e => e.IdTipoServicio).HasColumnName("id_tipoServicio");
            entity.Property(e => e.IdUsuarioCoordinador).HasColumnName("id_usuario_coordinador");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Numero)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("numero");
            entity.Property(e => e.OrtDepartamentoSolicitudDepartamentoSolicitud)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ort_departamentoSolicitud_departamentoSolicitud");
            entity.Property(e => e.OrtDepartamentoSolicitudDepartamentoSolicitudCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ort_departamentoSolicitud_departamentoSolicitud_codigo");
            entity.Property(e => e.OrtDepartamentoSolicitudRecibeSolicitudes).HasColumnName("ort_departamentoSolicitud_recibeSolicitudes");
            entity.Property(e => e.Presupuesto)
                .HasColumnType("money")
                .HasColumnName("presupuesto");
            entity.Property(e => e.SegUsuarioCoordinadorAccesoActivo).HasColumnName("seg_usuario_coordinador_accesoActivo");
            entity.Property(e => e.SegUsuarioCoordinadorAplicaRecargo).HasColumnName("seg_usuario_coordinador_aplicaRecargo");
            entity.Property(e => e.SegUsuarioCoordinadorCambiarClave).HasColumnName("seg_usuario_coordinador_cambiarClave");
            entity.Property(e => e.SegUsuarioCoordinadorClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_coordinador_clave");
            entity.Property(e => e.SegUsuarioCoordinadorCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_coordinador_costoHora");
            entity.Property(e => e.SegUsuarioCoordinadorDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_coordinador_direccion");
            entity.Property(e => e.SegUsuarioCoordinadorEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_coordinador_email");
            entity.Property(e => e.SegUsuarioCoordinadorFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_coordinador_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioCoordinadorFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_coordinador_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioCoordinadorFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_coordinador_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioCoordinadorHabilitado).HasColumnName("seg_usuario_coordinador_habilitado");
            entity.Property(e => e.SegUsuarioCoordinadorIdCargo).HasColumnName("seg_usuario_coordinador_id_cargo");
            entity.Property(e => e.SegUsuarioCoordinadorIdGrupo).HasColumnName("seg_usuario_coordinador_id_grupo");
            entity.Property(e => e.SegUsuarioCoordinadorIdPerfil).HasColumnName("seg_usuario_coordinador_id_perfil");
            entity.Property(e => e.SegUsuarioCoordinadorIdUsuario).HasColumnName("seg_usuario_coordinador_id_usuario");
            entity.Property(e => e.SegUsuarioCoordinadorIdZona).HasColumnName("seg_usuario_coordinador_id_zona");
            entity.Property(e => e.SegUsuarioCoordinadorIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_coordinador_identificacion");
            entity.Property(e => e.SegUsuarioCoordinadorIntentosFallidos).HasColumnName("seg_usuario_coordinador_intentosFallidos");
            entity.Property(e => e.SegUsuarioCoordinadorNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_coordinador_nombre");
            entity.Property(e => e.SegUsuarioCoordinadorNumeroIngresos).HasColumnName("seg_usuario_coordinador_numeroIngresos");
            entity.Property(e => e.SegUsuarioCoordinadorPorcentajeComision).HasColumnName("seg_usuario_coordinador_porcentajeComision");
            entity.Property(e => e.SegUsuarioCoordinadorPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_coordinador_preferencias");
            entity.Property(e => e.SegUsuarioCoordinadorProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_coordinador_profesion");
            entity.Property(e => e.SegUsuarioCoordinadorSexo).HasColumnName("seg_usuario_coordinador_sexo");
            entity.Property(e => e.SegUsuarioCoordinadorTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_coordinador_telefono");
            entity.Property(e => e.SegUsuarioCoordinadorUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_coordinador_usuario");
            entity.Property(e => e.SegUsuarioCoordinadorUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_coordinador_usuario_codigo");
            entity.Property(e => e.TerTerceroClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_clasificacion");
            entity.Property(e => e.TerTerceroContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_contacto");
            entity.Property(e => e.TerTerceroDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_direccion");
            entity.Property(e => e.TerTerceroEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_email");
            entity.Property(e => e.TerTerceroEsCliente).HasColumnName("ter_tercero_esCliente");
            entity.Property(e => e.TerTerceroEsEmpresaPropia).HasColumnName("ter_tercero_esEmpresaPropia");
            entity.Property(e => e.TerTerceroEsFabricante).HasColumnName("ter_tercero_esFabricante");
            entity.Property(e => e.TerTerceroEsProspecto).HasColumnName("ter_tercero_esProspecto");
            entity.Property(e => e.TerTerceroEsProveedor).HasColumnName("ter_tercero_esProveedor");
            entity.Property(e => e.TerTerceroEsTransportador).HasColumnName("ter_tercero_esTransportador");
            entity.Property(e => e.TerTerceroFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fax");
            entity.Property(e => e.TerTerceroIdEstadoTercero).HasColumnName("ter_tercero_id_estadoTercero");
            entity.Property(e => e.TerTerceroIdNaturalezaTercero).HasColumnName("ter_tercero_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroIdZona).HasColumnName("ter_tercero_id_zona");
            entity.Property(e => e.TerTerceroNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_notas");
            entity.Property(e => e.TerTerceroRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_representante");
            entity.Property(e => e.TerTerceroServicioClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_clasificacion");
            entity.Property(e => e.TerTerceroServicioContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_contacto");
            entity.Property(e => e.TerTerceroServicioDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_direccion");
            entity.Property(e => e.TerTerceroServicioEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_email");
            entity.Property(e => e.TerTerceroServicioEsCliente).HasColumnName("ter_tercero_servicio_esCliente");
            entity.Property(e => e.TerTerceroServicioEsEmpresaPropia).HasColumnName("ter_tercero_servicio_esEmpresaPropia");
            entity.Property(e => e.TerTerceroServicioEsFabricante).HasColumnName("ter_tercero_servicio_esFabricante");
            entity.Property(e => e.TerTerceroServicioEsProspecto).HasColumnName("ter_tercero_servicio_esProspecto");
            entity.Property(e => e.TerTerceroServicioEsProveedor).HasColumnName("ter_tercero_servicio_esProveedor");
            entity.Property(e => e.TerTerceroServicioEsTransportador).HasColumnName("ter_tercero_servicio_esTransportador");
            entity.Property(e => e.TerTerceroServicioFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_fax");
            entity.Property(e => e.TerTerceroServicioIdEstadoTercero).HasColumnName("ter_tercero_servicio_id_estadoTercero");
            entity.Property(e => e.TerTerceroServicioIdNaturalezaTercero).HasColumnName("ter_tercero_servicio_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroServicioIdZona).HasColumnName("ter_tercero_servicio_id_zona");
            entity.Property(e => e.TerTerceroServicioNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_notas");
            entity.Property(e => e.TerTerceroServicioRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_representante");
            entity.Property(e => e.TerTerceroServicioTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_telefono");
            entity.Property(e => e.TerTerceroServicioTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_tercero");
            entity.Property(e => e.TerTerceroServicioTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_tercero_codigo");
            entity.Property(e => e.TerTerceroServicioTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_tercero_nit");
            entity.Property(e => e.TerTerceroServicioTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroServicioWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_website");
            entity.Property(e => e.TerTerceroTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_telefono");
            entity.Property(e => e.TerTerceroTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero");
            entity.Property(e => e.TerTerceroTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_codigo");
            entity.Property(e => e.TerTerceroTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nit");
            entity.Property(e => e.TerTerceroTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_website");
            entity.Property(e => e.TotalContrato)
                .HasColumnType("money")
                .HasColumnName("totalContrato");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCntContratoCatalogo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cnt_contrato_catalogo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoBloquearCostear).HasColumnName("cat_catalogo_bloquearCostear");
            entity.Property(e => e.CatCatalogoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo");
            entity.Property(e => e.CatCatalogoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_codigoInventario");
            entity.Property(e => e.CatCatalogoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_descripcion");
            entity.Property(e => e.CatCatalogoEsNacional).HasColumnName("cat_catalogo_esNacional");
            entity.Property(e => e.CatCatalogoIdFamilia).HasColumnName("cat_catalogo_id_familia");
            entity.Property(e => e.CatCatalogoIdImpuesto).HasColumnName("cat_catalogo_id_impuesto");
            entity.Property(e => e.CatCatalogoIdSubtipoCatalogo).HasColumnName("cat_catalogo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoIdUnidad).HasColumnName("cat_catalogo_id_unidad");
            entity.Property(e => e.CatCatalogoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_precioVenta");
            entity.Property(e => e.CatCatalogoTiempoConsecucion).HasColumnName("cat_catalogo_tiempoConsecucion");
            entity.Property(e => e.CntContratoCondiciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_condiciones");
            entity.Property(e => e.CntContratoContrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_contrato");
            entity.Property(e => e.CntContratoContratoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_contrato_codigo");
            entity.Property(e => e.CntContratoDiasCumplimiento).HasColumnName("cnt_contrato_diasCumplimiento");
            entity.Property(e => e.CntContratoFechaFinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_contrato_fechaFin_ff");
            entity.Property(e => e.CntContratoFechaInicioFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_contrato_fechaInicio_ff");
            entity.Property(e => e.CntContratoIdDepartamentoSolicitud).HasColumnName("cnt_contrato_id_departamentoSolicitud");
            entity.Property(e => e.CntContratoIdPeriodoContrato).HasColumnName("cnt_contrato_id_periodoContrato");
            entity.Property(e => e.CntContratoIdSubtipoDocumento).HasColumnName("cnt_contrato_id_subtipoDocumento");
            entity.Property(e => e.CntContratoIdTercero).HasColumnName("cnt_contrato_id_tercero");
            entity.Property(e => e.CntContratoIdTerceroServicio).HasColumnName("cnt_contrato_id_tercero_servicio");
            entity.Property(e => e.CntContratoIdTipoContrato).HasColumnName("cnt_contrato_id_tipoContrato");
            entity.Property(e => e.CntContratoIdTipoServicio).HasColumnName("cnt_contrato_id_tipoServicio");
            entity.Property(e => e.CntContratoIdUsuarioCoordinador).HasColumnName("cnt_contrato_id_usuario_coordinador");
            entity.Property(e => e.CntContratoNumero)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_numero");
            entity.Property(e => e.CntContratoPresupuesto)
                .HasColumnType("money")
                .HasColumnName("cnt_contrato_presupuesto");
            entity.Property(e => e.CntContratoTotalContrato)
                .HasColumnType("money")
                .HasColumnName("cnt_contrato_totalContrato");
            entity.Property(e => e.Consumida).HasColumnName("consumida");
            entity.Property(e => e.ContratoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("contrato_catalogo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdContrato).HasColumnName("id_contrato");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Incluida).HasColumnName("incluida");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Notas)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("notas");
            entity.Property(e => e.PrecioVenta)
                .HasColumnType("money")
                .HasColumnName("precioVenta");
            entity.Property(e => e.Saldo).HasColumnName("saldo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCntContratoDetalleVisitum>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cnt_contratoDetalleVisita");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.AproximarA).HasColumnName("aproximarA");
            entity.Property(e => e.CadaN).HasColumnName("cadaN");
            entity.Property(e => e.CntContratoCondiciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_condiciones");
            entity.Property(e => e.CntContratoContrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_contrato");
            entity.Property(e => e.CntContratoContratoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_contrato_codigo");
            entity.Property(e => e.CntContratoDiasCumplimiento).HasColumnName("cnt_contrato_diasCumplimiento");
            entity.Property(e => e.CntContratoFechaFinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_contrato_fechaFin_ff");
            entity.Property(e => e.CntContratoFechaInicioFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_contrato_fechaInicio_ff");
            entity.Property(e => e.CntContratoIdDepartamentoSolicitud).HasColumnName("cnt_contrato_id_departamentoSolicitud");
            entity.Property(e => e.CntContratoIdPeriodoContrato).HasColumnName("cnt_contrato_id_periodoContrato");
            entity.Property(e => e.CntContratoIdSubtipoDocumento).HasColumnName("cnt_contrato_id_subtipoDocumento");
            entity.Property(e => e.CntContratoIdTercero).HasColumnName("cnt_contrato_id_tercero");
            entity.Property(e => e.CntContratoIdTerceroServicio).HasColumnName("cnt_contrato_id_tercero_servicio");
            entity.Property(e => e.CntContratoIdTipoContrato).HasColumnName("cnt_contrato_id_tipoContrato");
            entity.Property(e => e.CntContratoIdTipoServicio).HasColumnName("cnt_contrato_id_tipoServicio");
            entity.Property(e => e.CntContratoIdUsuarioCoordinador).HasColumnName("cnt_contrato_id_usuario_coordinador");
            entity.Property(e => e.CntContratoNumero)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_numero");
            entity.Property(e => e.CntContratoPresupuesto)
                .HasColumnType("money")
                .HasColumnName("cnt_contrato_presupuesto");
            entity.Property(e => e.CntContratoTotalContrato)
                .HasColumnType("money")
                .HasColumnName("cnt_contrato_totalContrato");
            entity.Property(e => e.ContratoDetalleVisita)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("contratoDetalleVisita");
            entity.Property(e => e.ContratoDetalleVisitaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("contratoDetalleVisita_codigo");
            entity.Property(e => e.Dia).HasColumnName("dia");
            entity.Property(e => e.DiaHabil).HasColumnName("diaHabil");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Estrategia).HasColumnName("estrategia");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaInactivaFinalFf)
                .HasColumnType("datetime")
                .HasColumnName("fechaInactivaFinal_ff");
            entity.Property(e => e.FechaInactivaInicialFf)
                .HasColumnType("datetime")
                .HasColumnName("fechaInactivaInicial_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Frecuencia).HasColumnName("frecuencia");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdContrato).HasColumnName("id_contrato");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IncluirMenores).HasColumnName("incluirMenores");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PorTrabajo).HasColumnName("porTrabajo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCntContratoEquipo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cnt_contratoEquipo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CntContratoCondiciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_condiciones");
            entity.Property(e => e.CntContratoContrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_contrato");
            entity.Property(e => e.CntContratoContratoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_contrato_codigo");
            entity.Property(e => e.CntContratoDetalleVisitaAproximarA).HasColumnName("cnt_contratoDetalleVisita_aproximarA");
            entity.Property(e => e.CntContratoDetalleVisitaCadaN).HasColumnName("cnt_contratoDetalleVisita_cadaN");
            entity.Property(e => e.CntContratoDetalleVisitaContratoDetalleVisita)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cnt_contratoDetalleVisita_contratoDetalleVisita");
            entity.Property(e => e.CntContratoDetalleVisitaContratoDetalleVisitaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cnt_contratoDetalleVisita_contratoDetalleVisita_codigo");
            entity.Property(e => e.CntContratoDetalleVisitaDia).HasColumnName("cnt_contratoDetalleVisita_dia");
            entity.Property(e => e.CntContratoDetalleVisitaEstrategia).HasColumnName("cnt_contratoDetalleVisita_estrategia");
            entity.Property(e => e.CntContratoDetalleVisitaFechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_contratoDetalleVisita_fecha_ff");
            entity.Property(e => e.CntContratoDetalleVisitaFrecuencia).HasColumnName("cnt_contratoDetalleVisita_frecuencia");
            entity.Property(e => e.CntContratoDetalleVisitaIdContrato).HasColumnName("cnt_contratoDetalleVisita_id_contrato");
            entity.Property(e => e.CntContratoDetalleVisitaIncluirMenores).HasColumnName("cnt_contratoDetalleVisita_incluirMenores");
            entity.Property(e => e.CntContratoDetalleVisitaPorTrabajo).HasColumnName("cnt_contratoDetalleVisita_porTrabajo");
            entity.Property(e => e.CntContratoDiasCumplimiento).HasColumnName("cnt_contrato_diasCumplimiento");
            entity.Property(e => e.CntContratoFechaFinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_contrato_fechaFin_ff");
            entity.Property(e => e.CntContratoFechaInicioFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_contrato_fechaInicio_ff");
            entity.Property(e => e.CntContratoIdDepartamentoSolicitud).HasColumnName("cnt_contrato_id_departamentoSolicitud");
            entity.Property(e => e.CntContratoIdPeriodoContrato).HasColumnName("cnt_contrato_id_periodoContrato");
            entity.Property(e => e.CntContratoIdSubtipoDocumento).HasColumnName("cnt_contrato_id_subtipoDocumento");
            entity.Property(e => e.CntContratoIdTercero).HasColumnName("cnt_contrato_id_tercero");
            entity.Property(e => e.CntContratoIdTerceroServicio).HasColumnName("cnt_contrato_id_tercero_servicio");
            entity.Property(e => e.CntContratoIdTipoContrato).HasColumnName("cnt_contrato_id_tipoContrato");
            entity.Property(e => e.CntContratoIdTipoServicio).HasColumnName("cnt_contrato_id_tipoServicio");
            entity.Property(e => e.CntContratoIdUsuarioCoordinador).HasColumnName("cnt_contrato_id_usuario_coordinador");
            entity.Property(e => e.CntContratoNumero)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_numero");
            entity.Property(e => e.CntContratoPresupuesto)
                .HasColumnType("money")
                .HasColumnName("cnt_contrato_presupuesto");
            entity.Property(e => e.CntContratoTotalContrato)
                .HasColumnType("money")
                .HasColumnName("cnt_contrato_totalContrato");
            entity.Property(e => e.ContratoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("contratoEquipo");
            entity.Property(e => e.ContratoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("contratoEquipo_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquEquipoCosto)
                .HasColumnType("money")
                .HasColumnName("equ_equipo_costo");
            entity.Property(e => e.EquEquipoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo");
            entity.Property(e => e.EquEquipoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_codigo");
            entity.Property(e => e.EquEquipoEquipoSerial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_serial");
            entity.Property(e => e.EquEquipoFechaImportacionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaImportacion_ff");
            entity.Property(e => e.EquEquipoFechaPuestaMarchaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaPuestaMarcha_fh");
            entity.Property(e => e.EquEquipoGarantiaCancelada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_garantiaCancelada");
            entity.Property(e => e.EquEquipoHorasGarantia).HasColumnName("equ_equipo_horasGarantia");
            entity.Property(e => e.EquEquipoHorometroActual).HasColumnName("equ_equipo_horometroActual");
            entity.Property(e => e.EquEquipoIdCatalogoEquipo).HasColumnName("equ_equipo_id_catalogo.equipo");
            entity.Property(e => e.EquEquipoIdEquipo).HasColumnName("equ_equipo_id_equipo");
            entity.Property(e => e.EquEquipoIdEstadoEquipo).HasColumnName("equ_equipo_id_estadoEquipo");
            entity.Property(e => e.EquEquipoIdSistema).HasColumnName("equ_equipo_id_sistema");
            entity.Property(e => e.EquEquipoIdSucursal).HasColumnName("equ_equipo_id_sucursal");
            entity.Property(e => e.EquEquipoIdTercero).HasColumnName("equ_equipo_id_tercero");
            entity.Property(e => e.EquEquipoIdTerceroComprador).HasColumnName("equ_equipo_id_tercero_comprador");
            entity.Property(e => e.EquEquipoIdTerceroServicio).HasColumnName("equ_equipo_id_tercero_servicio");
            entity.Property(e => e.EquEquipoIdVersionEquipo).HasColumnName("equ_equipo_id_versionEquipo");
            entity.Property(e => e.EquEquipoIdZona).HasColumnName("equ_equipo_id_zona");
            entity.Property(e => e.EquEquipoNombreContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_nombreContacto");
            entity.Property(e => e.EquEquipoObservaciones)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_observaciones");
            entity.Property(e => e.EquEquipoPromedioHoras).HasColumnName("equ_equipo_promedioHoras");
            entity.Property(e => e.EquEquipoTelefonoContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_telefonoContacto");
            entity.Property(e => e.EquEquipoUbicacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_ubicacion");
            entity.Property(e => e.EquEquipoUltimaLecturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_ultimaLectura_fh");
            entity.Property(e => e.EquEquipoVencimientoGarantiaDistribuidorFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaDistribuidor_ff");
            entity.Property(e => e.EquEquipoVencimientoGarantiaFabricaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaFabrica_ff");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdContrato).HasColumnName("id_contrato");
            entity.Property(e => e.IdContratoDetalleVisita).HasColumnName("id_contratoDetalleVisita");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Manejahorometro).HasColumnName("manejahorometro");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PrecioServicio)
                .HasColumnType("money")
                .HasColumnName("precioServicio");
            entity.Property(e => e.PrecioVisita)
                .HasColumnType("money")
                .HasColumnName("precioVisita");
            entity.Property(e => e.Promedio).HasColumnName("promedio");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCntContratoSucursal>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cnt_contrato_sucursal");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CntContratoCondiciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_condiciones");
            entity.Property(e => e.CntContratoContrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_contrato");
            entity.Property(e => e.CntContratoContratoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_contrato_codigo");
            entity.Property(e => e.CntContratoDiasCumplimiento).HasColumnName("cnt_contrato_diasCumplimiento");
            entity.Property(e => e.CntContratoFechaFinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_contrato_fechaFin_ff");
            entity.Property(e => e.CntContratoFechaInicioFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_contrato_fechaInicio_ff");
            entity.Property(e => e.CntContratoIdDepartamentoSolicitud).HasColumnName("cnt_contrato_id_departamentoSolicitud");
            entity.Property(e => e.CntContratoIdDocumentoAlquiler).HasColumnName("cnt_contrato_id_documento.alquiler");
            entity.Property(e => e.CntContratoIdPeriodoContrato).HasColumnName("cnt_contrato_id_periodoContrato");
            entity.Property(e => e.CntContratoIdSubtipoDocumento).HasColumnName("cnt_contrato_id_subtipoDocumento");
            entity.Property(e => e.CntContratoIdTercero).HasColumnName("cnt_contrato_id_tercero");
            entity.Property(e => e.CntContratoIdTerceroServicio).HasColumnName("cnt_contrato_id_tercero_servicio");
            entity.Property(e => e.CntContratoIdTipoContrato).HasColumnName("cnt_contrato_id_tipoContrato");
            entity.Property(e => e.CntContratoIdTipoServicio).HasColumnName("cnt_contrato_id_tipoServicio");
            entity.Property(e => e.CntContratoIdUsuarioCoordinador).HasColumnName("cnt_contrato_id_usuario_coordinador");
            entity.Property(e => e.CntContratoNumero)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_numero");
            entity.Property(e => e.CntContratoPresupuesto)
                .HasColumnType("money")
                .HasColumnName("cnt_contrato_presupuesto");
            entity.Property(e => e.CntContratoTotalContrato)
                .HasColumnType("money")
                .HasColumnName("cnt_contrato_totalContrato");
            entity.Property(e => e.ContratoSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("contrato_sucursal");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdContrato).HasColumnName("id_contrato");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PrecioServicio)
                .HasColumnType("money")
                .HasColumnName("precioServicio");
            entity.Property(e => e.PrecioVisita)
                .HasColumnType("money")
                .HasColumnName("precioVisita");
            entity.Property(e => e.Presupuesto)
                .HasColumnType("money")
                .HasColumnName("presupuesto");
            entity.Property(e => e.TerSucursalCodigorecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_codigorecursiva");
            entity.Property(e => e.TerSucursalContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_contacto");
            entity.Property(e => e.TerSucursalDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Direccion");
            entity.Property(e => e.TerSucursalEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Email");
            entity.Property(e => e.TerSucursalFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Fax");
            entity.Property(e => e.TerSucursalIdEstadoTercero).HasColumnName("ter_sucursal_id_estadoTercero");
            entity.Property(e => e.TerSucursalIdSucursal).HasColumnName("ter_sucursal_id_sucursal");
            entity.Property(e => e.TerSucursalIdTercero).HasColumnName("ter_sucursal_id_tercero");
            entity.Property(e => e.TerSucursalIdUsuarioAsesor).HasColumnName("ter_sucursal_id_usuario_asesor");
            entity.Property(e => e.TerSucursalIdUsuarioTecnico).HasColumnName("ter_sucursal_id_usuario_tecnico");
            entity.Property(e => e.TerSucursalIdZona).HasColumnName("ter_sucursal_id_zona");
            entity.Property(e => e.TerSucursalParaAlquiler).HasColumnName("ter_sucursal_paraAlquiler");
            entity.Property(e => e.TerSucursalParaSoporte).HasColumnName("ter_sucursal_paraSoporte");
            entity.Property(e => e.TerSucursalParaVenta).HasColumnName("ter_sucursal_paraVenta");
            entity.Property(e => e.TerSucursalSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal");
            entity.Property(e => e.TerSucursalSucursalCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal_codigo");
            entity.Property(e => e.TerSucursalTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_telefono");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCntContratoTipoServicio>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cnt_contrato_tipoServicio");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatListaPrecioEsPrivado).HasColumnName("cat_listaPrecio_esPrivado");
            entity.Property(e => e.CatListaPrecioListaPrecio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_listaPrecio_listaPrecio");
            entity.Property(e => e.CatListaPrecioListaPrecioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_listaPrecio_listaPrecio_codigo");
            entity.Property(e => e.CatListaPrecioPorcentajeDescuento).HasColumnName("cat_listaPrecio_porcentajeDescuento");
            entity.Property(e => e.CntContratoCondiciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_condiciones");
            entity.Property(e => e.CntContratoContrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_contrato");
            entity.Property(e => e.CntContratoContratoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_contrato_codigo");
            entity.Property(e => e.CntContratoDiasCumplimiento).HasColumnName("cnt_contrato_diasCumplimiento");
            entity.Property(e => e.CntContratoFechaFinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_contrato_fechaFin_ff");
            entity.Property(e => e.CntContratoFechaInicioFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_contrato_fechaInicio_ff");
            entity.Property(e => e.CntContratoIdDepartamentoSolicitud).HasColumnName("cnt_contrato_id_departamentoSolicitud");
            entity.Property(e => e.CntContratoIdDocumentoAlquiler).HasColumnName("cnt_contrato_id_documento.alquiler");
            entity.Property(e => e.CntContratoIdPeriodoContrato).HasColumnName("cnt_contrato_id_periodoContrato");
            entity.Property(e => e.CntContratoIdSubtipoDocumento).HasColumnName("cnt_contrato_id_subtipoDocumento");
            entity.Property(e => e.CntContratoIdTercero).HasColumnName("cnt_contrato_id_tercero");
            entity.Property(e => e.CntContratoIdTerceroServicio).HasColumnName("cnt_contrato_id_tercero_servicio");
            entity.Property(e => e.CntContratoIdTipoContrato).HasColumnName("cnt_contrato_id_tipoContrato");
            entity.Property(e => e.CntContratoIdTipoServicio).HasColumnName("cnt_contrato_id_tipoServicio");
            entity.Property(e => e.CntContratoIdUsuarioCoordinador).HasColumnName("cnt_contrato_id_usuario_coordinador");
            entity.Property(e => e.CntContratoNumero)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_numero");
            entity.Property(e => e.CntContratoPresupuesto)
                .HasColumnType("money")
                .HasColumnName("cnt_contrato_presupuesto");
            entity.Property(e => e.CntContratoTotalContrato)
                .HasColumnType("money")
                .HasColumnName("cnt_contrato_totalContrato");
            entity.Property(e => e.ContratoTipoServicio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("contrato_tipoServicio");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenTipoServicioDiasGarantia).HasColumnName("gen_tipoServicio_diasGarantia");
            entity.Property(e => e.GenTipoServicioTieneGarantia).HasColumnName("gen_tipoServicio_tieneGarantia");
            entity.Property(e => e.GenTipoServicioTipoServicio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_tipoServicio_tipoServicio");
            entity.Property(e => e.GenTipoServicioTipoServicioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_tipoServicio_tipoServicio_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdContrato).HasColumnName("id_contrato");
            entity.Property(e => e.IdListaPrecio).HasColumnName("id_listaPrecio");
            entity.Property(e => e.IdTipoServicio).HasColumnName("id_tipoServicio");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCntContratoZona>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cnt_contrato_zona");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CntContratoCondiciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_condiciones");
            entity.Property(e => e.CntContratoContrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_contrato");
            entity.Property(e => e.CntContratoContratoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_contrato_codigo");
            entity.Property(e => e.CntContratoDiasCumplimiento).HasColumnName("cnt_contrato_diasCumplimiento");
            entity.Property(e => e.CntContratoFechaFinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_contrato_fechaFin_ff");
            entity.Property(e => e.CntContratoFechaInicioFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_contrato_fechaInicio_ff");
            entity.Property(e => e.CntContratoIdDepartamentoSolicitud).HasColumnName("cnt_contrato_id_departamentoSolicitud");
            entity.Property(e => e.CntContratoIdPeriodoContrato).HasColumnName("cnt_contrato_id_periodoContrato");
            entity.Property(e => e.CntContratoIdSubtipoDocumento).HasColumnName("cnt_contrato_id_subtipoDocumento");
            entity.Property(e => e.CntContratoIdTercero).HasColumnName("cnt_contrato_id_tercero");
            entity.Property(e => e.CntContratoIdTerceroServicio).HasColumnName("cnt_contrato_id_tercero_servicio");
            entity.Property(e => e.CntContratoIdTipoContrato).HasColumnName("cnt_contrato_id_tipoContrato");
            entity.Property(e => e.CntContratoIdTipoServicio).HasColumnName("cnt_contrato_id_tipoServicio");
            entity.Property(e => e.CntContratoIdUsuarioCoordinador).HasColumnName("cnt_contrato_id_usuario_coordinador");
            entity.Property(e => e.CntContratoNumero)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_numero");
            entity.Property(e => e.CntContratoPresupuesto)
                .HasColumnType("money")
                .HasColumnName("cnt_contrato_presupuesto");
            entity.Property(e => e.CntContratoTotalContrato)
                .HasColumnType("money")
                .HasColumnName("cnt_contrato_totalContrato");
            entity.Property(e => e.ContratoZona)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("contrato_zona");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenZonaCodigoExterno)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("gen_zona_codigoExterno");
            entity.Property(e => e.GenZonaIdZona).HasColumnName("gen_zona_id_zona");
            entity.Property(e => e.GenZonaNivel).HasColumnName("gen_zona_nivel");
            entity.Property(e => e.GenZonaTiempoDesplazamiento).HasColumnName("gen_zona_tiempoDesplazamiento");
            entity.Property(e => e.GenZonaZona)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_zona_zona");
            entity.Property(e => e.GenZonaZonaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_zona_zona_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdContrato).HasColumnName("id_contrato");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdZona).HasColumnName("id_zona");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PrecioServicio)
                .HasColumnType("money")
                .HasColumnName("precioServicio");
            entity.Property(e => e.PrecioVisita)
                .HasColumnType("money")
                .HasColumnName("precioVisita");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCntCorrimientoVisitaFija>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cnt_corrimientoVisitaFija");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CntVisitaFijaEsPorTrabajo).HasColumnName("cnt_visitaFija_esPorTrabajo");
            entity.Property(e => e.CntVisitaFijaFechaCreadaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_visitaFija_fechaCreada_ff");
            entity.Property(e => e.CntVisitaFijaFechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_visitaFija_fecha_ff");
            entity.Property(e => e.CntVisitaFijaHorometro).HasColumnName("cnt_visitaFija_horometro");
            entity.Property(e => e.CntVisitaFijaIdCatalogoTempario).HasColumnName("cnt_visitaFija_id_catalogo.tempario");
            entity.Property(e => e.CntVisitaFijaIdContratoDetalleVisita).HasColumnName("cnt_visitaFija_id_contratoDetalleVisita");
            entity.Property(e => e.CntVisitaFijaIdContratoEquipo).HasColumnName("cnt_visitaFija_id_contratoEquipo");
            entity.Property(e => e.CntVisitaFijaIdDocumentoOt).HasColumnName("cnt_visitaFija_id_documento.ot");
            entity.Property(e => e.CntVisitaFijaVisitaFija)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cnt_visitaFija_visitaFija");
            entity.Property(e => e.CntVisitaFijaVisitaFijaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cnt_visitaFija_visitaFija_codigo");
            entity.Property(e => e.CorrimientoVisitaFija)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("corrimientoVisitaFija");
            entity.Property(e => e.CorrimientoVisitaFijaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("corrimientoVisitaFija_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaOriginalFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaOriginal_ff");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdVisitaFija).HasColumnName("id_visitaFija");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCntPagosContrato>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cnt_pagosContrato");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CntContratoCondiciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_condiciones");
            entity.Property(e => e.CntContratoContrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_contrato");
            entity.Property(e => e.CntContratoContratoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_contrato_codigo");
            entity.Property(e => e.CntContratoDiasCumplimiento).HasColumnName("cnt_contrato_diasCumplimiento");
            entity.Property(e => e.CntContratoFechaFinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_contrato_fechaFin_ff");
            entity.Property(e => e.CntContratoFechaInicioFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_contrato_fechaInicio_ff");
            entity.Property(e => e.CntContratoIdDepartamentoSolicitud).HasColumnName("cnt_contrato_id_departamentoSolicitud");
            entity.Property(e => e.CntContratoIdPeriodoContrato).HasColumnName("cnt_contrato_id_periodoContrato");
            entity.Property(e => e.CntContratoIdSubtipoDocumento).HasColumnName("cnt_contrato_id_subtipoDocumento");
            entity.Property(e => e.CntContratoIdTercero).HasColumnName("cnt_contrato_id_tercero");
            entity.Property(e => e.CntContratoIdTerceroServicio).HasColumnName("cnt_contrato_id_tercero_servicio");
            entity.Property(e => e.CntContratoIdTipoContrato).HasColumnName("cnt_contrato_id_tipoContrato");
            entity.Property(e => e.CntContratoIdTipoServicio).HasColumnName("cnt_contrato_id_tipoServicio");
            entity.Property(e => e.CntContratoIdUsuarioCoordinador).HasColumnName("cnt_contrato_id_usuario_coordinador");
            entity.Property(e => e.CntContratoNumero)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_numero");
            entity.Property(e => e.CntContratoPresupuesto)
                .HasColumnType("money")
                .HasColumnName("cnt_contrato_presupuesto");
            entity.Property(e => e.CntContratoTotalContrato)
                .HasColumnType("money")
                .HasColumnName("cnt_contrato_totalContrato");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdContrato).HasColumnName("id_contrato");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PagosContrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pagosContrato");
            entity.Property(e => e.PagosContratoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pagosContrato_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
        });

        modelBuilder.Entity<ViewCntPeriodoContrato>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cnt_periodoContrato");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PeriodoContrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("periodoContrato");
            entity.Property(e => e.PeriodoContratoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("periodoContrato_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCntTiempoRespuestum>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cnt_tiempoRespuesta");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CntContratoCondiciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_condiciones");
            entity.Property(e => e.CntContratoContrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_contrato");
            entity.Property(e => e.CntContratoContratoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_contrato_codigo");
            entity.Property(e => e.CntContratoDiasCumplimiento).HasColumnName("cnt_contrato_diasCumplimiento");
            entity.Property(e => e.CntContratoFechaFinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_contrato_fechaFin_ff");
            entity.Property(e => e.CntContratoFechaInicioFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_contrato_fechaInicio_ff");
            entity.Property(e => e.CntContratoIdDepartamentoSolicitud).HasColumnName("cnt_contrato_id_departamentoSolicitud");
            entity.Property(e => e.CntContratoIdPeriodoContrato).HasColumnName("cnt_contrato_id_periodoContrato");
            entity.Property(e => e.CntContratoIdSubtipoDocumento).HasColumnName("cnt_contrato_id_subtipoDocumento");
            entity.Property(e => e.CntContratoIdTercero).HasColumnName("cnt_contrato_id_tercero");
            entity.Property(e => e.CntContratoIdTerceroServicio).HasColumnName("cnt_contrato_id_tercero_servicio");
            entity.Property(e => e.CntContratoIdTipoContrato).HasColumnName("cnt_contrato_id_tipoContrato");
            entity.Property(e => e.CntContratoIdTipoServicio).HasColumnName("cnt_contrato_id_tipoServicio");
            entity.Property(e => e.CntContratoIdUsuarioCoordinador).HasColumnName("cnt_contrato_id_usuario_coordinador");
            entity.Property(e => e.CntContratoNumero)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_numero");
            entity.Property(e => e.CntContratoPresupuesto)
                .HasColumnType("money")
                .HasColumnName("cnt_contrato_presupuesto");
            entity.Property(e => e.CntContratoTotalContrato)
                .HasColumnType("money")
                .HasColumnName("cnt_contrato_totalContrato");
            entity.Property(e => e.DocEstrategiaPrioridadDomingoFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_domingoFin_hh");
            entity.Property(e => e.DocEstrategiaPrioridadDomingoIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_domingoIni_hh");
            entity.Property(e => e.DocEstrategiaPrioridadEstrategiaPrioridad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_estrategiaPrioridad_estrategiaPrioridad");
            entity.Property(e => e.DocEstrategiaPrioridadEstrategiaPrioridadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_estrategiaPrioridad_estrategiaPrioridad_codigo");
            entity.Property(e => e.DocEstrategiaPrioridadFestivoFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_festivoFin_hh");
            entity.Property(e => e.DocEstrategiaPrioridadFestivoIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_festivoIni_hh");
            entity.Property(e => e.DocEstrategiaPrioridadJuevesFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_juevesFin_hh");
            entity.Property(e => e.DocEstrategiaPrioridadJuevesIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_juevesIni_hh");
            entity.Property(e => e.DocEstrategiaPrioridadLunesFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_lunesFin_hh");
            entity.Property(e => e.DocEstrategiaPrioridadLunesIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_lunesIni_hh");
            entity.Property(e => e.DocEstrategiaPrioridadMartesFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_martesFin_hh");
            entity.Property(e => e.DocEstrategiaPrioridadMartesIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_martesIni_hh");
            entity.Property(e => e.DocEstrategiaPrioridadMiercolesFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_miercolesFin_hh");
            entity.Property(e => e.DocEstrategiaPrioridadMiercolesIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_miercolesIni_hh");
            entity.Property(e => e.DocEstrategiaPrioridadSabadoFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_sabadoFin_hh");
            entity.Property(e => e.DocEstrategiaPrioridadSabadoIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_sabadoIni_hh");
            entity.Property(e => e.DocEstrategiaPrioridadViernesFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_viernesFin_hh");
            entity.Property(e => e.DocEstrategiaPrioridadViernesIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_viernesIni_hh");
            entity.Property(e => e.DocPrioridadDocumentoIdEstrategiaPrioridad).HasColumnName("doc_prioridadDocumento_id_estrategiaPrioridad");
            entity.Property(e => e.DocPrioridadDocumentoIdTipoDocumento).HasColumnName("doc_prioridadDocumento_id_tipoDocumento");
            entity.Property(e => e.DocPrioridadDocumentoPrioridadDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_prioridadDocumento_prioridadDocumento");
            entity.Property(e => e.DocPrioridadDocumentoPrioridadDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_prioridadDocumento_prioridadDocumento_codigo");
            entity.Property(e => e.DocPrioridadDocumentoTiempoRespuesta).HasColumnName("doc_prioridadDocumento_tiempoRespuesta");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdContrato).HasColumnName("id_contrato");
            entity.Property(e => e.IdEstrategiaPrioridad).HasColumnName("id_estrategiaPrioridad");
            entity.Property(e => e.IdPrioridadDocumento).HasColumnName("id_prioridadDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TiempoLimite).HasColumnName("tiempoLimite");
            entity.Property(e => e.TiempoRespuesta)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tiempoRespuesta");
            entity.Property(e => e.TiempoRespuestaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tiempoRespuesta_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCntTipoContrato>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cnt_tipoContrato");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TipoContrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoContrato");
            entity.Property(e => e.TipoContratoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoContrato_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewCntVisitaFija>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cnt_visitaFija");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoTemparioBloquearCostear).HasColumnName("cat_catalogo_tempario_bloquearCostear");
            entity.Property(e => e.CatCatalogoTemparioCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_catalogo_codigo");
            entity.Property(e => e.CatCatalogoTemparioCatalogoTempario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.tempario_catalogo.tempario");
            entity.Property(e => e.CatCatalogoTemparioCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_codigoInventario");
            entity.Property(e => e.CatCatalogoTemparioDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_descripcion");
            entity.Property(e => e.CatCatalogoTemparioDetieneEquipos).HasColumnName("cat_catalogo.tempario_detieneEquipos");
            entity.Property(e => e.CatCatalogoTemparioDuracionEstimada).HasColumnName("cat_catalogo.tempario_duracionEstimada");
            entity.Property(e => e.CatCatalogoTemparioEnTaller).HasColumnName("cat_catalogo.tempario_enTaller");
            entity.Property(e => e.CatCatalogoTemparioEsCiclico).HasColumnName("cat_catalogo.tempario_esCiclico");
            entity.Property(e => e.CatCatalogoTemparioEsNacional).HasColumnName("cat_catalogo_tempario_esNacional");
            entity.Property(e => e.CatCatalogoTemparioFacturaTodo).HasColumnName("cat_catalogo.tempario_facturaTodo");
            entity.Property(e => e.CatCatalogoTemparioHorasDetencion).HasColumnName("cat_catalogo.tempario_horasDetencion");
            entity.Property(e => e.CatCatalogoTemparioIdFamilia).HasColumnName("cat_catalogo_tempario_id_familia");
            entity.Property(e => e.CatCatalogoTemparioIdImpuesto).HasColumnName("cat_catalogo_tempario_id_impuesto");
            entity.Property(e => e.CatCatalogoTemparioIdSubtipoCatalogo).HasColumnName("cat_catalogo_tempario_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoTemparioIdTipoServicio).HasColumnName("cat_catalogo.tempario_id_tipoServicio");
            entity.Property(e => e.CatCatalogoTemparioIdUnidad).HasColumnName("cat_catalogo_tempario_id_unidad");
            entity.Property(e => e.CatCatalogoTemparioIncluirMenores).HasColumnName("cat_catalogo.tempario_incluirMenores");
            entity.Property(e => e.CatCatalogoTemparioModoAjuste).HasColumnName("cat_catalogo.tempario_modoAjuste");
            entity.Property(e => e.CatCatalogoTemparioPeriodoDias).HasColumnName("cat_catalogo.tempario_periodoDias");
            entity.Property(e => e.CatCatalogoTemparioPeriodoHoras).HasColumnName("cat_catalogo.tempario_periodoHoras");
            entity.Property(e => e.CatCatalogoTemparioPorcGarantia).HasColumnName("cat_catalogo.tempario_porcGarantia");
            entity.Property(e => e.CatCatalogoTemparioPorcTropicalizacion).HasColumnName("cat_catalogo.tempario_porcTropicalizacion");
            entity.Property(e => e.CatCatalogoTemparioPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_tempario_precioVenta");
            entity.Property(e => e.CatCatalogoTemparioProyectar).HasColumnName("cat_catalogo.tempario_proyectar");
            entity.Property(e => e.CatCatalogoTemparioTiempoConsecucion).HasColumnName("cat_catalogo_tempario_tiempoConsecucion");
            entity.Property(e => e.CntConfigContratoAproximarA).HasColumnName("cnt_configContrato_aproximarA");
            entity.Property(e => e.CntConfigContratoCadaN).HasColumnName("cnt_configContrato_cadaN");
            entity.Property(e => e.CntConfigContratoConfigContrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cnt_configContrato_configContrato");
            entity.Property(e => e.CntConfigContratoDia).HasColumnName("cnt_configContrato_dia");
            entity.Property(e => e.CntConfigContratoDiaHabil).HasColumnName("cnt_configContrato_diaHabil");
            entity.Property(e => e.CntConfigContratoEstrategia).HasColumnName("cnt_configContrato_estrategia");
            entity.Property(e => e.CntConfigContratoFechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_configContrato_fecha_ff");
            entity.Property(e => e.CntConfigContratoFrecuencia).HasColumnName("cnt_configContrato_frecuencia");
            entity.Property(e => e.CntConfigContratoIdCatalogoTempario).HasColumnName("cnt_configContrato_id_catalogo.tempario");
            entity.Property(e => e.CntConfigContratoIdContratoEquipo).HasColumnName("cnt_configContrato_id_contratoEquipo");
            entity.Property(e => e.CntConfigContratoIdTerceroProveedor).HasColumnName("cnt_configContrato_id_tercero_proveedor");
            entity.Property(e => e.CntConfigContratoIncluirMenores).HasColumnName("cnt_configContrato_incluirMenores");
            entity.Property(e => e.CntConfigContratoPorTrabajo).HasColumnName("cnt_configContrato_porTrabajo");
            entity.Property(e => e.CntContratoContrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_contrato");
            entity.Property(e => e.CntContratoDetalleVisitaAproximarA).HasColumnName("cnt_contratoDetalleVisita_aproximarA");
            entity.Property(e => e.CntContratoDetalleVisitaCadaN).HasColumnName("cnt_contratoDetalleVisita_cadaN");
            entity.Property(e => e.CntContratoDetalleVisitaContratoDetalleVisita)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cnt_contratoDetalleVisita_contratoDetalleVisita");
            entity.Property(e => e.CntContratoDetalleVisitaContratoDetalleVisitaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cnt_contratoDetalleVisita_contratoDetalleVisita_codigo");
            entity.Property(e => e.CntContratoDetalleVisitaDia).HasColumnName("cnt_contratoDetalleVisita_dia");
            entity.Property(e => e.CntContratoDetalleVisitaDiaHabil).HasColumnName("cnt_contratoDetalleVisita_diaHabil");
            entity.Property(e => e.CntContratoDetalleVisitaEstrategia).HasColumnName("cnt_contratoDetalleVisita_estrategia");
            entity.Property(e => e.CntContratoDetalleVisitaFechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_contratoDetalleVisita_fecha_ff");
            entity.Property(e => e.CntContratoDetalleVisitaFrecuencia).HasColumnName("cnt_contratoDetalleVisita_frecuencia");
            entity.Property(e => e.CntContratoDetalleVisitaIdContrato).HasColumnName("cnt_contratoDetalleVisita_id_contrato");
            entity.Property(e => e.CntContratoDetalleVisitaIncluirMenores).HasColumnName("cnt_contratoDetalleVisita_incluirMenores");
            entity.Property(e => e.CntContratoDetalleVisitaPorTrabajo).HasColumnName("cnt_contratoDetalleVisita_porTrabajo");
            entity.Property(e => e.CntContratoEquipoContratoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cnt_contratoEquipo_contratoEquipo");
            entity.Property(e => e.CntContratoEquipoContratoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cnt_contratoEquipo_contratoEquipo_codigo");
            entity.Property(e => e.CntContratoEquipoFechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_contratoEquipo_fecha_ff");
            entity.Property(e => e.CntContratoEquipoIdContrato).HasColumnName("cnt_contratoEquipo_id_contrato");
            entity.Property(e => e.CntContratoEquipoIdContratoDetalleVisita).HasColumnName("cnt_contratoEquipo_id_contratoDetalleVisita");
            entity.Property(e => e.CntContratoEquipoIdEquipo).HasColumnName("cnt_contratoEquipo_id_equipo");
            entity.Property(e => e.CntContratoEquipoPrecioServicio)
                .HasColumnType("money")
                .HasColumnName("cnt_contratoEquipo_precioServicio");
            entity.Property(e => e.CntContratoEquipoPrecioVisita)
                .HasColumnType("money")
                .HasColumnName("cnt_contratoEquipo_precioVisita");
            entity.Property(e => e.CntContratoEquipoPromedio).HasColumnName("cnt_contratoEquipo_promedio");
            entity.Property(e => e.CntContratoIdTercero).HasColumnName("cnt_contrato_id_tercero");
            entity.Property(e => e.CntTipocontratoId).HasColumnName("cnt_tipocontrato_id");
            entity.Property(e => e.CorreoRecordatorio)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("correoRecordatorio");
            entity.Property(e => e.DocDocumentoOtCargo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_cargo");
            entity.Property(e => e.DocDocumentoOtCompromisos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_compromisos");
            entity.Property(e => e.DocDocumentoOtContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_contacto");
            entity.Property(e => e.DocDocumentoOtCosto).HasColumnName("doc_documento_ot_costo");
            entity.Property(e => e.DocDocumentoOtCostoPlaneado).HasColumnName("doc_documento_ot_costoPlaneado");
            entity.Property(e => e.DocDocumentoOtDescuento).HasColumnName("doc_documento_ot_descuento");
            entity.Property(e => e.DocDocumentoOtDescuentoPlaneado).HasColumnName("doc_documento_ot_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoOtDiagnosticoInicial)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_diagnosticoInicial");
            entity.Property(e => e.DocDocumentoOtDireccionUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_direccionUbicacion");
            entity.Property(e => e.DocDocumentoOtDistribuyeCentros).HasColumnName("doc_documento.ot_distribuyeCentros");
            entity.Property(e => e.DocDocumentoOtDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_documento_codigo");
            entity.Property(e => e.DocDocumentoOtDocumentoNumero).HasColumnName("doc_documento_ot_documento_numero");
            entity.Property(e => e.DocDocumentoOtDocumentoOt)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_documento.ot");
            entity.Property(e => e.DocDocumentoOtDuracionEstimada).HasColumnName("doc_documento.ot_duracionEstimada");
            entity.Property(e => e.DocDocumentoOtEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_email");
            entity.Property(e => e.DocDocumentoOtEnTaller).HasColumnName("doc_documento.ot_enTaller");
            entity.Property(e => e.DocDocumentoOtFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_fax");
            entity.Property(e => e.DocDocumentoOtFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoOtFechaCompromisoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.ot_fechaCompromiso_fh");
            entity.Property(e => e.DocDocumentoOtFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fecha_fh");
            entity.Property(e => e.DocDocumentoOtFechaGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.ot_fechaGarantia_ff");
            entity.Property(e => e.DocDocumentoOtFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoOtFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoOtIdContrato).HasColumnName("doc_documento.ot_id_contrato");
            entity.Property(e => e.DocDocumentoOtIdDepartamentoSolicitud).HasColumnName("doc_documento.ot_id_departamentoSolicitud");
            entity.Property(e => e.DocDocumentoOtIdDocumento).HasColumnName("doc_documento_ot_id_documento");
            entity.Property(e => e.DocDocumentoOtIdEquipo).HasColumnName("doc_documento.ot_id_equipo");
            entity.Property(e => e.DocDocumentoOtIdEstadoTipoDocumento).HasColumnName("doc_documento_ot_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoOtIdMoneda).HasColumnName("doc_documento_ot_id_moneda");
            entity.Property(e => e.DocDocumentoOtIdMotivoCancelacion).HasColumnName("doc_documento.ot_id_motivoCancelacion");
            entity.Property(e => e.DocDocumentoOtIdMotivoestado).HasColumnName("doc_documento_ot_id_motivoestado");
            entity.Property(e => e.DocDocumentoOtIdPrioridadDocumento).HasColumnName("doc_documento_ot_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoOtIdSistema).HasColumnName("doc_documento.ot_id_sistema");
            entity.Property(e => e.DocDocumentoOtIdSubtipoDocumento).HasColumnName("doc_documento_ot_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoOtIdSucursal).HasColumnName("doc_documento.ot_id_sucursal");
            entity.Property(e => e.DocDocumentoOtIdTerceroCliente).HasColumnName("doc_documento_ot_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoOtIdTerceroProveedor).HasColumnName("doc_documento_ot_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoOtIdTipoServicio).HasColumnName("doc_documento.ot_id_tipoServicio");
            entity.Property(e => e.DocDocumentoOtIdUsuarioAsignado).HasColumnName("doc_documento_ot_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoOtIdUsuarioCoordinador).HasColumnName("doc_documento.ot_id_usuario_coordinador");
            entity.Property(e => e.DocDocumentoOtIdUsuarioEnUso).HasColumnName("doc_documento_ot_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoOtIdZona).HasColumnName("doc_documento.ot_id_zona");
            entity.Property(e => e.DocDocumentoOtIva).HasColumnName("doc_documento_ot_iva");
            entity.Property(e => e.DocDocumentoOtIvaPlaneado).HasColumnName("doc_documento_ot_ivaPlaneado");
            entity.Property(e => e.DocDocumentoOtMotivoServicio)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_motivoServicio");
            entity.Property(e => e.DocDocumentoOtPorcentajeCliente).HasColumnName("doc_documento.ot_porcentajeCliente");
            entity.Property(e => e.DocDocumentoOtPorcentajeDistribuidor).HasColumnName("doc_documento.ot_porcentajeDistribuidor");
            entity.Property(e => e.DocDocumentoOtPorcentajeFabricante).HasColumnName("doc_documento.ot_porcentajeFabricante");
            entity.Property(e => e.DocDocumentoOtPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_prefijo");
            entity.Property(e => e.DocDocumentoOtReclamacionFabrica)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_reclamacionFabrica");
            entity.Property(e => e.DocDocumentoOtRecomendaciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_recomendaciones");
            entity.Property(e => e.DocDocumentoOtRentabilidad).HasColumnName("doc_documento_ot_rentabilidad");
            entity.Property(e => e.DocDocumentoOtSegunTempario).HasColumnName("doc_documento.ot_segunTempario");
            entity.Property(e => e.DocDocumentoOtSubtotal).HasColumnName("doc_documento_ot_subtotal");
            entity.Property(e => e.DocDocumentoOtSubtotalPlaneado).HasColumnName("doc_documento_ot_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoOtTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_telefono");
            entity.Property(e => e.DocDocumentoOtTotal).HasColumnName("doc_documento_ot_total");
            entity.Property(e => e.DocDocumentoOtTotalPlaneado).HasColumnName("doc_documento_ot_totalPlaneado");
            entity.Property(e => e.DocDocumentoOtTrabajos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_trabajos");
            entity.Property(e => e.DocDocumentoOtTrm).HasColumnName("doc_documento_ot_trm");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquEquipoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo");
            entity.Property(e => e.EquEquipoEquipoSerial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_serial");
            entity.Property(e => e.EquEquipoId).HasColumnName("equ_equipo_id");
            entity.Property(e => e.EsPorTrabajo).HasColumnName("esPorTrabajo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaCreadaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreada_ff");
            entity.Property(e => e.FechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Fechavencimiento)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechavencimiento");
            entity.Property(e => e.GenZonaId).HasColumnName("gen_zona_id");
            entity.Property(e => e.Horometro).HasColumnName("horometro");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogoTempario).HasColumnName("id_catalogo.tempario");
            entity.Property(e => e.IdConfigContrato).HasColumnName("id_configContrato");
            entity.Property(e => e.IdContratoDetalleVisita).HasColumnName("id_contratoDetalleVisita");
            entity.Property(e => e.IdContratoEquipo).HasColumnName("id_contratoEquipo");
            entity.Property(e => e.IdDocumentoOt).HasColumnName("id_documento.ot");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Presupuesto).HasColumnName("presupuesto");
            entity.Property(e => e.TerSucursalDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_direccion");
            entity.Property(e => e.TerSucursalSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal");
            entity.Property(e => e.Tipocontrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipocontrato");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.VisitaFija)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("visitaFija");
            entity.Property(e => e.VisitaFijaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("visitaFija_codigo");
        });

        modelBuilder.Entity<ViewCntVisitaFijaCatalogo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_cnt_visitaFija_catalogo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.CatCatalogoBloquearCostear).HasColumnName("cat_catalogo_bloquearCostear");
            entity.Property(e => e.CatCatalogoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo");
            entity.Property(e => e.CatCatalogoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_codigoInventario");
            entity.Property(e => e.CatCatalogoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_descripcion");
            entity.Property(e => e.CatCatalogoEsNacional).HasColumnName("cat_catalogo_esNacional");
            entity.Property(e => e.CatCatalogoIdFamilia).HasColumnName("cat_catalogo_id_familia");
            entity.Property(e => e.CatCatalogoIdImpuesto).HasColumnName("cat_catalogo_id_impuesto");
            entity.Property(e => e.CatCatalogoIdSubtipoCatalogo).HasColumnName("cat_catalogo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoIdUnidad).HasColumnName("cat_catalogo_id_unidad");
            entity.Property(e => e.CatCatalogoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_precioVenta");
            entity.Property(e => e.CatCatalogoTiempoConsecucion).HasColumnName("cat_catalogo_tiempoConsecucion");
            entity.Property(e => e.CntVisitaFijaEsPorTrabajo).HasColumnName("cnt_visitaFija_esPorTrabajo");
            entity.Property(e => e.CntVisitaFijaFechaCreadaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_visitaFija_fechaCreada_ff");
            entity.Property(e => e.CntVisitaFijaFechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_visitaFija_fecha_ff");
            entity.Property(e => e.CntVisitaFijaHorometro).HasColumnName("cnt_visitaFija_horometro");
            entity.Property(e => e.CntVisitaFijaIdCatalogoTempario).HasColumnName("cnt_visitaFija_id_catalogo.tempario");
            entity.Property(e => e.CntVisitaFijaIdContratoDetalleVisita).HasColumnName("cnt_visitaFija_id_contratoDetalleVisita");
            entity.Property(e => e.CntVisitaFijaIdContratoEquipo).HasColumnName("cnt_visitaFija_id_contratoEquipo");
            entity.Property(e => e.CntVisitaFijaIdDocumentoOt).HasColumnName("cnt_visitaFija_id_documento.ot");
            entity.Property(e => e.CntVisitaFijaVisitaFija)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cnt_visitaFija_visitaFija");
            entity.Property(e => e.CntVisitaFijaVisitaFijaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cnt_visitaFija_visitaFija_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdVisitaFija).HasColumnName("id_visitaFija");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Precio).HasColumnName("precio");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.VisitaFijaCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("visitaFija_catalogo");
        });

        modelBuilder.Entity<ViewComComision>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_com_comision");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatSubTipoCatalogoIdTipoCatalogo).HasColumnName("cat_subTipoCatalogo_id_tipoCatalogo");
            entity.Property(e => e.CatSubTipoCatalogoSubTipoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_subTipoCatalogo_subTipoCatalogo");
            entity.Property(e => e.CatSubTipoCatalogoSubTipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_subTipoCatalogo_subTipoCatalogo_codigo");
            entity.Property(e => e.Comision)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("comision");
            entity.Property(e => e.ComisionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("comision_codigo");
            entity.Property(e => e.Costear).HasColumnName("costear");
            entity.Property(e => e.DescuentoMaximo).HasColumnName("descuentoMaximo");
            entity.Property(e => e.DescuentoMinimo).HasColumnName("descuentoMinimo");
            entity.Property(e => e.DocCondicionCondicion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_condicion_condicion");
            entity.Property(e => e.DocCondicionCondicionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_condicion_condicion_codigo");
            entity.Property(e => e.DocCondicionTextoLibre).HasColumnName("doc_condicion_textoLibre");
            entity.Property(e => e.DocOpcionCondicionIdCondicion).HasColumnName("doc_opcionCondicion_id_condicion");
            entity.Property(e => e.DocOpcionCondicionOpcionCondicion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_opcionCondicion_opcionCondicion");
            entity.Property(e => e.DocOpcionCondicionOpcionCondicionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_opcionCondicion_opcionCondicion_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenZonaCodigoExterno)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("gen_zona_codigoExterno");
            entity.Property(e => e.GenZonaIdZona).HasColumnName("gen_zona_id_zona");
            entity.Property(e => e.GenZonaNivel).HasColumnName("gen_zona_nivel");
            entity.Property(e => e.GenZonaTiempoDesplazamiento).HasColumnName("gen_zona_tiempoDesplazamiento");
            entity.Property(e => e.GenZonaZona)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_zona_zona");
            entity.Property(e => e.GenZonaZonaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_zona_zona_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCargo).HasColumnName("id_cargo");
            entity.Property(e => e.IdCondicion).HasColumnName("id_condicion");
            entity.Property(e => e.IdOpcionCondicion).HasColumnName("id_opcionCondicion");
            entity.Property(e => e.IdSubTipoCatalogo).HasColumnName("id_subTipoCatalogo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdZona).HasColumnName("id_zona");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Nivelnegocio).HasColumnName("nivelnegocio");
            entity.Property(e => e.PorcComision).HasColumnName("porc_comision");
            entity.Property(e => e.SegCargoCargo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_cargo_cargo");
            entity.Property(e => e.SegCargoCargoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_cargo_cargo_codigo");
            entity.Property(e => e.SegCargoEsAdministrativo).HasColumnName("seg_cargo_esAdministrativo");
            entity.Property(e => e.SegCargoEsComercial).HasColumnName("seg_cargo_esComercial");
            entity.Property(e => e.SegCargoEsCoordinador).HasColumnName("seg_cargo_esCoordinador");
            entity.Property(e => e.SegCargoEsTecnico).HasColumnName("seg_cargo_esTecnico");
            entity.Property(e => e.SegCargoValorHora)
                .HasColumnType("money")
                .HasColumnName("seg_cargo_valorHora");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDisEstadoEvento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_dis_estadoEvento");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EstadoEvento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("estadoEvento");
            entity.Property(e => e.EstadoEventoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("estadoEvento_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDisEvento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_dis_evento");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.AfectaCliente).HasColumnName("afectaCliente");
            entity.Property(e => e.AfectaProduccion).HasColumnName("afectaProduccion");
            entity.Property(e => e.Codigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.DisEstadoEventoEstadoEvento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("dis_estadoEvento_estadoEvento");
            entity.Property(e => e.DisEstadoEventoEstadoEventoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dis_estadoEvento_estadoEvento_codigo");
            entity.Property(e => e.DisMetodoDeteccionMetodoDeteccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("dis_metodoDeteccion_metodoDeteccion");
            entity.Property(e => e.DisMetodoDeteccionMetodoDeteccionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dis_metodoDeteccion_metodoDeteccion_codigo");
            entity.Property(e => e.DisMotivoEventoEsFalla).HasColumnName("dis_motivoEvento_esFalla");
            entity.Property(e => e.DisMotivoEventoMotivoEvento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("dis_motivoEvento_motivoEvento");
            entity.Property(e => e.DisMotivoEventoMotivoEventoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dis_motivoEvento_motivoEvento_codigo");
            entity.Property(e => e.DisMotivoEventoResponsableServicio).HasColumnName("dis_motivoEvento_responsableServicio");
            entity.Property(e => e.DisMotivoEventoVaradaProduccion).HasColumnName("dis_motivoEvento_VaradaProduccion");
            entity.Property(e => e.DuracionHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("duracion_hh");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquEquipoCosto)
                .HasColumnType("money")
                .HasColumnName("equ_equipo_costo");
            entity.Property(e => e.EquEquipoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo");
            entity.Property(e => e.EquEquipoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_codigo");
            entity.Property(e => e.EquEquipoEquipoSerial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_serial");
            entity.Property(e => e.EquEquipoFechaImportacionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaImportacion_ff");
            entity.Property(e => e.EquEquipoFechaPuestaMarchaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaPuestaMarcha_fh");
            entity.Property(e => e.EquEquipoGarantiaCancelada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_garantiaCancelada");
            entity.Property(e => e.EquEquipoHorasGarantia).HasColumnName("equ_equipo_horasGarantia");
            entity.Property(e => e.EquEquipoHorometroActual).HasColumnName("equ_equipo_horometroActual");
            entity.Property(e => e.EquEquipoIdCatalogoEquipo).HasColumnName("equ_equipo_id_catalogo.equipo");
            entity.Property(e => e.EquEquipoIdEquipo).HasColumnName("equ_equipo_id_equipo");
            entity.Property(e => e.EquEquipoIdEstadoEquipo).HasColumnName("equ_equipo_id_estadoEquipo");
            entity.Property(e => e.EquEquipoIdSistema).HasColumnName("equ_equipo_id_sistema");
            entity.Property(e => e.EquEquipoIdSucursal).HasColumnName("equ_equipo_id_sucursal");
            entity.Property(e => e.EquEquipoIdTercero).HasColumnName("equ_equipo_id_tercero");
            entity.Property(e => e.EquEquipoIdTerceroComprador).HasColumnName("equ_equipo_id_tercero_comprador");
            entity.Property(e => e.EquEquipoIdTerceroServicio).HasColumnName("equ_equipo_id_tercero_servicio");
            entity.Property(e => e.EquEquipoIdVersionEquipo).HasColumnName("equ_equipo_id_versionEquipo");
            entity.Property(e => e.EquEquipoIdZona).HasColumnName("equ_equipo_id_zona");
            entity.Property(e => e.EquEquipoNombreContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_nombreContacto");
            entity.Property(e => e.EquEquipoObservaciones)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_observaciones");
            entity.Property(e => e.EquEquipoPromedioHoras).HasColumnName("equ_equipo_promedioHoras");
            entity.Property(e => e.EquEquipoTelefonoContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_telefonoContacto");
            entity.Property(e => e.EquEquipoUbicacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_ubicacion");
            entity.Property(e => e.EquEquipoUltimaLecturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_ultimaLectura_fh");
            entity.Property(e => e.EquEquipoVencimientoGarantiaDistribuidorFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaDistribuidor_ff");
            entity.Property(e => e.EquEquipoVencimientoGarantiaFabricaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaFabrica_ff");
            entity.Property(e => e.EquEstadoEquipoActivo).HasColumnName("equ_estadoEquipo_activo");
            entity.Property(e => e.EquEstadoEquipoEstadoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_estadoEquipo_estadoEquipo");
            entity.Property(e => e.EquEstadoEquipoEstadoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_estadoEquipo_estadoEquipo_codigo");
            entity.Property(e => e.EquFallaCausaFalla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_falla_causa_falla");
            entity.Property(e => e.EquFallaCausaFallaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_falla_causa_falla_codigo");
            entity.Property(e => e.EquFallaCausaIdFalla).HasColumnName("equ_falla_causa_id_falla");
            entity.Property(e => e.EquFallaCausaIdTipoFalla).HasColumnName("equ_falla_causa_id_tipoFalla");
            entity.Property(e => e.EquFallaCausaProcedimiento)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("equ_falla_causa_procedimiento");
            entity.Property(e => e.EquFallaFalla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_falla_falla");
            entity.Property(e => e.EquFallaFallaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_falla_falla_codigo");
            entity.Property(e => e.EquFallaIdFalla).HasColumnName("equ_falla_id_falla");
            entity.Property(e => e.EquFallaIdTipoFalla).HasColumnName("equ_falla_id_tipoFalla");
            entity.Property(e => e.EquFallaProcedimiento)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("equ_falla_procedimiento");
            entity.Property(e => e.Evento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("evento");
            entity.Property(e => e.EventoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("evento_codigo");
            entity.Property(e => e.EventoTipo).HasColumnName("eventoTipo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaHoraEstimadaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaHoraEstimada_fh");
            entity.Property(e => e.FechaHoraInicioFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaHoraInicio_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdEstadoEquipo).HasColumnName("id_estadoEquipo");
            entity.Property(e => e.IdEstadoEvento).HasColumnName("id_estadoEvento");
            entity.Property(e => e.IdFalla).HasColumnName("id_falla");
            entity.Property(e => e.IdFallaCausa).HasColumnName("id_falla_causa");
            entity.Property(e => e.IdMetodoDeteccion).HasColumnName("id_metodoDeteccion");
            entity.Property(e => e.IdMotivoEvento).HasColumnName("id_motivoEvento");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Notas)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("notas");
            entity.Property(e => e.SegUsuarioAccesoActivo).HasColumnName("seg_usuario_accesoActivo");
            entity.Property(e => e.SegUsuarioAplicaRecargo).HasColumnName("seg_usuario_aplicaRecargo");
            entity.Property(e => e.SegUsuarioCambiarClave).HasColumnName("seg_usuario_cambiarClave");
            entity.Property(e => e.SegUsuarioClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_clave");
            entity.Property(e => e.SegUsuarioCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_costoHora");
            entity.Property(e => e.SegUsuarioDireccion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_direccion");
            entity.Property(e => e.SegUsuarioEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_email");
            entity.Property(e => e.SegUsuarioFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioHabilitado).HasColumnName("seg_usuario_habilitado");
            entity.Property(e => e.SegUsuarioIdCargo).HasColumnName("seg_usuario_id_cargo");
            entity.Property(e => e.SegUsuarioIdGrupo).HasColumnName("seg_usuario_id_grupo");
            entity.Property(e => e.SegUsuarioIdPerfil).HasColumnName("seg_usuario_id_perfil");
            entity.Property(e => e.SegUsuarioIdUsuario).HasColumnName("seg_usuario_id_usuario");
            entity.Property(e => e.SegUsuarioIdZona).HasColumnName("seg_usuario_id_zona");
            entity.Property(e => e.SegUsuarioIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_identificacion");
            entity.Property(e => e.SegUsuarioIntentosFallidos).HasColumnName("seg_usuario_intentosFallidos");
            entity.Property(e => e.SegUsuarioNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_nombre");
            entity.Property(e => e.SegUsuarioNumeroIngresos).HasColumnName("seg_usuario_numeroIngresos");
            entity.Property(e => e.SegUsuarioPorcentajeComision).HasColumnName("seg_usuario_porcentajeComision");
            entity.Property(e => e.SegUsuarioPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_preferencias");
            entity.Property(e => e.SegUsuarioProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_profesion");
            entity.Property(e => e.SegUsuarioSexo).HasColumnName("seg_usuario_sexo");
            entity.Property(e => e.SegUsuarioTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_telefono");
            entity.Property(e => e.SegUsuarioUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario");
            entity.Property(e => e.SegUsuarioUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDisEventoCatalogo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_dis_evento_catalogo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.CatCatalogoBloquearCostear).HasColumnName("cat_catalogo_bloquearCostear");
            entity.Property(e => e.CatCatalogoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo");
            entity.Property(e => e.CatCatalogoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_codigoInventario");
            entity.Property(e => e.CatCatalogoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_descripcion");
            entity.Property(e => e.CatCatalogoEsNacional).HasColumnName("cat_catalogo_esNacional");
            entity.Property(e => e.CatCatalogoIdFamilia).HasColumnName("cat_catalogo_id_familia");
            entity.Property(e => e.CatCatalogoIdImpuesto).HasColumnName("cat_catalogo_id_impuesto");
            entity.Property(e => e.CatCatalogoIdSubTipoCatalogo).HasColumnName("cat_catalogo_id_subTipoCatalogo");
            entity.Property(e => e.CatCatalogoIdUnidad).HasColumnName("cat_catalogo_id_unidad");
            entity.Property(e => e.CatCatalogoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_precioVenta");
            entity.Property(e => e.CatCatalogoTiempoConsecucion).HasColumnName("cat_catalogo_tiempoConsecucion");
            entity.Property(e => e.DisEventoAfectaCliente).HasColumnName("dis_evento_afectaCliente");
            entity.Property(e => e.DisEventoAfectaProduccion).HasColumnName("dis_evento_afectaProduccion");
            entity.Property(e => e.DisEventoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dis_evento_codigo");
            entity.Property(e => e.DisEventoDuracionHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("dis_evento_duracion_hh");
            entity.Property(e => e.DisEventoEvento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("dis_evento_evento");
            entity.Property(e => e.DisEventoEventoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dis_evento_evento_codigo");
            entity.Property(e => e.DisEventoEventoTipo).HasColumnName("dis_evento_eventoTipo");
            entity.Property(e => e.DisEventoFechaHoraEstimadaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("dis_evento_fechaHoraEstimada_fh");
            entity.Property(e => e.DisEventoFechaHoraInicioFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("dis_evento_fechaHoraInicio_ff");
            entity.Property(e => e.DisEventoIdEquipo).HasColumnName("dis_evento_id_equipo");
            entity.Property(e => e.DisEventoIdEstadoEquipo).HasColumnName("dis_evento_id_estadoEquipo");
            entity.Property(e => e.DisEventoIdEstadoEvento).HasColumnName("dis_evento_id_estadoEvento");
            entity.Property(e => e.DisEventoIdFalla).HasColumnName("dis_evento_id_falla");
            entity.Property(e => e.DisEventoIdFallaCausa).HasColumnName("dis_evento_id_falla_causa");
            entity.Property(e => e.DisEventoIdMetodoDeteccion).HasColumnName("dis_evento_id_metodoDeteccion");
            entity.Property(e => e.DisEventoIdMotivoEvento).HasColumnName("dis_evento_id_motivoEvento");
            entity.Property(e => e.DisEventoIdUsuario).HasColumnName("dis_evento_id_usuario");
            entity.Property(e => e.DisEventoNotas)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("dis_evento_notas");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquipoAuxiliar).HasColumnName("equipoAuxiliar");
            entity.Property(e => e.EventoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("evento_catalogo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdEvento).HasColumnName("id_evento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(400)
                .IsUnicode(false)
                .HasColumnName("observaciones");
            entity.Property(e => e.Total).HasColumnName("total");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorUnitario).HasColumnName("valorUnitario");
        });

        modelBuilder.Entity<ViewDisEventoEstadoEvento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_dis_evento_estadoEvento");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.AfectaCliente).HasColumnName("afectaCliente");
            entity.Property(e => e.CatSistemaIdSistema).HasColumnName("cat_sistema_id_sistema");
            entity.Property(e => e.CatSistemaSistema)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_sistema_sistema");
            entity.Property(e => e.CatSistemaSistemaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_sistema_sistema_codigo");
            entity.Property(e => e.DisEstadoEventoEstadoEvento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("dis_estadoEvento_estadoEvento");
            entity.Property(e => e.DisEstadoEventoEstadoEventoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dis_estadoEvento_estadoEvento_codigo");
            entity.Property(e => e.DisEventoAfectaCliente).HasColumnName("dis_evento_afectaCliente");
            entity.Property(e => e.DisEventoAfectaProduccion).HasColumnName("dis_evento_afectaProduccion");
            entity.Property(e => e.DisEventoDuracionHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("dis_evento_duracion_hh");
            entity.Property(e => e.DisEventoEvento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("dis_evento_evento");
            entity.Property(e => e.DisEventoEventoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dis_evento_evento_codigo");
            entity.Property(e => e.DisEventoEventoTipo).HasColumnName("dis_evento_eventoTipo");
            entity.Property(e => e.DisEventoFechaHoraEstimadaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("dis_evento_fechaHoraEstimada_fh");
            entity.Property(e => e.DisEventoFechaHoraInicioFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("dis_evento_fechaHoraInicio_ff");
            entity.Property(e => e.DisEventoIdEquipo).HasColumnName("dis_evento_id_equipo");
            entity.Property(e => e.DisEventoIdEstadoEquipo).HasColumnName("dis_evento_id_estadoEquipo");
            entity.Property(e => e.DisEventoIdEstadoEvento).HasColumnName("dis_evento_id_estadoEvento");
            entity.Property(e => e.DisEventoIdFalla).HasColumnName("dis_evento_id_falla");
            entity.Property(e => e.DisEventoIdFallaCausa).HasColumnName("dis_evento_id_falla_causa");
            entity.Property(e => e.DisEventoIdMetodoDeteccion).HasColumnName("dis_evento_id_metodoDeteccion");
            entity.Property(e => e.DisEventoIdMotivoEvento).HasColumnName("dis_evento_id_motivoEvento");
            entity.Property(e => e.DisEventoIdUsuario).HasColumnName("dis_evento_id_usuario");
            entity.Property(e => e.DisEventoNotas)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("dis_evento_notas");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EventoEstadoEvento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("evento_estadoEvento");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaHoraRegistroFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaHoraRegistro_fh");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEstadoEvento).HasColumnName("id_estadoEvento");
            entity.Property(e => e.IdEvento).HasColumnName("id_evento");
            entity.Property(e => e.IdSistema).HasColumnName("id_sistema");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDisMetodoDeteccion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_dis_metodoDeteccion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MetodoDeteccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("metodoDeteccion");
            entity.Property(e => e.MetodoDeteccionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("metodoDeteccion_codigo");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDisMotivoEvento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_dis_motivoEvento");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsFalla).HasColumnName("esFalla");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MotivoEvento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("motivoEvento");
            entity.Property(e => e.MotivoEventoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("motivoEvento_codigo");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ResponsableServicio).HasColumnName("responsableServicio");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDisObra>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_dis_obra");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFinalFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFinal_ff");
            entity.Property(e => e.FechaInicialFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicial_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Obra)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("obra");
            entity.Property(e => e.ObraCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("obra_codigo");
            entity.Property(e => e.TerSucursalCodigorecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_codigorecursiva");
            entity.Property(e => e.TerSucursalContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_contacto");
            entity.Property(e => e.TerSucursalDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Direccion");
            entity.Property(e => e.TerSucursalEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Email");
            entity.Property(e => e.TerSucursalFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Fax");
            entity.Property(e => e.TerSucursalIdEstadoTercero).HasColumnName("ter_sucursal_id_estadoTercero");
            entity.Property(e => e.TerSucursalIdSucursal).HasColumnName("ter_sucursal_id_sucursal");
            entity.Property(e => e.TerSucursalIdTercero).HasColumnName("ter_sucursal_id_tercero");
            entity.Property(e => e.TerSucursalIdUsuarioAsesor).HasColumnName("ter_sucursal_id_usuario_asesor");
            entity.Property(e => e.TerSucursalIdUsuarioTecnico).HasColumnName("ter_sucursal_id_usuario_tecnico");
            entity.Property(e => e.TerSucursalIdZona).HasColumnName("ter_sucursal_id_zona");
            entity.Property(e => e.TerSucursalParaAlquiler).HasColumnName("ter_sucursal_paraAlquiler");
            entity.Property(e => e.TerSucursalParaSoporte).HasColumnName("ter_sucursal_paraSoporte");
            entity.Property(e => e.TerSucursalParaVenta).HasColumnName("ter_sucursal_paraVenta");
            entity.Property(e => e.TerSucursalSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal");
            entity.Property(e => e.TerSucursalSucursalCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal_codigo");
            entity.Property(e => e.TerSucursalTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_telefono");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDisObraCatalogo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_dis_obra_catalogo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.CatCatalogoBloquearCostear).HasColumnName("cat_catalogo_bloquearCostear");
            entity.Property(e => e.CatCatalogoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo");
            entity.Property(e => e.CatCatalogoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_codigoInventario");
            entity.Property(e => e.CatCatalogoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_descripcion");
            entity.Property(e => e.CatCatalogoEsNacional).HasColumnName("cat_catalogo_esNacional");
            entity.Property(e => e.CatCatalogoIdFamilia).HasColumnName("cat_catalogo_id_familia");
            entity.Property(e => e.CatCatalogoIdImpuesto).HasColumnName("cat_catalogo_id_impuesto");
            entity.Property(e => e.CatCatalogoIdSubtipoCatalogo).HasColumnName("cat_catalogo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoIdUnidad).HasColumnName("cat_catalogo_id_unidad");
            entity.Property(e => e.CatCatalogoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_precioVenta");
            entity.Property(e => e.CatCatalogoTiempoConsecucion).HasColumnName("cat_catalogo_tiempoConsecucion");
            entity.Property(e => e.DisObraFechaFinalFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("dis_obra_fechaFinal_ff");
            entity.Property(e => e.DisObraFechaInicialFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("dis_obra_fechaInicial_ff");
            entity.Property(e => e.DisObraIdSucursal).HasColumnName("dis_obra_id_sucursal");
            entity.Property(e => e.DisObraObra)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("dis_obra_obra");
            entity.Property(e => e.DisObraObraCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dis_obra_obra_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdObra).HasColumnName("id_obra");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ObraCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("obra_catalogo");
            entity.Property(e => e.PromedioDia).HasColumnName("promedioDia");
            entity.Property(e => e.Total).HasColumnName("total");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorMaximo).HasColumnName("valorMaximo");
            entity.Property(e => e.ValorMinimo).HasColumnName("valorMinimo");
            entity.Property(e => e.ValorUnitario).HasColumnName("valorUnitario");
        });

        modelBuilder.Entity<ViewDisObraEquipo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_dis_obra_equipo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DisObraFechaFinalFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("dis_obra_fechaFinal_ff");
            entity.Property(e => e.DisObraFechaInicialFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("dis_obra_fechaInicial_ff");
            entity.Property(e => e.DisObraIdSucursal).HasColumnName("dis_obra_id_sucursal");
            entity.Property(e => e.DisObraObra)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("dis_obra_obra");
            entity.Property(e => e.DisObraObraCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dis_obra_obra_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquEquipoCosto)
                .HasColumnType("money")
                .HasColumnName("equ_equipo_costo");
            entity.Property(e => e.EquEquipoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo");
            entity.Property(e => e.EquEquipoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_codigo");
            entity.Property(e => e.EquEquipoEquipoSerial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_serial");
            entity.Property(e => e.EquEquipoFechaImportacionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaImportacion_ff");
            entity.Property(e => e.EquEquipoFechaPuestaMarchaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaPuestaMarcha_fh");
            entity.Property(e => e.EquEquipoGarantiaCancelada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_garantiaCancelada");
            entity.Property(e => e.EquEquipoHorasGarantia).HasColumnName("equ_equipo_horasGarantia");
            entity.Property(e => e.EquEquipoHorometroActual).HasColumnName("equ_equipo_horometroActual");
            entity.Property(e => e.EquEquipoIdCatalogoEquipo).HasColumnName("equ_equipo_id_catalogo.equipo");
            entity.Property(e => e.EquEquipoIdEquipo).HasColumnName("equ_equipo_id_equipo");
            entity.Property(e => e.EquEquipoIdEstadoEquipo).HasColumnName("equ_equipo_id_estadoEquipo");
            entity.Property(e => e.EquEquipoIdSistema).HasColumnName("equ_equipo_id_sistema");
            entity.Property(e => e.EquEquipoIdSucursal).HasColumnName("equ_equipo_id_sucursal");
            entity.Property(e => e.EquEquipoIdTercero).HasColumnName("equ_equipo_id_tercero");
            entity.Property(e => e.EquEquipoIdTerceroComprador).HasColumnName("equ_equipo_id_tercero_comprador");
            entity.Property(e => e.EquEquipoIdTerceroServicio).HasColumnName("equ_equipo_id_tercero_servicio");
            entity.Property(e => e.EquEquipoIdVersionEquipo).HasColumnName("equ_equipo_id_versionEquipo");
            entity.Property(e => e.EquEquipoIdZona).HasColumnName("equ_equipo_id_zona");
            entity.Property(e => e.EquEquipoNombreContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_nombreContacto");
            entity.Property(e => e.EquEquipoObservaciones)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_observaciones");
            entity.Property(e => e.EquEquipoPromedioHoras).HasColumnName("equ_equipo_promedioHoras");
            entity.Property(e => e.EquEquipoTelefonoContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_telefonoContacto");
            entity.Property(e => e.EquEquipoUbicacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_ubicacion");
            entity.Property(e => e.EquEquipoUltimaLecturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_ultimaLectura_fh");
            entity.Property(e => e.EquEquipoVencimientoGarantiaDistribuidorFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaDistribuidor_ff");
            entity.Property(e => e.EquEquipoVencimientoGarantiaFabricaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaFabrica_ff");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdObra).HasColumnName("id_obra");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ObraEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("obra_equipo");
            entity.Property(e => e.PromedioEsperado).HasColumnName("promedioEsperado");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocCentroCosto>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_centroCosto");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CentroCosto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("centroCosto");
            entity.Property(e => e.CentroCostoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("centroCosto_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocCondicion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_condicion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Condicion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("condicion");
            entity.Property(e => e.CondicionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("condicion_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TextoLibre).HasColumnName("textoLibre");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocCosteo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_costeo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Costeo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("costeo");
            entity.Property(e => e.CosteoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("costeo_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Costo).HasColumnName("costo");
            entity.Property(e => e.CostoPlaneado).HasColumnName("costoPlaneado");
            entity.Property(e => e.Descuento).HasColumnName("descuento");
            entity.Property(e => e.DescuentoPlaneado).HasColumnName("descuentoPlaneado");
            entity.Property(e => e.DocDocumentoPadreCosto).HasColumnName("doc_documento_padre_costo");
            entity.Property(e => e.DocDocumentoPadreCostoPlaneado).HasColumnName("doc_documento_padre_costoPlaneado");
            entity.Property(e => e.DocDocumentoPadreDescuento).HasColumnName("doc_documento_padre_descuento");
            entity.Property(e => e.DocDocumentoPadreDescuentoPlaneado).HasColumnName("doc_documento_padre_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoPadreDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_padre_documento");
            entity.Property(e => e.DocDocumentoPadreDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_padre_documento_codigo");
            entity.Property(e => e.DocDocumentoPadreDocumentoNumero).HasColumnName("doc_documento_padre_documento_numero");
            entity.Property(e => e.DocDocumentoPadreFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_padre_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoPadreFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_padre_fecha_fh");
            entity.Property(e => e.DocDocumentoPadreFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_padre_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoPadreFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_padre_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoPadreIdDocumento).HasColumnName("doc_documento_padre_id_documento");
            entity.Property(e => e.DocDocumentoPadreIdEstadoTipoDocumento).HasColumnName("doc_documento_padre_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoPadreIdMoneda).HasColumnName("doc_documento_padre_id_moneda");
            entity.Property(e => e.DocDocumentoPadreIdMotivoestado).HasColumnName("doc_documento_padre_id_motivoestado");
            entity.Property(e => e.DocDocumentoPadreIdPrioridadDocumento).HasColumnName("doc_documento_padre_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoPadreIdSubtipoDocumento).HasColumnName("doc_documento_padre_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoPadreIdTerceroCliente).HasColumnName("doc_documento_padre_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoPadreIdTerceroProveedor).HasColumnName("doc_documento_padre_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoPadreIdUsuarioAsignado).HasColumnName("doc_documento_padre_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoPadreIdUsuarioEnUso).HasColumnName("doc_documento_padre_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoPadreIva).HasColumnName("doc_documento_padre_iva");
            entity.Property(e => e.DocDocumentoPadreIvaPlaneado).HasColumnName("doc_documento_padre_ivaPlaneado");
            entity.Property(e => e.DocDocumentoPadrePrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_padre_prefijo");
            entity.Property(e => e.DocDocumentoPadreRentabilidad).HasColumnName("doc_documento_padre_rentabilidad");
            entity.Property(e => e.DocDocumentoPadreSubtotal).HasColumnName("doc_documento_padre_subtotal");
            entity.Property(e => e.DocDocumentoPadreSubtotalPlaneado).HasColumnName("doc_documento_padre_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoPadreTotal).HasColumnName("doc_documento_padre_total");
            entity.Property(e => e.DocDocumentoPadreTotalPlaneado).HasColumnName("doc_documento_padre_totalPlaneado");
            entity.Property(e => e.DocDocumentoPadreTrm).HasColumnName("doc_documento_padre_trm");
            entity.Property(e => e.DocEstadoTipoDocumentoAfectaIndicador).HasColumnName("doc_estadoTipoDocumento_afectaIndicador");
            entity.Property(e => e.DocEstadoTipoDocumentoAfectaInventario).HasColumnName("doc_estadoTipoDocumento_afectaInventario");
            entity.Property(e => e.DocEstadoTipoDocumentoColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_color");
            entity.Property(e => e.DocEstadoTipoDocumentoDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_descripcion");
            entity.Property(e => e.DocEstadoTipoDocumentoEditaDocumento).HasColumnName("doc_estadoTipoDocumento_editaDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_estadoTipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocEstadoTipoDocumentoIdTipoDocumento).HasColumnName("doc_estadoTipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoMotivoObligatorio).HasColumnName("doc_estadoTipoDocumento_motivoObligatorio");
            entity.Property(e => e.DocEstadoTipoDocumentoObservacionesObligatorio).HasColumnName("doc_estadoTipoDocumento_observacionesObligatorio");
            entity.Property(e => e.DocEstadoTipoDocumentoOrden).HasColumnName("doc_estadoTipoDocumento_orden");
            entity.Property(e => e.DocEstadoTipoDocumentoPuedeRegresar).HasColumnName("doc_estadoTipoDocumento_puedeRegresar");
            entity.Property(e => e.DocMotivoestadoIdEstadoTipoDocumento).HasColumnName("doc_motivoestado_id_estadoTipoDocumento");
            entity.Property(e => e.DocMotivoestadoMotivoestado)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_motivoestado_motivoestado");
            entity.Property(e => e.DocMotivoestadoMotivoestadoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_motivoestado_motivoestado_codigo");
            entity.Property(e => e.DocPrioridadDocumentoIdEstrategiaPrioridad).HasColumnName("doc_prioridadDocumento_id_estrategiaPrioridad");
            entity.Property(e => e.DocPrioridadDocumentoIdTipoDocumento).HasColumnName("doc_prioridadDocumento_id_tipoDocumento");
            entity.Property(e => e.DocPrioridadDocumentoOrden).HasColumnName("doc_prioridadDocumento_orden");
            entity.Property(e => e.DocPrioridadDocumentoPrioridadDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_prioridadDocumento_prioridadDocumento");
            entity.Property(e => e.DocPrioridadDocumentoPrioridadDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_prioridadDocumento_prioridadDocumento_codigo");
            entity.Property(e => e.DocPrioridadDocumentoTiempoRespuesta).HasColumnName("doc_prioridadDocumento_tiempoRespuesta");
            entity.Property(e => e.DocSubtipoDocumentoArchivosAdjuntosApp).HasColumnName("doc_subtipoDocumento_archivosAdjuntosApp");
            entity.Property(e => e.DocSubtipoDocumentoBloquearDespacho).HasColumnName("doc_subtipoDocumento_bloquearDespacho");
            entity.Property(e => e.DocSubtipoDocumentoCantidadAuxiliar).HasColumnName("doc_subtipoDocumento_cantidadAuxiliar");
            entity.Property(e => e.DocSubtipoDocumentoCargarSolicitante).HasColumnName("doc_subtipoDocumento_cargarSolicitante");
            entity.Property(e => e.DocSubtipoDocumentoCerrarSol).HasColumnName("doc_subtipoDocumento_cerrarSol");
            entity.Property(e => e.DocSubtipoDocumentoConsecutivo).HasColumnName("doc_subtipoDocumento_consecutivo");
            entity.Property(e => e.DocSubtipoDocumentoEjecutaDevolucion).HasColumnName("doc_subtipoDocumento_ejecutaDevolucion");
            entity.Property(e => e.DocSubtipoDocumentoIdTipoDocumento).HasColumnName("doc_subtipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoMostrarPendienteDocumento).HasColumnName("doc_subtipoDocumento_mostrarPendienteDocumento");
            entity.Property(e => e.DocSubtipoDocumentoMostrarValoresEjecutados).HasColumnName("doc_subtipoDocumento_mostrarValoresEjecutados");
            entity.Property(e => e.DocSubtipoDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_prefijo");
            entity.Property(e => e.DocSubtipoDocumentoProgramarPlaneadas).HasColumnName("doc_subtipoDocumento_programarPlaneadas");
            entity.Property(e => e.DocSubtipoDocumentoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_subtipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_subtipoDocumento_codigo");
            entity.Property(e => e.DocSubtipoDocumentoTipoCobro).HasColumnName("doc_subtipoDocumento_tipoCobro");
            entity.Property(e => e.DocSubtipoDocumentoValUrgente).HasColumnName("doc_subtipoDocumento_valUrgente");
            entity.Property(e => e.DocSubtipoDocumentoVerCentroCosto).HasColumnName("doc_subtipoDocumento_verCentroCosto");
            entity.Property(e => e.DocSubtipoDocumentoVerIncoterm).HasColumnName("doc_subtipoDocumento_verIncoterm");
            entity.Property(e => e.Documento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento");
            entity.Property(e => e.DocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("documento_codigo");
            entity.Property(e => e.DocumentoNumero).HasColumnName("documento_numero");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCierre_ff");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_fh");
            entity.Property(e => e.FechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaLimite_fh");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaSugerida_fh");
            entity.Property(e => e.GenMonedaAbreviatura)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("gen_moneda_abreviatura");
            entity.Property(e => e.GenMonedaCambio).HasColumnName("gen_moneda_cambio");
            entity.Property(e => e.GenMonedaMoneda)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_moneda_moneda");
            entity.Property(e => e.GenMonedaMonedaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_moneda_moneda_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdEstadoTipoDocumento).HasColumnName("id_estadoTipoDocumento");
            entity.Property(e => e.IdMoneda).HasColumnName("id_moneda");
            entity.Property(e => e.IdMotivoestado).HasColumnName("id_motivoestado");
            entity.Property(e => e.IdPrioridadDocumento).HasColumnName("id_prioridadDocumento");
            entity.Property(e => e.IdSubtipoDocumento).HasColumnName("id_subtipoDocumento");
            entity.Property(e => e.IdTerceroCliente).HasColumnName("id_tercero_cliente");
            entity.Property(e => e.IdTerceroProveedor).HasColumnName("id_tercero_proveedor");
            entity.Property(e => e.IdUsuarioAsignado).HasColumnName("id_usuario_asignado");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioEnUso).HasColumnName("id_usuario_enUso");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Iva).HasColumnName("iva");
            entity.Property(e => e.IvaPlaneado).HasColumnName("ivaPlaneado");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Prefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("prefijo");
            entity.Property(e => e.Rentabilidad).HasColumnName("rentabilidad");
            entity.Property(e => e.SegUsuarioAsignadoAccesoActivo).HasColumnName("seg_usuario_asignado_accesoActivo");
            entity.Property(e => e.SegUsuarioAsignadoAplicaRecargo).HasColumnName("seg_usuario_asignado_aplicaRecargo");
            entity.Property(e => e.SegUsuarioAsignadoCambiarClave).HasColumnName("seg_usuario_asignado_cambiarClave");
            entity.Property(e => e.SegUsuarioAsignadoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asignado_clave");
            entity.Property(e => e.SegUsuarioAsignadoCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_asignado_costoHora");
            entity.Property(e => e.SegUsuarioAsignadoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asignado_direccion");
            entity.Property(e => e.SegUsuarioAsignadoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asignado_email");
            entity.Property(e => e.SegUsuarioAsignadoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_asignado_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioAsignadoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_asignado_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioAsignadoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_asignado_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioAsignadoHabilitado).HasColumnName("seg_usuario_asignado_habilitado");
            entity.Property(e => e.SegUsuarioAsignadoIdCargo).HasColumnName("seg_usuario_asignado_id_cargo");
            entity.Property(e => e.SegUsuarioAsignadoIdDispositivo)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asignado_idDispositivo");
            entity.Property(e => e.SegUsuarioAsignadoIdGrupo).HasColumnName("seg_usuario_asignado_id_grupo");
            entity.Property(e => e.SegUsuarioAsignadoIdPerfil).HasColumnName("seg_usuario_asignado_id_perfil");
            entity.Property(e => e.SegUsuarioAsignadoIdUsuario).HasColumnName("seg_usuario_asignado_id_usuario");
            entity.Property(e => e.SegUsuarioAsignadoIdZona).HasColumnName("seg_usuario_asignado_id_zona");
            entity.Property(e => e.SegUsuarioAsignadoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asignado_identificacion");
            entity.Property(e => e.SegUsuarioAsignadoIntentosFallidos).HasColumnName("seg_usuario_asignado_intentosFallidos");
            entity.Property(e => e.SegUsuarioAsignadoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asignado_nombre");
            entity.Property(e => e.SegUsuarioAsignadoNumeroIngresos).HasColumnName("seg_usuario_asignado_numeroIngresos");
            entity.Property(e => e.SegUsuarioAsignadoPorcentajeComision).HasColumnName("seg_usuario_asignado_porcentajeComision");
            entity.Property(e => e.SegUsuarioAsignadoPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_asignado_preferencias");
            entity.Property(e => e.SegUsuarioAsignadoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asignado_profesion");
            entity.Property(e => e.SegUsuarioAsignadoSexo).HasColumnName("seg_usuario_asignado_sexo");
            entity.Property(e => e.SegUsuarioAsignadoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asignado_telefono");
            entity.Property(e => e.SegUsuarioAsignadoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asignado_usuario");
            entity.Property(e => e.SegUsuarioAsignadoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asignado_usuario_codigo");
            entity.Property(e => e.SegUsuarioEnUsoAccesoActivo).HasColumnName("seg_usuario_enUso_accesoActivo");
            entity.Property(e => e.SegUsuarioEnUsoAplicaRecargo).HasColumnName("seg_usuario_enUso_aplicaRecargo");
            entity.Property(e => e.SegUsuarioEnUsoCambiarClave).HasColumnName("seg_usuario_enUso_cambiarClave");
            entity.Property(e => e.SegUsuarioEnUsoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_enUso_clave");
            entity.Property(e => e.SegUsuarioEnUsoCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_enUso_costoHora");
            entity.Property(e => e.SegUsuarioEnUsoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_enUso_direccion");
            entity.Property(e => e.SegUsuarioEnUsoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_enUso_email");
            entity.Property(e => e.SegUsuarioEnUsoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_enUso_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioEnUsoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_enUso_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioEnUsoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_enUso_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioEnUsoHabilitado).HasColumnName("seg_usuario_enUso_habilitado");
            entity.Property(e => e.SegUsuarioEnUsoIdCargo).HasColumnName("seg_usuario_enUso_id_cargo");
            entity.Property(e => e.SegUsuarioEnUsoIdDispositivo)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_enUso_idDispositivo");
            entity.Property(e => e.SegUsuarioEnUsoIdGrupo).HasColumnName("seg_usuario_enUso_id_grupo");
            entity.Property(e => e.SegUsuarioEnUsoIdPerfil).HasColumnName("seg_usuario_enUso_id_perfil");
            entity.Property(e => e.SegUsuarioEnUsoIdUsuario).HasColumnName("seg_usuario_enUso_id_usuario");
            entity.Property(e => e.SegUsuarioEnUsoIdZona).HasColumnName("seg_usuario_enUso_id_zona");
            entity.Property(e => e.SegUsuarioEnUsoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_enUso_identificacion");
            entity.Property(e => e.SegUsuarioEnUsoIntentosFallidos).HasColumnName("seg_usuario_enUso_intentosFallidos");
            entity.Property(e => e.SegUsuarioEnUsoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_enUso_nombre");
            entity.Property(e => e.SegUsuarioEnUsoNumeroIngresos).HasColumnName("seg_usuario_enUso_numeroIngresos");
            entity.Property(e => e.SegUsuarioEnUsoPorcentajeComision).HasColumnName("seg_usuario_enUso_porcentajeComision");
            entity.Property(e => e.SegUsuarioEnUsoPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_enUso_preferencias");
            entity.Property(e => e.SegUsuarioEnUsoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_enUso_profesion");
            entity.Property(e => e.SegUsuarioEnUsoSexo).HasColumnName("seg_usuario_enUso_sexo");
            entity.Property(e => e.SegUsuarioEnUsoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_enUso_telefono");
            entity.Property(e => e.SegUsuarioEnUsoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_enUso_usuario");
            entity.Property(e => e.SegUsuarioEnUsoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_enUso_usuario_codigo");
            entity.Property(e => e.Subtotal).HasColumnName("subtotal");
            entity.Property(e => e.SubtotalPlaneado).HasColumnName("subtotalPlaneado");
            entity.Property(e => e.TerTerceroClienteClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_cliente_clasificacion");
            entity.Property(e => e.TerTerceroClienteContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_cliente_contacto");
            entity.Property(e => e.TerTerceroClienteDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_cliente_direccion");
            entity.Property(e => e.TerTerceroClienteEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_cliente_email");
            entity.Property(e => e.TerTerceroClienteEsCliente).HasColumnName("ter_tercero_cliente_esCliente");
            entity.Property(e => e.TerTerceroClienteEsEmpresaPropia).HasColumnName("ter_tercero_cliente_esEmpresaPropia");
            entity.Property(e => e.TerTerceroClienteEsFabricante).HasColumnName("ter_tercero_cliente_esFabricante");
            entity.Property(e => e.TerTerceroClienteEsProspecto).HasColumnName("ter_tercero_cliente_esProspecto");
            entity.Property(e => e.TerTerceroClienteEsProveedor).HasColumnName("ter_tercero_cliente_esProveedor");
            entity.Property(e => e.TerTerceroClienteEsTransportador).HasColumnName("ter_tercero_cliente_esTransportador");
            entity.Property(e => e.TerTerceroClienteFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_cliente_fax");
            entity.Property(e => e.TerTerceroClienteIdEstadoTercero).HasColumnName("ter_tercero_cliente_id_estadoTercero");
            entity.Property(e => e.TerTerceroClienteIdFormaPago).HasColumnName("ter_tercero_cliente_id_formaPago");
            entity.Property(e => e.TerTerceroClienteIdNaturalezaTercero).HasColumnName("ter_tercero_cliente_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroClienteIdZona).HasColumnName("ter_tercero_cliente_id_zona");
            entity.Property(e => e.TerTerceroClienteNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_cliente_notas");
            entity.Property(e => e.TerTerceroClienteRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_cliente_representante");
            entity.Property(e => e.TerTerceroClienteTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_cliente_telefono");
            entity.Property(e => e.TerTerceroClienteTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_cliente_tercero");
            entity.Property(e => e.TerTerceroClienteTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_cliente_tercero_codigo");
            entity.Property(e => e.TerTerceroClienteTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_cliente_tercero_nit");
            entity.Property(e => e.TerTerceroClienteTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_cliente_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroClienteTiempoEntrega).HasColumnName("ter_tercero_cliente_tiempoEntrega");
            entity.Property(e => e.TerTerceroClienteWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_cliente_website");
            entity.Property(e => e.TerTerceroProveedorClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_clasificacion");
            entity.Property(e => e.TerTerceroProveedorContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_contacto");
            entity.Property(e => e.TerTerceroProveedorDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_direccion");
            entity.Property(e => e.TerTerceroProveedorEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_email");
            entity.Property(e => e.TerTerceroProveedorEsCliente).HasColumnName("ter_tercero_proveedor_esCliente");
            entity.Property(e => e.TerTerceroProveedorEsEmpresaPropia).HasColumnName("ter_tercero_proveedor_esEmpresaPropia");
            entity.Property(e => e.TerTerceroProveedorEsFabricante).HasColumnName("ter_tercero_proveedor_esFabricante");
            entity.Property(e => e.TerTerceroProveedorEsProspecto).HasColumnName("ter_tercero_proveedor_esProspecto");
            entity.Property(e => e.TerTerceroProveedorEsProveedor).HasColumnName("ter_tercero_proveedor_esProveedor");
            entity.Property(e => e.TerTerceroProveedorEsTransportador).HasColumnName("ter_tercero_proveedor_esTransportador");
            entity.Property(e => e.TerTerceroProveedorFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_fax");
            entity.Property(e => e.TerTerceroProveedorIdEstadoTercero).HasColumnName("ter_tercero_proveedor_id_estadoTercero");
            entity.Property(e => e.TerTerceroProveedorIdFormaPago).HasColumnName("ter_tercero_proveedor_id_formaPago");
            entity.Property(e => e.TerTerceroProveedorIdNaturalezaTercero).HasColumnName("ter_tercero_proveedor_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroProveedorIdZona).HasColumnName("ter_tercero_proveedor_id_zona");
            entity.Property(e => e.TerTerceroProveedorNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_notas");
            entity.Property(e => e.TerTerceroProveedorRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_representante");
            entity.Property(e => e.TerTerceroProveedorTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_telefono");
            entity.Property(e => e.TerTerceroProveedorTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_tercero");
            entity.Property(e => e.TerTerceroProveedorTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_tercero_codigo");
            entity.Property(e => e.TerTerceroProveedorTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_tercero_nit");
            entity.Property(e => e.TerTerceroProveedorTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroProveedorTiempoEntrega).HasColumnName("ter_tercero_proveedor_tiempoEntrega");
            entity.Property(e => e.TerTerceroProveedorWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_proveedor_website");
            entity.Property(e => e.Total).HasColumnName("total");
            entity.Property(e => e.TotalPlaneado).HasColumnName("totalPlaneado");
            entity.Property(e => e.Trm).HasColumnName("trm");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoAlquiler>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_alquiler");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocDocumentoAlquilerCosto).HasColumnName("doc_documento_alquiler_costo");
            entity.Property(e => e.DocDocumentoAlquilerCostoPlaneado).HasColumnName("doc_documento_alquiler_costoPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerDescuento).HasColumnName("doc_documento_alquiler_descuento");
            entity.Property(e => e.DocDocumentoAlquilerDescuentoPlaneado).HasColumnName("doc_documento_alquiler_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreCosto).HasColumnName("doc_documento_alquiler_doc_documento_padre_costo");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreCostoPlaneado).HasColumnName("doc_documento_alquiler_doc_documento_padre_costoPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreDescuento).HasColumnName("doc_documento_alquiler_doc_documento_padre_descuento");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreDescuentoPlaneado).HasColumnName("doc_documento_alquiler_doc_documento_padre_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_doc_documento_padre_documento");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_doc_documento_padre_documento_codigo");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreDocumentoNumero).HasColumnName("doc_documento_alquiler_doc_documento_padre_documento_numero");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_doc_documento_padre_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_doc_documento_padre_fecha_fh");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_doc_documento_padre_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_doc_documento_padre_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreIdDocumento).HasColumnName("doc_documento_alquiler_doc_documento_padre_id_documento");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreIdEstadoTipoDocumento).HasColumnName("doc_documento_alquiler_doc_documento_padre_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreIdMoneda).HasColumnName("doc_documento_alquiler_doc_documento_padre_id_moneda");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreIdMotivoestado).HasColumnName("doc_documento_alquiler_doc_documento_padre_id_motivoestado");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreIdPrioridadDocumento).HasColumnName("doc_documento_alquiler_doc_documento_padre_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreIdSubtipoDocumento).HasColumnName("doc_documento_alquiler_doc_documento_padre_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreIdTerceroCliente).HasColumnName("doc_documento_alquiler_doc_documento_padre_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreIdTerceroProveedor).HasColumnName("doc_documento_alquiler_doc_documento_padre_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreIdUsuarioAsignado).HasColumnName("doc_documento_alquiler_doc_documento_padre_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreIdUsuarioEnUso).HasColumnName("doc_documento_alquiler_doc_documento_padre_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreIva).HasColumnName("doc_documento_alquiler_doc_documento_padre_iva");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreIvaPlaneado).HasColumnName("doc_documento_alquiler_doc_documento_padre_ivaPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadrePrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_doc_documento_padre_prefijo");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreRentabilidad).HasColumnName("doc_documento_alquiler_doc_documento_padre_rentabilidad");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreSubtotal).HasColumnName("doc_documento_alquiler_doc_documento_padre_subtotal");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreSubtotalPlaneado).HasColumnName("doc_documento_alquiler_doc_documento_padre_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreTotal).HasColumnName("doc_documento_alquiler_doc_documento_padre_total");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreTotalPlaneado).HasColumnName("doc_documento_alquiler_doc_documento_padre_totalPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerDocDocumentoPadreTrm).HasColumnName("doc_documento_alquiler_doc_documento_padre_trm");
            entity.Property(e => e.DocDocumentoAlquilerDocEstadoTipoDocumentoAfectaIndicador).HasColumnName("doc_documento_alquiler_doc_estadoTipoDocumento_afectaIndicador");
            entity.Property(e => e.DocDocumentoAlquilerDocEstadoTipoDocumentoAfectaInventario).HasColumnName("doc_documento_alquiler_doc_estadoTipoDocumento_afectaInventario");
            entity.Property(e => e.DocDocumentoAlquilerDocEstadoTipoDocumentoColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_doc_estadoTipoDocumento_color");
            entity.Property(e => e.DocDocumentoAlquilerDocEstadoTipoDocumentoDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_doc_estadoTipoDocumento_descripcion");
            entity.Property(e => e.DocDocumentoAlquilerDocEstadoTipoDocumentoEditaDocumento).HasColumnName("doc_documento_alquiler_doc_estadoTipoDocumento_editaDocumento");
            entity.Property(e => e.DocDocumentoAlquilerDocEstadoTipoDocumentoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_doc_estadoTipoDocumento_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoAlquilerDocEstadoTipoDocumentoEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_doc_estadoTipoDocumento_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocDocumentoAlquilerDocEstadoTipoDocumentoIdTipoDocumento).HasColumnName("doc_documento_alquiler_doc_estadoTipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoAlquilerDocEstadoTipoDocumentoOrden).HasColumnName("doc_documento_alquiler_doc_estadoTipoDocumento_orden");
            entity.Property(e => e.DocDocumentoAlquilerDocEstadoTipoDocumentoPuedeRegresar).HasColumnName("doc_documento_alquiler_doc_estadoTipoDocumento_puedeRegresar");
            entity.Property(e => e.DocDocumentoAlquilerDocMotivoestadoIdEstadoTipoDocumento).HasColumnName("doc_documento_alquiler_doc_motivoestado_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoAlquilerDocMotivoestadoMotivoestado)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_doc_motivoestado_motivoestado");
            entity.Property(e => e.DocDocumentoAlquilerDocMotivoestadoMotivoestadoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_doc_motivoestado_motivoestado_codigo");
            entity.Property(e => e.DocDocumentoAlquilerDocPrioridadDocumentoIdEstrategiaPrioridad).HasColumnName("doc_documento_alquiler_doc_prioridadDocumento_id_estrategiaPrioridad");
            entity.Property(e => e.DocDocumentoAlquilerDocPrioridadDocumentoIdTipoDocumento).HasColumnName("doc_documento_alquiler_doc_prioridadDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoAlquilerDocPrioridadDocumentoOrden).HasColumnName("doc_documento_alquiler_doc_prioridadDocumento_orden");
            entity.Property(e => e.DocDocumentoAlquilerDocPrioridadDocumentoPrioridadDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_doc_prioridadDocumento_prioridadDocumento");
            entity.Property(e => e.DocDocumentoAlquilerDocPrioridadDocumentoPrioridadDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_doc_prioridadDocumento_prioridadDocumento_codigo");
            entity.Property(e => e.DocDocumentoAlquilerDocPrioridadDocumentoTiempoRespuesta).HasColumnName("doc_documento_alquiler_doc_prioridadDocumento_tiempoRespuesta");
            entity.Property(e => e.DocDocumentoAlquilerDocSubtipoDocumentoBloquearDespacho).HasColumnName("doc_documento_alquiler_doc_subtipoDocumento_bloquearDespacho");
            entity.Property(e => e.DocDocumentoAlquilerDocSubtipoDocumentoCargarSolicitante).HasColumnName("doc_documento_alquiler_doc_subtipoDocumento_cargarSolicitante");
            entity.Property(e => e.DocDocumentoAlquilerDocSubtipoDocumentoCerrarSol).HasColumnName("doc_documento_alquiler_doc_subtipoDocumento_cerrarSol");
            entity.Property(e => e.DocDocumentoAlquilerDocSubtipoDocumentoConsecutivo).HasColumnName("doc_documento_alquiler_doc_subtipoDocumento_consecutivo");
            entity.Property(e => e.DocDocumentoAlquilerDocSubtipoDocumentoIdTipoDocumento).HasColumnName("doc_documento_alquiler_doc_subtipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoAlquilerDocSubtipoDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_doc_subtipoDocumento_prefijo");
            entity.Property(e => e.DocDocumentoAlquilerDocSubtipoDocumentoProgramarPlaneadas).HasColumnName("doc_documento_alquiler_doc_subtipoDocumento_programarPlaneadas");
            entity.Property(e => e.DocDocumentoAlquilerDocSubtipoDocumentoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_doc_subtipoDocumento_subtipoDocumento");
            entity.Property(e => e.DocDocumentoAlquilerDocSubtipoDocumentoSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_doc_subtipoDocumento_subtipoDocumento_codigo");
            entity.Property(e => e.DocDocumentoAlquilerDocSubtipoDocumentoValUrgente).HasColumnName("doc_documento_alquiler_doc_subtipoDocumento_valUrgente");
            entity.Property(e => e.DocDocumentoAlquilerDocSubtipoDocumentoVerCentroCosto).HasColumnName("doc_documento_alquiler_doc_subtipoDocumento_verCentroCosto");
            entity.Property(e => e.DocDocumentoAlquilerDocSubtipoDocumentoVerIncoterm).HasColumnName("doc_documento_alquiler_doc_subtipoDocumento_verIncoterm");
            entity.Property(e => e.DocDocumentoAlquilerDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_documento_codigo");
            entity.Property(e => e.DocDocumentoAlquilerDocumentoNumero).HasColumnName("doc_documento_alquiler_documento_numero");
            entity.Property(e => e.DocDocumentoAlquilerFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoAlquilerFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_fecha_fh");
            entity.Property(e => e.DocDocumentoAlquilerFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoAlquilerFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoAlquilerGenMonedaAbreviatura)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_gen_moneda_abreviatura");
            entity.Property(e => e.DocDocumentoAlquilerGenMonedaCambio).HasColumnName("doc_documento_alquiler_gen_moneda_cambio");
            entity.Property(e => e.DocDocumentoAlquilerGenMonedaMoneda)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_gen_moneda_moneda");
            entity.Property(e => e.DocDocumentoAlquilerGenMonedaMonedaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_gen_moneda_moneda_codigo");
            entity.Property(e => e.DocDocumentoAlquilerIdDocumento).HasColumnName("doc_documento_alquiler_id_documento");
            entity.Property(e => e.DocDocumentoAlquilerIdEstadoTipoDocumento).HasColumnName("doc_documento_alquiler_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoAlquilerIdMoneda).HasColumnName("doc_documento_alquiler_id_moneda");
            entity.Property(e => e.DocDocumentoAlquilerIdMotivoestado).HasColumnName("doc_documento_alquiler_id_motivoestado");
            entity.Property(e => e.DocDocumentoAlquilerIdPrioridadDocumento).HasColumnName("doc_documento_alquiler_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoAlquilerIdSubtipoDocumento).HasColumnName("doc_documento_alquiler_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoAlquilerIdTerceroCliente).HasColumnName("doc_documento_alquiler_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoAlquilerIdTerceroProveedor).HasColumnName("doc_documento_alquiler_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoAlquilerIdUsuarioAsignado).HasColumnName("doc_documento_alquiler_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoAlquilerIdUsuarioEnUso).HasColumnName("doc_documento_alquiler_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoAlquilerIva).HasColumnName("doc_documento_alquiler_iva");
            entity.Property(e => e.DocDocumentoAlquilerIvaPlaneado).HasColumnName("doc_documento_alquiler_ivaPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_prefijo");
            entity.Property(e => e.DocDocumentoAlquilerRentabilidad).HasColumnName("doc_documento_alquiler_rentabilidad");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoAccesoActivo).HasColumnName("doc_documento_alquiler_seg_usuario_asignado_accesoActivo");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoAplicaRecargo).HasColumnName("doc_documento_alquiler_seg_usuario_asignado_aplicaRecargo");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoCambiarClave).HasColumnName("doc_documento_alquiler_seg_usuario_asignado_cambiarClave");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_seg_usuario_asignado_clave");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoCostoHora)
                .HasColumnType("money")
                .HasColumnName("doc_documento_alquiler_seg_usuario_asignado_costoHora");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_seg_usuario_asignado_direccion");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_seg_usuario_asignado_email");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_seg_usuario_asignado_fechaIntentoFallido_fh");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_seg_usuario_asignado_fechaUltimoCambioClave_fh");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_seg_usuario_asignado_fechaUltimoIngreso_fh");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoHabilitado).HasColumnName("doc_documento_alquiler_seg_usuario_asignado_habilitado");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoIdCargo).HasColumnName("doc_documento_alquiler_seg_usuario_asignado_id_cargo");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoIdGrupo).HasColumnName("doc_documento_alquiler_seg_usuario_asignado_id_grupo");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoIdPerfil).HasColumnName("doc_documento_alquiler_seg_usuario_asignado_id_perfil");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoIdUsuario).HasColumnName("doc_documento_alquiler_seg_usuario_asignado_id_usuario");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoIdZona).HasColumnName("doc_documento_alquiler_seg_usuario_asignado_id_zona");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_seg_usuario_asignado_identificacion");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoIntentosFallidos).HasColumnName("doc_documento_alquiler_seg_usuario_asignado_intentosFallidos");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_seg_usuario_asignado_nombre");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoNumeroIngresos).HasColumnName("doc_documento_alquiler_seg_usuario_asignado_numeroIngresos");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoPorcentajeComision).HasColumnName("doc_documento_alquiler_seg_usuario_asignado_porcentajeComision");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoPreferencias)
                .HasColumnType("image")
                .HasColumnName("doc_documento_alquiler_seg_usuario_asignado_preferencias");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_seg_usuario_asignado_profesion");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoSexo).HasColumnName("doc_documento_alquiler_seg_usuario_asignado_sexo");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_seg_usuario_asignado_telefono");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_seg_usuario_asignado_usuario");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioAsignadoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_seg_usuario_asignado_usuario_codigo");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoAccesoActivo).HasColumnName("doc_documento_alquiler_seg_usuario_enUso_accesoActivo");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoAplicaRecargo).HasColumnName("doc_documento_alquiler_seg_usuario_enUso_aplicaRecargo");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoCambiarClave).HasColumnName("doc_documento_alquiler_seg_usuario_enUso_cambiarClave");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_seg_usuario_enUso_clave");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoCostoHora)
                .HasColumnType("money")
                .HasColumnName("doc_documento_alquiler_seg_usuario_enUso_costoHora");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_seg_usuario_enUso_direccion");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_seg_usuario_enUso_email");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_seg_usuario_enUso_fechaIntentoFallido_fh");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_seg_usuario_enUso_fechaUltimoCambioClave_fh");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_seg_usuario_enUso_fechaUltimoIngreso_fh");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoHabilitado).HasColumnName("doc_documento_alquiler_seg_usuario_enUso_habilitado");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoIdCargo).HasColumnName("doc_documento_alquiler_seg_usuario_enUso_id_cargo");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoIdGrupo).HasColumnName("doc_documento_alquiler_seg_usuario_enUso_id_grupo");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoIdPerfil).HasColumnName("doc_documento_alquiler_seg_usuario_enUso_id_perfil");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoIdUsuario).HasColumnName("doc_documento_alquiler_seg_usuario_enUso_id_usuario");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoIdZona).HasColumnName("doc_documento_alquiler_seg_usuario_enUso_id_zona");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_seg_usuario_enUso_identificacion");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoIntentosFallidos).HasColumnName("doc_documento_alquiler_seg_usuario_enUso_intentosFallidos");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_seg_usuario_enUso_nombre");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoNumeroIngresos).HasColumnName("doc_documento_alquiler_seg_usuario_enUso_numeroIngresos");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoPorcentajeComision).HasColumnName("doc_documento_alquiler_seg_usuario_enUso_porcentajeComision");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoPreferencias)
                .HasColumnType("image")
                .HasColumnName("doc_documento_alquiler_seg_usuario_enUso_preferencias");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_seg_usuario_enUso_profesion");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoSexo).HasColumnName("doc_documento_alquiler_seg_usuario_enUso_sexo");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_seg_usuario_enUso_telefono");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_seg_usuario_enUso_usuario");
            entity.Property(e => e.DocDocumentoAlquilerSegUsuarioEnUsoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_seg_usuario_enUso_usuario_codigo");
            entity.Property(e => e.DocDocumentoAlquilerSubtotal).HasColumnName("doc_documento_alquiler_subtotal");
            entity.Property(e => e.DocDocumentoAlquilerSubtotalPlaneado).HasColumnName("doc_documento_alquiler_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_cliente_clasificacion");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_cliente_contacto");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_cliente_direccion");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_cliente_email");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteEsCliente).HasColumnName("doc_documento_alquiler_ter_tercero_cliente_esCliente");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteEsEmpresaPropia).HasColumnName("doc_documento_alquiler_ter_tercero_cliente_esEmpresaPropia");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteEsFabricante).HasColumnName("doc_documento_alquiler_ter_tercero_cliente_esFabricante");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteEsProspecto).HasColumnName("doc_documento_alquiler_ter_tercero_cliente_esProspecto");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteEsProveedor).HasColumnName("doc_documento_alquiler_ter_tercero_cliente_esProveedor");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteEsTransportador).HasColumnName("doc_documento_alquiler_ter_tercero_cliente_esTransportador");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_cliente_fax");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteIdEstadoTercero).HasColumnName("doc_documento_alquiler_ter_tercero_cliente_id_estadoTercero");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteIdFormaPago).HasColumnName("doc_documento_alquiler_ter_tercero_cliente_id_formaPago");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteIdNaturalezaTercero).HasColumnName("doc_documento_alquiler_ter_tercero_cliente_id_naturalezaTercero");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteIdZona).HasColumnName("doc_documento_alquiler_ter_tercero_cliente_id_zona");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_cliente_notas");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_cliente_representante");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_cliente_telefono");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_cliente_tercero");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_cliente_tercero_codigo");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_cliente_tercero_nit");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_cliente_tercero_nombreCorto");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteTiempoEntrega).HasColumnName("doc_documento_alquiler_ter_tercero_cliente_tiempoEntrega");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroClienteWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_cliente_website");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroProveedorClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_proveedor_clasificacion");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroProveedorContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_proveedor_contacto");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroProveedorDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_proveedor_direccion");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroProveedorEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_proveedor_email");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroProveedorEsCliente).HasColumnName("doc_documento_alquiler_ter_tercero_proveedor_esCliente");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroProveedorEsEmpresaPropia).HasColumnName("doc_documento_alquiler_ter_tercero_proveedor_esEmpresaPropia");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroProveedorEsFabricante).HasColumnName("doc_documento_alquiler_ter_tercero_proveedor_esFabricante");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroProveedorEsProspecto).HasColumnName("doc_documento_alquiler_ter_tercero_proveedor_esProspecto");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroProveedorEsProveedor).HasColumnName("doc_documento_alquiler_ter_tercero_proveedor_esProveedor");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroProveedorEsTransportador).HasColumnName("doc_documento_alquiler_ter_tercero_proveedor_esTransportador");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroProveedorFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_proveedor_fax");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroProveedorIdEstadoTercero).HasColumnName("doc_documento_alquiler_ter_tercero_proveedor_id_estadoTercero");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroProveedorIdNaturalezaTercero).HasColumnName("doc_documento_alquiler_ter_tercero_proveedor_id_naturalezaTercero");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroProveedorIdZona).HasColumnName("doc_documento_alquiler_ter_tercero_proveedor_id_zona");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroProveedorNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_proveedor_notas");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroProveedorRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_proveedor_representante");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroProveedorTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_proveedor_telefono");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroProveedorTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_proveedor_tercero");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroProveedorTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_proveedor_tercero_codigo");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroProveedorTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_proveedor_tercero_nit");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroProveedorTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_proveedor_tercero_nombreCorto");
            entity.Property(e => e.DocDocumentoAlquilerTerTerceroProveedorWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_ter_tercero_proveedor_website");
            entity.Property(e => e.DocDocumentoAlquilerTotal).HasColumnName("doc_documento_alquiler_total");
            entity.Property(e => e.DocDocumentoAlquilerTotalPlaneado).HasColumnName("doc_documento_alquiler_totalPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerTrm).HasColumnName("doc_documento_alquiler_trm");
            entity.Property(e => e.DocumentoAlquiler)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.alquiler");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EjecutaDevolucion).HasColumnName("ejecutaDevolucion");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFin_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MesVencido).HasColumnName("mesVencido");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(3000)
                .IsUnicode(false)
                .HasColumnName("observaciones");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoAtributo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documentoAtributo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatAtributoAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_atributo");
            entity.Property(e => e.CatAtributoAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_atributo_codigo");
            entity.Property(e => e.CatAtributoEsObligatorio).HasColumnName("cat_atributo_esObligatorio");
            entity.Property(e => e.CatAtributoEsVariable).HasColumnName("cat_atributo_esVariable");
            entity.Property(e => e.CatAtributoIdSeccionAtributo).HasColumnName("cat_atributo_id_seccionAtributo");
            entity.Property(e => e.CatAtributoIdTipoAtributo).HasColumnName("cat_atributo_id_tipoAtributo");
            entity.Property(e => e.CatAtributoIdUnidad).HasColumnName("cat_atributo_id_unidad");
            entity.Property(e => e.CatAtributoNombreControl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_nombreControl");
            entity.Property(e => e.CatAtributoResaltado).HasColumnName("cat_atributo_resaltado");
            entity.Property(e => e.CatAtributoValorMaximo).HasColumnName("cat_atributo_ValorMaximo");
            entity.Property(e => e.CatAtributoValorMinimo).HasColumnName("cat_atributo_valorMinimo");
            entity.Property(e => e.DocDocumentoCosto).HasColumnName("doc_documento_costo");
            entity.Property(e => e.DocDocumentoCostoPlaneado).HasColumnName("doc_documento_costoPlaneado");
            entity.Property(e => e.DocDocumentoDescuento).HasColumnName("doc_documento_descuento");
            entity.Property(e => e.DocDocumentoDescuentoPlaneado).HasColumnName("doc_documento_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento");
            entity.Property(e => e.DocDocumentoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento_codigo");
            entity.Property(e => e.DocDocumentoDocumentoNumero).HasColumnName("doc_documento_documento_numero");
            entity.Property(e => e.DocDocumentoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fecha_fh");
            entity.Property(e => e.DocDocumentoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoIdDocumento).HasColumnName("doc_documento_id_documento");
            entity.Property(e => e.DocDocumentoIdEstadoTipoDocumento).HasColumnName("doc_documento_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoIdMoneda).HasColumnName("doc_documento_id_moneda");
            entity.Property(e => e.DocDocumentoIdMotivoestado).HasColumnName("doc_documento_id_motivoestado");
            entity.Property(e => e.DocDocumentoIdPrioridadDocumento).HasColumnName("doc_documento_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoIdSubtipoDocumento).HasColumnName("doc_documento_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoIdTerceroCliente).HasColumnName("doc_documento_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoIdTerceroProveedor).HasColumnName("doc_documento_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoIdUsuarioAsignado).HasColumnName("doc_documento_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoIdUsuarioEnUso).HasColumnName("doc_documento_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoIva).HasColumnName("doc_documento_iva");
            entity.Property(e => e.DocDocumentoIvaPlaneado).HasColumnName("doc_documento_ivaPlaneado");
            entity.Property(e => e.DocDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_prefijo");
            entity.Property(e => e.DocDocumentoRentabilidad).HasColumnName("doc_documento_rentabilidad");
            entity.Property(e => e.DocDocumentoSubtotal).HasColumnName("doc_documento_subtotal");
            entity.Property(e => e.DocDocumentoSubtotalPlaneado).HasColumnName("doc_documento_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoTotal).HasColumnName("doc_documento_total");
            entity.Property(e => e.DocDocumentoTotalPlaneado).HasColumnName("doc_documento_totalPlaneado");
            entity.Property(e => e.DocDocumentoTrm).HasColumnName("doc_documento_trm");
            entity.Property(e => e.DocumentoAtributo)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("documentoAtributo");
            entity.Property(e => e.DocumentoAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("documentoAtributo_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquOpcionAtributoIdAtributo).HasColumnName("equ_opcionAtributo_id_atributo");
            entity.Property(e => e.EquOpcionAtributoOpcionAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_opcionAtributo_opcionAtributo");
            entity.Property(e => e.EquOpcionAtributoOpcionAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_opcionAtributo_opcionAtributo_codigo");
            entity.Property(e => e.EquOpcionAtributoOrden).HasColumnName("equ_opcionAtributo_orden");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdAtributo).HasColumnName("id_atributo");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdOpcionAtributo).HasColumnName("id_opcionAtributo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoCatalogoTempario>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_catalogo_tempario");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoTemparioBloquearCostear).HasColumnName("cat_catalogo_tempario_bloquearCostear");
            entity.Property(e => e.CatCatalogoTemparioCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_catalogo_codigo");
            entity.Property(e => e.CatCatalogoTemparioCatalogoTempario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.tempario_catalogo.tempario");
            entity.Property(e => e.CatCatalogoTemparioCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_codigoInventario");
            entity.Property(e => e.CatCatalogoTemparioDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_descripcion");
            entity.Property(e => e.CatCatalogoTemparioDetieneEquipos).HasColumnName("cat_catalogo.tempario_detieneEquipos");
            entity.Property(e => e.CatCatalogoTemparioDuracionEstimada).HasColumnName("cat_catalogo.tempario_duracionEstimada");
            entity.Property(e => e.CatCatalogoTemparioEnTaller).HasColumnName("cat_catalogo.tempario_enTaller");
            entity.Property(e => e.CatCatalogoTemparioEsCiclico).HasColumnName("cat_catalogo.tempario_esCiclico");
            entity.Property(e => e.CatCatalogoTemparioEsNacional).HasColumnName("cat_catalogo_tempario_esNacional");
            entity.Property(e => e.CatCatalogoTemparioFacturaTodo).HasColumnName("cat_catalogo.tempario_facturaTodo");
            entity.Property(e => e.CatCatalogoTemparioHorasDetencion).HasColumnName("cat_catalogo.tempario_horasDetencion");
            entity.Property(e => e.CatCatalogoTemparioIdFamilia).HasColumnName("cat_catalogo_tempario_id_familia");
            entity.Property(e => e.CatCatalogoTemparioIdImpuesto).HasColumnName("cat_catalogo_tempario_id_impuesto");
            entity.Property(e => e.CatCatalogoTemparioIdSubtipoCatalogo).HasColumnName("cat_catalogo_tempario_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoTemparioIdTipoServicio).HasColumnName("cat_catalogo.tempario_id_tipoServicio");
            entity.Property(e => e.CatCatalogoTemparioIdUnidad).HasColumnName("cat_catalogo_tempario_id_unidad");
            entity.Property(e => e.CatCatalogoTemparioIncluirMenores).HasColumnName("cat_catalogo.tempario_incluirMenores");
            entity.Property(e => e.CatCatalogoTemparioModoAjuste).HasColumnName("cat_catalogo.tempario_modoAjuste");
            entity.Property(e => e.CatCatalogoTemparioPeriodoDias).HasColumnName("cat_catalogo.tempario_periodoDias");
            entity.Property(e => e.CatCatalogoTemparioPeriodoHoras).HasColumnName("cat_catalogo.tempario_periodoHoras");
            entity.Property(e => e.CatCatalogoTemparioPorcGarantia).HasColumnName("cat_catalogo.tempario_porcGarantia");
            entity.Property(e => e.CatCatalogoTemparioPorcTropicalizacion).HasColumnName("cat_catalogo.tempario_porcTropicalizacion");
            entity.Property(e => e.CatCatalogoTemparioPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_tempario_precioVenta");
            entity.Property(e => e.CatCatalogoTemparioProyectar).HasColumnName("cat_catalogo.tempario_proyectar");
            entity.Property(e => e.CatCatalogoTemparioTiempoConsecucion).HasColumnName("cat_catalogo_tempario_tiempoConsecucion");
            entity.Property(e => e.DocDocumentoCosto).HasColumnName("doc_documento_costo");
            entity.Property(e => e.DocDocumentoCostoPlaneado).HasColumnName("doc_documento_costoPlaneado");
            entity.Property(e => e.DocDocumentoDescuento).HasColumnName("doc_documento_descuento");
            entity.Property(e => e.DocDocumentoDescuentoPlaneado).HasColumnName("doc_documento_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento");
            entity.Property(e => e.DocDocumentoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento_codigo");
            entity.Property(e => e.DocDocumentoDocumentoNumero).HasColumnName("doc_documento_documento_numero");
            entity.Property(e => e.DocDocumentoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fecha_fh");
            entity.Property(e => e.DocDocumentoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoIdDocumento).HasColumnName("doc_documento_id_documento");
            entity.Property(e => e.DocDocumentoIdEstadoTipoDocumento).HasColumnName("doc_documento_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoIdMoneda).HasColumnName("doc_documento_id_moneda");
            entity.Property(e => e.DocDocumentoIdMotivoestado).HasColumnName("doc_documento_id_motivoestado");
            entity.Property(e => e.DocDocumentoIdPrioridadDocumento).HasColumnName("doc_documento_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoIdSubtipoDocumento).HasColumnName("doc_documento_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoIdTerceroCliente).HasColumnName("doc_documento_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoIdTerceroProveedor).HasColumnName("doc_documento_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoIdUsuarioAsignado).HasColumnName("doc_documento_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoIdUsuarioEnUso).HasColumnName("doc_documento_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoIva).HasColumnName("doc_documento_iva");
            entity.Property(e => e.DocDocumentoIvaPlaneado).HasColumnName("doc_documento_ivaPlaneado");
            entity.Property(e => e.DocDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_prefijo");
            entity.Property(e => e.DocDocumentoRentabilidad).HasColumnName("doc_documento_rentabilidad");
            entity.Property(e => e.DocDocumentoSubtotal).HasColumnName("doc_documento_subtotal");
            entity.Property(e => e.DocDocumentoSubtotalPlaneado).HasColumnName("doc_documento_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoTotal).HasColumnName("doc_documento_total");
            entity.Property(e => e.DocDocumentoTotalPlaneado).HasColumnName("doc_documento_totalPlaneado");
            entity.Property(e => e.DocDocumentoTrm).HasColumnName("doc_documento_trm");
            entity.Property(e => e.DocItemDocumentoAfectoInventario).HasColumnName("doc_itemDocumento_afectoInventario");
            entity.Property(e => e.DocItemDocumentoCantAuxiliar).HasColumnName("doc_itemDocumento_cantAuxiliar");
            entity.Property(e => e.DocItemDocumentoCantidadEjecutado).HasColumnName("doc_itemDocumento_cantidadEjecutado");
            entity.Property(e => e.DocItemDocumentoCantidadPlaneado).HasColumnName("doc_itemDocumento_cantidadPlaneado");
            entity.Property(e => e.DocItemDocumentoCostear).HasColumnName("doc_itemDocumento_costear");
            entity.Property(e => e.DocItemDocumentoCostoEjecutado).HasColumnName("doc_itemDocumento_costoEjecutado");
            entity.Property(e => e.DocItemDocumentoCostoPlaneado).HasColumnName("doc_itemDocumento_costoPlaneado");
            entity.Property(e => e.DocItemDocumentoDetalle)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_detalle");
            entity.Property(e => e.DocItemDocumentoDtoEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_dtoEjecutado");
            entity.Property(e => e.DocItemDocumentoDtoPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_dtoPlaneado");
            entity.Property(e => e.DocItemDocumentoEsUrgente).HasColumnName("doc_itemDocumento_esUrgente");
            entity.Property(e => e.DocItemDocumentoHorasFestivas).HasColumnName("doc_itemDocumento_horasFestivas");
            entity.Property(e => e.DocItemDocumentoHorasGarantia).HasColumnName("doc_itemDocumento_horasGarantia");
            entity.Property(e => e.DocItemDocumentoHorasNocturnas).HasColumnName("doc_itemDocumento_horasNocturnas");
            entity.Property(e => e.DocItemDocumentoHorasOrdinales).HasColumnName("doc_itemDocumento_horasOrdinales");
            entity.Property(e => e.DocItemDocumentoIdBodega).HasColumnName("doc_itemDocumento_id_bodega");
            entity.Property(e => e.DocItemDocumentoIdCatalogo).HasColumnName("doc_itemDocumento_id_catalogo");
            entity.Property(e => e.DocItemDocumentoIdCentroCosto).HasColumnName("doc_itemDocumento_id_centroCosto");
            entity.Property(e => e.DocItemDocumentoIdDocumento).HasColumnName("doc_itemDocumento_id_documento");
            entity.Property(e => e.DocItemDocumentoIdIncoterm).HasColumnName("doc_itemDocumento_id_incoterm");
            entity.Property(e => e.DocItemDocumentoIdItemDocumento).HasColumnName("doc_itemDocumento_id_itemDocumento");
            entity.Property(e => e.DocItemDocumentoIdItemDocumentoSuperior).HasColumnName("doc_itemDocumento_id_itemDocumento_superior");
            entity.Property(e => e.DocItemDocumentoIdListaprecio).HasColumnName("doc_itemDocumento_id_listaprecio");
            entity.Property(e => e.DocItemDocumentoItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_itemDocumento");
            entity.Property(e => e.DocItemDocumentoItemDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_itemDocumento_codigo");
            entity.Property(e => e.DocItemDocumentoIvaEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_ivaEjecutado");
            entity.Property(e => e.DocItemDocumentoIvaPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_ivaPlaneado");
            entity.Property(e => e.DocItemDocumentoPorcdescuento).HasColumnName("doc_itemDocumento_porcdescuento");
            entity.Property(e => e.DocItemDocumentoPorcdto).HasColumnName("doc_itemDocumento_porcdto");
            entity.Property(e => e.DocItemDocumentoPorcentajeCliente).HasColumnName("doc_itemDocumento_porcentajeCliente");
            entity.Property(e => e.DocItemDocumentoPorcentajeDistribuidor).HasColumnName("doc_itemDocumento_porcentajeDistribuidor");
            entity.Property(e => e.DocItemDocumentoPorcentajeFabricante).HasColumnName("doc_itemDocumento_porcentajeFabricante");
            entity.Property(e => e.DocItemDocumentoPorciva).HasColumnName("doc_itemDocumento_porciva");
            entity.Property(e => e.DocItemDocumentoSubtotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_subtotalEjecutado");
            entity.Property(e => e.DocItemDocumentoSubtotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_subtotalPlaneado");
            entity.Property(e => e.DocItemDocumentoTotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_totalEjecutado");
            entity.Property(e => e.DocItemDocumentoTotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_totalPlaneado");
            entity.Property(e => e.DocItemDocumentoValorUnitarioEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_valorUnitarioEjecutado");
            entity.Property(e => e.DocItemDocumentoValorUnitarioPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_valorUnitarioPlaneado");
            entity.Property(e => e.DocItemDocumentoVencimientoGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_itemDocumento_vencimientoGarantia_ff");
            entity.Property(e => e.DocItemDocumentoVrbase).HasColumnName("doc_itemDocumento_vrbase");
            entity.Property(e => e.DocItemDocumentoVrenlista).HasColumnName("doc_itemDocumento_vrenlista");
            entity.Property(e => e.DocumentoCatalogoTempario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento_catalogo.tempario");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogoTempario).HasColumnName("id_catalogo.tempario");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdItemDocumento).HasColumnName("id_itemDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoComentario>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documentoComentario");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Cerrada).HasColumnName("cerrada");
            entity.Property(e => e.Comentario)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("comentario");
            entity.Property(e => e.ConRespuesta).HasColumnName("conRespuesta");
            entity.Property(e => e.DocDocumentoComentarioPadreCerrada).HasColumnName("doc_documentoComentario_padre_cerrada");
            entity.Property(e => e.DocDocumentoComentarioPadreComentario)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documentoComentario_padre_comentario");
            entity.Property(e => e.DocDocumentoComentarioPadreConRespuesta).HasColumnName("doc_documentoComentario_padre_conRespuesta");
            entity.Property(e => e.DocDocumentoComentarioPadreDocumentoComentario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documentoComentario_padre_documentoComentario");
            entity.Property(e => e.DocDocumentoComentarioPadreDocumentoComentarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documentoComentario_padre_documentoComentario_codigo");
            entity.Property(e => e.DocDocumentoComentarioPadreFechaOrden)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documentoComentario_padre_fechaOrden");
            entity.Property(e => e.DocDocumentoComentarioPadreFechaOriginal)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documentoComentario_padre_fechaOriginal");
            entity.Property(e => e.DocDocumentoComentarioPadreFechaRecordarFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documentoComentario_padre_fechaRecordar_fh");
            entity.Property(e => e.DocDocumentoComentarioPadreFinalizado).HasColumnName("doc_documentoComentario_padre_finalizado");
            entity.Property(e => e.DocDocumentoComentarioPadreIdContacto).HasColumnName("doc_documentoComentario_padre_id_contacto");
            entity.Property(e => e.DocDocumentoComentarioPadreIdDocumento).HasColumnName("doc_documentoComentario_padre_id_documento");
            entity.Property(e => e.DocDocumentoComentarioPadreIdDocumentoComentario).HasColumnName("doc_documentoComentario_padre_id_documentoComentario");
            entity.Property(e => e.DocDocumentoComentarioPadreIdReporteTecnico).HasColumnName("doc_documentoComentario_padre_id_reporteTecnico");
            entity.Property(e => e.DocDocumentoComentarioPadreIdTarea).HasColumnName("doc_documentoComentario_padre_id_tarea");
            entity.Property(e => e.DocDocumentoComentarioPadreIdUsuario).HasColumnName("doc_documentoComentario_padre_id_usuario");
            entity.Property(e => e.DocDocumentoComentarioPadreIdUsuarioOriginal).HasColumnName("doc_documentoComentario_padre_id_usuarioOriginal");
            entity.Property(e => e.DocDocumentoComentarioPadreRecordar).HasColumnName("doc_documentoComentario_padre_recordar");
            entity.Property(e => e.DocDocumentoComentarioPadreRelevante).HasColumnName("doc_documentoComentario_padre_relevante");
            entity.Property(e => e.DocDocumentoCosto).HasColumnName("doc_documento_costo");
            entity.Property(e => e.DocDocumentoCostoPlaneado).HasColumnName("doc_documento_costoPlaneado");
            entity.Property(e => e.DocDocumentoDescuento).HasColumnName("doc_documento_descuento");
            entity.Property(e => e.DocDocumentoDescuentoPlaneado).HasColumnName("doc_documento_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento");
            entity.Property(e => e.DocDocumentoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento_codigo");
            entity.Property(e => e.DocDocumentoDocumentoNumero).HasColumnName("doc_documento_documento_numero");
            entity.Property(e => e.DocDocumentoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fecha_fh");
            entity.Property(e => e.DocDocumentoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoIdDocumento).HasColumnName("doc_documento_id_documento");
            entity.Property(e => e.DocDocumentoIdEstadoTipoDocumento).HasColumnName("doc_documento_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoIdMoneda).HasColumnName("doc_documento_id_moneda");
            entity.Property(e => e.DocDocumentoIdMotivoestado).HasColumnName("doc_documento_id_motivoestado");
            entity.Property(e => e.DocDocumentoIdPrioridadDocumento).HasColumnName("doc_documento_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoIdSubtipoDocumento).HasColumnName("doc_documento_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoIdTerceroCliente).HasColumnName("doc_documento_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoIdTerceroProveedor).HasColumnName("doc_documento_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoIdUsuarioAsignado).HasColumnName("doc_documento_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoIdUsuarioEnUso).HasColumnName("doc_documento_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoIva).HasColumnName("doc_documento_iva");
            entity.Property(e => e.DocDocumentoIvaPlaneado).HasColumnName("doc_documento_ivaPlaneado");
            entity.Property(e => e.DocDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_prefijo");
            entity.Property(e => e.DocDocumentoRentabilidad).HasColumnName("doc_documento_rentabilidad");
            entity.Property(e => e.DocDocumentoSubtotal).HasColumnName("doc_documento_subtotal");
            entity.Property(e => e.DocDocumentoSubtotalPlaneado).HasColumnName("doc_documento_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoTotal).HasColumnName("doc_documento_total");
            entity.Property(e => e.DocDocumentoTotalPlaneado).HasColumnName("doc_documento_totalPlaneado");
            entity.Property(e => e.DocDocumentoTrm).HasColumnName("doc_documento_trm");
            entity.Property(e => e.DocTareaFechaPlaneadaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_tarea_fechaPlaneada_fh");
            entity.Property(e => e.DocTareaIdCargo).HasColumnName("doc_tarea_id_cargo");
            entity.Property(e => e.DocTareaIdCatalogo).HasColumnName("doc_tarea_id_catalogo");
            entity.Property(e => e.DocTareaIdDocumento).HasColumnName("doc_tarea_id_documento");
            entity.Property(e => e.DocTareaPorcentajeAvance).HasColumnName("doc_tarea_porcentajeAvance");
            entity.Property(e => e.DocTareaTarea)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_tarea_tarea");
            entity.Property(e => e.DocTareaTareaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_tarea_tarea_codigo");
            entity.Property(e => e.DocumentoComentario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documentoComentario");
            entity.Property(e => e.DocumentoComentarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("documentoComentario_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaOrden)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaOrden");
            entity.Property(e => e.FechaOriginal)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaOriginal");
            entity.Property(e => e.FechaRecordarFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaRecordar_fh");
            entity.Property(e => e.Finalizado).HasColumnName("finalizado");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdContacto).HasColumnName("id_contacto");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdDocumentoComentario).HasColumnName("id_documentoComentario");
            entity.Property(e => e.IdReporteTecnico).HasColumnName("id_reporteTecnico");
            entity.Property(e => e.IdTarea).HasColumnName("id_tarea");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdUsuarioOriginal).HasColumnName("id_usuarioOriginal");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.OrtReporteTecnicoCompromisos)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_compromisos");
            entity.Property(e => e.OrtReporteTecnicoIdGasto).HasColumnName("ort_reporteTecnico_id_gasto");
            entity.Property(e => e.OrtReporteTecnicoNumero)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_numero");
            entity.Property(e => e.OrtReporteTecnicoRecomendaciones)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_recomendaciones");
            entity.Property(e => e.OrtReporteTecnicoReporteTecnico)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_reporteTecnico");
            entity.Property(e => e.OrtReporteTecnicoReporteTecnicoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_reporteTecnico_codigo");
            entity.Property(e => e.OrtReporteTecnicoTrabajos)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_trabajos");
            entity.Property(e => e.Recordar).HasColumnName("recordar");
            entity.Property(e => e.Relevante).HasColumnName("relevante");
            entity.Property(e => e.SegUsuarioAccesoActivo).HasColumnName("seg_usuario_accesoActivo");
            entity.Property(e => e.SegUsuarioAplicaRecargo).HasColumnName("seg_usuario_aplicaRecargo");
            entity.Property(e => e.SegUsuarioCambiarClave).HasColumnName("seg_usuario_cambiarClave");
            entity.Property(e => e.SegUsuarioClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_clave");
            entity.Property(e => e.SegUsuarioCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_costoHora");
            entity.Property(e => e.SegUsuarioCreoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_creo_nombre");
            entity.Property(e => e.SegUsuarioDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_direccion");
            entity.Property(e => e.SegUsuarioEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_email");
            entity.Property(e => e.SegUsuarioFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioHabilitado).HasColumnName("seg_usuario_habilitado");
            entity.Property(e => e.SegUsuarioIdCargo).HasColumnName("seg_usuario_id_cargo");
            entity.Property(e => e.SegUsuarioIdGrupo).HasColumnName("seg_usuario_id_grupo");
            entity.Property(e => e.SegUsuarioIdPerfil).HasColumnName("seg_usuario_id_perfil");
            entity.Property(e => e.SegUsuarioIdUsuario).HasColumnName("seg_usuario_id_usuario");
            entity.Property(e => e.SegUsuarioIdZona).HasColumnName("seg_usuario_id_zona");
            entity.Property(e => e.SegUsuarioIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_identificacion");
            entity.Property(e => e.SegUsuarioIntentosFallidos).HasColumnName("seg_usuario_intentosFallidos");
            entity.Property(e => e.SegUsuarioNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_nombre");
            entity.Property(e => e.SegUsuarioNumeroIngresos).HasColumnName("seg_usuario_numeroIngresos");
            entity.Property(e => e.SegUsuarioPorcentajeComision).HasColumnName("seg_usuario_porcentajeComision");
            entity.Property(e => e.SegUsuarioPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_preferencias");
            entity.Property(e => e.SegUsuarioProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_profesion");
            entity.Property(e => e.SegUsuarioSexo).HasColumnName("seg_usuario_sexo");
            entity.Property(e => e.SegUsuarioTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_telefono");
            entity.Property(e => e.SegUsuarioUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario");
            entity.Property(e => e.SegUsuarioUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario_codigo");
            entity.Property(e => e.TerContactoAccesoActivo).HasColumnName("ter_contacto_accesoActivo");
            entity.Property(e => e.TerContactoCargo)
                .HasMaxLength(100)
                .HasColumnName("ter_contacto_cargo");
            entity.Property(e => e.TerContactoCodigoAcceso)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_codigoAcceso");
            entity.Property(e => e.TerContactoContacto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_contacto");
            entity.Property(e => e.TerContactoContactoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_contacto_codigo");
            entity.Property(e => e.TerContactoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_Direccion");
            entity.Property(e => e.TerContactoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_Email");
            entity.Property(e => e.TerContactoFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_Fax");
            entity.Property(e => e.TerContactoIdCargoContacto).HasColumnName("ter_contacto_id_cargoContacto");
            entity.Property(e => e.TerContactoIdTercero).HasColumnName("ter_contacto_id_tercero");
            entity.Property(e => e.TerContactoIdUsuario).HasColumnName("ter_contacto_id_usuario");
            entity.Property(e => e.TerContactoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_telefono");
            entity.Property(e => e.TerContactoTelefonoMovil)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_telefonoMovil");
            entity.Property(e => e.TerTerceroCliente)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_cliente");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoContacto>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_contacto");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocDocumentoCosto).HasColumnName("doc_documento_costo");
            entity.Property(e => e.DocDocumentoCostoPlaneado).HasColumnName("doc_documento_costoPlaneado");
            entity.Property(e => e.DocDocumentoDescuento).HasColumnName("doc_documento_descuento");
            entity.Property(e => e.DocDocumentoDescuentoPlaneado).HasColumnName("doc_documento_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento");
            entity.Property(e => e.DocDocumentoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento_codigo");
            entity.Property(e => e.DocDocumentoDocumentoNumero).HasColumnName("doc_documento_documento_numero");
            entity.Property(e => e.DocDocumentoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fecha_fh");
            entity.Property(e => e.DocDocumentoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoIdDocumento).HasColumnName("doc_documento_id_documento");
            entity.Property(e => e.DocDocumentoIdEstadoTipoDocumento).HasColumnName("doc_documento_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoIdMoneda).HasColumnName("doc_documento_id_moneda");
            entity.Property(e => e.DocDocumentoIdMotivoestado).HasColumnName("doc_documento_id_motivoestado");
            entity.Property(e => e.DocDocumentoIdPrioridadDocumento).HasColumnName("doc_documento_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoIdSubtipoDocumento).HasColumnName("doc_documento_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoIdTerceroCliente).HasColumnName("doc_documento_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoIdTerceroProveedor).HasColumnName("doc_documento_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoIdUsuarioAsignado).HasColumnName("doc_documento_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoIdUsuarioEnUso).HasColumnName("doc_documento_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoIva).HasColumnName("doc_documento_iva");
            entity.Property(e => e.DocDocumentoIvaPlaneado).HasColumnName("doc_documento_ivaPlaneado");
            entity.Property(e => e.DocDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_prefijo");
            entity.Property(e => e.DocDocumentoRentabilidad).HasColumnName("doc_documento_rentabilidad");
            entity.Property(e => e.DocDocumentoSubtotal).HasColumnName("doc_documento_subtotal");
            entity.Property(e => e.DocDocumentoSubtotalPlaneado).HasColumnName("doc_documento_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoTotal).HasColumnName("doc_documento_total");
            entity.Property(e => e.DocDocumentoTotalPlaneado).HasColumnName("doc_documento_totalPlaneado");
            entity.Property(e => e.DocDocumentoTrm).HasColumnName("doc_documento_trm");
            entity.Property(e => e.DocumentoContacto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento_contacto");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdContacto).HasColumnName("id_contacto");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TerContactoAccesoActivo).HasColumnName("ter_contacto_accesoActivo");
            entity.Property(e => e.TerContactoCargo)
                .HasMaxLength(100)
                .HasColumnName("ter_contacto_cargo");
            entity.Property(e => e.TerContactoCodigoAcceso)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_codigoAcceso");
            entity.Property(e => e.TerContactoContacto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_contacto");
            entity.Property(e => e.TerContactoContactoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_contacto_codigo");
            entity.Property(e => e.TerContactoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_Direccion");
            entity.Property(e => e.TerContactoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_Email");
            entity.Property(e => e.TerContactoFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_Fax");
            entity.Property(e => e.TerContactoIdCargoContacto).HasColumnName("ter_contacto_id_cargoContacto");
            entity.Property(e => e.TerContactoIdTercero).HasColumnName("ter_contacto_id_tercero");
            entity.Property(e => e.TerContactoIdUsuario).HasColumnName("ter_contacto_id_usuario");
            entity.Property(e => e.TerContactoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_telefono");
            entity.Property(e => e.TerContactoTelefonoMovil)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_telefonoMovil");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoCotizacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_cotizacion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Cargo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cargo");
            entity.Property(e => e.Condiciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("condiciones");
            entity.Property(e => e.Contacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("contacto");
            entity.Property(e => e.DocDocumentoCotizacionCosto).HasColumnName("doc_documento_cotizacion_costo");
            entity.Property(e => e.DocDocumentoCotizacionCostoPlaneado).HasColumnName("doc_documento_cotizacion_costoPlaneado");
            entity.Property(e => e.DocDocumentoCotizacionDescuento).HasColumnName("doc_documento_cotizacion_descuento");
            entity.Property(e => e.DocDocumentoCotizacionDescuentoPlaneado).HasColumnName("doc_documento_cotizacion_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreCosto).HasColumnName("doc_documento_cotizacion_doc_documento_padre_costo");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreCostoPlaneado).HasColumnName("doc_documento_cotizacion_doc_documento_padre_costoPlaneado");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreDescuento).HasColumnName("doc_documento_cotizacion_doc_documento_padre_descuento");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreDescuentoPlaneado).HasColumnName("doc_documento_cotizacion_doc_documento_padre_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_doc_documento_padre_documento");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_doc_documento_padre_documento_codigo");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreDocumentoNumero).HasColumnName("doc_documento_cotizacion_doc_documento_padre_documento_numero");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_cotizacion_doc_documento_padre_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_cotizacion_doc_documento_padre_fecha_fh");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_cotizacion_doc_documento_padre_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_cotizacion_doc_documento_padre_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreIdDocumento).HasColumnName("doc_documento_cotizacion_doc_documento_padre_id_documento");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreIdEstadoTipoDocumento).HasColumnName("doc_documento_cotizacion_doc_documento_padre_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreIdMoneda).HasColumnName("doc_documento_cotizacion_doc_documento_padre_id_moneda");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreIdMotivoestado).HasColumnName("doc_documento_cotizacion_doc_documento_padre_id_motivoestado");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreIdPrioridadDocumento).HasColumnName("doc_documento_cotizacion_doc_documento_padre_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreIdSubtipoDocumento).HasColumnName("doc_documento_cotizacion_doc_documento_padre_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreIdTerceroCliente).HasColumnName("doc_documento_cotizacion_doc_documento_padre_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreIdTerceroProveedor).HasColumnName("doc_documento_cotizacion_doc_documento_padre_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreIdUsuarioAsignado).HasColumnName("doc_documento_cotizacion_doc_documento_padre_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreIdUsuarioEnUso).HasColumnName("doc_documento_cotizacion_doc_documento_padre_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreIva).HasColumnName("doc_documento_cotizacion_doc_documento_padre_iva");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreIvaPlaneado).HasColumnName("doc_documento_cotizacion_doc_documento_padre_ivaPlaneado");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadrePrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_doc_documento_padre_prefijo");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreRentabilidad).HasColumnName("doc_documento_cotizacion_doc_documento_padre_rentabilidad");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreSubtotal).HasColumnName("doc_documento_cotizacion_doc_documento_padre_subtotal");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreSubtotalPlaneado).HasColumnName("doc_documento_cotizacion_doc_documento_padre_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreTotal).HasColumnName("doc_documento_cotizacion_doc_documento_padre_total");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreTotalPlaneado).HasColumnName("doc_documento_cotizacion_doc_documento_padre_totalPlaneado");
            entity.Property(e => e.DocDocumentoCotizacionDocDocumentoPadreTrm).HasColumnName("doc_documento_cotizacion_doc_documento_padre_trm");
            entity.Property(e => e.DocDocumentoCotizacionDocEstadoTipoDocumentoAfectaIndicador).HasColumnName("doc_documento_cotizacion_doc_estadoTipoDocumento_afectaIndicador");
            entity.Property(e => e.DocDocumentoCotizacionDocEstadoTipoDocumentoAfectaInventario).HasColumnName("doc_documento_cotizacion_doc_estadoTipoDocumento_afectaInventario");
            entity.Property(e => e.DocDocumentoCotizacionDocEstadoTipoDocumentoColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_doc_estadoTipoDocumento_color");
            entity.Property(e => e.DocDocumentoCotizacionDocEstadoTipoDocumentoDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_doc_estadoTipoDocumento_descripcion");
            entity.Property(e => e.DocDocumentoCotizacionDocEstadoTipoDocumentoEditaDocumento).HasColumnName("doc_documento_cotizacion_doc_estadoTipoDocumento_editaDocumento");
            entity.Property(e => e.DocDocumentoCotizacionDocEstadoTipoDocumentoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_doc_estadoTipoDocumento_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoCotizacionDocEstadoTipoDocumentoEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_doc_estadoTipoDocumento_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocDocumentoCotizacionDocEstadoTipoDocumentoIdTipoDocumento).HasColumnName("doc_documento_cotizacion_doc_estadoTipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoCotizacionDocEstadoTipoDocumentoOrden).HasColumnName("doc_documento_cotizacion_doc_estadoTipoDocumento_orden");
            entity.Property(e => e.DocDocumentoCotizacionDocEstadoTipoDocumentoPuedeRegresar).HasColumnName("doc_documento_cotizacion_doc_estadoTipoDocumento_puedeRegresar");
            entity.Property(e => e.DocDocumentoCotizacionDocMotivoestadoIdEstadoTipoDocumento).HasColumnName("doc_documento_cotizacion_doc_motivoestado_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoCotizacionDocMotivoestadoMotivoestado)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_doc_motivoestado_motivoestado");
            entity.Property(e => e.DocDocumentoCotizacionDocMotivoestadoMotivoestadoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_doc_motivoestado_motivoestado_codigo");
            entity.Property(e => e.DocDocumentoCotizacionDocPrioridadDocumentoIdEstrategiaPrioridad).HasColumnName("doc_documento_cotizacion_doc_prioridadDocumento_id_estrategiaPrioridad");
            entity.Property(e => e.DocDocumentoCotizacionDocPrioridadDocumentoIdTipoDocumento).HasColumnName("doc_documento_cotizacion_doc_prioridadDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoCotizacionDocPrioridadDocumentoOrden).HasColumnName("doc_documento_cotizacion_doc_prioridadDocumento_orden");
            entity.Property(e => e.DocDocumentoCotizacionDocPrioridadDocumentoPrioridadDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_doc_prioridadDocumento_prioridadDocumento");
            entity.Property(e => e.DocDocumentoCotizacionDocPrioridadDocumentoPrioridadDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_doc_prioridadDocumento_prioridadDocumento_codigo");
            entity.Property(e => e.DocDocumentoCotizacionDocPrioridadDocumentoTiempoRespuesta).HasColumnName("doc_documento_cotizacion_doc_prioridadDocumento_tiempoRespuesta");
            entity.Property(e => e.DocDocumentoCotizacionDocSubtipoDocumentoBloquearDespacho).HasColumnName("doc_documento_cotizacion_doc_subtipoDocumento_bloquearDespacho");
            entity.Property(e => e.DocDocumentoCotizacionDocSubtipoDocumentoCargarSolicitante).HasColumnName("doc_documento_cotizacion_doc_subtipoDocumento_cargarSolicitante");
            entity.Property(e => e.DocDocumentoCotizacionDocSubtipoDocumentoCerrarSol).HasColumnName("doc_documento_cotizacion_doc_subtipoDocumento_cerrarSol");
            entity.Property(e => e.DocDocumentoCotizacionDocSubtipoDocumentoConsecutivo).HasColumnName("doc_documento_cotizacion_doc_subtipoDocumento_consecutivo");
            entity.Property(e => e.DocDocumentoCotizacionDocSubtipoDocumentoIdTipoDocumento).HasColumnName("doc_documento_cotizacion_doc_subtipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoCotizacionDocSubtipoDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_doc_subtipoDocumento_prefijo");
            entity.Property(e => e.DocDocumentoCotizacionDocSubtipoDocumentoProgramarPlaneadas).HasColumnName("doc_documento_cotizacion_doc_subtipoDocumento_programarPlaneadas");
            entity.Property(e => e.DocDocumentoCotizacionDocSubtipoDocumentoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_doc_subtipoDocumento_subtipoDocumento");
            entity.Property(e => e.DocDocumentoCotizacionDocSubtipoDocumentoSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_doc_subtipoDocumento_subtipoDocumento_codigo");
            entity.Property(e => e.DocDocumentoCotizacionDocSubtipoDocumentoValUrgente).HasColumnName("doc_documento_cotizacion_doc_subtipoDocumento_valUrgente");
            entity.Property(e => e.DocDocumentoCotizacionDocSubtipoDocumentoVerCentroCosto).HasColumnName("doc_documento_cotizacion_doc_subtipoDocumento_verCentroCosto");
            entity.Property(e => e.DocDocumentoCotizacionDocSubtipoDocumentoVerIncoterm).HasColumnName("doc_documento_cotizacion_doc_subtipoDocumento_verIncoterm");
            entity.Property(e => e.DocDocumentoCotizacionDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_documento_codigo");
            entity.Property(e => e.DocDocumentoCotizacionDocumentoNumero).HasColumnName("doc_documento_cotizacion_documento_numero");
            entity.Property(e => e.DocDocumentoCotizacionFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_cotizacion_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoCotizacionFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_cotizacion_fecha_fh");
            entity.Property(e => e.DocDocumentoCotizacionFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_cotizacion_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoCotizacionFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_cotizacion_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoCotizacionGenMonedaAbreviatura)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_gen_moneda_abreviatura");
            entity.Property(e => e.DocDocumentoCotizacionGenMonedaCambio).HasColumnName("doc_documento_cotizacion_gen_moneda_cambio");
            entity.Property(e => e.DocDocumentoCotizacionGenMonedaMoneda)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_gen_moneda_moneda");
            entity.Property(e => e.DocDocumentoCotizacionGenMonedaMonedaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_gen_moneda_moneda_codigo");
            entity.Property(e => e.DocDocumentoCotizacionIdDocumento).HasColumnName("doc_documento_cotizacion_id_documento");
            entity.Property(e => e.DocDocumentoCotizacionIdEstadoTipoDocumento).HasColumnName("doc_documento_cotizacion_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoCotizacionIdMoneda).HasColumnName("doc_documento_cotizacion_id_moneda");
            entity.Property(e => e.DocDocumentoCotizacionIdMotivoestado).HasColumnName("doc_documento_cotizacion_id_motivoestado");
            entity.Property(e => e.DocDocumentoCotizacionIdPrioridadDocumento).HasColumnName("doc_documento_cotizacion_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoCotizacionIdSubtipoDocumento).HasColumnName("doc_documento_cotizacion_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoCotizacionIdTerceroCliente).HasColumnName("doc_documento_cotizacion_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoCotizacionIdTerceroProveedor).HasColumnName("doc_documento_cotizacion_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoCotizacionIdUsuarioAsignado).HasColumnName("doc_documento_cotizacion_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoCotizacionIdUsuarioEnUso).HasColumnName("doc_documento_cotizacion_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoCotizacionIva).HasColumnName("doc_documento_cotizacion_iva");
            entity.Property(e => e.DocDocumentoCotizacionIvaPlaneado).HasColumnName("doc_documento_cotizacion_ivaPlaneado");
            entity.Property(e => e.DocDocumentoCotizacionPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_prefijo");
            entity.Property(e => e.DocDocumentoCotizacionRentabilidad).HasColumnName("doc_documento_cotizacion_rentabilidad");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoAccesoActivo).HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_accesoActivo");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoAplicaRecargo).HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_aplicaRecargo");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoCambiarClave).HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_cambiarClave");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_clave");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoCostoHora)
                .HasColumnType("money")
                .HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_costoHora");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_direccion");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_email");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_fechaIntentoFallido_fh");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_fechaUltimoCambioClave_fh");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_fechaUltimoIngreso_fh");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoHabilitado).HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_habilitado");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoIdCargo).HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_id_cargo");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoIdGrupo).HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_id_grupo");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoIdPerfil).HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_id_perfil");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoIdUsuario).HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_id_usuario");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoIdZona).HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_id_zona");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_identificacion");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoIntentosFallidos).HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_intentosFallidos");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_nombre");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoNumeroIngresos).HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_numeroIngresos");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoPorcentajeComision).HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_porcentajeComision");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoPreferencias)
                .HasColumnType("image")
                .HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_preferencias");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_profesion");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoSexo).HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_sexo");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_telefono");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_usuario");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioAsignadoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_seg_usuario_asignado_usuario_codigo");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoAccesoActivo).HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_accesoActivo");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoAplicaRecargo).HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_aplicaRecargo");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoCambiarClave).HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_cambiarClave");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_clave");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoCostoHora)
                .HasColumnType("money")
                .HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_costoHora");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_direccion");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_email");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_fechaIntentoFallido_fh");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_fechaUltimoCambioClave_fh");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_fechaUltimoIngreso_fh");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoHabilitado).HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_habilitado");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoIdCargo).HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_id_cargo");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoIdGrupo).HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_id_grupo");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoIdPerfil).HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_id_perfil");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoIdUsuario).HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_id_usuario");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoIdZona).HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_id_zona");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_identificacion");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoIntentosFallidos).HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_intentosFallidos");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_nombre");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoNumeroIngresos).HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_numeroIngresos");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoPorcentajeComision).HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_porcentajeComision");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoPreferencias)
                .HasColumnType("image")
                .HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_preferencias");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_profesion");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoSexo).HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_sexo");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_telefono");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_usuario");
            entity.Property(e => e.DocDocumentoCotizacionSegUsuarioEnUsoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_seg_usuario_enUso_usuario_codigo");
            entity.Property(e => e.DocDocumentoCotizacionSubtotal).HasColumnName("doc_documento_cotizacion_subtotal");
            entity.Property(e => e.DocDocumentoCotizacionSubtotalPlaneado).HasColumnName("doc_documento_cotizacion_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroClienteClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_cliente_clasificacion");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroClienteContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_cliente_contacto");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroClienteDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_cliente_direccion");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroClienteEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_cliente_email");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroClienteEsCliente).HasColumnName("doc_documento_cotizacion_ter_tercero_cliente_esCliente");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroClienteEsEmpresaPropia).HasColumnName("doc_documento_cotizacion_ter_tercero_cliente_esEmpresaPropia");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroClienteEsFabricante).HasColumnName("doc_documento_cotizacion_ter_tercero_cliente_esFabricante");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroClienteEsProspecto).HasColumnName("doc_documento_cotizacion_ter_tercero_cliente_esProspecto");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroClienteEsProveedor).HasColumnName("doc_documento_cotizacion_ter_tercero_cliente_esProveedor");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroClienteEsTransportador).HasColumnName("doc_documento_cotizacion_ter_tercero_cliente_esTransportador");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroClienteFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_cliente_fax");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroClienteIdEstadoTercero).HasColumnName("doc_documento_cotizacion_ter_tercero_cliente_id_estadoTercero");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroClienteIdNaturalezaTercero).HasColumnName("doc_documento_cotizacion_ter_tercero_cliente_id_naturalezaTercero");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroClienteIdZona).HasColumnName("doc_documento_cotizacion_ter_tercero_cliente_id_zona");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroClienteNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_cliente_notas");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroClienteRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_cliente_representante");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroClienteTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_cliente_telefono");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroClienteTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_cliente_tercero");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroClienteTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_cliente_tercero_codigo");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroClienteTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_cliente_tercero_nit");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroClienteTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_cliente_tercero_nombreCorto");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroClienteWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_cliente_website");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroProveedorClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_proveedor_clasificacion");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroProveedorContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_proveedor_contacto");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroProveedorDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_proveedor_direccion");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroProveedorEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_proveedor_email");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroProveedorEsCliente).HasColumnName("doc_documento_cotizacion_ter_tercero_proveedor_esCliente");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroProveedorEsEmpresaPropia).HasColumnName("doc_documento_cotizacion_ter_tercero_proveedor_esEmpresaPropia");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroProveedorEsFabricante).HasColumnName("doc_documento_cotizacion_ter_tercero_proveedor_esFabricante");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroProveedorEsProspecto).HasColumnName("doc_documento_cotizacion_ter_tercero_proveedor_esProspecto");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroProveedorEsProveedor).HasColumnName("doc_documento_cotizacion_ter_tercero_proveedor_esProveedor");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroProveedorEsTransportador).HasColumnName("doc_documento_cotizacion_ter_tercero_proveedor_esTransportador");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroProveedorFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_proveedor_fax");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroProveedorIdEstadoTercero).HasColumnName("doc_documento_cotizacion_ter_tercero_proveedor_id_estadoTercero");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroProveedorIdNaturalezaTercero).HasColumnName("doc_documento_cotizacion_ter_tercero_proveedor_id_naturalezaTercero");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroProveedorIdZona).HasColumnName("doc_documento_cotizacion_ter_tercero_proveedor_id_zona");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroProveedorNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_proveedor_notas");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroProveedorRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_proveedor_representante");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroProveedorTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_proveedor_telefono");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroProveedorTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_proveedor_tercero");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroProveedorTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_proveedor_tercero_codigo");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroProveedorTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_proveedor_tercero_nit");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroProveedorTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_proveedor_tercero_nombreCorto");
            entity.Property(e => e.DocDocumentoCotizacionTerTerceroProveedorWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_ter_tercero_proveedor_website");
            entity.Property(e => e.DocDocumentoCotizacionTotal).HasColumnName("doc_documento_cotizacion_total");
            entity.Property(e => e.DocDocumentoCotizacionTotalPlaneado).HasColumnName("doc_documento_cotizacion_totalPlaneado");
            entity.Property(e => e.DocDocumentoCotizacionTrm).HasColumnName("doc_documento_cotizacion_trm");
            entity.Property(e => e.DocumentoCotizacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.cotizacion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.Encabezado)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("encabezado");
            entity.Property(e => e.EquEquipoCosto)
                .HasColumnType("money")
                .HasColumnName("equ_equipo_costo");
            entity.Property(e => e.EquEquipoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo");
            entity.Property(e => e.EquEquipoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_codigo");
            entity.Property(e => e.EquEquipoEquipoSerial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_serial");
            entity.Property(e => e.EquEquipoFechaImportacionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaImportacion_ff");
            entity.Property(e => e.EquEquipoFechaPuestaMarchaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaPuestaMarcha_fh");
            entity.Property(e => e.EquEquipoGarantiaCancelada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_garantiaCancelada");
            entity.Property(e => e.EquEquipoHorasGarantia).HasColumnName("equ_equipo_horasGarantia");
            entity.Property(e => e.EquEquipoHorometroActual).HasColumnName("equ_equipo_horometroActual");
            entity.Property(e => e.EquEquipoIdCatalogoEquipo).HasColumnName("equ_equipo_id_catalogo.equipo");
            entity.Property(e => e.EquEquipoIdCentroCosto).HasColumnName("equ_equipo_id_centroCosto");
            entity.Property(e => e.EquEquipoIdEquipo).HasColumnName("equ_equipo_id_equipo");
            entity.Property(e => e.EquEquipoIdEstadoEquipo).HasColumnName("equ_equipo_id_estadoEquipo");
            entity.Property(e => e.EquEquipoIdSistema).HasColumnName("equ_equipo_id_sistema");
            entity.Property(e => e.EquEquipoIdSucursal).HasColumnName("equ_equipo_id_sucursal");
            entity.Property(e => e.EquEquipoIdTercero).HasColumnName("equ_equipo_id_tercero");
            entity.Property(e => e.EquEquipoIdTerceroComprador).HasColumnName("equ_equipo_id_tercero_comprador");
            entity.Property(e => e.EquEquipoIdTerceroServicio).HasColumnName("equ_equipo_id_tercero_servicio");
            entity.Property(e => e.EquEquipoIdVersionEquipo).HasColumnName("equ_equipo_id_versionEquipo");
            entity.Property(e => e.EquEquipoIdZona).HasColumnName("equ_equipo_id_zona");
            entity.Property(e => e.EquEquipoNombreContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_nombreContacto");
            entity.Property(e => e.EquEquipoObservaciones)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_observaciones");
            entity.Property(e => e.EquEquipoPromedioHoras).HasColumnName("equ_equipo_promedioHoras");
            entity.Property(e => e.EquEquipoTelefonoContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_telefonoContacto");
            entity.Property(e => e.EquEquipoUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_ubicacion");
            entity.Property(e => e.EquEquipoUltimaLecturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_ultimaLectura_fh");
            entity.Property(e => e.EquEquipoVencimientoGarantiaDistribuidorFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaDistribuidor_ff");
            entity.Property(e => e.EquEquipoVencimientoGarantiaFabricaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaFabrica_ff");
            entity.Property(e => e.EsAiu).HasColumnName("esAIU");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuarioAsesor).HasColumnName("id_usuario_asesor");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Notas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("notas");
            entity.Property(e => e.ProcentajeA).HasColumnName("procentajeA");
            entity.Property(e => e.ProcentajeI).HasColumnName("procentajeI");
            entity.Property(e => e.ProcentajeU).HasColumnName("procentajeU");
            entity.Property(e => e.SegUsuarioAsesorAccesoActivo).HasColumnName("seg_usuario_asesor_accesoActivo");
            entity.Property(e => e.SegUsuarioAsesorAplicaRecargo).HasColumnName("seg_usuario_asesor_aplicaRecargo");
            entity.Property(e => e.SegUsuarioAsesorCambiarClave).HasColumnName("seg_usuario_asesor_cambiarClave");
            entity.Property(e => e.SegUsuarioAsesorClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asesor_clave");
            entity.Property(e => e.SegUsuarioAsesorCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_asesor_costoHora");
            entity.Property(e => e.SegUsuarioAsesorDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asesor_direccion");
            entity.Property(e => e.SegUsuarioAsesorEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asesor_email");
            entity.Property(e => e.SegUsuarioAsesorFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_asesor_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioAsesorFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_asesor_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioAsesorFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_asesor_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioAsesorHabilitado).HasColumnName("seg_usuario_asesor_habilitado");
            entity.Property(e => e.SegUsuarioAsesorIdCargo).HasColumnName("seg_usuario_asesor_id_cargo");
            entity.Property(e => e.SegUsuarioAsesorIdGrupo).HasColumnName("seg_usuario_asesor_id_grupo");
            entity.Property(e => e.SegUsuarioAsesorIdPerfil).HasColumnName("seg_usuario_asesor_id_perfil");
            entity.Property(e => e.SegUsuarioAsesorIdUsuario).HasColumnName("seg_usuario_asesor_id_usuario");
            entity.Property(e => e.SegUsuarioAsesorIdZona).HasColumnName("seg_usuario_asesor_id_zona");
            entity.Property(e => e.SegUsuarioAsesorIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asesor_identificacion");
            entity.Property(e => e.SegUsuarioAsesorIntentosFallidos).HasColumnName("seg_usuario_asesor_intentosFallidos");
            entity.Property(e => e.SegUsuarioAsesorNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asesor_nombre");
            entity.Property(e => e.SegUsuarioAsesorNumeroIngresos).HasColumnName("seg_usuario_asesor_numeroIngresos");
            entity.Property(e => e.SegUsuarioAsesorPorcentajeComision).HasColumnName("seg_usuario_asesor_porcentajeComision");
            entity.Property(e => e.SegUsuarioAsesorPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_asesor_preferencias");
            entity.Property(e => e.SegUsuarioAsesorProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asesor_profesion");
            entity.Property(e => e.SegUsuarioAsesorSexo).HasColumnName("seg_usuario_asesor_sexo");
            entity.Property(e => e.SegUsuarioAsesorTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asesor_telefono");
            entity.Property(e => e.SegUsuarioAsesorUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asesor_usuario");
            entity.Property(e => e.SegUsuarioAsesorUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asesor_usuario_codigo");
            entity.Property(e => e.Telefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("telefono");
            entity.Property(e => e.TerSucursalCodigorecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_codigorecursiva");
            entity.Property(e => e.TerSucursalContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_contacto");
            entity.Property(e => e.TerSucursalDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Direccion");
            entity.Property(e => e.TerSucursalEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Email");
            entity.Property(e => e.TerSucursalFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Fax");
            entity.Property(e => e.TerSucursalIdEstadoTercero).HasColumnName("ter_sucursal_id_estadoTercero");
            entity.Property(e => e.TerSucursalIdSucursal).HasColumnName("ter_sucursal_id_sucursal");
            entity.Property(e => e.TerSucursalIdTercero).HasColumnName("ter_sucursal_id_tercero");
            entity.Property(e => e.TerSucursalIdUsuarioAsesor).HasColumnName("ter_sucursal_id_usuario_asesor");
            entity.Property(e => e.TerSucursalIdUsuarioTecnico).HasColumnName("ter_sucursal_id_usuario_tecnico");
            entity.Property(e => e.TerSucursalIdZona).HasColumnName("ter_sucursal_id_zona");
            entity.Property(e => e.TerSucursalParaAlquiler).HasColumnName("ter_sucursal_paraAlquiler");
            entity.Property(e => e.TerSucursalParaSoporte).HasColumnName("ter_sucursal_paraSoporte");
            entity.Property(e => e.TerSucursalParaVenta).HasColumnName("ter_sucursal_paraVenta");
            entity.Property(e => e.TerSucursalSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal");
            entity.Property(e => e.TerSucursalSucursalCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal_codigo");
            entity.Property(e => e.TerSucursalTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_telefono");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Validez).HasColumnName("validez");
            entity.Property(e => e.ValorA).HasColumnName("valorA");
            entity.Property(e => e.ValorI).HasColumnName("valorI");
            entity.Property(e => e.ValorU).HasColumnName("valorU");
            entity.Property(e => e.Version).HasColumnName("version");
        });

        modelBuilder.Entity<ViewDocDocumentoCotizacionCondicion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_cotizacion_condicion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocCondicionCondicion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_condicion_condicion");
            entity.Property(e => e.DocCondicionCondicionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_condicion_condicion_codigo");
            entity.Property(e => e.DocCondicionTextoLibre).HasColumnName("doc_condicion_textoLibre");
            entity.Property(e => e.DocDocumentoCotizacionCargo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.cotizacion_cargo");
            entity.Property(e => e.DocDocumentoCotizacionCondiciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.cotizacion_condiciones");
            entity.Property(e => e.DocDocumentoCotizacionContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.cotizacion_contacto");
            entity.Property(e => e.DocDocumentoCotizacionCosto).HasColumnName("doc_documento_cotizacion_costo");
            entity.Property(e => e.DocDocumentoCotizacionCostoPlaneado).HasColumnName("doc_documento_cotizacion_costoPlaneado");
            entity.Property(e => e.DocDocumentoCotizacionDescuento).HasColumnName("doc_documento_cotizacion_descuento");
            entity.Property(e => e.DocDocumentoCotizacionDescuentoPlaneado).HasColumnName("doc_documento_cotizacion_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoCotizacionDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_documento_codigo");
            entity.Property(e => e.DocDocumentoCotizacionDocumentoCotizacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.cotizacion_documento.cotizacion");
            entity.Property(e => e.DocDocumentoCotizacionDocumentoNumero).HasColumnName("doc_documento_cotizacion_documento_numero");
            entity.Property(e => e.DocDocumentoCotizacionEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.cotizacion_email");
            entity.Property(e => e.DocDocumentoCotizacionEncabezado)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.cotizacion_encabezado");
            entity.Property(e => e.DocDocumentoCotizacionEsAiu).HasColumnName("doc_documento.cotizacion_esAIU");
            entity.Property(e => e.DocDocumentoCotizacionFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_cotizacion_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoCotizacionFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_cotizacion_fecha_fh");
            entity.Property(e => e.DocDocumentoCotizacionFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_cotizacion_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoCotizacionFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_cotizacion_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoCotizacionIdDocumento).HasColumnName("doc_documento_cotizacion_id_documento");
            entity.Property(e => e.DocDocumentoCotizacionIdEquipo).HasColumnName("doc_documento.cotizacion_id_equipo");
            entity.Property(e => e.DocDocumentoCotizacionIdEstadoTipoDocumento).HasColumnName("doc_documento_cotizacion_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoCotizacionIdMoneda).HasColumnName("doc_documento_cotizacion_id_moneda");
            entity.Property(e => e.DocDocumentoCotizacionIdMotivoestado).HasColumnName("doc_documento_cotizacion_id_motivoestado");
            entity.Property(e => e.DocDocumentoCotizacionIdPrioridadDocumento).HasColumnName("doc_documento_cotizacion_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoCotizacionIdSubtipoDocumento).HasColumnName("doc_documento_cotizacion_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoCotizacionIdSucursal).HasColumnName("doc_documento.cotizacion_id_sucursal");
            entity.Property(e => e.DocDocumentoCotizacionIdTerceroCliente).HasColumnName("doc_documento_cotizacion_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoCotizacionIdTerceroProveedor).HasColumnName("doc_documento_cotizacion_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoCotizacionIdUsuarioAsesor).HasColumnName("doc_documento.cotizacion_id_usuario_asesor");
            entity.Property(e => e.DocDocumentoCotizacionIdUsuarioAsignado).HasColumnName("doc_documento_cotizacion_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoCotizacionIdUsuarioEnUso).HasColumnName("doc_documento_cotizacion_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoCotizacionIva).HasColumnName("doc_documento_cotizacion_iva");
            entity.Property(e => e.DocDocumentoCotizacionIvaPlaneado).HasColumnName("doc_documento_cotizacion_ivaPlaneado");
            entity.Property(e => e.DocDocumentoCotizacionNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.cotizacion_notas");
            entity.Property(e => e.DocDocumentoCotizacionPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_cotizacion_prefijo");
            entity.Property(e => e.DocDocumentoCotizacionProcentajeA).HasColumnName("doc_documento.cotizacion_procentajeA");
            entity.Property(e => e.DocDocumentoCotizacionProcentajeI).HasColumnName("doc_documento.cotizacion_procentajeI");
            entity.Property(e => e.DocDocumentoCotizacionProcentajeU).HasColumnName("doc_documento.cotizacion_procentajeU");
            entity.Property(e => e.DocDocumentoCotizacionRentabilidad).HasColumnName("doc_documento_cotizacion_rentabilidad");
            entity.Property(e => e.DocDocumentoCotizacionSubtotal).HasColumnName("doc_documento_cotizacion_subtotal");
            entity.Property(e => e.DocDocumentoCotizacionSubtotalPlaneado).HasColumnName("doc_documento_cotizacion_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoCotizacionTotal).HasColumnName("doc_documento_cotizacion_total");
            entity.Property(e => e.DocDocumentoCotizacionTotalPlaneado).HasColumnName("doc_documento_cotizacion_totalPlaneado");
            entity.Property(e => e.DocDocumentoCotizacionTrm).HasColumnName("doc_documento_cotizacion_trm");
            entity.Property(e => e.DocDocumentoCotizacionValidez).HasColumnName("doc_documento.cotizacion_validez");
            entity.Property(e => e.DocDocumentoCotizacionValorA).HasColumnName("doc_documento.cotizacion_valorA");
            entity.Property(e => e.DocDocumentoCotizacionValorI).HasColumnName("doc_documento.cotizacion_valorI");
            entity.Property(e => e.DocDocumentoCotizacionValorU).HasColumnName("doc_documento.cotizacion_valorU");
            entity.Property(e => e.DocDocumentoCotizacionVersion).HasColumnName("doc_documento.cotizacion_version");
            entity.Property(e => e.DocOpcionCondicionIdCondicion).HasColumnName("doc_opcionCondicion_id_condicion");
            entity.Property(e => e.DocOpcionCondicionOpcionCondicion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_opcionCondicion_opcionCondicion");
            entity.Property(e => e.DocOpcionCondicionOpcionCondicionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_opcionCondicion_opcionCondicion_codigo");
            entity.Property(e => e.DocumentoCotizacionCondicion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.cotizacion_condicion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCondicion).HasColumnName("id_condicion");
            entity.Property(e => e.IdDocumentoCotizacion).HasColumnName("id_documento.cotizacion");
            entity.Property(e => e.IdOpcionCondicion).HasColumnName("id_opcionCondicion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Imprimir).HasColumnName("imprimir");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoEntradum>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_entrada");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Asunto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("asunto");
            entity.Property(e => e.DireccionEntrega)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("direccionEntrega");
            entity.Property(e => e.DocDocumentoEntradaCosto).HasColumnName("doc_documento_entrada_costo");
            entity.Property(e => e.DocDocumentoEntradaCostoPlaneado).HasColumnName("doc_documento_entrada_costoPlaneado");
            entity.Property(e => e.DocDocumentoEntradaDescuento).HasColumnName("doc_documento_entrada_descuento");
            entity.Property(e => e.DocDocumentoEntradaDescuentoPlaneado).HasColumnName("doc_documento_entrada_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreCosto).HasColumnName("doc_documento_entrada_doc_documento_padre_costo");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreCostoPlaneado).HasColumnName("doc_documento_entrada_doc_documento_padre_costoPlaneado");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreDescuento).HasColumnName("doc_documento_entrada_doc_documento_padre_descuento");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreDescuentoPlaneado).HasColumnName("doc_documento_entrada_doc_documento_padre_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_doc_documento_padre_documento");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_doc_documento_padre_documento_codigo");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreDocumentoNumero).HasColumnName("doc_documento_entrada_doc_documento_padre_documento_numero");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_entrada_doc_documento_padre_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_entrada_doc_documento_padre_fecha_fh");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_entrada_doc_documento_padre_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_entrada_doc_documento_padre_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreIdDocumento).HasColumnName("doc_documento_entrada_doc_documento_padre_id_documento");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreIdEstadoTipoDocumento).HasColumnName("doc_documento_entrada_doc_documento_padre_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreIdMoneda).HasColumnName("doc_documento_entrada_doc_documento_padre_id_moneda");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreIdMotivoestado).HasColumnName("doc_documento_entrada_doc_documento_padre_id_motivoestado");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreIdPrioridadDocumento).HasColumnName("doc_documento_entrada_doc_documento_padre_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreIdSubtipoDocumento).HasColumnName("doc_documento_entrada_doc_documento_padre_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreIdTerceroCliente).HasColumnName("doc_documento_entrada_doc_documento_padre_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreIdTerceroProveedor).HasColumnName("doc_documento_entrada_doc_documento_padre_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreIdUsuarioAsignado).HasColumnName("doc_documento_entrada_doc_documento_padre_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreIdUsuarioEnUso).HasColumnName("doc_documento_entrada_doc_documento_padre_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreIva).HasColumnName("doc_documento_entrada_doc_documento_padre_iva");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreIvaPlaneado).HasColumnName("doc_documento_entrada_doc_documento_padre_ivaPlaneado");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadrePrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_doc_documento_padre_prefijo");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreRentabilidad).HasColumnName("doc_documento_entrada_doc_documento_padre_rentabilidad");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreSubtotal).HasColumnName("doc_documento_entrada_doc_documento_padre_subtotal");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreSubtotalPlaneado).HasColumnName("doc_documento_entrada_doc_documento_padre_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreTotal).HasColumnName("doc_documento_entrada_doc_documento_padre_total");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreTotalPlaneado).HasColumnName("doc_documento_entrada_doc_documento_padre_totalPlaneado");
            entity.Property(e => e.DocDocumentoEntradaDocDocumentoPadreTrm).HasColumnName("doc_documento_entrada_doc_documento_padre_trm");
            entity.Property(e => e.DocDocumentoEntradaDocEstadoTipoDocumentoAfectaIndicador).HasColumnName("doc_documento_entrada_doc_estadoTipoDocumento_afectaIndicador");
            entity.Property(e => e.DocDocumentoEntradaDocEstadoTipoDocumentoAfectaInventario).HasColumnName("doc_documento_entrada_doc_estadoTipoDocumento_afectaInventario");
            entity.Property(e => e.DocDocumentoEntradaDocEstadoTipoDocumentoColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_doc_estadoTipoDocumento_color");
            entity.Property(e => e.DocDocumentoEntradaDocEstadoTipoDocumentoDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_doc_estadoTipoDocumento_descripcion");
            entity.Property(e => e.DocDocumentoEntradaDocEstadoTipoDocumentoEditaDocumento).HasColumnName("doc_documento_entrada_doc_estadoTipoDocumento_editaDocumento");
            entity.Property(e => e.DocDocumentoEntradaDocEstadoTipoDocumentoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_doc_estadoTipoDocumento_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoEntradaDocEstadoTipoDocumentoEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_doc_estadoTipoDocumento_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocDocumentoEntradaDocEstadoTipoDocumentoIdTipoDocumento).HasColumnName("doc_documento_entrada_doc_estadoTipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoEntradaDocEstadoTipoDocumentoOrden).HasColumnName("doc_documento_entrada_doc_estadoTipoDocumento_orden");
            entity.Property(e => e.DocDocumentoEntradaDocEstadoTipoDocumentoPuedeRegresar).HasColumnName("doc_documento_entrada_doc_estadoTipoDocumento_puedeRegresar");
            entity.Property(e => e.DocDocumentoEntradaDocMotivoestadoIdEstadoTipoDocumento).HasColumnName("doc_documento_entrada_doc_motivoestado_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoEntradaDocMotivoestadoMotivoestado)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_doc_motivoestado_motivoestado");
            entity.Property(e => e.DocDocumentoEntradaDocMotivoestadoMotivoestadoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_doc_motivoestado_motivoestado_codigo");
            entity.Property(e => e.DocDocumentoEntradaDocPrioridadDocumentoIdEstrategiaPrioridad).HasColumnName("doc_documento_entrada_doc_prioridadDocumento_id_estrategiaPrioridad");
            entity.Property(e => e.DocDocumentoEntradaDocPrioridadDocumentoIdTipoDocumento).HasColumnName("doc_documento_entrada_doc_prioridadDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoEntradaDocPrioridadDocumentoPrioridadDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_doc_prioridadDocumento_prioridadDocumento");
            entity.Property(e => e.DocDocumentoEntradaDocPrioridadDocumentoPrioridadDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_doc_prioridadDocumento_prioridadDocumento_codigo");
            entity.Property(e => e.DocDocumentoEntradaDocPrioridadDocumentoTiempoRespuesta).HasColumnName("doc_documento_entrada_doc_prioridadDocumento_tiempoRespuesta");
            entity.Property(e => e.DocDocumentoEntradaDocSubtipoDocumentoBloquearDespacho).HasColumnName("doc_documento_entrada_doc_subtipoDocumento_bloquearDespacho");
            entity.Property(e => e.DocDocumentoEntradaDocSubtipoDocumentoCargarSolicitante).HasColumnName("doc_documento_entrada_doc_subtipoDocumento_cargarSolicitante");
            entity.Property(e => e.DocDocumentoEntradaDocSubtipoDocumentoCerrarSol).HasColumnName("doc_documento_entrada_doc_subtipoDocumento_cerrarSol");
            entity.Property(e => e.DocDocumentoEntradaDocSubtipoDocumentoConsecutivo).HasColumnName("doc_documento_entrada_doc_subtipoDocumento_consecutivo");
            entity.Property(e => e.DocDocumentoEntradaDocSubtipoDocumentoIdTipoDocumento).HasColumnName("doc_documento_entrada_doc_subtipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoEntradaDocSubtipoDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_doc_subtipoDocumento_prefijo");
            entity.Property(e => e.DocDocumentoEntradaDocSubtipoDocumentoProgramarPlaneadas).HasColumnName("doc_documento_entrada_doc_subtipoDocumento_programarPlaneadas");
            entity.Property(e => e.DocDocumentoEntradaDocSubtipoDocumentoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_doc_subtipoDocumento_subtipoDocumento");
            entity.Property(e => e.DocDocumentoEntradaDocSubtipoDocumentoSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_doc_subtipoDocumento_subtipoDocumento_codigo");
            entity.Property(e => e.DocDocumentoEntradaDocSubtipoDocumentoTipoCobro).HasColumnName("doc_documento_entrada_doc_subtipoDocumento_tipoCobro");
            entity.Property(e => e.DocDocumentoEntradaDocSubtipoDocumentoValUrgente).HasColumnName("doc_documento_entrada_doc_subtipoDocumento_valUrgente");
            entity.Property(e => e.DocDocumentoEntradaDocSubtipoDocumentoVerCentroCosto).HasColumnName("doc_documento_entrada_doc_subtipoDocumento_verCentroCosto");
            entity.Property(e => e.DocDocumentoEntradaDocSubtipoDocumentoVerIncoterm).HasColumnName("doc_documento_entrada_doc_subtipoDocumento_verIncoterm");
            entity.Property(e => e.DocDocumentoEntradaDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_documento_codigo");
            entity.Property(e => e.DocDocumentoEntradaDocumentoNumero).HasColumnName("doc_documento_entrada_documento_numero");
            entity.Property(e => e.DocDocumentoEntradaFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_entrada_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoEntradaFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_entrada_fecha_fh");
            entity.Property(e => e.DocDocumentoEntradaFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_entrada_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoEntradaFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_entrada_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoEntradaGenMonedaAbreviatura)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_gen_moneda_abreviatura");
            entity.Property(e => e.DocDocumentoEntradaGenMonedaCambio).HasColumnName("doc_documento_entrada_gen_moneda_cambio");
            entity.Property(e => e.DocDocumentoEntradaGenMonedaMoneda)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_gen_moneda_moneda");
            entity.Property(e => e.DocDocumentoEntradaGenMonedaMonedaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_gen_moneda_moneda_codigo");
            entity.Property(e => e.DocDocumentoEntradaIdDocumento).HasColumnName("doc_documento_entrada_id_documento");
            entity.Property(e => e.DocDocumentoEntradaIdEstadoTipoDocumento).HasColumnName("doc_documento_entrada_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoEntradaIdMoneda).HasColumnName("doc_documento_entrada_id_moneda");
            entity.Property(e => e.DocDocumentoEntradaIdMotivoestado).HasColumnName("doc_documento_entrada_id_motivoestado");
            entity.Property(e => e.DocDocumentoEntradaIdPrioridadDocumento).HasColumnName("doc_documento_entrada_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoEntradaIdSubtipoDocumento).HasColumnName("doc_documento_entrada_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoEntradaIdTerceroCliente).HasColumnName("doc_documento_entrada_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoEntradaIdTerceroProveedor).HasColumnName("doc_documento_entrada_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoEntradaIdUsuarioAsignado).HasColumnName("doc_documento_entrada_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoEntradaIdUsuarioEnUso).HasColumnName("doc_documento_entrada_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoEntradaIva).HasColumnName("doc_documento_entrada_iva");
            entity.Property(e => e.DocDocumentoEntradaIvaPlaneado).HasColumnName("doc_documento_entrada_ivaPlaneado");
            entity.Property(e => e.DocDocumentoEntradaPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_prefijo");
            entity.Property(e => e.DocDocumentoEntradaRentabilidad).HasColumnName("doc_documento_entrada_rentabilidad");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoAccesoActivo).HasColumnName("doc_documento_entrada_seg_usuario_asignado_accesoActivo");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoAplicaRecargo).HasColumnName("doc_documento_entrada_seg_usuario_asignado_aplicaRecargo");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoCambiarClave).HasColumnName("doc_documento_entrada_seg_usuario_asignado_cambiarClave");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_seg_usuario_asignado_clave");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoCostoHora)
                .HasColumnType("money")
                .HasColumnName("doc_documento_entrada_seg_usuario_asignado_costoHora");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_seg_usuario_asignado_direccion");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_seg_usuario_asignado_email");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_entrada_seg_usuario_asignado_fechaIntentoFallido_fh");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_entrada_seg_usuario_asignado_fechaUltimoCambioClave_fh");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_entrada_seg_usuario_asignado_fechaUltimoIngreso_fh");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoHabilitado).HasColumnName("doc_documento_entrada_seg_usuario_asignado_habilitado");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoIdCargo).HasColumnName("doc_documento_entrada_seg_usuario_asignado_id_cargo");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoIdGrupo).HasColumnName("doc_documento_entrada_seg_usuario_asignado_id_grupo");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoIdPerfil).HasColumnName("doc_documento_entrada_seg_usuario_asignado_id_perfil");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoIdUsuario).HasColumnName("doc_documento_entrada_seg_usuario_asignado_id_usuario");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoIdZona).HasColumnName("doc_documento_entrada_seg_usuario_asignado_id_zona");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_seg_usuario_asignado_identificacion");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoIntentosFallidos).HasColumnName("doc_documento_entrada_seg_usuario_asignado_intentosFallidos");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_seg_usuario_asignado_nombre");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoNumeroIngresos).HasColumnName("doc_documento_entrada_seg_usuario_asignado_numeroIngresos");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoPorcentajeComision).HasColumnName("doc_documento_entrada_seg_usuario_asignado_porcentajeComision");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoPreferencias)
                .HasColumnType("image")
                .HasColumnName("doc_documento_entrada_seg_usuario_asignado_preferencias");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_seg_usuario_asignado_profesion");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoSexo).HasColumnName("doc_documento_entrada_seg_usuario_asignado_sexo");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_seg_usuario_asignado_telefono");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_seg_usuario_asignado_usuario");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioAsignadoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_seg_usuario_asignado_usuario_codigo");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoAccesoActivo).HasColumnName("doc_documento_entrada_seg_usuario_enUso_accesoActivo");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoAplicaRecargo).HasColumnName("doc_documento_entrada_seg_usuario_enUso_aplicaRecargo");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoCambiarClave).HasColumnName("doc_documento_entrada_seg_usuario_enUso_cambiarClave");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_seg_usuario_enUso_clave");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoCostoHora)
                .HasColumnType("money")
                .HasColumnName("doc_documento_entrada_seg_usuario_enUso_costoHora");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_seg_usuario_enUso_direccion");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_seg_usuario_enUso_email");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_entrada_seg_usuario_enUso_fechaIntentoFallido_fh");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_entrada_seg_usuario_enUso_fechaUltimoCambioClave_fh");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_entrada_seg_usuario_enUso_fechaUltimoIngreso_fh");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoHabilitado).HasColumnName("doc_documento_entrada_seg_usuario_enUso_habilitado");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoIdCargo).HasColumnName("doc_documento_entrada_seg_usuario_enUso_id_cargo");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoIdGrupo).HasColumnName("doc_documento_entrada_seg_usuario_enUso_id_grupo");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoIdPerfil).HasColumnName("doc_documento_entrada_seg_usuario_enUso_id_perfil");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoIdUsuario).HasColumnName("doc_documento_entrada_seg_usuario_enUso_id_usuario");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoIdZona).HasColumnName("doc_documento_entrada_seg_usuario_enUso_id_zona");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_seg_usuario_enUso_identificacion");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoIntentosFallidos).HasColumnName("doc_documento_entrada_seg_usuario_enUso_intentosFallidos");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_seg_usuario_enUso_nombre");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoNumeroIngresos).HasColumnName("doc_documento_entrada_seg_usuario_enUso_numeroIngresos");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoPorcentajeComision).HasColumnName("doc_documento_entrada_seg_usuario_enUso_porcentajeComision");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoPreferencias)
                .HasColumnType("image")
                .HasColumnName("doc_documento_entrada_seg_usuario_enUso_preferencias");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_seg_usuario_enUso_profesion");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoSexo).HasColumnName("doc_documento_entrada_seg_usuario_enUso_sexo");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_seg_usuario_enUso_telefono");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_seg_usuario_enUso_usuario");
            entity.Property(e => e.DocDocumentoEntradaSegUsuarioEnUsoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_seg_usuario_enUso_usuario_codigo");
            entity.Property(e => e.DocDocumentoEntradaSubtotal).HasColumnName("doc_documento_entrada_subtotal");
            entity.Property(e => e.DocDocumentoEntradaSubtotalPlaneado).HasColumnName("doc_documento_entrada_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroClienteClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_cliente_clasificacion");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroClienteContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_cliente_contacto");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroClienteDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_cliente_direccion");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroClienteEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_cliente_email");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroClienteEsCliente).HasColumnName("doc_documento_entrada_ter_tercero_cliente_esCliente");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroClienteEsEmpresaPropia).HasColumnName("doc_documento_entrada_ter_tercero_cliente_esEmpresaPropia");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroClienteEsFabricante).HasColumnName("doc_documento_entrada_ter_tercero_cliente_esFabricante");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroClienteEsProspecto).HasColumnName("doc_documento_entrada_ter_tercero_cliente_esProspecto");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroClienteEsProveedor).HasColumnName("doc_documento_entrada_ter_tercero_cliente_esProveedor");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroClienteEsTransportador).HasColumnName("doc_documento_entrada_ter_tercero_cliente_esTransportador");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroClienteFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_cliente_fax");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroClienteIdEstadoTercero).HasColumnName("doc_documento_entrada_ter_tercero_cliente_id_estadoTercero");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroClienteIdNaturalezaTercero).HasColumnName("doc_documento_entrada_ter_tercero_cliente_id_naturalezaTercero");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroClienteIdZona).HasColumnName("doc_documento_entrada_ter_tercero_cliente_id_zona");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroClienteNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_cliente_notas");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroClienteRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_cliente_representante");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroClienteTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_cliente_telefono");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroClienteTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_cliente_tercero");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroClienteTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_cliente_tercero_codigo");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroClienteTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_cliente_tercero_nit");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroClienteTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_cliente_tercero_nombreCorto");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroClienteWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_cliente_website");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroProveedorClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_proveedor_clasificacion");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroProveedorContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_proveedor_contacto");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroProveedorDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_proveedor_direccion");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroProveedorEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_proveedor_email");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroProveedorEsCliente).HasColumnName("doc_documento_entrada_ter_tercero_proveedor_esCliente");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroProveedorEsEmpresaPropia).HasColumnName("doc_documento_entrada_ter_tercero_proveedor_esEmpresaPropia");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroProveedorEsFabricante).HasColumnName("doc_documento_entrada_ter_tercero_proveedor_esFabricante");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroProveedorEsProspecto).HasColumnName("doc_documento_entrada_ter_tercero_proveedor_esProspecto");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroProveedorEsProveedor).HasColumnName("doc_documento_entrada_ter_tercero_proveedor_esProveedor");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroProveedorEsTransportador).HasColumnName("doc_documento_entrada_ter_tercero_proveedor_esTransportador");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroProveedorFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_proveedor_fax");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroProveedorIdEstadoTercero).HasColumnName("doc_documento_entrada_ter_tercero_proveedor_id_estadoTercero");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroProveedorIdNaturalezaTercero).HasColumnName("doc_documento_entrada_ter_tercero_proveedor_id_naturalezaTercero");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroProveedorIdZona).HasColumnName("doc_documento_entrada_ter_tercero_proveedor_id_zona");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroProveedorNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_proveedor_notas");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroProveedorRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_proveedor_representante");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroProveedorTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_proveedor_telefono");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroProveedorTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_proveedor_tercero");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroProveedorTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_proveedor_tercero_codigo");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroProveedorTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_proveedor_tercero_nit");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroProveedorTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_proveedor_tercero_nombreCorto");
            entity.Property(e => e.DocDocumentoEntradaTerTerceroProveedorWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_entrada_ter_tercero_proveedor_website");
            entity.Property(e => e.DocDocumentoEntradaTotal).HasColumnName("doc_documento_entrada_total");
            entity.Property(e => e.DocDocumentoEntradaTotalPlaneado).HasColumnName("doc_documento_entrada_totalPlaneado");
            entity.Property(e => e.DocDocumentoEntradaTrm).HasColumnName("doc_documento_entrada_trm");
            entity.Property(e => e.DocumentoEntrada)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.entrada");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsPorAjuste).HasColumnName("esPorAjuste");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdTerceroTransportador).HasColumnName("id_tercero_transportador");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdUsuarioRecibe).HasColumnName("id_usuario_recibe");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("observaciones");
            entity.Property(e => e.SegUsuarioRecibeAccesoActivo).HasColumnName("seg_usuario_recibe_accesoActivo");
            entity.Property(e => e.SegUsuarioRecibeAplicaRecargo).HasColumnName("seg_usuario_recibe_aplicaRecargo");
            entity.Property(e => e.SegUsuarioRecibeCambiarClave).HasColumnName("seg_usuario_recibe_cambiarClave");
            entity.Property(e => e.SegUsuarioRecibeClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_recibe_clave");
            entity.Property(e => e.SegUsuarioRecibeCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_recibe_costoHora");
            entity.Property(e => e.SegUsuarioRecibeDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_recibe_direccion");
            entity.Property(e => e.SegUsuarioRecibeEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_recibe_email");
            entity.Property(e => e.SegUsuarioRecibeFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_recibe_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioRecibeFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_recibe_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioRecibeFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_recibe_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioRecibeHabilitado).HasColumnName("seg_usuario_recibe_habilitado");
            entity.Property(e => e.SegUsuarioRecibeIdCargo).HasColumnName("seg_usuario_recibe_id_cargo");
            entity.Property(e => e.SegUsuarioRecibeIdGrupo).HasColumnName("seg_usuario_recibe_id_grupo");
            entity.Property(e => e.SegUsuarioRecibeIdPerfil).HasColumnName("seg_usuario_recibe_id_perfil");
            entity.Property(e => e.SegUsuarioRecibeIdUsuario).HasColumnName("seg_usuario_recibe_id_usuario");
            entity.Property(e => e.SegUsuarioRecibeIdZona).HasColumnName("seg_usuario_recibe_id_zona");
            entity.Property(e => e.SegUsuarioRecibeIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_recibe_identificacion");
            entity.Property(e => e.SegUsuarioRecibeIntentosFallidos).HasColumnName("seg_usuario_recibe_intentosFallidos");
            entity.Property(e => e.SegUsuarioRecibeNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_recibe_nombre");
            entity.Property(e => e.SegUsuarioRecibeNumeroIngresos).HasColumnName("seg_usuario_recibe_numeroIngresos");
            entity.Property(e => e.SegUsuarioRecibePorcentajeComision).HasColumnName("seg_usuario_recibe_porcentajeComision");
            entity.Property(e => e.SegUsuarioRecibePreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_recibe_preferencias");
            entity.Property(e => e.SegUsuarioRecibeProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_recibe_profesion");
            entity.Property(e => e.SegUsuarioRecibeSexo).HasColumnName("seg_usuario_recibe_sexo");
            entity.Property(e => e.SegUsuarioRecibeTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_recibe_telefono");
            entity.Property(e => e.SegUsuarioRecibeUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_recibe_usuario");
            entity.Property(e => e.SegUsuarioRecibeUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_recibe_usuario_codigo");
            entity.Property(e => e.Solicitante)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("solicitante");
            entity.Property(e => e.TelefonoEntrega)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("telefonoEntrega");
            entity.Property(e => e.TerSucursalCodigorecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_codigorecursiva");
            entity.Property(e => e.TerSucursalContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_contacto");
            entity.Property(e => e.TerSucursalDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Direccion");
            entity.Property(e => e.TerSucursalEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Email");
            entity.Property(e => e.TerSucursalFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Fax");
            entity.Property(e => e.TerSucursalIdEstadoTercero).HasColumnName("ter_sucursal_id_estadoTercero");
            entity.Property(e => e.TerSucursalIdSucursal).HasColumnName("ter_sucursal_id_sucursal");
            entity.Property(e => e.TerSucursalIdTercero).HasColumnName("ter_sucursal_id_tercero");
            entity.Property(e => e.TerSucursalIdUsuarioAsesor).HasColumnName("ter_sucursal_id_usuario_asesor");
            entity.Property(e => e.TerSucursalIdUsuarioTecnico).HasColumnName("ter_sucursal_id_usuario_tecnico");
            entity.Property(e => e.TerSucursalIdZona).HasColumnName("ter_sucursal_id_zona");
            entity.Property(e => e.TerSucursalParaAlquiler).HasColumnName("ter_sucursal_paraAlquiler");
            entity.Property(e => e.TerSucursalParaSoporte).HasColumnName("ter_sucursal_paraSoporte");
            entity.Property(e => e.TerSucursalParaVenta).HasColumnName("ter_sucursal_paraVenta");
            entity.Property(e => e.TerSucursalSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal");
            entity.Property(e => e.TerSucursalSucursalCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal_codigo");
            entity.Property(e => e.TerSucursalTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_telefono");
            entity.Property(e => e.TerTerceroTransportadorClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_clasificacion");
            entity.Property(e => e.TerTerceroTransportadorContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_contacto");
            entity.Property(e => e.TerTerceroTransportadorDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_direccion");
            entity.Property(e => e.TerTerceroTransportadorEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_email");
            entity.Property(e => e.TerTerceroTransportadorEsCliente).HasColumnName("ter_tercero_transportador_esCliente");
            entity.Property(e => e.TerTerceroTransportadorEsEmpresaPropia).HasColumnName("ter_tercero_transportador_esEmpresaPropia");
            entity.Property(e => e.TerTerceroTransportadorEsFabricante).HasColumnName("ter_tercero_transportador_esFabricante");
            entity.Property(e => e.TerTerceroTransportadorEsProspecto).HasColumnName("ter_tercero_transportador_esProspecto");
            entity.Property(e => e.TerTerceroTransportadorEsProveedor).HasColumnName("ter_tercero_transportador_esProveedor");
            entity.Property(e => e.TerTerceroTransportadorEsTransportador).HasColumnName("ter_tercero_transportador_esTransportador");
            entity.Property(e => e.TerTerceroTransportadorFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_fax");
            entity.Property(e => e.TerTerceroTransportadorIdEstadoTercero).HasColumnName("ter_tercero_transportador_id_estadoTercero");
            entity.Property(e => e.TerTerceroTransportadorIdNaturalezaTercero).HasColumnName("ter_tercero_transportador_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroTransportadorIdZona).HasColumnName("ter_tercero_transportador_id_zona");
            entity.Property(e => e.TerTerceroTransportadorNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_notas");
            entity.Property(e => e.TerTerceroTransportadorRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_representante");
            entity.Property(e => e.TerTerceroTransportadorTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_telefono");
            entity.Property(e => e.TerTerceroTransportadorTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_tercero");
            entity.Property(e => e.TerTerceroTransportadorTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_tercero_codigo");
            entity.Property(e => e.TerTerceroTransportadorTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_tercero_nit");
            entity.Property(e => e.TerTerceroTransportadorTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroTransportadorWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_website");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoEstadoTipoDocumento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_estadoTipoDocumento");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocDocumentoCosto).HasColumnName("doc_documento_costo");
            entity.Property(e => e.DocDocumentoCostoPlaneado).HasColumnName("doc_documento_costoPlaneado");
            entity.Property(e => e.DocDocumentoDescuento).HasColumnName("doc_documento_descuento");
            entity.Property(e => e.DocDocumentoDescuentoPlaneado).HasColumnName("doc_documento_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento");
            entity.Property(e => e.DocDocumentoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento_codigo");
            entity.Property(e => e.DocDocumentoDocumentoNumero).HasColumnName("doc_documento_documento_numero");
            entity.Property(e => e.DocDocumentoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fecha_fh");
            entity.Property(e => e.DocDocumentoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoIdDocumento).HasColumnName("doc_documento_id_documento");
            entity.Property(e => e.DocDocumentoIdEstadoTipoDocumento).HasColumnName("doc_documento_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoIdMoneda).HasColumnName("doc_documento_id_moneda");
            entity.Property(e => e.DocDocumentoIdMotivoestado).HasColumnName("doc_documento_id_motivoestado");
            entity.Property(e => e.DocDocumentoIdPrioridadDocumento).HasColumnName("doc_documento_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoIdSubtipoDocumento).HasColumnName("doc_documento_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoIdTerceroCliente).HasColumnName("doc_documento_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoIdTerceroProveedor).HasColumnName("doc_documento_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoIdUsuarioAsignado).HasColumnName("doc_documento_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoIdUsuarioEnUso).HasColumnName("doc_documento_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoIva).HasColumnName("doc_documento_iva");
            entity.Property(e => e.DocDocumentoIvaPlaneado).HasColumnName("doc_documento_ivaPlaneado");
            entity.Property(e => e.DocDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_prefijo");
            entity.Property(e => e.DocDocumentoRentabilidad).HasColumnName("doc_documento_rentabilidad");
            entity.Property(e => e.DocDocumentoSubtotal).HasColumnName("doc_documento_subtotal");
            entity.Property(e => e.DocDocumentoSubtotalPlaneado).HasColumnName("doc_documento_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoTotal).HasColumnName("doc_documento_total");
            entity.Property(e => e.DocDocumentoTotalPlaneado).HasColumnName("doc_documento_totalPlaneado");
            entity.Property(e => e.DocDocumentoTrm).HasColumnName("doc_documento_trm");
            entity.Property(e => e.DocEstadoTipoDocumentoAfectaIndicador).HasColumnName("doc_estadoTipoDocumento_afectaIndicador");
            entity.Property(e => e.DocEstadoTipoDocumentoAfectaInventario).HasColumnName("doc_estadoTipoDocumento_afectaInventario");
            entity.Property(e => e.DocEstadoTipoDocumentoColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_color");
            entity.Property(e => e.DocEstadoTipoDocumentoDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_descripcion");
            entity.Property(e => e.DocEstadoTipoDocumentoEditaDocumento).HasColumnName("doc_estadoTipoDocumento_editaDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_estadoTipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocEstadoTipoDocumentoIdTipoDocumento).HasColumnName("doc_estadoTipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoOrden).HasColumnName("doc_estadoTipoDocumento_orden");
            entity.Property(e => e.DocEstadoTipoDocumentoPuedeRegresar).HasColumnName("doc_estadoTipoDocumento_puedeRegresar");
            entity.Property(e => e.DocMotivoestadoIdEstadoTipoDocumento).HasColumnName("doc_motivoestado_id_estadoTipoDocumento");
            entity.Property(e => e.DocMotivoestadoMotivoestado)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_motivoestado_motivoestado");
            entity.Property(e => e.DocMotivoestadoMotivoestadoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_motivoestado_motivoestado_codigo");
            entity.Property(e => e.DocumentoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento_estadoTipoDocumento");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdEstadoTipoDocumento).HasColumnName("id_estadoTipoDocumento");
            entity.Property(e => e.IdMotivoestado).HasColumnName("id_motivoestado");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Notas)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("notas");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoEvaluacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_evaluacion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocDocumentoCosto).HasColumnName("doc_documento_costo");
            entity.Property(e => e.DocDocumentoCostoPlaneado).HasColumnName("doc_documento_costoPlaneado");
            entity.Property(e => e.DocDocumentoDescuento).HasColumnName("doc_documento_descuento");
            entity.Property(e => e.DocDocumentoDescuentoPlaneado).HasColumnName("doc_documento_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento");
            entity.Property(e => e.DocDocumentoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento_codigo");
            entity.Property(e => e.DocDocumentoDocumentoNumero).HasColumnName("doc_documento_documento_numero");
            entity.Property(e => e.DocDocumentoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fecha_fh");
            entity.Property(e => e.DocDocumentoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoIdDocumento).HasColumnName("doc_documento_id_documento");
            entity.Property(e => e.DocDocumentoIdEstadoTipoDocumento).HasColumnName("doc_documento_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoIdMoneda).HasColumnName("doc_documento_id_moneda");
            entity.Property(e => e.DocDocumentoIdMotivoestado).HasColumnName("doc_documento_id_motivoestado");
            entity.Property(e => e.DocDocumentoIdPrioridadDocumento).HasColumnName("doc_documento_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoIdSubtipoDocumento).HasColumnName("doc_documento_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoIdTerceroCliente).HasColumnName("doc_documento_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoIdTerceroProveedor).HasColumnName("doc_documento_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoIdUsuarioAsignado).HasColumnName("doc_documento_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoIdUsuarioEnUso).HasColumnName("doc_documento_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoIva).HasColumnName("doc_documento_iva");
            entity.Property(e => e.DocDocumentoIvaPlaneado).HasColumnName("doc_documento_ivaPlaneado");
            entity.Property(e => e.DocDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_prefijo");
            entity.Property(e => e.DocDocumentoRentabilidad).HasColumnName("doc_documento_rentabilidad");
            entity.Property(e => e.DocDocumentoSubtotal).HasColumnName("doc_documento_subtotal");
            entity.Property(e => e.DocDocumentoSubtotalPlaneado).HasColumnName("doc_documento_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoTotal).HasColumnName("doc_documento_total");
            entity.Property(e => e.DocDocumentoTotalPlaneado).HasColumnName("doc_documento_totalPlaneado");
            entity.Property(e => e.DocDocumentoTrm).HasColumnName("doc_documento_trm");
            entity.Property(e => e.DocEvaluacionActiva).HasColumnName("doc_evaluacion_activa");
            entity.Property(e => e.DocEvaluacionEvaluacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_evaluacion_evaluacion");
            entity.Property(e => e.DocEvaluacionEvaluacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_evaluacion_evaluacion_codigo");
            entity.Property(e => e.DocEvaluacionIdSubtipoDocumento).HasColumnName("doc_evaluacion_id_subtipoDocumento");
            entity.Property(e => e.DocumentoEvaluacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento_evaluacion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaEncuestaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaEncuesta_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdEvaluacion).HasColumnName("id_evaluacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("observaciones");
            entity.Property(e => e.PersonaEncuestada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("personaEncuestada");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoGasto>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_gasto");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Concepto)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("concepto");
            entity.Property(e => e.Consignado).HasColumnName("consignado");
            entity.Property(e => e.Dias).HasColumnName("dias");
            entity.Property(e => e.DocDocumentoGastoCosto).HasColumnName("doc_documento_gasto_costo");
            entity.Property(e => e.DocDocumentoGastoCostoPlaneado).HasColumnName("doc_documento_gasto_costoPlaneado");
            entity.Property(e => e.DocDocumentoGastoDescuento).HasColumnName("doc_documento_gasto_descuento");
            entity.Property(e => e.DocDocumentoGastoDescuentoPlaneado).HasColumnName("doc_documento_gasto_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreCosto).HasColumnName("doc_documento_gasto_doc_documento_padre_costo");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreCostoPlaneado).HasColumnName("doc_documento_gasto_doc_documento_padre_costoPlaneado");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreDescuento).HasColumnName("doc_documento_gasto_doc_documento_padre_descuento");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreDescuentoPlaneado).HasColumnName("doc_documento_gasto_doc_documento_padre_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_doc_documento_padre_documento");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_doc_documento_padre_documento_codigo");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreDocumentoNumero).HasColumnName("doc_documento_gasto_doc_documento_padre_documento_numero");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_gasto_doc_documento_padre_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_gasto_doc_documento_padre_fecha_fh");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_gasto_doc_documento_padre_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_gasto_doc_documento_padre_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreIdDocumento).HasColumnName("doc_documento_gasto_doc_documento_padre_id_documento");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreIdEstadoTipoDocumento).HasColumnName("doc_documento_gasto_doc_documento_padre_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreIdMoneda).HasColumnName("doc_documento_gasto_doc_documento_padre_id_moneda");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreIdMotivoestado).HasColumnName("doc_documento_gasto_doc_documento_padre_id_motivoestado");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreIdPrioridadDocumento).HasColumnName("doc_documento_gasto_doc_documento_padre_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreIdSubtipoDocumento).HasColumnName("doc_documento_gasto_doc_documento_padre_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreIdTerceroCliente).HasColumnName("doc_documento_gasto_doc_documento_padre_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreIdTerceroProveedor).HasColumnName("doc_documento_gasto_doc_documento_padre_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreIdUsuarioAsignado).HasColumnName("doc_documento_gasto_doc_documento_padre_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreIdUsuarioEnUso).HasColumnName("doc_documento_gasto_doc_documento_padre_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreIva).HasColumnName("doc_documento_gasto_doc_documento_padre_iva");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreIvaPlaneado).HasColumnName("doc_documento_gasto_doc_documento_padre_ivaPlaneado");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadrePrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_doc_documento_padre_prefijo");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreRentabilidad).HasColumnName("doc_documento_gasto_doc_documento_padre_rentabilidad");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreSubtotal).HasColumnName("doc_documento_gasto_doc_documento_padre_subtotal");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreSubtotalPlaneado).HasColumnName("doc_documento_gasto_doc_documento_padre_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreTotal).HasColumnName("doc_documento_gasto_doc_documento_padre_total");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreTotalPlaneado).HasColumnName("doc_documento_gasto_doc_documento_padre_totalPlaneado");
            entity.Property(e => e.DocDocumentoGastoDocDocumentoPadreTrm).HasColumnName("doc_documento_gasto_doc_documento_padre_trm");
            entity.Property(e => e.DocDocumentoGastoDocEstadoTipoDocumentoAfectaIndicador).HasColumnName("doc_documento_gasto_doc_estadoTipoDocumento_afectaIndicador");
            entity.Property(e => e.DocDocumentoGastoDocEstadoTipoDocumentoAfectaInventario).HasColumnName("doc_documento_gasto_doc_estadoTipoDocumento_afectaInventario");
            entity.Property(e => e.DocDocumentoGastoDocEstadoTipoDocumentoColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_doc_estadoTipoDocumento_color");
            entity.Property(e => e.DocDocumentoGastoDocEstadoTipoDocumentoDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_doc_estadoTipoDocumento_descripcion");
            entity.Property(e => e.DocDocumentoGastoDocEstadoTipoDocumentoEditaDocumento).HasColumnName("doc_documento_gasto_doc_estadoTipoDocumento_editaDocumento");
            entity.Property(e => e.DocDocumentoGastoDocEstadoTipoDocumentoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_doc_estadoTipoDocumento_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoGastoDocEstadoTipoDocumentoEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_doc_estadoTipoDocumento_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocDocumentoGastoDocEstadoTipoDocumentoIdTipoDocumento).HasColumnName("doc_documento_gasto_doc_estadoTipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoGastoDocEstadoTipoDocumentoMotivoObligatorio).HasColumnName("doc_documento_gasto_doc_estadoTipoDocumento_motivoObligatorio");
            entity.Property(e => e.DocDocumentoGastoDocEstadoTipoDocumentoObservacionesObligatorio).HasColumnName("doc_documento_gasto_doc_estadoTipoDocumento_observacionesObligatorio");
            entity.Property(e => e.DocDocumentoGastoDocEstadoTipoDocumentoOrden).HasColumnName("doc_documento_gasto_doc_estadoTipoDocumento_orden");
            entity.Property(e => e.DocDocumentoGastoDocEstadoTipoDocumentoPuedeRegresar).HasColumnName("doc_documento_gasto_doc_estadoTipoDocumento_puedeRegresar");
            entity.Property(e => e.DocDocumentoGastoDocMotivoestadoIdEstadoTipoDocumento).HasColumnName("doc_documento_gasto_doc_motivoestado_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoGastoDocMotivoestadoMotivoestado)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_doc_motivoestado_motivoestado");
            entity.Property(e => e.DocDocumentoGastoDocMotivoestadoMotivoestadoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_doc_motivoestado_motivoestado_codigo");
            entity.Property(e => e.DocDocumentoGastoDocPrioridadDocumentoIdEstrategiaPrioridad).HasColumnName("doc_documento_gasto_doc_prioridadDocumento_id_estrategiaPrioridad");
            entity.Property(e => e.DocDocumentoGastoDocPrioridadDocumentoIdTipoDocumento).HasColumnName("doc_documento_gasto_doc_prioridadDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoGastoDocPrioridadDocumentoOrden).HasColumnName("doc_documento_gasto_doc_prioridadDocumento_orden");
            entity.Property(e => e.DocDocumentoGastoDocPrioridadDocumentoPrioridadDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_doc_prioridadDocumento_prioridadDocumento");
            entity.Property(e => e.DocDocumentoGastoDocPrioridadDocumentoPrioridadDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_doc_prioridadDocumento_prioridadDocumento_codigo");
            entity.Property(e => e.DocDocumentoGastoDocPrioridadDocumentoTiempoRespuesta).HasColumnName("doc_documento_gasto_doc_prioridadDocumento_tiempoRespuesta");
            entity.Property(e => e.DocDocumentoGastoDocSubtipoDocumentoBloquearDespacho).HasColumnName("doc_documento_gasto_doc_subtipoDocumento_bloquearDespacho");
            entity.Property(e => e.DocDocumentoGastoDocSubtipoDocumentoCargarSolicitante).HasColumnName("doc_documento_gasto_doc_subtipoDocumento_cargarSolicitante");
            entity.Property(e => e.DocDocumentoGastoDocSubtipoDocumentoCerrarSol).HasColumnName("doc_documento_gasto_doc_subtipoDocumento_cerrarSol");
            entity.Property(e => e.DocDocumentoGastoDocSubtipoDocumentoConsecutivo).HasColumnName("doc_documento_gasto_doc_subtipoDocumento_consecutivo");
            entity.Property(e => e.DocDocumentoGastoDocSubtipoDocumentoEjecutaDevolucion).HasColumnName("doc_documento_gasto_doc_subtipoDocumento_ejecutaDevolucion");
            entity.Property(e => e.DocDocumentoGastoDocSubtipoDocumentoIdTipoDocumento).HasColumnName("doc_documento_gasto_doc_subtipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoGastoDocSubtipoDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_doc_subtipoDocumento_prefijo");
            entity.Property(e => e.DocDocumentoGastoDocSubtipoDocumentoProgramarPlaneadas).HasColumnName("doc_documento_gasto_doc_subtipoDocumento_programarPlaneadas");
            entity.Property(e => e.DocDocumentoGastoDocSubtipoDocumentoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_doc_subtipoDocumento_subtipoDocumento");
            entity.Property(e => e.DocDocumentoGastoDocSubtipoDocumentoSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_doc_subtipoDocumento_subtipoDocumento_codigo");
            entity.Property(e => e.DocDocumentoGastoDocSubtipoDocumentoTipoCobro).HasColumnName("doc_documento_gasto_doc_subtipoDocumento_tipoCobro");
            entity.Property(e => e.DocDocumentoGastoDocSubtipoDocumentoValUrgente).HasColumnName("doc_documento_gasto_doc_subtipoDocumento_valUrgente");
            entity.Property(e => e.DocDocumentoGastoDocSubtipoDocumentoVerCentroCosto).HasColumnName("doc_documento_gasto_doc_subtipoDocumento_verCentroCosto");
            entity.Property(e => e.DocDocumentoGastoDocSubtipoDocumentoVerIncoterm).HasColumnName("doc_documento_gasto_doc_subtipoDocumento_verIncoterm");
            entity.Property(e => e.DocDocumentoGastoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_documento_codigo");
            entity.Property(e => e.DocDocumentoGastoDocumentoNumero).HasColumnName("doc_documento_gasto_documento_numero");
            entity.Property(e => e.DocDocumentoGastoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_gasto_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoGastoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_gasto_fecha_fh");
            entity.Property(e => e.DocDocumentoGastoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_gasto_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoGastoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_gasto_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoGastoGenMonedaAbreviatura)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_gen_moneda_abreviatura");
            entity.Property(e => e.DocDocumentoGastoGenMonedaCambio).HasColumnName("doc_documento_gasto_gen_moneda_cambio");
            entity.Property(e => e.DocDocumentoGastoGenMonedaMoneda)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_gen_moneda_moneda");
            entity.Property(e => e.DocDocumentoGastoGenMonedaMonedaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_gen_moneda_moneda_codigo");
            entity.Property(e => e.DocDocumentoGastoIdDocumento).HasColumnName("doc_documento_gasto_id_documento");
            entity.Property(e => e.DocDocumentoGastoIdEstadoTipoDocumento).HasColumnName("doc_documento_gasto_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoGastoIdMoneda).HasColumnName("doc_documento_gasto_id_moneda");
            entity.Property(e => e.DocDocumentoGastoIdMotivoestado).HasColumnName("doc_documento_gasto_id_motivoestado");
            entity.Property(e => e.DocDocumentoGastoIdPrioridadDocumento).HasColumnName("doc_documento_gasto_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoGastoIdSubtipoDocumento).HasColumnName("doc_documento_gasto_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoGastoIdTerceroCliente).HasColumnName("doc_documento_gasto_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoGastoIdTerceroProveedor).HasColumnName("doc_documento_gasto_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoGastoIdUsuarioAsignado).HasColumnName("doc_documento_gasto_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoGastoIdUsuarioEnUso).HasColumnName("doc_documento_gasto_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoGastoIva).HasColumnName("doc_documento_gasto_iva");
            entity.Property(e => e.DocDocumentoGastoIvaPlaneado).HasColumnName("doc_documento_gasto_ivaPlaneado");
            entity.Property(e => e.DocDocumentoGastoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_prefijo");
            entity.Property(e => e.DocDocumentoGastoRentabilidad).HasColumnName("doc_documento_gasto_rentabilidad");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoAccesoActivo).HasColumnName("doc_documento_gasto_seg_usuario_asignado_accesoActivo");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoAplicaRecargo).HasColumnName("doc_documento_gasto_seg_usuario_asignado_aplicaRecargo");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoCambiarClave).HasColumnName("doc_documento_gasto_seg_usuario_asignado_cambiarClave");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_seg_usuario_asignado_clave");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoCostoHora)
                .HasColumnType("money")
                .HasColumnName("doc_documento_gasto_seg_usuario_asignado_costoHora");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_seg_usuario_asignado_direccion");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_seg_usuario_asignado_email");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_gasto_seg_usuario_asignado_fechaIntentoFallido_fh");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_gasto_seg_usuario_asignado_fechaUltimoCambioClave_fh");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_gasto_seg_usuario_asignado_fechaUltimoIngreso_fh");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoHabilitado).HasColumnName("doc_documento_gasto_seg_usuario_asignado_habilitado");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoIdCargo).HasColumnName("doc_documento_gasto_seg_usuario_asignado_id_cargo");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoIdGrupo).HasColumnName("doc_documento_gasto_seg_usuario_asignado_id_grupo");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoIdPerfil).HasColumnName("doc_documento_gasto_seg_usuario_asignado_id_perfil");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoIdUsuario).HasColumnName("doc_documento_gasto_seg_usuario_asignado_id_usuario");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoIdZona).HasColumnName("doc_documento_gasto_seg_usuario_asignado_id_zona");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_seg_usuario_asignado_identificacion");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoIntentosFallidos).HasColumnName("doc_documento_gasto_seg_usuario_asignado_intentosFallidos");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_seg_usuario_asignado_nombre");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoNumeroIngresos).HasColumnName("doc_documento_gasto_seg_usuario_asignado_numeroIngresos");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoPorcentajeComision).HasColumnName("doc_documento_gasto_seg_usuario_asignado_porcentajeComision");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoPreferencias)
                .HasColumnType("image")
                .HasColumnName("doc_documento_gasto_seg_usuario_asignado_preferencias");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_seg_usuario_asignado_profesion");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoSexo).HasColumnName("doc_documento_gasto_seg_usuario_asignado_sexo");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_seg_usuario_asignado_telefono");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_seg_usuario_asignado_usuario");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioAsignadoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_seg_usuario_asignado_usuario_codigo");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoAccesoActivo).HasColumnName("doc_documento_gasto_seg_usuario_enUso_accesoActivo");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoAplicaRecargo).HasColumnName("doc_documento_gasto_seg_usuario_enUso_aplicaRecargo");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoCambiarClave).HasColumnName("doc_documento_gasto_seg_usuario_enUso_cambiarClave");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_seg_usuario_enUso_clave");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoCostoHora)
                .HasColumnType("money")
                .HasColumnName("doc_documento_gasto_seg_usuario_enUso_costoHora");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_seg_usuario_enUso_direccion");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_seg_usuario_enUso_email");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_gasto_seg_usuario_enUso_fechaIntentoFallido_fh");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_gasto_seg_usuario_enUso_fechaUltimoCambioClave_fh");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_gasto_seg_usuario_enUso_fechaUltimoIngreso_fh");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoHabilitado).HasColumnName("doc_documento_gasto_seg_usuario_enUso_habilitado");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoIdCargo).HasColumnName("doc_documento_gasto_seg_usuario_enUso_id_cargo");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoIdGrupo).HasColumnName("doc_documento_gasto_seg_usuario_enUso_id_grupo");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoIdPerfil).HasColumnName("doc_documento_gasto_seg_usuario_enUso_id_perfil");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoIdUsuario).HasColumnName("doc_documento_gasto_seg_usuario_enUso_id_usuario");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoIdZona).HasColumnName("doc_documento_gasto_seg_usuario_enUso_id_zona");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_seg_usuario_enUso_identificacion");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoIntentosFallidos).HasColumnName("doc_documento_gasto_seg_usuario_enUso_intentosFallidos");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_seg_usuario_enUso_nombre");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoNumeroIngresos).HasColumnName("doc_documento_gasto_seg_usuario_enUso_numeroIngresos");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoPorcentajeComision).HasColumnName("doc_documento_gasto_seg_usuario_enUso_porcentajeComision");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoPreferencias)
                .HasColumnType("image")
                .HasColumnName("doc_documento_gasto_seg_usuario_enUso_preferencias");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_seg_usuario_enUso_profesion");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoSexo).HasColumnName("doc_documento_gasto_seg_usuario_enUso_sexo");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_seg_usuario_enUso_telefono");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_seg_usuario_enUso_usuario");
            entity.Property(e => e.DocDocumentoGastoSegUsuarioEnUsoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_seg_usuario_enUso_usuario_codigo");
            entity.Property(e => e.DocDocumentoGastoSubtotal).HasColumnName("doc_documento_gasto_subtotal");
            entity.Property(e => e.DocDocumentoGastoSubtotalPlaneado).HasColumnName("doc_documento_gasto_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoGastoTerTerceroClienteClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_cliente_clasificacion");
            entity.Property(e => e.DocDocumentoGastoTerTerceroClienteContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_cliente_contacto");
            entity.Property(e => e.DocDocumentoGastoTerTerceroClienteDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_cliente_direccion");
            entity.Property(e => e.DocDocumentoGastoTerTerceroClienteEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_cliente_email");
            entity.Property(e => e.DocDocumentoGastoTerTerceroClienteEsCliente).HasColumnName("doc_documento_gasto_ter_tercero_cliente_esCliente");
            entity.Property(e => e.DocDocumentoGastoTerTerceroClienteEsEmpresaPropia).HasColumnName("doc_documento_gasto_ter_tercero_cliente_esEmpresaPropia");
            entity.Property(e => e.DocDocumentoGastoTerTerceroClienteEsFabricante).HasColumnName("doc_documento_gasto_ter_tercero_cliente_esFabricante");
            entity.Property(e => e.DocDocumentoGastoTerTerceroClienteEsProspecto).HasColumnName("doc_documento_gasto_ter_tercero_cliente_esProspecto");
            entity.Property(e => e.DocDocumentoGastoTerTerceroClienteEsProveedor).HasColumnName("doc_documento_gasto_ter_tercero_cliente_esProveedor");
            entity.Property(e => e.DocDocumentoGastoTerTerceroClienteEsTransportador).HasColumnName("doc_documento_gasto_ter_tercero_cliente_esTransportador");
            entity.Property(e => e.DocDocumentoGastoTerTerceroClienteFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_cliente_fax");
            entity.Property(e => e.DocDocumentoGastoTerTerceroClienteIdEstadoTercero).HasColumnName("doc_documento_gasto_ter_tercero_cliente_id_estadoTercero");
            entity.Property(e => e.DocDocumentoGastoTerTerceroClienteIdNaturalezaTercero).HasColumnName("doc_documento_gasto_ter_tercero_cliente_id_naturalezaTercero");
            entity.Property(e => e.DocDocumentoGastoTerTerceroClienteIdZona).HasColumnName("doc_documento_gasto_ter_tercero_cliente_id_zona");
            entity.Property(e => e.DocDocumentoGastoTerTerceroClienteNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_cliente_notas");
            entity.Property(e => e.DocDocumentoGastoTerTerceroClienteRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_cliente_representante");
            entity.Property(e => e.DocDocumentoGastoTerTerceroClienteTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_cliente_telefono");
            entity.Property(e => e.DocDocumentoGastoTerTerceroClienteTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_cliente_tercero");
            entity.Property(e => e.DocDocumentoGastoTerTerceroClienteTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_cliente_tercero_codigo");
            entity.Property(e => e.DocDocumentoGastoTerTerceroClienteTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_cliente_tercero_nit");
            entity.Property(e => e.DocDocumentoGastoTerTerceroClienteTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_cliente_tercero_nombreCorto");
            entity.Property(e => e.DocDocumentoGastoTerTerceroClienteWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_cliente_website");
            entity.Property(e => e.DocDocumentoGastoTerTerceroProveedorClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_proveedor_clasificacion");
            entity.Property(e => e.DocDocumentoGastoTerTerceroProveedorContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_proveedor_contacto");
            entity.Property(e => e.DocDocumentoGastoTerTerceroProveedorDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_proveedor_direccion");
            entity.Property(e => e.DocDocumentoGastoTerTerceroProveedorEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_proveedor_email");
            entity.Property(e => e.DocDocumentoGastoTerTerceroProveedorEsCliente).HasColumnName("doc_documento_gasto_ter_tercero_proveedor_esCliente");
            entity.Property(e => e.DocDocumentoGastoTerTerceroProveedorEsEmpresaPropia).HasColumnName("doc_documento_gasto_ter_tercero_proveedor_esEmpresaPropia");
            entity.Property(e => e.DocDocumentoGastoTerTerceroProveedorEsFabricante).HasColumnName("doc_documento_gasto_ter_tercero_proveedor_esFabricante");
            entity.Property(e => e.DocDocumentoGastoTerTerceroProveedorEsProspecto).HasColumnName("doc_documento_gasto_ter_tercero_proveedor_esProspecto");
            entity.Property(e => e.DocDocumentoGastoTerTerceroProveedorEsProveedor).HasColumnName("doc_documento_gasto_ter_tercero_proveedor_esProveedor");
            entity.Property(e => e.DocDocumentoGastoTerTerceroProveedorEsTransportador).HasColumnName("doc_documento_gasto_ter_tercero_proveedor_esTransportador");
            entity.Property(e => e.DocDocumentoGastoTerTerceroProveedorFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_proveedor_fax");
            entity.Property(e => e.DocDocumentoGastoTerTerceroProveedorIdEstadoTercero).HasColumnName("doc_documento_gasto_ter_tercero_proveedor_id_estadoTercero");
            entity.Property(e => e.DocDocumentoGastoTerTerceroProveedorIdNaturalezaTercero).HasColumnName("doc_documento_gasto_ter_tercero_proveedor_id_naturalezaTercero");
            entity.Property(e => e.DocDocumentoGastoTerTerceroProveedorIdZona).HasColumnName("doc_documento_gasto_ter_tercero_proveedor_id_zona");
            entity.Property(e => e.DocDocumentoGastoTerTerceroProveedorNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_proveedor_notas");
            entity.Property(e => e.DocDocumentoGastoTerTerceroProveedorRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_proveedor_representante");
            entity.Property(e => e.DocDocumentoGastoTerTerceroProveedorTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_proveedor_telefono");
            entity.Property(e => e.DocDocumentoGastoTerTerceroProveedorTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_proveedor_tercero");
            entity.Property(e => e.DocDocumentoGastoTerTerceroProveedorTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_proveedor_tercero_codigo");
            entity.Property(e => e.DocDocumentoGastoTerTerceroProveedorTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_proveedor_tercero_nit");
            entity.Property(e => e.DocDocumentoGastoTerTerceroProveedorTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_proveedor_tercero_nombreCorto");
            entity.Property(e => e.DocDocumentoGastoTerTerceroProveedorWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_ter_tercero_proveedor_website");
            entity.Property(e => e.DocDocumentoGastoTotal).HasColumnName("doc_documento_gasto_total");
            entity.Property(e => e.DocDocumentoGastoTotalPlaneado).HasColumnName("doc_documento_gasto_totalPlaneado");
            entity.Property(e => e.DocDocumentoGastoTrm).HasColumnName("doc_documento_gasto_trm");
            entity.Property(e => e.DocumentoGasto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.gasto");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdUsuarioSolicitante).HasColumnName("id_usuario_solicitante");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.SegUsuarioSolicitanteAccesoActivo).HasColumnName("seg_usuario_solicitante_accesoActivo");
            entity.Property(e => e.SegUsuarioSolicitanteAplicaRecargo).HasColumnName("seg_usuario_solicitante_aplicaRecargo");
            entity.Property(e => e.SegUsuarioSolicitanteCambiarClave).HasColumnName("seg_usuario_solicitante_cambiarClave");
            entity.Property(e => e.SegUsuarioSolicitanteClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_solicitante_clave");
            entity.Property(e => e.SegUsuarioSolicitanteCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_solicitante_costoHora");
            entity.Property(e => e.SegUsuarioSolicitanteDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_solicitante_direccion");
            entity.Property(e => e.SegUsuarioSolicitanteEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_solicitante_email");
            entity.Property(e => e.SegUsuarioSolicitanteFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_solicitante_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioSolicitanteFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_solicitante_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioSolicitanteFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_solicitante_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioSolicitanteHabilitado).HasColumnName("seg_usuario_solicitante_habilitado");
            entity.Property(e => e.SegUsuarioSolicitanteIdCargo).HasColumnName("seg_usuario_solicitante_id_cargo");
            entity.Property(e => e.SegUsuarioSolicitanteIdGrupo).HasColumnName("seg_usuario_solicitante_id_grupo");
            entity.Property(e => e.SegUsuarioSolicitanteIdPerfil).HasColumnName("seg_usuario_solicitante_id_perfil");
            entity.Property(e => e.SegUsuarioSolicitanteIdUsuario).HasColumnName("seg_usuario_solicitante_id_usuario");
            entity.Property(e => e.SegUsuarioSolicitanteIdZona).HasColumnName("seg_usuario_solicitante_id_zona");
            entity.Property(e => e.SegUsuarioSolicitanteIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_solicitante_identificacion");
            entity.Property(e => e.SegUsuarioSolicitanteIntentosFallidos).HasColumnName("seg_usuario_solicitante_intentosFallidos");
            entity.Property(e => e.SegUsuarioSolicitanteNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_solicitante_nombre");
            entity.Property(e => e.SegUsuarioSolicitanteNumeroIngresos).HasColumnName("seg_usuario_solicitante_numeroIngresos");
            entity.Property(e => e.SegUsuarioSolicitantePorcentajeComision).HasColumnName("seg_usuario_solicitante_porcentajeComision");
            entity.Property(e => e.SegUsuarioSolicitantePreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_solicitante_preferencias");
            entity.Property(e => e.SegUsuarioSolicitanteProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_solicitante_profesion");
            entity.Property(e => e.SegUsuarioSolicitanteSexo).HasColumnName("seg_usuario_solicitante_sexo");
            entity.Property(e => e.SegUsuarioSolicitanteTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_solicitante_telefono");
            entity.Property(e => e.SegUsuarioSolicitanteUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_solicitante_usuario");
            entity.Property(e => e.SegUsuarioSolicitanteUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_solicitante_usuario_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoOpcionRespuestum>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_opcionRespuesta");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocDocumentoCosto).HasColumnName("doc_documento_costo");
            entity.Property(e => e.DocDocumentoCostoPlaneado).HasColumnName("doc_documento_costoPlaneado");
            entity.Property(e => e.DocDocumentoDescuento).HasColumnName("doc_documento_descuento");
            entity.Property(e => e.DocDocumentoDescuentoPlaneado).HasColumnName("doc_documento_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento");
            entity.Property(e => e.DocDocumentoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento_codigo");
            entity.Property(e => e.DocDocumentoDocumentoNumero).HasColumnName("doc_documento_documento_numero");
            entity.Property(e => e.DocDocumentoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fecha_fh");
            entity.Property(e => e.DocDocumentoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoIdDocumento).HasColumnName("doc_documento_id_documento");
            entity.Property(e => e.DocDocumentoIdEstadoTipoDocumento).HasColumnName("doc_documento_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoIdMoneda).HasColumnName("doc_documento_id_moneda");
            entity.Property(e => e.DocDocumentoIdMotivoestado).HasColumnName("doc_documento_id_motivoestado");
            entity.Property(e => e.DocDocumentoIdPrioridadDocumento).HasColumnName("doc_documento_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoIdSubtipoDocumento).HasColumnName("doc_documento_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoIdTerceroCliente).HasColumnName("doc_documento_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoIdTerceroProveedor).HasColumnName("doc_documento_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoIdUsuarioAsignado).HasColumnName("doc_documento_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoIdUsuarioEnUso).HasColumnName("doc_documento_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoIva).HasColumnName("doc_documento_iva");
            entity.Property(e => e.DocDocumentoIvaPlaneado).HasColumnName("doc_documento_ivaPlaneado");
            entity.Property(e => e.DocDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_prefijo");
            entity.Property(e => e.DocDocumentoRentabilidad).HasColumnName("doc_documento_rentabilidad");
            entity.Property(e => e.DocDocumentoSubtotal).HasColumnName("doc_documento_subtotal");
            entity.Property(e => e.DocDocumentoSubtotalPlaneado).HasColumnName("doc_documento_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoTotal).HasColumnName("doc_documento_total");
            entity.Property(e => e.DocDocumentoTotalPlaneado).HasColumnName("doc_documento_totalPlaneado");
            entity.Property(e => e.DocDocumentoTrm).HasColumnName("doc_documento_trm");
            entity.Property(e => e.DocOpcionRespuestaActiva).HasColumnName("doc_opcionRespuesta_activa");
            entity.Property(e => e.DocOpcionRespuestaIdPregunta).HasColumnName("doc_opcionRespuesta_id_pregunta");
            entity.Property(e => e.DocOpcionRespuestaOpcionRespuesta)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_opcionRespuesta_opcionRespuesta");
            entity.Property(e => e.DocOpcionRespuestaOpcionRespuestaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_opcionRespuesta_opcionRespuesta_codigo");
            entity.Property(e => e.DocOpcionRespuestaOrden).HasColumnName("doc_opcionRespuesta_orden");
            entity.Property(e => e.DocOpcionRespuestaValor).HasColumnName("doc_opcionRespuesta_valor");
            entity.Property(e => e.DocPreguntaActiva).HasColumnName("doc_pregunta_activa");
            entity.Property(e => e.DocPreguntaIdEvaluacion).HasColumnName("doc_pregunta_id_evaluacion");
            entity.Property(e => e.DocPreguntaOrden).HasColumnName("doc_pregunta_orden");
            entity.Property(e => e.DocPreguntaPregunta)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_pregunta_pregunta");
            entity.Property(e => e.DocPreguntaPreguntaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_pregunta_pregunta_codigo");
            entity.Property(e => e.DocPreguntaValor).HasColumnName("doc_pregunta_valor");
            entity.Property(e => e.DocumentoOpcionRespuesta)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento_opcionRespuesta");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdOpcionRespuesta).HasColumnName("id_opcionRespuesta");
            entity.Property(e => e.IdPregunta).HasColumnName("id_pregunta");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoOrdenCompra>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_ordenCompra");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Asunto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("asunto");
            entity.Property(e => e.DireccionEntrega)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("direccionEntrega");
            entity.Property(e => e.DocDocumentoOrdenCompraCosto).HasColumnName("doc_documento_ordenCompra_costo");
            entity.Property(e => e.DocDocumentoOrdenCompraCostoPlaneado).HasColumnName("doc_documento_ordenCompra_costoPlaneado");
            entity.Property(e => e.DocDocumentoOrdenCompraDescuento).HasColumnName("doc_documento_ordenCompra_descuento");
            entity.Property(e => e.DocDocumentoOrdenCompraDescuentoPlaneado).HasColumnName("doc_documento_ordenCompra_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreCosto).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_costo");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreCostoPlaneado).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_costoPlaneado");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreDescuento).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_descuento");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreDescuentoPlaneado).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_doc_documento_padre_documento");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_doc_documento_padre_documento_codigo");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreDocumentoNumero).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_documento_numero");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ordenCompra_doc_documento_padre_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ordenCompra_doc_documento_padre_fecha_fh");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ordenCompra_doc_documento_padre_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ordenCompra_doc_documento_padre_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreIdDocumento).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_id_documento");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreIdEstadoTipoDocumento).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreIdMoneda).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_id_moneda");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreIdMotivoestado).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_id_motivoestado");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreIdPrioridadDocumento).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreIdSubtipoDocumento).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreIdTerceroCliente).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreIdTerceroProveedor).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreIdUsuarioAsignado).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreIdUsuarioEnUso).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreIva).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_iva");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreIvaPlaneado).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_ivaPlaneado");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadrePrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_doc_documento_padre_prefijo");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreRentabilidad).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_rentabilidad");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreSubtotal).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_subtotal");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreSubtotalPlaneado).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreTotal).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_total");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreTotalPlaneado).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_totalPlaneado");
            entity.Property(e => e.DocDocumentoOrdenCompraDocDocumentoPadreTrm).HasColumnName("doc_documento_ordenCompra_doc_documento_padre_trm");
            entity.Property(e => e.DocDocumentoOrdenCompraDocEstadoTipoDocumentoAfectaIndicador).HasColumnName("doc_documento_ordenCompra_doc_estadoTipoDocumento_afectaIndicador");
            entity.Property(e => e.DocDocumentoOrdenCompraDocEstadoTipoDocumentoAfectaInventario).HasColumnName("doc_documento_ordenCompra_doc_estadoTipoDocumento_afectaInventario");
            entity.Property(e => e.DocDocumentoOrdenCompraDocEstadoTipoDocumentoColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_doc_estadoTipoDocumento_color");
            entity.Property(e => e.DocDocumentoOrdenCompraDocEstadoTipoDocumentoDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_doc_estadoTipoDocumento_descripcion");
            entity.Property(e => e.DocDocumentoOrdenCompraDocEstadoTipoDocumentoEditaDocumento).HasColumnName("doc_documento_ordenCompra_doc_estadoTipoDocumento_editaDocumento");
            entity.Property(e => e.DocDocumentoOrdenCompraDocEstadoTipoDocumentoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_doc_estadoTipoDocumento_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoOrdenCompraDocEstadoTipoDocumentoEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_doc_estadoTipoDocumento_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocDocumentoOrdenCompraDocEstadoTipoDocumentoIdTipoDocumento).HasColumnName("doc_documento_ordenCompra_doc_estadoTipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoOrdenCompraDocEstadoTipoDocumentoOrden).HasColumnName("doc_documento_ordenCompra_doc_estadoTipoDocumento_orden");
            entity.Property(e => e.DocDocumentoOrdenCompraDocEstadoTipoDocumentoPuedeRegresar).HasColumnName("doc_documento_ordenCompra_doc_estadoTipoDocumento_puedeRegresar");
            entity.Property(e => e.DocDocumentoOrdenCompraDocMotivoestadoIdEstadoTipoDocumento).HasColumnName("doc_documento_ordenCompra_doc_motivoestado_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoOrdenCompraDocMotivoestadoMotivoestado)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_doc_motivoestado_motivoestado");
            entity.Property(e => e.DocDocumentoOrdenCompraDocMotivoestadoMotivoestadoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_doc_motivoestado_motivoestado_codigo");
            entity.Property(e => e.DocDocumentoOrdenCompraDocPrioridadDocumentoIdEstrategiaPrioridad).HasColumnName("doc_documento_ordenCompra_doc_prioridadDocumento_id_estrategiaPrioridad");
            entity.Property(e => e.DocDocumentoOrdenCompraDocPrioridadDocumentoIdTipoDocumento).HasColumnName("doc_documento_ordenCompra_doc_prioridadDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoOrdenCompraDocPrioridadDocumentoOrden).HasColumnName("doc_documento_ordenCompra_doc_prioridadDocumento_orden");
            entity.Property(e => e.DocDocumentoOrdenCompraDocPrioridadDocumentoPrioridadDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_doc_prioridadDocumento_prioridadDocumento");
            entity.Property(e => e.DocDocumentoOrdenCompraDocPrioridadDocumentoPrioridadDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_doc_prioridadDocumento_prioridadDocumento_codigo");
            entity.Property(e => e.DocDocumentoOrdenCompraDocPrioridadDocumentoTiempoRespuesta).HasColumnName("doc_documento_ordenCompra_doc_prioridadDocumento_tiempoRespuesta");
            entity.Property(e => e.DocDocumentoOrdenCompraDocSubtipoDocumentoBloquearDespacho).HasColumnName("doc_documento_ordenCompra_doc_subtipoDocumento_bloquearDespacho");
            entity.Property(e => e.DocDocumentoOrdenCompraDocSubtipoDocumentoCargarSolicitante).HasColumnName("doc_documento_ordenCompra_doc_subtipoDocumento_cargarSolicitante");
            entity.Property(e => e.DocDocumentoOrdenCompraDocSubtipoDocumentoCerrarSol).HasColumnName("doc_documento_ordenCompra_doc_subtipoDocumento_cerrarSol");
            entity.Property(e => e.DocDocumentoOrdenCompraDocSubtipoDocumentoConsecutivo).HasColumnName("doc_documento_ordenCompra_doc_subtipoDocumento_consecutivo");
            entity.Property(e => e.DocDocumentoOrdenCompraDocSubtipoDocumentoIdTipoDocumento).HasColumnName("doc_documento_ordenCompra_doc_subtipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoOrdenCompraDocSubtipoDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_doc_subtipoDocumento_prefijo");
            entity.Property(e => e.DocDocumentoOrdenCompraDocSubtipoDocumentoProgramarPlaneadas).HasColumnName("doc_documento_ordenCompra_doc_subtipoDocumento_programarPlaneadas");
            entity.Property(e => e.DocDocumentoOrdenCompraDocSubtipoDocumentoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_doc_subtipoDocumento_subtipoDocumento");
            entity.Property(e => e.DocDocumentoOrdenCompraDocSubtipoDocumentoSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_doc_subtipoDocumento_subtipoDocumento_codigo");
            entity.Property(e => e.DocDocumentoOrdenCompraDocSubtipoDocumentoValUrgente).HasColumnName("doc_documento_ordenCompra_doc_subtipoDocumento_valUrgente");
            entity.Property(e => e.DocDocumentoOrdenCompraDocSubtipoDocumentoVerCentroCosto).HasColumnName("doc_documento_ordenCompra_doc_subtipoDocumento_verCentroCosto");
            entity.Property(e => e.DocDocumentoOrdenCompraDocSubtipoDocumentoVerIncoterm).HasColumnName("doc_documento_ordenCompra_doc_subtipoDocumento_verIncoterm");
            entity.Property(e => e.DocDocumentoOrdenCompraDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_documento_codigo");
            entity.Property(e => e.DocDocumentoOrdenCompraDocumentoNumero).HasColumnName("doc_documento_ordenCompra_documento_numero");
            entity.Property(e => e.DocDocumentoOrdenCompraFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ordenCompra_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoOrdenCompraFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ordenCompra_fecha_fh");
            entity.Property(e => e.DocDocumentoOrdenCompraFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ordenCompra_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoOrdenCompraFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ordenCompra_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoOrdenCompraGenMonedaAbreviatura)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_gen_moneda_abreviatura");
            entity.Property(e => e.DocDocumentoOrdenCompraGenMonedaCambio).HasColumnName("doc_documento_ordenCompra_gen_moneda_cambio");
            entity.Property(e => e.DocDocumentoOrdenCompraGenMonedaMoneda)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_gen_moneda_moneda");
            entity.Property(e => e.DocDocumentoOrdenCompraGenMonedaMonedaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_gen_moneda_moneda_codigo");
            entity.Property(e => e.DocDocumentoOrdenCompraIdDocumento).HasColumnName("doc_documento_ordenCompra_id_documento");
            entity.Property(e => e.DocDocumentoOrdenCompraIdEstadoTipoDocumento).HasColumnName("doc_documento_ordenCompra_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoOrdenCompraIdMoneda).HasColumnName("doc_documento_ordenCompra_id_moneda");
            entity.Property(e => e.DocDocumentoOrdenCompraIdMotivoestado).HasColumnName("doc_documento_ordenCompra_id_motivoestado");
            entity.Property(e => e.DocDocumentoOrdenCompraIdPrioridadDocumento).HasColumnName("doc_documento_ordenCompra_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoOrdenCompraIdSubtipoDocumento).HasColumnName("doc_documento_ordenCompra_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoOrdenCompraIdTerceroCliente).HasColumnName("doc_documento_ordenCompra_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoOrdenCompraIdTerceroProveedor).HasColumnName("doc_documento_ordenCompra_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoOrdenCompraIdUsuarioAsignado).HasColumnName("doc_documento_ordenCompra_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoOrdenCompraIdUsuarioEnUso).HasColumnName("doc_documento_ordenCompra_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoOrdenCompraIva).HasColumnName("doc_documento_ordenCompra_iva");
            entity.Property(e => e.DocDocumentoOrdenCompraIvaPlaneado).HasColumnName("doc_documento_ordenCompra_ivaPlaneado");
            entity.Property(e => e.DocDocumentoOrdenCompraPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_prefijo");
            entity.Property(e => e.DocDocumentoOrdenCompraRentabilidad).HasColumnName("doc_documento_ordenCompra_rentabilidad");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoAccesoActivo).HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_accesoActivo");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoAplicaRecargo).HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_aplicaRecargo");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoCambiarClave).HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_cambiarClave");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_clave");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoCostoHora)
                .HasColumnType("money")
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_costoHora");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_direccion");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_email");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_fechaIntentoFallido_fh");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_fechaUltimoCambioClave_fh");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_fechaUltimoIngreso_fh");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoHabilitado).HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_habilitado");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoIdCargo).HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_id_cargo");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoIdGrupo).HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_id_grupo");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoIdPerfil).HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_id_perfil");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoIdUsuario).HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_id_usuario");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoIdZona).HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_id_zona");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_identificacion");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoIntentosFallidos).HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_intentosFallidos");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_nombre");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoNumeroIngresos).HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_numeroIngresos");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoPorcentajeComision).HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_porcentajeComision");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoPreferencias)
                .HasColumnType("image")
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_preferencias");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_profesion");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoSexo).HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_sexo");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_telefono");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_usuario");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioAsignadoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_asignado_usuario_codigo");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoAccesoActivo).HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_accesoActivo");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoAplicaRecargo).HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_aplicaRecargo");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoCambiarClave).HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_cambiarClave");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_clave");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoCostoHora)
                .HasColumnType("money")
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_costoHora");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_direccion");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_email");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_fechaIntentoFallido_fh");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_fechaUltimoCambioClave_fh");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_fechaUltimoIngreso_fh");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoHabilitado).HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_habilitado");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoIdCargo).HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_id_cargo");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoIdGrupo).HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_id_grupo");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoIdPerfil).HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_id_perfil");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoIdUsuario).HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_id_usuario");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoIdZona).HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_id_zona");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_identificacion");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoIntentosFallidos).HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_intentosFallidos");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_nombre");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoNumeroIngresos).HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_numeroIngresos");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoPorcentajeComision).HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_porcentajeComision");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoPreferencias)
                .HasColumnType("image")
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_preferencias");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_profesion");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoSexo).HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_sexo");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_telefono");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_usuario");
            entity.Property(e => e.DocDocumentoOrdenCompraSegUsuarioEnUsoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_seg_usuario_enUso_usuario_codigo");
            entity.Property(e => e.DocDocumentoOrdenCompraSubtotal).HasColumnName("doc_documento_ordenCompra_subtotal");
            entity.Property(e => e.DocDocumentoOrdenCompraSubtotalPlaneado).HasColumnName("doc_documento_ordenCompra_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroClienteClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_cliente_clasificacion");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroClienteContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_cliente_contacto");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroClienteDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_cliente_direccion");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroClienteEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_cliente_email");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroClienteEsCliente).HasColumnName("doc_documento_ordenCompra_ter_tercero_cliente_esCliente");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroClienteEsEmpresaPropia).HasColumnName("doc_documento_ordenCompra_ter_tercero_cliente_esEmpresaPropia");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroClienteEsFabricante).HasColumnName("doc_documento_ordenCompra_ter_tercero_cliente_esFabricante");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroClienteEsProspecto).HasColumnName("doc_documento_ordenCompra_ter_tercero_cliente_esProspecto");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroClienteEsProveedor).HasColumnName("doc_documento_ordenCompra_ter_tercero_cliente_esProveedor");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroClienteEsTransportador).HasColumnName("doc_documento_ordenCompra_ter_tercero_cliente_esTransportador");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroClienteFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_cliente_fax");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroClienteIdEstadoTercero).HasColumnName("doc_documento_ordenCompra_ter_tercero_cliente_id_estadoTercero");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroClienteIdNaturalezaTercero).HasColumnName("doc_documento_ordenCompra_ter_tercero_cliente_id_naturalezaTercero");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroClienteIdZona).HasColumnName("doc_documento_ordenCompra_ter_tercero_cliente_id_zona");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroClienteNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_cliente_notas");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroClienteRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_cliente_representante");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroClienteTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_cliente_telefono");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroClienteTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_cliente_tercero");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroClienteTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_cliente_tercero_codigo");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroClienteTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_cliente_tercero_nit");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroClienteTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_cliente_tercero_nombreCorto");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroClienteWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_cliente_website");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroProveedorClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_proveedor_clasificacion");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroProveedorContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_proveedor_contacto");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroProveedorDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_proveedor_direccion");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroProveedorEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_proveedor_email");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroProveedorEsCliente).HasColumnName("doc_documento_ordenCompra_ter_tercero_proveedor_esCliente");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroProveedorEsEmpresaPropia).HasColumnName("doc_documento_ordenCompra_ter_tercero_proveedor_esEmpresaPropia");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroProveedorEsFabricante).HasColumnName("doc_documento_ordenCompra_ter_tercero_proveedor_esFabricante");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroProveedorEsProspecto).HasColumnName("doc_documento_ordenCompra_ter_tercero_proveedor_esProspecto");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroProveedorEsProveedor).HasColumnName("doc_documento_ordenCompra_ter_tercero_proveedor_esProveedor");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroProveedorEsTransportador).HasColumnName("doc_documento_ordenCompra_ter_tercero_proveedor_esTransportador");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroProveedorFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_proveedor_fax");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroProveedorIdEstadoTercero).HasColumnName("doc_documento_ordenCompra_ter_tercero_proveedor_id_estadoTercero");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroProveedorIdNaturalezaTercero).HasColumnName("doc_documento_ordenCompra_ter_tercero_proveedor_id_naturalezaTercero");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroProveedorIdZona).HasColumnName("doc_documento_ordenCompra_ter_tercero_proveedor_id_zona");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroProveedorNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_proveedor_notas");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroProveedorRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_proveedor_representante");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroProveedorTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_proveedor_telefono");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroProveedorTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_proveedor_tercero");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroProveedorTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_proveedor_tercero_codigo");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroProveedorTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_proveedor_tercero_nit");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroProveedorTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_proveedor_tercero_nombreCorto");
            entity.Property(e => e.DocDocumentoOrdenCompraTerTerceroProveedorWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ordenCompra_ter_tercero_proveedor_website");
            entity.Property(e => e.DocDocumentoOrdenCompraTotal).HasColumnName("doc_documento_ordenCompra_total");
            entity.Property(e => e.DocDocumentoOrdenCompraTotalPlaneado).HasColumnName("doc_documento_ordenCompra_totalPlaneado");
            entity.Property(e => e.DocDocumentoOrdenCompraTrm).HasColumnName("doc_documento_ordenCompra_trm");
            entity.Property(e => e.DocFormaPagoFormaPago)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_formaPago_formaPago");
            entity.Property(e => e.DocFormaPagoFormaPagoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_formaPago_formaPago_codigo");
            entity.Property(e => e.DocFormapagoDiaspago).HasColumnName("doc_formapago_diaspago");
            entity.Property(e => e.DocumentoOrdenCompra)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.ordenCompra");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaPagoFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaPago_ff");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdFormaPago).HasColumnName("id_formaPago");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("observaciones");
            entity.Property(e => e.Solicitante)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("solicitante");
            entity.Property(e => e.TelefonoEntrega)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("telefonoEntrega");
            entity.Property(e => e.TerSucursalCodigorecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_codigorecursiva");
            entity.Property(e => e.TerSucursalContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_contacto");
            entity.Property(e => e.TerSucursalDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Direccion");
            entity.Property(e => e.TerSucursalEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Email");
            entity.Property(e => e.TerSucursalFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Fax");
            entity.Property(e => e.TerSucursalIdEstadoTercero).HasColumnName("ter_sucursal_id_estadoTercero");
            entity.Property(e => e.TerSucursalIdSucursal).HasColumnName("ter_sucursal_id_sucursal");
            entity.Property(e => e.TerSucursalIdTercero).HasColumnName("ter_sucursal_id_tercero");
            entity.Property(e => e.TerSucursalIdUsuarioAsesor).HasColumnName("ter_sucursal_id_usuario_asesor");
            entity.Property(e => e.TerSucursalIdUsuarioTecnico).HasColumnName("ter_sucursal_id_usuario_tecnico");
            entity.Property(e => e.TerSucursalIdZona).HasColumnName("ter_sucursal_id_zona");
            entity.Property(e => e.TerSucursalParaAlquiler).HasColumnName("ter_sucursal_paraAlquiler");
            entity.Property(e => e.TerSucursalParaSoporte).HasColumnName("ter_sucursal_paraSoporte");
            entity.Property(e => e.TerSucursalParaVenta).HasColumnName("ter_sucursal_paraVenta");
            entity.Property(e => e.TerSucursalSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal");
            entity.Property(e => e.TerSucursalSucursalCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal_codigo");
            entity.Property(e => e.TerSucursalTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_telefono");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoOt>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_ot");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Cargo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cargo");
            entity.Property(e => e.CatSistemaIdSistema).HasColumnName("cat_sistema_id_sistema");
            entity.Property(e => e.CatSistemaSistema)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_sistema_sistema");
            entity.Property(e => e.CatSistemaSistemaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_sistema_sistema_codigo");
            entity.Property(e => e.CntContratoCondiciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_condiciones");
            entity.Property(e => e.CntContratoContrato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_contrato");
            entity.Property(e => e.CntContratoContratoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_contrato_codigo");
            entity.Property(e => e.CntContratoDiasCumplimiento).HasColumnName("cnt_contrato_diasCumplimiento");
            entity.Property(e => e.CntContratoFechaFinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_contrato_fechaFin_ff");
            entity.Property(e => e.CntContratoFechaInicioFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("cnt_contrato_fechaInicio_ff");
            entity.Property(e => e.CntContratoIdDepartamentoSolicitud).HasColumnName("cnt_contrato_id_departamentoSolicitud");
            entity.Property(e => e.CntContratoIdDocumentoAlquiler).HasColumnName("cnt_contrato_id_documento.alquiler");
            entity.Property(e => e.CntContratoIdPeriodoContrato).HasColumnName("cnt_contrato_id_periodoContrato");
            entity.Property(e => e.CntContratoIdSubtipoDocumento).HasColumnName("cnt_contrato_id_subtipoDocumento");
            entity.Property(e => e.CntContratoIdTercero).HasColumnName("cnt_contrato_id_tercero");
            entity.Property(e => e.CntContratoIdTerceroServicio).HasColumnName("cnt_contrato_id_tercero_servicio");
            entity.Property(e => e.CntContratoIdTipoContrato).HasColumnName("cnt_contrato_id_tipoContrato");
            entity.Property(e => e.CntContratoIdTipoServicio).HasColumnName("cnt_contrato_id_tipoServicio");
            entity.Property(e => e.CntContratoIdUsuarioCoordinador).HasColumnName("cnt_contrato_id_usuario_coordinador");
            entity.Property(e => e.CntContratoNumero)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cnt_contrato_numero");
            entity.Property(e => e.CntContratoPresupuesto)
                .HasColumnType("money")
                .HasColumnName("cnt_contrato_presupuesto");
            entity.Property(e => e.CntContratoTotalContrato)
                .HasColumnType("money")
                .HasColumnName("cnt_contrato_totalContrato");
            entity.Property(e => e.Compromisos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("compromisos");
            entity.Property(e => e.Contacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("contacto");
            entity.Property(e => e.DiagnosticoInicial)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("diagnosticoInicial");
            entity.Property(e => e.DireccionUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("direccionUbicacion");
            entity.Property(e => e.DistribuyeCentros).HasColumnName("distribuyeCentros");
            entity.Property(e => e.DocDocumentoOtCosto).HasColumnName("doc_documento_ot_costo");
            entity.Property(e => e.DocDocumentoOtCostoPlaneado).HasColumnName("doc_documento_ot_costoPlaneado");
            entity.Property(e => e.DocDocumentoOtDescuento).HasColumnName("doc_documento_ot_descuento");
            entity.Property(e => e.DocDocumentoOtDescuentoPlaneado).HasColumnName("doc_documento_ot_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreCosto).HasColumnName("doc_documento_ot_doc_documento_padre_costo");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreCostoPlaneado).HasColumnName("doc_documento_ot_doc_documento_padre_costoPlaneado");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreDescuento).HasColumnName("doc_documento_ot_doc_documento_padre_descuento");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreDescuentoPlaneado).HasColumnName("doc_documento_ot_doc_documento_padre_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_doc_documento_padre_documento");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_doc_documento_padre_documento_codigo");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreDocumentoNumero).HasColumnName("doc_documento_ot_doc_documento_padre_documento_numero");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_doc_documento_padre_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_doc_documento_padre_fecha_fh");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_doc_documento_padre_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_doc_documento_padre_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreIdDocumento).HasColumnName("doc_documento_ot_doc_documento_padre_id_documento");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreIdEstadoTipoDocumento).HasColumnName("doc_documento_ot_doc_documento_padre_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreIdMoneda).HasColumnName("doc_documento_ot_doc_documento_padre_id_moneda");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreIdMotivoestado).HasColumnName("doc_documento_ot_doc_documento_padre_id_motivoestado");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreIdPrioridadDocumento).HasColumnName("doc_documento_ot_doc_documento_padre_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreIdSubtipoDocumento).HasColumnName("doc_documento_ot_doc_documento_padre_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreIdTerceroCliente).HasColumnName("doc_documento_ot_doc_documento_padre_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreIdTerceroProveedor).HasColumnName("doc_documento_ot_doc_documento_padre_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreIdUsuarioAsignado).HasColumnName("doc_documento_ot_doc_documento_padre_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreIdUsuarioEnUso).HasColumnName("doc_documento_ot_doc_documento_padre_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreIva).HasColumnName("doc_documento_ot_doc_documento_padre_iva");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreIvaPlaneado).HasColumnName("doc_documento_ot_doc_documento_padre_ivaPlaneado");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadrePrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_doc_documento_padre_prefijo");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreRentabilidad).HasColumnName("doc_documento_ot_doc_documento_padre_rentabilidad");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreSubtotal).HasColumnName("doc_documento_ot_doc_documento_padre_subtotal");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreSubtotalPlaneado).HasColumnName("doc_documento_ot_doc_documento_padre_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreTotal).HasColumnName("doc_documento_ot_doc_documento_padre_total");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreTotalPlaneado).HasColumnName("doc_documento_ot_doc_documento_padre_totalPlaneado");
            entity.Property(e => e.DocDocumentoOtDocDocumentoPadreTrm).HasColumnName("doc_documento_ot_doc_documento_padre_trm");
            entity.Property(e => e.DocDocumentoOtDocEstadoTipoDocumentoAfectaIndicador).HasColumnName("doc_documento_ot_doc_estadoTipoDocumento_afectaIndicador");
            entity.Property(e => e.DocDocumentoOtDocEstadoTipoDocumentoAfectaInventario).HasColumnName("doc_documento_ot_doc_estadoTipoDocumento_afectaInventario");
            entity.Property(e => e.DocDocumentoOtDocEstadoTipoDocumentoColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_doc_estadoTipoDocumento_color");
            entity.Property(e => e.DocDocumentoOtDocEstadoTipoDocumentoDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_doc_estadoTipoDocumento_descripcion");
            entity.Property(e => e.DocDocumentoOtDocEstadoTipoDocumentoEditaDocumento).HasColumnName("doc_documento_ot_doc_estadoTipoDocumento_editaDocumento");
            entity.Property(e => e.DocDocumentoOtDocEstadoTipoDocumentoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_doc_estadoTipoDocumento_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoOtDocEstadoTipoDocumentoEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_doc_estadoTipoDocumento_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocDocumentoOtDocEstadoTipoDocumentoIdTipoDocumento).HasColumnName("doc_documento_ot_doc_estadoTipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoOtDocEstadoTipoDocumentoOrden).HasColumnName("doc_documento_ot_doc_estadoTipoDocumento_orden");
            entity.Property(e => e.DocDocumentoOtDocEstadoTipoDocumentoPuedeRegresar).HasColumnName("doc_documento_ot_doc_estadoTipoDocumento_puedeRegresar");
            entity.Property(e => e.DocDocumentoOtDocMotivoestadoIdEstadoTipoDocumento).HasColumnName("doc_documento_ot_doc_motivoestado_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoOtDocMotivoestadoMotivoestado)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_doc_motivoestado_motivoestado");
            entity.Property(e => e.DocDocumentoOtDocMotivoestadoMotivoestadoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_doc_motivoestado_motivoestado_codigo");
            entity.Property(e => e.DocDocumentoOtDocPrioridadDocumentoIdEstrategiaPrioridad).HasColumnName("doc_documento_ot_doc_prioridadDocumento_id_estrategiaPrioridad");
            entity.Property(e => e.DocDocumentoOtDocPrioridadDocumentoIdTipoDocumento).HasColumnName("doc_documento_ot_doc_prioridadDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoOtDocPrioridadDocumentoOrden).HasColumnName("doc_documento_ot_doc_prioridadDocumento_orden");
            entity.Property(e => e.DocDocumentoOtDocPrioridadDocumentoPrioridadDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_doc_prioridadDocumento_prioridadDocumento");
            entity.Property(e => e.DocDocumentoOtDocPrioridadDocumentoPrioridadDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_doc_prioridadDocumento_prioridadDocumento_codigo");
            entity.Property(e => e.DocDocumentoOtDocPrioridadDocumentoTiempoRespuesta).HasColumnName("doc_documento_ot_doc_prioridadDocumento_tiempoRespuesta");
            entity.Property(e => e.DocDocumentoOtDocSubtipoDocumentoBloquearDespacho).HasColumnName("doc_documento_ot_doc_subtipoDocumento_bloquearDespacho");
            entity.Property(e => e.DocDocumentoOtDocSubtipoDocumentoCargarSolicitante).HasColumnName("doc_documento_ot_doc_subtipoDocumento_cargarSolicitante");
            entity.Property(e => e.DocDocumentoOtDocSubtipoDocumentoCerrarSol).HasColumnName("doc_documento_ot_doc_subtipoDocumento_cerrarSol");
            entity.Property(e => e.DocDocumentoOtDocSubtipoDocumentoConsecutivo).HasColumnName("doc_documento_ot_doc_subtipoDocumento_consecutivo");
            entity.Property(e => e.DocDocumentoOtDocSubtipoDocumentoIdTipoDocumento).HasColumnName("doc_documento_ot_doc_subtipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoOtDocSubtipoDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_doc_subtipoDocumento_prefijo");
            entity.Property(e => e.DocDocumentoOtDocSubtipoDocumentoProgramarPlaneadas).HasColumnName("doc_documento_ot_doc_subtipoDocumento_programarPlaneadas");
            entity.Property(e => e.DocDocumentoOtDocSubtipoDocumentoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_doc_subtipoDocumento_subtipoDocumento");
            entity.Property(e => e.DocDocumentoOtDocSubtipoDocumentoSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_doc_subtipoDocumento_subtipoDocumento_codigo");
            entity.Property(e => e.DocDocumentoOtDocSubtipoDocumentoValUrgente).HasColumnName("doc_documento_ot_doc_subtipoDocumento_valUrgente");
            entity.Property(e => e.DocDocumentoOtDocSubtipoDocumentoVerCentroCosto).HasColumnName("doc_documento_ot_doc_subtipoDocumento_verCentroCosto");
            entity.Property(e => e.DocDocumentoOtDocSubtipoDocumentoVerIncoterm).HasColumnName("doc_documento_ot_doc_subtipoDocumento_verIncoterm");
            entity.Property(e => e.DocDocumentoOtDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_documento_codigo");
            entity.Property(e => e.DocDocumentoOtDocumentoNumero).HasColumnName("doc_documento_ot_documento_numero");
            entity.Property(e => e.DocDocumentoOtFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoOtFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fecha_fh");
            entity.Property(e => e.DocDocumentoOtFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoOtFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoOtGenMonedaAbreviatura)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_gen_moneda_abreviatura");
            entity.Property(e => e.DocDocumentoOtGenMonedaCambio).HasColumnName("doc_documento_ot_gen_moneda_cambio");
            entity.Property(e => e.DocDocumentoOtGenMonedaMoneda)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_gen_moneda_moneda");
            entity.Property(e => e.DocDocumentoOtGenMonedaMonedaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_gen_moneda_moneda_codigo");
            entity.Property(e => e.DocDocumentoOtIdDocumento).HasColumnName("doc_documento_ot_id_documento");
            entity.Property(e => e.DocDocumentoOtIdEstadoTipoDocumento).HasColumnName("doc_documento_ot_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoOtIdMoneda).HasColumnName("doc_documento_ot_id_moneda");
            entity.Property(e => e.DocDocumentoOtIdMotivoestado).HasColumnName("doc_documento_ot_id_motivoestado");
            entity.Property(e => e.DocDocumentoOtIdPrioridadDocumento).HasColumnName("doc_documento_ot_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoOtIdSubtipoDocumento).HasColumnName("doc_documento_ot_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoOtIdTerceroCliente).HasColumnName("doc_documento_ot_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoOtIdTerceroProveedor).HasColumnName("doc_documento_ot_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoOtIdUsuarioAsignado).HasColumnName("doc_documento_ot_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoOtIdUsuarioEnUso).HasColumnName("doc_documento_ot_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoOtIva).HasColumnName("doc_documento_ot_iva");
            entity.Property(e => e.DocDocumentoOtIvaPlaneado).HasColumnName("doc_documento_ot_ivaPlaneado");
            entity.Property(e => e.DocDocumentoOtPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_prefijo");
            entity.Property(e => e.DocDocumentoOtRentabilidad).HasColumnName("doc_documento_ot_rentabilidad");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoAccesoActivo).HasColumnName("doc_documento_ot_seg_usuario_asignado_accesoActivo");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoAplicaRecargo).HasColumnName("doc_documento_ot_seg_usuario_asignado_aplicaRecargo");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoCambiarClave).HasColumnName("doc_documento_ot_seg_usuario_asignado_cambiarClave");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_seg_usuario_asignado_clave");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoCostoHora)
                .HasColumnType("money")
                .HasColumnName("doc_documento_ot_seg_usuario_asignado_costoHora");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_seg_usuario_asignado_direccion");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_seg_usuario_asignado_email");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_seg_usuario_asignado_fechaIntentoFallido_fh");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_seg_usuario_asignado_fechaUltimoCambioClave_fh");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_seg_usuario_asignado_fechaUltimoIngreso_fh");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoHabilitado).HasColumnName("doc_documento_ot_seg_usuario_asignado_habilitado");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoIdCargo).HasColumnName("doc_documento_ot_seg_usuario_asignado_id_cargo");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoIdGrupo).HasColumnName("doc_documento_ot_seg_usuario_asignado_id_grupo");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoIdPerfil).HasColumnName("doc_documento_ot_seg_usuario_asignado_id_perfil");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoIdUsuario).HasColumnName("doc_documento_ot_seg_usuario_asignado_id_usuario");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoIdZona).HasColumnName("doc_documento_ot_seg_usuario_asignado_id_zona");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_seg_usuario_asignado_identificacion");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoIntentosFallidos).HasColumnName("doc_documento_ot_seg_usuario_asignado_intentosFallidos");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_seg_usuario_asignado_nombre");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoNumeroIngresos).HasColumnName("doc_documento_ot_seg_usuario_asignado_numeroIngresos");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoPorcentajeComision).HasColumnName("doc_documento_ot_seg_usuario_asignado_porcentajeComision");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoPreferencias)
                .HasColumnType("image")
                .HasColumnName("doc_documento_ot_seg_usuario_asignado_preferencias");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_seg_usuario_asignado_profesion");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoSexo).HasColumnName("doc_documento_ot_seg_usuario_asignado_sexo");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_seg_usuario_asignado_telefono");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_seg_usuario_asignado_usuario");
            entity.Property(e => e.DocDocumentoOtSegUsuarioAsignadoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_seg_usuario_asignado_usuario_codigo");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoAccesoActivo).HasColumnName("doc_documento_ot_seg_usuario_enUso_accesoActivo");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoAplicaRecargo).HasColumnName("doc_documento_ot_seg_usuario_enUso_aplicaRecargo");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoCambiarClave).HasColumnName("doc_documento_ot_seg_usuario_enUso_cambiarClave");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_seg_usuario_enUso_clave");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoCostoHora)
                .HasColumnType("money")
                .HasColumnName("doc_documento_ot_seg_usuario_enUso_costoHora");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_seg_usuario_enUso_direccion");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_seg_usuario_enUso_email");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_seg_usuario_enUso_fechaIntentoFallido_fh");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_seg_usuario_enUso_fechaUltimoCambioClave_fh");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_seg_usuario_enUso_fechaUltimoIngreso_fh");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoHabilitado).HasColumnName("doc_documento_ot_seg_usuario_enUso_habilitado");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoIdCargo).HasColumnName("doc_documento_ot_seg_usuario_enUso_id_cargo");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoIdGrupo).HasColumnName("doc_documento_ot_seg_usuario_enUso_id_grupo");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoIdPerfil).HasColumnName("doc_documento_ot_seg_usuario_enUso_id_perfil");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoIdUsuario).HasColumnName("doc_documento_ot_seg_usuario_enUso_id_usuario");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoIdZona).HasColumnName("doc_documento_ot_seg_usuario_enUso_id_zona");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_seg_usuario_enUso_identificacion");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoIntentosFallidos).HasColumnName("doc_documento_ot_seg_usuario_enUso_intentosFallidos");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_seg_usuario_enUso_nombre");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoNumeroIngresos).HasColumnName("doc_documento_ot_seg_usuario_enUso_numeroIngresos");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoPorcentajeComision).HasColumnName("doc_documento_ot_seg_usuario_enUso_porcentajeComision");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoPreferencias)
                .HasColumnType("image")
                .HasColumnName("doc_documento_ot_seg_usuario_enUso_preferencias");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_seg_usuario_enUso_profesion");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoSexo).HasColumnName("doc_documento_ot_seg_usuario_enUso_sexo");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_seg_usuario_enUso_telefono");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_seg_usuario_enUso_usuario");
            entity.Property(e => e.DocDocumentoOtSegUsuarioEnUsoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_seg_usuario_enUso_usuario_codigo");
            entity.Property(e => e.DocDocumentoOtSubtotal).HasColumnName("doc_documento_ot_subtotal");
            entity.Property(e => e.DocDocumentoOtSubtotalPlaneado).HasColumnName("doc_documento_ot_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_cliente_clasificacion");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_cliente_contacto");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_cliente_direccion");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_cliente_email");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteEsCliente).HasColumnName("doc_documento_ot_ter_tercero_cliente_esCliente");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteEsEmpresaPropia).HasColumnName("doc_documento_ot_ter_tercero_cliente_esEmpresaPropia");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteEsFabricante).HasColumnName("doc_documento_ot_ter_tercero_cliente_esFabricante");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteEsProspecto).HasColumnName("doc_documento_ot_ter_tercero_cliente_esProspecto");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteEsProveedor).HasColumnName("doc_documento_ot_ter_tercero_cliente_esProveedor");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteEsTransportador).HasColumnName("doc_documento_ot_ter_tercero_cliente_esTransportador");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_cliente_fax");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteIdEstadoTercero).HasColumnName("doc_documento_ot_ter_tercero_cliente_id_estadoTercero");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteIdFormaPago).HasColumnName("doc_documento_ot_ter_tercero_cliente_id_formaPago");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteIdNaturalezaTercero).HasColumnName("doc_documento_ot_ter_tercero_cliente_id_naturalezaTercero");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteIdZona).HasColumnName("doc_documento_ot_ter_tercero_cliente_id_zona");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_cliente_notas");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_cliente_representante");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_cliente_telefono");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_cliente_tercero");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_cliente_tercero_codigo");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_cliente_tercero_nit");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_cliente_tercero_nombreCorto");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteTiempoEntrega).HasColumnName("doc_documento_ot_ter_tercero_cliente_tiempoEntrega");
            entity.Property(e => e.DocDocumentoOtTerTerceroClienteWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_cliente_website");
            entity.Property(e => e.DocDocumentoOtTerTerceroProveedorClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_proveedor_clasificacion");
            entity.Property(e => e.DocDocumentoOtTerTerceroProveedorContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_proveedor_contacto");
            entity.Property(e => e.DocDocumentoOtTerTerceroProveedorDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_proveedor_direccion");
            entity.Property(e => e.DocDocumentoOtTerTerceroProveedorEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_proveedor_email");
            entity.Property(e => e.DocDocumentoOtTerTerceroProveedorEsCliente).HasColumnName("doc_documento_ot_ter_tercero_proveedor_esCliente");
            entity.Property(e => e.DocDocumentoOtTerTerceroProveedorEsEmpresaPropia).HasColumnName("doc_documento_ot_ter_tercero_proveedor_esEmpresaPropia");
            entity.Property(e => e.DocDocumentoOtTerTerceroProveedorEsFabricante).HasColumnName("doc_documento_ot_ter_tercero_proveedor_esFabricante");
            entity.Property(e => e.DocDocumentoOtTerTerceroProveedorEsProspecto).HasColumnName("doc_documento_ot_ter_tercero_proveedor_esProspecto");
            entity.Property(e => e.DocDocumentoOtTerTerceroProveedorEsProveedor).HasColumnName("doc_documento_ot_ter_tercero_proveedor_esProveedor");
            entity.Property(e => e.DocDocumentoOtTerTerceroProveedorEsTransportador).HasColumnName("doc_documento_ot_ter_tercero_proveedor_esTransportador");
            entity.Property(e => e.DocDocumentoOtTerTerceroProveedorFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_proveedor_fax");
            entity.Property(e => e.DocDocumentoOtTerTerceroProveedorIdEstadoTercero).HasColumnName("doc_documento_ot_ter_tercero_proveedor_id_estadoTercero");
            entity.Property(e => e.DocDocumentoOtTerTerceroProveedorIdNaturalezaTercero).HasColumnName("doc_documento_ot_ter_tercero_proveedor_id_naturalezaTercero");
            entity.Property(e => e.DocDocumentoOtTerTerceroProveedorIdZona).HasColumnName("doc_documento_ot_ter_tercero_proveedor_id_zona");
            entity.Property(e => e.DocDocumentoOtTerTerceroProveedorNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_proveedor_notas");
            entity.Property(e => e.DocDocumentoOtTerTerceroProveedorRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_proveedor_representante");
            entity.Property(e => e.DocDocumentoOtTerTerceroProveedorTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_proveedor_telefono");
            entity.Property(e => e.DocDocumentoOtTerTerceroProveedorTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_proveedor_tercero");
            entity.Property(e => e.DocDocumentoOtTerTerceroProveedorTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_proveedor_tercero_codigo");
            entity.Property(e => e.DocDocumentoOtTerTerceroProveedorTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_proveedor_tercero_nit");
            entity.Property(e => e.DocDocumentoOtTerTerceroProveedorTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_proveedor_tercero_nombreCorto");
            entity.Property(e => e.DocDocumentoOtTerTerceroProveedorWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_ter_tercero_proveedor_website");
            entity.Property(e => e.DocDocumentoOtTotal).HasColumnName("doc_documento_ot_total");
            entity.Property(e => e.DocDocumentoOtTotalPlaneado).HasColumnName("doc_documento_ot_totalPlaneado");
            entity.Property(e => e.DocDocumentoOtTrm).HasColumnName("doc_documento_ot_trm");
            entity.Property(e => e.DocumentoOt)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.ot");
            entity.Property(e => e.DuracionEstimada).HasColumnName("duracionEstimada");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.EnTaller).HasColumnName("enTaller");
            entity.Property(e => e.EquEquipoCosto)
                .HasColumnType("money")
                .HasColumnName("equ_equipo_costo");
            entity.Property(e => e.EquEquipoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo");
            entity.Property(e => e.EquEquipoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_codigo");
            entity.Property(e => e.EquEquipoEquipoSerial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_serial");
            entity.Property(e => e.EquEquipoFechaImportacionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaImportacion_ff");
            entity.Property(e => e.EquEquipoFechaPuestaMarchaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaPuestaMarcha_fh");
            entity.Property(e => e.EquEquipoGarantiaCancelada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_garantiaCancelada");
            entity.Property(e => e.EquEquipoHorasGarantia).HasColumnName("equ_equipo_horasGarantia");
            entity.Property(e => e.EquEquipoHorometroActual).HasColumnName("equ_equipo_horometroActual");
            entity.Property(e => e.EquEquipoIdCatalogoEquipo).HasColumnName("equ_equipo_id_catalogo.equipo");
            entity.Property(e => e.EquEquipoIdCentroCosto).HasColumnName("equ_equipo_id_centroCosto");
            entity.Property(e => e.EquEquipoIdEquipo).HasColumnName("equ_equipo_id_equipo");
            entity.Property(e => e.EquEquipoIdEstadoEquipo).HasColumnName("equ_equipo_id_estadoEquipo");
            entity.Property(e => e.EquEquipoIdSistema).HasColumnName("equ_equipo_id_sistema");
            entity.Property(e => e.EquEquipoIdSucursal).HasColumnName("equ_equipo_id_sucursal");
            entity.Property(e => e.EquEquipoIdTercero).HasColumnName("equ_equipo_id_tercero");
            entity.Property(e => e.EquEquipoIdTerceroComprador).HasColumnName("equ_equipo_id_tercero_comprador");
            entity.Property(e => e.EquEquipoIdTerceroServicio).HasColumnName("equ_equipo_id_tercero_servicio");
            entity.Property(e => e.EquEquipoIdVersionEquipo).HasColumnName("equ_equipo_id_versionEquipo");
            entity.Property(e => e.EquEquipoIdZona).HasColumnName("equ_equipo_id_zona");
            entity.Property(e => e.EquEquipoNombreContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_nombreContacto");
            entity.Property(e => e.EquEquipoObservaciones)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_observaciones");
            entity.Property(e => e.EquEquipoPromedioHoras).HasColumnName("equ_equipo_promedioHoras");
            entity.Property(e => e.EquEquipoTelefonoContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_telefonoContacto");
            entity.Property(e => e.EquEquipoUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_ubicacion");
            entity.Property(e => e.EquEquipoUltimaLecturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_ultimaLectura_fh");
            entity.Property(e => e.EquEquipoVencimientoGarantiaDistribuidorFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaDistribuidor_ff");
            entity.Property(e => e.EquEquipoVencimientoGarantiaFabricaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaFabrica_ff");
            entity.Property(e => e.Fax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fax");
            entity.Property(e => e.FechaCompromisoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCompromiso_fh");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaGarantia_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenTipoServicioDiasGarantia).HasColumnName("gen_tipoServicio_diasGarantia");
            entity.Property(e => e.GenTipoServicioTieneGarantia).HasColumnName("gen_tipoServicio_tieneGarantia");
            entity.Property(e => e.GenTipoServicioTipoServicio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_tipoServicio_tipoServicio");
            entity.Property(e => e.GenTipoServicioTipoServicioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_tipoServicio_tipoServicio_codigo");
            entity.Property(e => e.GenZonaCodigoExterno)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("gen_zona_codigoExterno");
            entity.Property(e => e.GenZonaIdZona).HasColumnName("gen_zona_id_zona");
            entity.Property(e => e.GenZonaNivel).HasColumnName("gen_zona_nivel");
            entity.Property(e => e.GenZonaTiempoDesplazamiento).HasColumnName("gen_zona_tiempoDesplazamiento");
            entity.Property(e => e.GenZonaZona)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_zona_zona");
            entity.Property(e => e.GenZonaZonaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_zona_zona_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdContrato).HasColumnName("id_contrato");
            entity.Property(e => e.IdDepartamentoSolicitud).HasColumnName("id_departamentoSolicitud");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdFamilia).HasColumnName("id_familia");
            entity.Property(e => e.IdMotivoCancelacion).HasColumnName("id_motivoCancelacion");
            entity.Property(e => e.IdSistema).HasColumnName("id_sistema");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdTipoServicio).HasColumnName("id_tipoServicio");
            entity.Property(e => e.IdUsuarioCoordinador).HasColumnName("id_usuario_coordinador");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdZona).HasColumnName("id_zona");
            entity.Property(e => e.MotivoServicio)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("motivoServicio");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.OrtDepartamentoSolicitudDepartamentoSolicitud)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ort_departamentoSolicitud_departamentoSolicitud");
            entity.Property(e => e.OrtDepartamentoSolicitudDepartamentoSolicitudCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ort_departamentoSolicitud_departamentoSolicitud_codigo");
            entity.Property(e => e.OrtDepartamentoSolicitudRecibeSolicitudes).HasColumnName("ort_departamentoSolicitud_recibeSolicitudes");
            entity.Property(e => e.OrtMotivoCancelacionMotivoCancelacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ort_motivoCancelacion_motivoCancelacion");
            entity.Property(e => e.OrtMotivoCancelacionMotivoCancelacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ort_motivoCancelacion_motivoCancelacion_codigo");
            entity.Property(e => e.OrtMotivoCancelacionResponsableServicio).HasColumnName("ort_motivoCancelacion_responsableServicio");
            entity.Property(e => e.PorcentajeCliente).HasColumnName("porcentajeCliente");
            entity.Property(e => e.PorcentajeDistribuidor).HasColumnName("porcentajeDistribuidor");
            entity.Property(e => e.PorcentajeFabricante).HasColumnName("porcentajeFabricante");
            entity.Property(e => e.ReclamacionFabrica)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("reclamacionFabrica");
            entity.Property(e => e.Recomendaciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("recomendaciones");
            entity.Property(e => e.SegUsuarioCoordinadorAccesoActivo).HasColumnName("seg_usuario_coordinador_accesoActivo");
            entity.Property(e => e.SegUsuarioCoordinadorAplicaRecargo).HasColumnName("seg_usuario_coordinador_aplicaRecargo");
            entity.Property(e => e.SegUsuarioCoordinadorCambiarClave).HasColumnName("seg_usuario_coordinador_cambiarClave");
            entity.Property(e => e.SegUsuarioCoordinadorClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_coordinador_clave");
            entity.Property(e => e.SegUsuarioCoordinadorCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_coordinador_costoHora");
            entity.Property(e => e.SegUsuarioCoordinadorDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_coordinador_direccion");
            entity.Property(e => e.SegUsuarioCoordinadorEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_coordinador_email");
            entity.Property(e => e.SegUsuarioCoordinadorFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_coordinador_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioCoordinadorFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_coordinador_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioCoordinadorFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_coordinador_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioCoordinadorHabilitado).HasColumnName("seg_usuario_coordinador_habilitado");
            entity.Property(e => e.SegUsuarioCoordinadorIdCargo).HasColumnName("seg_usuario_coordinador_id_cargo");
            entity.Property(e => e.SegUsuarioCoordinadorIdGrupo).HasColumnName("seg_usuario_coordinador_id_grupo");
            entity.Property(e => e.SegUsuarioCoordinadorIdPerfil).HasColumnName("seg_usuario_coordinador_id_perfil");
            entity.Property(e => e.SegUsuarioCoordinadorIdUsuario).HasColumnName("seg_usuario_coordinador_id_usuario");
            entity.Property(e => e.SegUsuarioCoordinadorIdZona).HasColumnName("seg_usuario_coordinador_id_zona");
            entity.Property(e => e.SegUsuarioCoordinadorIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_coordinador_identificacion");
            entity.Property(e => e.SegUsuarioCoordinadorIntentosFallidos).HasColumnName("seg_usuario_coordinador_intentosFallidos");
            entity.Property(e => e.SegUsuarioCoordinadorNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_coordinador_nombre");
            entity.Property(e => e.SegUsuarioCoordinadorNumeroIngresos).HasColumnName("seg_usuario_coordinador_numeroIngresos");
            entity.Property(e => e.SegUsuarioCoordinadorPorcentajeComision).HasColumnName("seg_usuario_coordinador_porcentajeComision");
            entity.Property(e => e.SegUsuarioCoordinadorPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_coordinador_preferencias");
            entity.Property(e => e.SegUsuarioCoordinadorProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_coordinador_profesion");
            entity.Property(e => e.SegUsuarioCoordinadorSexo).HasColumnName("seg_usuario_coordinador_sexo");
            entity.Property(e => e.SegUsuarioCoordinadorTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_coordinador_telefono");
            entity.Property(e => e.SegUsuarioCoordinadorUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_coordinador_usuario");
            entity.Property(e => e.SegUsuarioCoordinadorUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_coordinador_usuario_codigo");
            entity.Property(e => e.SegunTempario).HasColumnName("segunTempario");
            entity.Property(e => e.Telefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("telefono");
            entity.Property(e => e.TerSucursalCodigorecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_codigorecursiva");
            entity.Property(e => e.TerSucursalContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_contacto");
            entity.Property(e => e.TerSucursalDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Direccion");
            entity.Property(e => e.TerSucursalEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Email");
            entity.Property(e => e.TerSucursalFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Fax");
            entity.Property(e => e.TerSucursalIdEstadoTercero).HasColumnName("ter_sucursal_id_estadoTercero");
            entity.Property(e => e.TerSucursalIdSucursal).HasColumnName("ter_sucursal_id_sucursal");
            entity.Property(e => e.TerSucursalIdTercero).HasColumnName("ter_sucursal_id_tercero");
            entity.Property(e => e.TerSucursalIdUsuarioAsesor).HasColumnName("ter_sucursal_id_usuario_asesor");
            entity.Property(e => e.TerSucursalIdUsuarioTecnico).HasColumnName("ter_sucursal_id_usuario_tecnico");
            entity.Property(e => e.TerSucursalIdZona).HasColumnName("ter_sucursal_id_zona");
            entity.Property(e => e.TerSucursalParaAlquiler).HasColumnName("ter_sucursal_paraAlquiler");
            entity.Property(e => e.TerSucursalParaSoporte).HasColumnName("ter_sucursal_paraSoporte");
            entity.Property(e => e.TerSucursalParaVenta).HasColumnName("ter_sucursal_paraVenta");
            entity.Property(e => e.TerSucursalSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal");
            entity.Property(e => e.TerSucursalSucursalCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal_codigo");
            entity.Property(e => e.TerSucursalTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_telefono");
            entity.Property(e => e.Trabajos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("trabajos");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoOtCentroCosto>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_ot_centroCosto");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocCentroCostoCentroCosto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_centroCosto_centroCosto");
            entity.Property(e => e.DocCentroCostoCentroCostoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_centroCosto_centroCosto_codigo");
            entity.Property(e => e.DocDocumentoOtCargo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_cargo");
            entity.Property(e => e.DocDocumentoOtCompromisos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_compromisos");
            entity.Property(e => e.DocDocumentoOtContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_contacto");
            entity.Property(e => e.DocDocumentoOtCosto).HasColumnName("doc_documento_ot_costo");
            entity.Property(e => e.DocDocumentoOtCostoPlaneado).HasColumnName("doc_documento_ot_costoPlaneado");
            entity.Property(e => e.DocDocumentoOtDescuento).HasColumnName("doc_documento_ot_descuento");
            entity.Property(e => e.DocDocumentoOtDescuentoPlaneado).HasColumnName("doc_documento_ot_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoOtDiagnosticoInicial)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_diagnosticoInicial");
            entity.Property(e => e.DocDocumentoOtDireccionUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_direccionUbicacion");
            entity.Property(e => e.DocDocumentoOtDistribuyeCentros).HasColumnName("doc_documento.ot_distribuyeCentros");
            entity.Property(e => e.DocDocumentoOtDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_documento_codigo");
            entity.Property(e => e.DocDocumentoOtDocumentoNumero).HasColumnName("doc_documento_ot_documento_numero");
            entity.Property(e => e.DocDocumentoOtDocumentoOt)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_documento.ot");
            entity.Property(e => e.DocDocumentoOtDuracionEstimada).HasColumnName("doc_documento.ot_duracionEstimada");
            entity.Property(e => e.DocDocumentoOtEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_email");
            entity.Property(e => e.DocDocumentoOtEnTaller).HasColumnName("doc_documento.ot_enTaller");
            entity.Property(e => e.DocDocumentoOtFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_fax");
            entity.Property(e => e.DocDocumentoOtFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoOtFechaCompromisoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.ot_fechaCompromiso_fh");
            entity.Property(e => e.DocDocumentoOtFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fecha_fh");
            entity.Property(e => e.DocDocumentoOtFechaGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.ot_fechaGarantia_ff");
            entity.Property(e => e.DocDocumentoOtFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoOtFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoOtIdContrato).HasColumnName("doc_documento.ot_id_contrato");
            entity.Property(e => e.DocDocumentoOtIdDepartamentoSolicitud).HasColumnName("doc_documento.ot_id_departamentoSolicitud");
            entity.Property(e => e.DocDocumentoOtIdDocumento).HasColumnName("doc_documento_ot_id_documento");
            entity.Property(e => e.DocDocumentoOtIdEquipo).HasColumnName("doc_documento.ot_id_equipo");
            entity.Property(e => e.DocDocumentoOtIdEstadoTipoDocumento).HasColumnName("doc_documento_ot_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoOtIdMoneda).HasColumnName("doc_documento_ot_id_moneda");
            entity.Property(e => e.DocDocumentoOtIdMotivoCancelacion).HasColumnName("doc_documento.ot_id_motivoCancelacion");
            entity.Property(e => e.DocDocumentoOtIdMotivoestado).HasColumnName("doc_documento_ot_id_motivoestado");
            entity.Property(e => e.DocDocumentoOtIdPrioridadDocumento).HasColumnName("doc_documento_ot_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoOtIdSistema).HasColumnName("doc_documento.ot_id_sistema");
            entity.Property(e => e.DocDocumentoOtIdSubtipoDocumento).HasColumnName("doc_documento_ot_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoOtIdSucursal).HasColumnName("doc_documento.ot_id_sucursal");
            entity.Property(e => e.DocDocumentoOtIdTerceroCliente).HasColumnName("doc_documento_ot_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoOtIdTerceroProveedor).HasColumnName("doc_documento_ot_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoOtIdTipoServicio).HasColumnName("doc_documento.ot_id_tipoServicio");
            entity.Property(e => e.DocDocumentoOtIdUsuarioAsignado).HasColumnName("doc_documento_ot_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoOtIdUsuarioCoordinador).HasColumnName("doc_documento.ot_id_usuario_coordinador");
            entity.Property(e => e.DocDocumentoOtIdUsuarioEnUso).HasColumnName("doc_documento_ot_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoOtIdZona).HasColumnName("doc_documento.ot_id_zona");
            entity.Property(e => e.DocDocumentoOtIva).HasColumnName("doc_documento_ot_iva");
            entity.Property(e => e.DocDocumentoOtIvaPlaneado).HasColumnName("doc_documento_ot_ivaPlaneado");
            entity.Property(e => e.DocDocumentoOtMotivoServicio)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_motivoServicio");
            entity.Property(e => e.DocDocumentoOtPorcentajeCliente).HasColumnName("doc_documento.ot_porcentajeCliente");
            entity.Property(e => e.DocDocumentoOtPorcentajeDistribuidor).HasColumnName("doc_documento.ot_porcentajeDistribuidor");
            entity.Property(e => e.DocDocumentoOtPorcentajeFabricante).HasColumnName("doc_documento.ot_porcentajeFabricante");
            entity.Property(e => e.DocDocumentoOtPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_prefijo");
            entity.Property(e => e.DocDocumentoOtReclamacionFabrica)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_reclamacionFabrica");
            entity.Property(e => e.DocDocumentoOtRecomendaciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_recomendaciones");
            entity.Property(e => e.DocDocumentoOtRentabilidad).HasColumnName("doc_documento_ot_rentabilidad");
            entity.Property(e => e.DocDocumentoOtSegunTempario).HasColumnName("doc_documento.ot_segunTempario");
            entity.Property(e => e.DocDocumentoOtSubtotal).HasColumnName("doc_documento_ot_subtotal");
            entity.Property(e => e.DocDocumentoOtSubtotalPlaneado).HasColumnName("doc_documento_ot_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoOtTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_telefono");
            entity.Property(e => e.DocDocumentoOtTotal).HasColumnName("doc_documento_ot_total");
            entity.Property(e => e.DocDocumentoOtTotalPlaneado).HasColumnName("doc_documento_ot_totalPlaneado");
            entity.Property(e => e.DocDocumentoOtTrabajos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_trabajos");
            entity.Property(e => e.DocDocumentoOtTrm).HasColumnName("doc_documento_ot_trm");
            entity.Property(e => e.DocumentoOtCentroCosto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.ot_centroCosto");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCentroCosto).HasColumnName("id_centroCosto");
            entity.Property(e => e.IdDocumentoOt).HasColumnName("id_documento.ot");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Porcentaje).HasColumnName("porcentaje");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoOtProgramadum>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documentoOtProgramada");

            entity.Property(e => e.Id).HasColumnName("id");
        });

        modelBuilder.Entity<ViewDocDocumentoOtPruebaCheckList>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_ot_pruebaCheckList");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatPruebaCheckListPruebaCheckList)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_pruebaCheckList_pruebaCheckList");
            entity.Property(e => e.CatPruebaCheckListPruebaCheckListCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_pruebaCheckList_pruebaCheckList_codigo");
            entity.Property(e => e.DocDocumentoOtCargo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_cargo");
            entity.Property(e => e.DocDocumentoOtCompromisos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_compromisos");
            entity.Property(e => e.DocDocumentoOtContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_contacto");
            entity.Property(e => e.DocDocumentoOtCosto).HasColumnName("doc_documento_ot_costo");
            entity.Property(e => e.DocDocumentoOtCostoPlaneado).HasColumnName("doc_documento_ot_costoPlaneado");
            entity.Property(e => e.DocDocumentoOtDescuento).HasColumnName("doc_documento_ot_descuento");
            entity.Property(e => e.DocDocumentoOtDescuentoPlaneado).HasColumnName("doc_documento_ot_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoOtDiagnosticoInicial)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_diagnosticoInicial");
            entity.Property(e => e.DocDocumentoOtDireccionUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_direccionUbicacion");
            entity.Property(e => e.DocDocumentoOtDistribuyeCentros).HasColumnName("doc_documento.ot_distribuyeCentros");
            entity.Property(e => e.DocDocumentoOtDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_documento_codigo");
            entity.Property(e => e.DocDocumentoOtDocumentoNumero).HasColumnName("doc_documento_ot_documento_numero");
            entity.Property(e => e.DocDocumentoOtDocumentoOt)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_documento.ot");
            entity.Property(e => e.DocDocumentoOtDuracionEstimada).HasColumnName("doc_documento.ot_duracionEstimada");
            entity.Property(e => e.DocDocumentoOtEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_email");
            entity.Property(e => e.DocDocumentoOtEnTaller).HasColumnName("doc_documento.ot_enTaller");
            entity.Property(e => e.DocDocumentoOtFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_fax");
            entity.Property(e => e.DocDocumentoOtFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoOtFechaCompromisoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.ot_fechaCompromiso_fh");
            entity.Property(e => e.DocDocumentoOtFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fecha_fh");
            entity.Property(e => e.DocDocumentoOtFechaGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.ot_fechaGarantia_ff");
            entity.Property(e => e.DocDocumentoOtFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoOtFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoOtIdContrato).HasColumnName("doc_documento.ot_id_contrato");
            entity.Property(e => e.DocDocumentoOtIdDepartamentoSolicitud).HasColumnName("doc_documento.ot_id_departamentoSolicitud");
            entity.Property(e => e.DocDocumentoOtIdDocumento).HasColumnName("doc_documento_ot_id_documento");
            entity.Property(e => e.DocDocumentoOtIdEquipo).HasColumnName("doc_documento.ot_id_equipo");
            entity.Property(e => e.DocDocumentoOtIdEstadoTipoDocumento).HasColumnName("doc_documento_ot_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoOtIdMoneda).HasColumnName("doc_documento_ot_id_moneda");
            entity.Property(e => e.DocDocumentoOtIdMotivoCancelacion).HasColumnName("doc_documento.ot_id_motivoCancelacion");
            entity.Property(e => e.DocDocumentoOtIdMotivoestado).HasColumnName("doc_documento_ot_id_motivoestado");
            entity.Property(e => e.DocDocumentoOtIdPrioridadDocumento).HasColumnName("doc_documento_ot_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoOtIdSistema).HasColumnName("doc_documento.ot_id_sistema");
            entity.Property(e => e.DocDocumentoOtIdSubtipoDocumento).HasColumnName("doc_documento_ot_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoOtIdSucursal).HasColumnName("doc_documento.ot_id_sucursal");
            entity.Property(e => e.DocDocumentoOtIdTerceroCliente).HasColumnName("doc_documento_ot_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoOtIdTerceroProveedor).HasColumnName("doc_documento_ot_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoOtIdTipoServicio).HasColumnName("doc_documento.ot_id_tipoServicio");
            entity.Property(e => e.DocDocumentoOtIdUsuarioAsignado).HasColumnName("doc_documento_ot_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoOtIdUsuarioCoordinador).HasColumnName("doc_documento.ot_id_usuario_coordinador");
            entity.Property(e => e.DocDocumentoOtIdUsuarioEnUso).HasColumnName("doc_documento_ot_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoOtIdZona).HasColumnName("doc_documento.ot_id_zona");
            entity.Property(e => e.DocDocumentoOtIva).HasColumnName("doc_documento_ot_iva");
            entity.Property(e => e.DocDocumentoOtIvaPlaneado).HasColumnName("doc_documento_ot_ivaPlaneado");
            entity.Property(e => e.DocDocumentoOtMotivoServicio)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_motivoServicio");
            entity.Property(e => e.DocDocumentoOtPorcentajeCliente).HasColumnName("doc_documento.ot_porcentajeCliente");
            entity.Property(e => e.DocDocumentoOtPorcentajeDistribuidor).HasColumnName("doc_documento.ot_porcentajeDistribuidor");
            entity.Property(e => e.DocDocumentoOtPorcentajeFabricante).HasColumnName("doc_documento.ot_porcentajeFabricante");
            entity.Property(e => e.DocDocumentoOtPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_prefijo");
            entity.Property(e => e.DocDocumentoOtReclamacionFabrica)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_reclamacionFabrica");
            entity.Property(e => e.DocDocumentoOtRecomendaciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_recomendaciones");
            entity.Property(e => e.DocDocumentoOtRentabilidad).HasColumnName("doc_documento_ot_rentabilidad");
            entity.Property(e => e.DocDocumentoOtSegunTempario).HasColumnName("doc_documento.ot_segunTempario");
            entity.Property(e => e.DocDocumentoOtSubtotal).HasColumnName("doc_documento_ot_subtotal");
            entity.Property(e => e.DocDocumentoOtSubtotalPlaneado).HasColumnName("doc_documento_ot_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoOtTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_telefono");
            entity.Property(e => e.DocDocumentoOtTotal).HasColumnName("doc_documento_ot_total");
            entity.Property(e => e.DocDocumentoOtTotalPlaneado).HasColumnName("doc_documento_ot_totalPlaneado");
            entity.Property(e => e.DocDocumentoOtTrabajos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_trabajos");
            entity.Property(e => e.DocDocumentoOtTrm).HasColumnName("doc_documento_ot_trm");
            entity.Property(e => e.DocumentoOtPruebaCheckList)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.ot_pruebaCheckList");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDocumentoOt).HasColumnName("id_documento.ot");
            entity.Property(e => e.IdPruebaCheckList).HasColumnName("id_pruebaCheckList");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoOtSinProgramar>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documentoOtSinProgramar");

            entity.Property(e => e.Id).HasColumnName("id");
        });

        modelBuilder.Entity<ViewDocDocumentoProyecto>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_proyecto");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.DocDocumentoProyectoCosto).HasColumnName("doc_documento_proyecto_costo");
            entity.Property(e => e.DocDocumentoProyectoCostoPlaneado).HasColumnName("doc_documento_proyecto_costoPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDescuento).HasColumnName("doc_documento_proyecto_descuento");
            entity.Property(e => e.DocDocumentoProyectoDescuentoPlaneado).HasColumnName("doc_documento_proyecto_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreCosto).HasColumnName("doc_documento_proyecto_doc_documento_padre_costo");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreCostoPlaneado).HasColumnName("doc_documento_proyecto_doc_documento_padre_costoPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreDescuento).HasColumnName("doc_documento_proyecto_doc_documento_padre_descuento");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreDescuentoPlaneado).HasColumnName("doc_documento_proyecto_doc_documento_padre_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_doc_documento_padre_documento");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_doc_documento_padre_documento_codigo");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreDocumentoNumero).HasColumnName("doc_documento_proyecto_doc_documento_padre_documento_numero");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_doc_documento_padre_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_doc_documento_padre_fecha_fh");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_doc_documento_padre_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_doc_documento_padre_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreIdDocumento).HasColumnName("doc_documento_proyecto_doc_documento_padre_id_documento");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreIdEstadoTipoDocumento).HasColumnName("doc_documento_proyecto_doc_documento_padre_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreIdMoneda).HasColumnName("doc_documento_proyecto_doc_documento_padre_id_moneda");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreIdMotivoestado).HasColumnName("doc_documento_proyecto_doc_documento_padre_id_motivoestado");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreIdPrioridadDocumento).HasColumnName("doc_documento_proyecto_doc_documento_padre_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreIdSubtipoDocumento).HasColumnName("doc_documento_proyecto_doc_documento_padre_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreIdTerceroCliente).HasColumnName("doc_documento_proyecto_doc_documento_padre_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreIdTerceroProveedor).HasColumnName("doc_documento_proyecto_doc_documento_padre_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreIdUsuarioAsignado).HasColumnName("doc_documento_proyecto_doc_documento_padre_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreIdUsuarioEnUso).HasColumnName("doc_documento_proyecto_doc_documento_padre_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreIva).HasColumnName("doc_documento_proyecto_doc_documento_padre_iva");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreIvaPlaneado).HasColumnName("doc_documento_proyecto_doc_documento_padre_ivaPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadrePrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_doc_documento_padre_prefijo");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreRentabilidad).HasColumnName("doc_documento_proyecto_doc_documento_padre_rentabilidad");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreSubtotal).HasColumnName("doc_documento_proyecto_doc_documento_padre_subtotal");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreSubtotalPlaneado).HasColumnName("doc_documento_proyecto_doc_documento_padre_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreTotal).HasColumnName("doc_documento_proyecto_doc_documento_padre_total");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreTotalPlaneado).HasColumnName("doc_documento_proyecto_doc_documento_padre_totalPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDocDocumentoPadreTrm).HasColumnName("doc_documento_proyecto_doc_documento_padre_trm");
            entity.Property(e => e.DocDocumentoProyectoDocEstadoTipoDocumentoAfectaIndicador).HasColumnName("doc_documento_proyecto_doc_estadoTipoDocumento_afectaIndicador");
            entity.Property(e => e.DocDocumentoProyectoDocEstadoTipoDocumentoAfectaInventario).HasColumnName("doc_documento_proyecto_doc_estadoTipoDocumento_afectaInventario");
            entity.Property(e => e.DocDocumentoProyectoDocEstadoTipoDocumentoColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_doc_estadoTipoDocumento_color");
            entity.Property(e => e.DocDocumentoProyectoDocEstadoTipoDocumentoDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_doc_estadoTipoDocumento_descripcion");
            entity.Property(e => e.DocDocumentoProyectoDocEstadoTipoDocumentoEditaDocumento).HasColumnName("doc_documento_proyecto_doc_estadoTipoDocumento_editaDocumento");
            entity.Property(e => e.DocDocumentoProyectoDocEstadoTipoDocumentoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_doc_estadoTipoDocumento_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoDocEstadoTipoDocumentoEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_doc_estadoTipoDocumento_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocDocumentoProyectoDocEstadoTipoDocumentoIdTipoDocumento).HasColumnName("doc_documento_proyecto_doc_estadoTipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoDocEstadoTipoDocumentoOrden).HasColumnName("doc_documento_proyecto_doc_estadoTipoDocumento_orden");
            entity.Property(e => e.DocDocumentoProyectoDocEstadoTipoDocumentoPuedeRegresar).HasColumnName("doc_documento_proyecto_doc_estadoTipoDocumento_puedeRegresar");
            entity.Property(e => e.DocDocumentoProyectoDocMotivoestadoIdEstadoTipoDocumento).HasColumnName("doc_documento_proyecto_doc_motivoestado_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoDocMotivoestadoMotivoestado)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_doc_motivoestado_motivoestado");
            entity.Property(e => e.DocDocumentoProyectoDocMotivoestadoMotivoestadoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_doc_motivoestado_motivoestado_codigo");
            entity.Property(e => e.DocDocumentoProyectoDocPrioridadDocumentoIdEstrategiaPrioridad).HasColumnName("doc_documento_proyecto_doc_prioridadDocumento_id_estrategiaPrioridad");
            entity.Property(e => e.DocDocumentoProyectoDocPrioridadDocumentoIdTipoDocumento).HasColumnName("doc_documento_proyecto_doc_prioridadDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoDocPrioridadDocumentoOrden).HasColumnName("doc_documento_proyecto_doc_prioridadDocumento_orden");
            entity.Property(e => e.DocDocumentoProyectoDocPrioridadDocumentoPrioridadDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_doc_prioridadDocumento_prioridadDocumento");
            entity.Property(e => e.DocDocumentoProyectoDocPrioridadDocumentoPrioridadDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_doc_prioridadDocumento_prioridadDocumento_codigo");
            entity.Property(e => e.DocDocumentoProyectoDocPrioridadDocumentoTiempoRespuesta).HasColumnName("doc_documento_proyecto_doc_prioridadDocumento_tiempoRespuesta");
            entity.Property(e => e.DocDocumentoProyectoDocSubtipoDocumentoBloquearDespacho).HasColumnName("doc_documento_proyecto_doc_subtipoDocumento_bloquearDespacho");
            entity.Property(e => e.DocDocumentoProyectoDocSubtipoDocumentoCargarSolicitante).HasColumnName("doc_documento_proyecto_doc_subtipoDocumento_cargarSolicitante");
            entity.Property(e => e.DocDocumentoProyectoDocSubtipoDocumentoCerrarSol).HasColumnName("doc_documento_proyecto_doc_subtipoDocumento_cerrarSol");
            entity.Property(e => e.DocDocumentoProyectoDocSubtipoDocumentoConsecutivo).HasColumnName("doc_documento_proyecto_doc_subtipoDocumento_consecutivo");
            entity.Property(e => e.DocDocumentoProyectoDocSubtipoDocumentoIdTipoDocumento).HasColumnName("doc_documento_proyecto_doc_subtipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoDocSubtipoDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_doc_subtipoDocumento_prefijo");
            entity.Property(e => e.DocDocumentoProyectoDocSubtipoDocumentoProgramarPlaneadas).HasColumnName("doc_documento_proyecto_doc_subtipoDocumento_programarPlaneadas");
            entity.Property(e => e.DocDocumentoProyectoDocSubtipoDocumentoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_doc_subtipoDocumento_subtipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoDocSubtipoDocumentoSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_doc_subtipoDocumento_subtipoDocumento_codigo");
            entity.Property(e => e.DocDocumentoProyectoDocSubtipoDocumentoValUrgente).HasColumnName("doc_documento_proyecto_doc_subtipoDocumento_valUrgente");
            entity.Property(e => e.DocDocumentoProyectoDocSubtipoDocumentoVerCentroCosto).HasColumnName("doc_documento_proyecto_doc_subtipoDocumento_verCentroCosto");
            entity.Property(e => e.DocDocumentoProyectoDocSubtipoDocumentoVerIncoterm).HasColumnName("doc_documento_proyecto_doc_subtipoDocumento_verIncoterm");
            entity.Property(e => e.DocDocumentoProyectoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_documento_codigo");
            entity.Property(e => e.DocDocumentoProyectoDocumentoNumero).HasColumnName("doc_documento_proyecto_documento_numero");
            entity.Property(e => e.DocDocumentoProyectoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoProyectoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fecha_fh");
            entity.Property(e => e.DocDocumentoProyectoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoProyectoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoProyectoGenMonedaAbreviatura)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_gen_moneda_abreviatura");
            entity.Property(e => e.DocDocumentoProyectoGenMonedaCambio).HasColumnName("doc_documento_proyecto_gen_moneda_cambio");
            entity.Property(e => e.DocDocumentoProyectoGenMonedaMoneda)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_gen_moneda_moneda");
            entity.Property(e => e.DocDocumentoProyectoGenMonedaMonedaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_gen_moneda_moneda_codigo");
            entity.Property(e => e.DocDocumentoProyectoIdDocumento).HasColumnName("doc_documento_proyecto_id_documento");
            entity.Property(e => e.DocDocumentoProyectoIdEstadoTipoDocumento).HasColumnName("doc_documento_proyecto_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdMoneda).HasColumnName("doc_documento_proyecto_id_moneda");
            entity.Property(e => e.DocDocumentoProyectoIdMotivoestado).HasColumnName("doc_documento_proyecto_id_motivoestado");
            entity.Property(e => e.DocDocumentoProyectoIdPrioridadDocumento).HasColumnName("doc_documento_proyecto_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdSubtipoDocumento).HasColumnName("doc_documento_proyecto_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdTerceroCliente).HasColumnName("doc_documento_proyecto_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoProyectoIdTerceroProveedor).HasColumnName("doc_documento_proyecto_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoProyectoIdUsuarioAsignado).HasColumnName("doc_documento_proyecto_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoProyectoIdUsuarioEnUso).HasColumnName("doc_documento_proyecto_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoProyectoIva).HasColumnName("doc_documento_proyecto_iva");
            entity.Property(e => e.DocDocumentoProyectoIvaPlaneado).HasColumnName("doc_documento_proyecto_ivaPlaneado");
            entity.Property(e => e.DocDocumentoProyectoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_prefijo");
            entity.Property(e => e.DocDocumentoProyectoRentabilidad).HasColumnName("doc_documento_proyecto_rentabilidad");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoAccesoActivo).HasColumnName("doc_documento_proyecto_seg_usuario_asignado_accesoActivo");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoAplicaRecargo).HasColumnName("doc_documento_proyecto_seg_usuario_asignado_aplicaRecargo");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoCambiarClave).HasColumnName("doc_documento_proyecto_seg_usuario_asignado_cambiarClave");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_seg_usuario_asignado_clave");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoCostoHora)
                .HasColumnType("money")
                .HasColumnName("doc_documento_proyecto_seg_usuario_asignado_costoHora");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_seg_usuario_asignado_direccion");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_seg_usuario_asignado_email");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_seg_usuario_asignado_fechaIntentoFallido_fh");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_seg_usuario_asignado_fechaUltimoCambioClave_fh");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_seg_usuario_asignado_fechaUltimoIngreso_fh");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoHabilitado).HasColumnName("doc_documento_proyecto_seg_usuario_asignado_habilitado");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoIdCargo).HasColumnName("doc_documento_proyecto_seg_usuario_asignado_id_cargo");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoIdGrupo).HasColumnName("doc_documento_proyecto_seg_usuario_asignado_id_grupo");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoIdPerfil).HasColumnName("doc_documento_proyecto_seg_usuario_asignado_id_perfil");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoIdUsuario).HasColumnName("doc_documento_proyecto_seg_usuario_asignado_id_usuario");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoIdZona).HasColumnName("doc_documento_proyecto_seg_usuario_asignado_id_zona");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_seg_usuario_asignado_identificacion");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoIntentosFallidos).HasColumnName("doc_documento_proyecto_seg_usuario_asignado_intentosFallidos");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_seg_usuario_asignado_nombre");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoNumeroIngresos).HasColumnName("doc_documento_proyecto_seg_usuario_asignado_numeroIngresos");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoPorcentajeComision).HasColumnName("doc_documento_proyecto_seg_usuario_asignado_porcentajeComision");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoPreferencias)
                .HasColumnType("image")
                .HasColumnName("doc_documento_proyecto_seg_usuario_asignado_preferencias");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_seg_usuario_asignado_profesion");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoSexo).HasColumnName("doc_documento_proyecto_seg_usuario_asignado_sexo");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_seg_usuario_asignado_telefono");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_seg_usuario_asignado_usuario");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioAsignadoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_seg_usuario_asignado_usuario_codigo");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoAccesoActivo).HasColumnName("doc_documento_proyecto_seg_usuario_enUso_accesoActivo");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoAplicaRecargo).HasColumnName("doc_documento_proyecto_seg_usuario_enUso_aplicaRecargo");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoCambiarClave).HasColumnName("doc_documento_proyecto_seg_usuario_enUso_cambiarClave");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_seg_usuario_enUso_clave");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoCostoHora)
                .HasColumnType("money")
                .HasColumnName("doc_documento_proyecto_seg_usuario_enUso_costoHora");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_seg_usuario_enUso_direccion");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_seg_usuario_enUso_email");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_seg_usuario_enUso_fechaIntentoFallido_fh");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_seg_usuario_enUso_fechaUltimoCambioClave_fh");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_seg_usuario_enUso_fechaUltimoIngreso_fh");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoHabilitado).HasColumnName("doc_documento_proyecto_seg_usuario_enUso_habilitado");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoIdCargo).HasColumnName("doc_documento_proyecto_seg_usuario_enUso_id_cargo");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoIdGrupo).HasColumnName("doc_documento_proyecto_seg_usuario_enUso_id_grupo");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoIdPerfil).HasColumnName("doc_documento_proyecto_seg_usuario_enUso_id_perfil");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoIdUsuario).HasColumnName("doc_documento_proyecto_seg_usuario_enUso_id_usuario");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoIdZona).HasColumnName("doc_documento_proyecto_seg_usuario_enUso_id_zona");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_seg_usuario_enUso_identificacion");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoIntentosFallidos).HasColumnName("doc_documento_proyecto_seg_usuario_enUso_intentosFallidos");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_seg_usuario_enUso_nombre");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoNumeroIngresos).HasColumnName("doc_documento_proyecto_seg_usuario_enUso_numeroIngresos");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoPorcentajeComision).HasColumnName("doc_documento_proyecto_seg_usuario_enUso_porcentajeComision");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoPreferencias)
                .HasColumnType("image")
                .HasColumnName("doc_documento_proyecto_seg_usuario_enUso_preferencias");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_seg_usuario_enUso_profesion");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoSexo).HasColumnName("doc_documento_proyecto_seg_usuario_enUso_sexo");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_seg_usuario_enUso_telefono");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_seg_usuario_enUso_usuario");
            entity.Property(e => e.DocDocumentoProyectoSegUsuarioEnUsoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_seg_usuario_enUso_usuario_codigo");
            entity.Property(e => e.DocDocumentoProyectoSubtotal).HasColumnName("doc_documento_proyecto_subtotal");
            entity.Property(e => e.DocDocumentoProyectoSubtotalPlaneado).HasColumnName("doc_documento_proyecto_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroClienteClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_cliente_clasificacion");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroClienteContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_cliente_contacto");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroClienteDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_cliente_direccion");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroClienteEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_cliente_email");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroClienteEsCliente).HasColumnName("doc_documento_proyecto_ter_tercero_cliente_esCliente");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroClienteEsEmpresaPropia).HasColumnName("doc_documento_proyecto_ter_tercero_cliente_esEmpresaPropia");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroClienteEsFabricante).HasColumnName("doc_documento_proyecto_ter_tercero_cliente_esFabricante");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroClienteEsProspecto).HasColumnName("doc_documento_proyecto_ter_tercero_cliente_esProspecto");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroClienteEsProveedor).HasColumnName("doc_documento_proyecto_ter_tercero_cliente_esProveedor");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroClienteEsTransportador).HasColumnName("doc_documento_proyecto_ter_tercero_cliente_esTransportador");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroClienteFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_cliente_fax");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroClienteIdEstadoTercero).HasColumnName("doc_documento_proyecto_ter_tercero_cliente_id_estadoTercero");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroClienteIdNaturalezaTercero).HasColumnName("doc_documento_proyecto_ter_tercero_cliente_id_naturalezaTercero");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroClienteIdZona).HasColumnName("doc_documento_proyecto_ter_tercero_cliente_id_zona");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroClienteNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_cliente_notas");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroClienteRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_cliente_representante");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroClienteTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_cliente_telefono");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroClienteTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_cliente_tercero");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroClienteTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_cliente_tercero_codigo");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroClienteTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_cliente_tercero_nit");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroClienteTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_cliente_tercero_nombreCorto");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroClienteWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_cliente_website");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroProveedorClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_proveedor_clasificacion");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroProveedorContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_proveedor_contacto");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroProveedorDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_proveedor_direccion");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroProveedorEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_proveedor_email");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroProveedorEsCliente).HasColumnName("doc_documento_proyecto_ter_tercero_proveedor_esCliente");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroProveedorEsEmpresaPropia).HasColumnName("doc_documento_proyecto_ter_tercero_proveedor_esEmpresaPropia");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroProveedorEsFabricante).HasColumnName("doc_documento_proyecto_ter_tercero_proveedor_esFabricante");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroProveedorEsProspecto).HasColumnName("doc_documento_proyecto_ter_tercero_proveedor_esProspecto");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroProveedorEsProveedor).HasColumnName("doc_documento_proyecto_ter_tercero_proveedor_esProveedor");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroProveedorEsTransportador).HasColumnName("doc_documento_proyecto_ter_tercero_proveedor_esTransportador");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroProveedorFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_proveedor_fax");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroProveedorIdEstadoTercero).HasColumnName("doc_documento_proyecto_ter_tercero_proveedor_id_estadoTercero");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroProveedorIdNaturalezaTercero).HasColumnName("doc_documento_proyecto_ter_tercero_proveedor_id_naturalezaTercero");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroProveedorIdZona).HasColumnName("doc_documento_proyecto_ter_tercero_proveedor_id_zona");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroProveedorNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_proveedor_notas");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroProveedorRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_proveedor_representante");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroProveedorTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_proveedor_telefono");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroProveedorTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_proveedor_tercero");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroProveedorTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_proveedor_tercero_codigo");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroProveedorTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_proveedor_tercero_nit");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroProveedorTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_proveedor_tercero_nombreCorto");
            entity.Property(e => e.DocDocumentoProyectoTerTerceroProveedorWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_ter_tercero_proveedor_website");
            entity.Property(e => e.DocDocumentoProyectoTotal).HasColumnName("doc_documento_proyecto_total");
            entity.Property(e => e.DocDocumentoProyectoTotalPlaneado).HasColumnName("doc_documento_proyecto_totalPlaneado");
            entity.Property(e => e.DocDocumentoProyectoTrm).HasColumnName("doc_documento_proyecto_trm");
            entity.Property(e => e.DocumentoProyecto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.proyecto");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFinEstimada)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFinEstimada");
            entity.Property(e => e.FechaInicioEstimada)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicioEstimada");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Nombre)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.Presupuesto)
                .HasColumnType("money")
                .HasColumnName("presupuesto");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoProyectoCalidad>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_proyecto_calidad");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocDocumentoProyectoCosto).HasColumnName("doc_documento_proyecto_costo");
            entity.Property(e => e.DocDocumentoProyectoCostoPlaneado).HasColumnName("doc_documento_proyecto_costoPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDescripcion)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.proyecto_descripcion");
            entity.Property(e => e.DocDocumentoProyectoDescuento).HasColumnName("doc_documento_proyecto_descuento");
            entity.Property(e => e.DocDocumentoProyectoDescuentoPlaneado).HasColumnName("doc_documento_proyecto_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_documento_codigo");
            entity.Property(e => e.DocDocumentoProyectoDocumentoNumero).HasColumnName("doc_documento_proyecto_documento_numero");
            entity.Property(e => e.DocDocumentoProyectoDocumentoProyecto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.proyecto_documento.proyecto");
            entity.Property(e => e.DocDocumentoProyectoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoProyectoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fecha_fh");
            entity.Property(e => e.DocDocumentoProyectoFechaFinEstimada)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.proyecto_fechaFinEstimada");
            entity.Property(e => e.DocDocumentoProyectoFechaInicioEstimada)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.proyecto_fechaInicioEstimada");
            entity.Property(e => e.DocDocumentoProyectoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoProyectoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoProyectoIdDocumento).HasColumnName("doc_documento_proyecto_id_documento");
            entity.Property(e => e.DocDocumentoProyectoIdEstadoTipoDocumento).HasColumnName("doc_documento_proyecto_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdMoneda).HasColumnName("doc_documento_proyecto_id_moneda");
            entity.Property(e => e.DocDocumentoProyectoIdMotivoestado).HasColumnName("doc_documento_proyecto_id_motivoestado");
            entity.Property(e => e.DocDocumentoProyectoIdPrioridadDocumento).HasColumnName("doc_documento_proyecto_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdSubtipoDocumento).HasColumnName("doc_documento_proyecto_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdTerceroCliente).HasColumnName("doc_documento_proyecto_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoProyectoIdTerceroProveedor).HasColumnName("doc_documento_proyecto_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoProyectoIdUsuarioAsignado).HasColumnName("doc_documento_proyecto_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoProyectoIdUsuarioEnUso).HasColumnName("doc_documento_proyecto_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoProyectoIva).HasColumnName("doc_documento_proyecto_iva");
            entity.Property(e => e.DocDocumentoProyectoIvaPlaneado).HasColumnName("doc_documento_proyecto_ivaPlaneado");
            entity.Property(e => e.DocDocumentoProyectoNombre)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_documento.proyecto_nombre");
            entity.Property(e => e.DocDocumentoProyectoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_prefijo");
            entity.Property(e => e.DocDocumentoProyectoPresupuesto)
                .HasColumnType("money")
                .HasColumnName("doc_documento.proyecto_presupuesto");
            entity.Property(e => e.DocDocumentoProyectoRentabilidad).HasColumnName("doc_documento_proyecto_rentabilidad");
            entity.Property(e => e.DocDocumentoProyectoSubtotal).HasColumnName("doc_documento_proyecto_subtotal");
            entity.Property(e => e.DocDocumentoProyectoSubtotalPlaneado).HasColumnName("doc_documento_proyecto_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoProyectoTotal).HasColumnName("doc_documento_proyecto_total");
            entity.Property(e => e.DocDocumentoProyectoTotalPlaneado).HasColumnName("doc_documento_proyecto_totalPlaneado");
            entity.Property(e => e.DocDocumentoProyectoTrm).HasColumnName("doc_documento_proyecto_trm");
            entity.Property(e => e.DocumentoProyectoCalidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.proyecto_calidad");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCalidad).HasColumnName("id_calidad");
            entity.Property(e => e.IdDocumentoProyecto).HasColumnName("id_documento.proyecto");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ProCalidadCalidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_calidad_calidad");
            entity.Property(e => e.ProCalidadCalidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_calidad_calidad_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoProyectoEjecutore>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_proyecto_ejecutores");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocDocumentoProyectoCosto).HasColumnName("doc_documento_proyecto_costo");
            entity.Property(e => e.DocDocumentoProyectoCostoPlaneado).HasColumnName("doc_documento_proyecto_costoPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDescripcion)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.proyecto_descripcion");
            entity.Property(e => e.DocDocumentoProyectoDescuento).HasColumnName("doc_documento_proyecto_descuento");
            entity.Property(e => e.DocDocumentoProyectoDescuentoPlaneado).HasColumnName("doc_documento_proyecto_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_documento_codigo");
            entity.Property(e => e.DocDocumentoProyectoDocumentoNumero).HasColumnName("doc_documento_proyecto_documento_numero");
            entity.Property(e => e.DocDocumentoProyectoDocumentoProyecto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.proyecto_documento.proyecto");
            entity.Property(e => e.DocDocumentoProyectoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoProyectoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fecha_fh");
            entity.Property(e => e.DocDocumentoProyectoFechaFinEstimada)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.proyecto_fechaFinEstimada");
            entity.Property(e => e.DocDocumentoProyectoFechaInicioEstimada)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.proyecto_fechaInicioEstimada");
            entity.Property(e => e.DocDocumentoProyectoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoProyectoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoProyectoIdDocumento).HasColumnName("doc_documento_proyecto_id_documento");
            entity.Property(e => e.DocDocumentoProyectoIdEstadoTipoDocumento).HasColumnName("doc_documento_proyecto_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdMoneda).HasColumnName("doc_documento_proyecto_id_moneda");
            entity.Property(e => e.DocDocumentoProyectoIdMotivoestado).HasColumnName("doc_documento_proyecto_id_motivoestado");
            entity.Property(e => e.DocDocumentoProyectoIdPrioridadDocumento).HasColumnName("doc_documento_proyecto_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdSubtipoDocumento).HasColumnName("doc_documento_proyecto_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdTerceroCliente).HasColumnName("doc_documento_proyecto_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoProyectoIdTerceroProveedor).HasColumnName("doc_documento_proyecto_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoProyectoIdUsuarioAsignado).HasColumnName("doc_documento_proyecto_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoProyectoIdUsuarioEnUso).HasColumnName("doc_documento_proyecto_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoProyectoIva).HasColumnName("doc_documento_proyecto_iva");
            entity.Property(e => e.DocDocumentoProyectoIvaPlaneado).HasColumnName("doc_documento_proyecto_ivaPlaneado");
            entity.Property(e => e.DocDocumentoProyectoNombre)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_documento.proyecto_nombre");
            entity.Property(e => e.DocDocumentoProyectoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_prefijo");
            entity.Property(e => e.DocDocumentoProyectoPresupuesto)
                .HasColumnType("money")
                .HasColumnName("doc_documento.proyecto_presupuesto");
            entity.Property(e => e.DocDocumentoProyectoRentabilidad).HasColumnName("doc_documento_proyecto_rentabilidad");
            entity.Property(e => e.DocDocumentoProyectoSubtotal).HasColumnName("doc_documento_proyecto_subtotal");
            entity.Property(e => e.DocDocumentoProyectoSubtotalPlaneado).HasColumnName("doc_documento_proyecto_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoProyectoTotal).HasColumnName("doc_documento_proyecto_total");
            entity.Property(e => e.DocDocumentoProyectoTotalPlaneado).HasColumnName("doc_documento_proyecto_totalPlaneado");
            entity.Property(e => e.DocDocumentoProyectoTrm).HasColumnName("doc_documento_proyecto_trm");
            entity.Property(e => e.DocumentoProyectoEjecutores)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.proyecto_ejecutores");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDocumentoProyecto).HasColumnName("id_documento.proyecto");
            entity.Property(e => e.IdEjecutores).HasColumnName("id_ejecutores");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ProEjecutoresCosto).HasColumnName("pro_ejecutores_costo");
            entity.Property(e => e.ProEjecutoresEjecutores)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_ejecutores_ejecutores");
            entity.Property(e => e.ProEjecutoresEjecutoresCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_ejecutores_ejecutores_codigo");
            entity.Property(e => e.ProEjecutoresIdHorarioEjecutores).HasColumnName("pro_ejecutores_id_horarioEjecutores");
            entity.Property(e => e.ProEjecutoresIdHorarioTrabajo).HasColumnName("pro_ejecutores_id_horarioTrabajo");
            entity.Property(e => e.ProEjecutoresIdUsuario).HasColumnName("pro_ejecutores_id_usuario");
            entity.Property(e => e.ProEjecutoresUnidadTiempo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("pro_ejecutores_unidadTiempo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoProyectoEntregable>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_proyecto_entregable");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocDocumentoProyectoCosto).HasColumnName("doc_documento_proyecto_costo");
            entity.Property(e => e.DocDocumentoProyectoCostoPlaneado).HasColumnName("doc_documento_proyecto_costoPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDescripcion)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.proyecto_descripcion");
            entity.Property(e => e.DocDocumentoProyectoDescuento).HasColumnName("doc_documento_proyecto_descuento");
            entity.Property(e => e.DocDocumentoProyectoDescuentoPlaneado).HasColumnName("doc_documento_proyecto_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_documento_codigo");
            entity.Property(e => e.DocDocumentoProyectoDocumentoNumero).HasColumnName("doc_documento_proyecto_documento_numero");
            entity.Property(e => e.DocDocumentoProyectoDocumentoProyecto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.proyecto_documento.proyecto");
            entity.Property(e => e.DocDocumentoProyectoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoProyectoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fecha_fh");
            entity.Property(e => e.DocDocumentoProyectoFechaFinEstimada)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.proyecto_fechaFinEstimada");
            entity.Property(e => e.DocDocumentoProyectoFechaInicioEstimada)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.proyecto_fechaInicioEstimada");
            entity.Property(e => e.DocDocumentoProyectoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoProyectoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoProyectoIdDocumento).HasColumnName("doc_documento_proyecto_id_documento");
            entity.Property(e => e.DocDocumentoProyectoIdEstadoTipoDocumento).HasColumnName("doc_documento_proyecto_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdMoneda).HasColumnName("doc_documento_proyecto_id_moneda");
            entity.Property(e => e.DocDocumentoProyectoIdMotivoestado).HasColumnName("doc_documento_proyecto_id_motivoestado");
            entity.Property(e => e.DocDocumentoProyectoIdPrioridadDocumento).HasColumnName("doc_documento_proyecto_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdSubtipoDocumento).HasColumnName("doc_documento_proyecto_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdTerceroCliente).HasColumnName("doc_documento_proyecto_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoProyectoIdTerceroProveedor).HasColumnName("doc_documento_proyecto_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoProyectoIdUsuarioAsignado).HasColumnName("doc_documento_proyecto_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoProyectoIdUsuarioEnUso).HasColumnName("doc_documento_proyecto_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoProyectoIva).HasColumnName("doc_documento_proyecto_iva");
            entity.Property(e => e.DocDocumentoProyectoIvaPlaneado).HasColumnName("doc_documento_proyecto_ivaPlaneado");
            entity.Property(e => e.DocDocumentoProyectoNombre)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_documento.proyecto_nombre");
            entity.Property(e => e.DocDocumentoProyectoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_prefijo");
            entity.Property(e => e.DocDocumentoProyectoPresupuesto)
                .HasColumnType("money")
                .HasColumnName("doc_documento.proyecto_presupuesto");
            entity.Property(e => e.DocDocumentoProyectoRentabilidad).HasColumnName("doc_documento_proyecto_rentabilidad");
            entity.Property(e => e.DocDocumentoProyectoSubtotal).HasColumnName("doc_documento_proyecto_subtotal");
            entity.Property(e => e.DocDocumentoProyectoSubtotalPlaneado).HasColumnName("doc_documento_proyecto_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoProyectoTotal).HasColumnName("doc_documento_proyecto_total");
            entity.Property(e => e.DocDocumentoProyectoTotalPlaneado).HasColumnName("doc_documento_proyecto_totalPlaneado");
            entity.Property(e => e.DocDocumentoProyectoTrm).HasColumnName("doc_documento_proyecto_trm");
            entity.Property(e => e.DocumentoProyectoEntregable)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.proyecto_entregable");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDocumentoProyecto).HasColumnName("id_documento.proyecto");
            entity.Property(e => e.IdEntregable).HasColumnName("id_entregable");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ProEntregableEntregable)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_entregable_entregable");
            entity.Property(e => e.ProEntregableEntregableCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_entregable_entregable_codigo");
            entity.Property(e => e.ProEntregableEsExterno).HasColumnName("pro_entregable_esExterno");
            entity.Property(e => e.ProEntregableFechaPlaneada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_entregable_fechaPlaneada");
            entity.Property(e => e.ProEntregableFechaProyectada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_entregable_fechaProyectada");
            entity.Property(e => e.ProEntregableFechaReal)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_entregable_fechaReal");
            entity.Property(e => e.ProEntregableNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_entregable_nombre");
            entity.Property(e => e.ProEntregablePorcentajePlaneado).HasColumnName("pro_entregable_porcentajePlaneado");
            entity.Property(e => e.ProEntregablePorcentajeReal).HasColumnName("pro_entregable_porcentajeReal");
            entity.Property(e => e.ProEntregableProducto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_entregable_producto");
            entity.Property(e => e.ProEntregableValorPlaneado).HasColumnName("pro_entregable_valorPlaneado");
            entity.Property(e => e.ProEntregableValorReal).HasColumnName("pro_entregable_valorReal");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoProyectoEtapa>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_proyecto_etapa");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocDocumentoProyectoCosto).HasColumnName("doc_documento_proyecto_costo");
            entity.Property(e => e.DocDocumentoProyectoCostoPlaneado).HasColumnName("doc_documento_proyecto_costoPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDescripcion)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.proyecto_descripcion");
            entity.Property(e => e.DocDocumentoProyectoDescuento).HasColumnName("doc_documento_proyecto_descuento");
            entity.Property(e => e.DocDocumentoProyectoDescuentoPlaneado).HasColumnName("doc_documento_proyecto_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_documento_codigo");
            entity.Property(e => e.DocDocumentoProyectoDocumentoNumero).HasColumnName("doc_documento_proyecto_documento_numero");
            entity.Property(e => e.DocDocumentoProyectoDocumentoProyecto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.proyecto_documento.proyecto");
            entity.Property(e => e.DocDocumentoProyectoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoProyectoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fecha_fh");
            entity.Property(e => e.DocDocumentoProyectoFechaFinEstimada)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.proyecto_fechaFinEstimada");
            entity.Property(e => e.DocDocumentoProyectoFechaInicioEstimada)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.proyecto_fechaInicioEstimada");
            entity.Property(e => e.DocDocumentoProyectoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoProyectoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoProyectoIdDocumento).HasColumnName("doc_documento_proyecto_id_documento");
            entity.Property(e => e.DocDocumentoProyectoIdEstadoTipoDocumento).HasColumnName("doc_documento_proyecto_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdMoneda).HasColumnName("doc_documento_proyecto_id_moneda");
            entity.Property(e => e.DocDocumentoProyectoIdMotivoestado).HasColumnName("doc_documento_proyecto_id_motivoestado");
            entity.Property(e => e.DocDocumentoProyectoIdPrioridadDocumento).HasColumnName("doc_documento_proyecto_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdSubtipoDocumento).HasColumnName("doc_documento_proyecto_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdTerceroCliente).HasColumnName("doc_documento_proyecto_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoProyectoIdTerceroProveedor).HasColumnName("doc_documento_proyecto_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoProyectoIdUsuarioAsignado).HasColumnName("doc_documento_proyecto_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoProyectoIdUsuarioEnUso).HasColumnName("doc_documento_proyecto_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoProyectoIva).HasColumnName("doc_documento_proyecto_iva");
            entity.Property(e => e.DocDocumentoProyectoIvaPlaneado).HasColumnName("doc_documento_proyecto_ivaPlaneado");
            entity.Property(e => e.DocDocumentoProyectoNombre)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_documento.proyecto_nombre");
            entity.Property(e => e.DocDocumentoProyectoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_prefijo");
            entity.Property(e => e.DocDocumentoProyectoPresupuesto)
                .HasColumnType("money")
                .HasColumnName("doc_documento.proyecto_presupuesto");
            entity.Property(e => e.DocDocumentoProyectoRentabilidad).HasColumnName("doc_documento_proyecto_rentabilidad");
            entity.Property(e => e.DocDocumentoProyectoSubtotal).HasColumnName("doc_documento_proyecto_subtotal");
            entity.Property(e => e.DocDocumentoProyectoSubtotalPlaneado).HasColumnName("doc_documento_proyecto_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoProyectoTotal).HasColumnName("doc_documento_proyecto_total");
            entity.Property(e => e.DocDocumentoProyectoTotalPlaneado).HasColumnName("doc_documento_proyecto_totalPlaneado");
            entity.Property(e => e.DocDocumentoProyectoTrm).HasColumnName("doc_documento_proyecto_trm");
            entity.Property(e => e.DocumentoProyectoEtapa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.proyecto_etapa");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDocumentoProyecto).HasColumnName("id_documento.proyecto");
            entity.Property(e => e.IdEtapa).HasColumnName("id_etapa");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ProEtapaCompletado).HasColumnName("pro_etapa_completado");
            entity.Property(e => e.ProEtapaDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("pro_etapa_descripcion");
            entity.Property(e => e.ProEtapaEtapa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_etapa_etapa");
            entity.Property(e => e.ProEtapaEtapaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_etapa_etapa_codigo");
            entity.Property(e => e.ProEtapaFechaFinPlaneada)
                .HasColumnType("datetime")
                .HasColumnName("pro_etapa_fechaFinPlaneada");
            entity.Property(e => e.ProEtapaFechaFinPlaneadaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_etapa_fechaFinPlaneada_ff");
            entity.Property(e => e.ProEtapaFechaFinProyectada)
                .HasColumnType("datetime")
                .HasColumnName("pro_etapa_fechaFinProyectada");
            entity.Property(e => e.ProEtapaFechaFinProyectadaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_etapa_fechaFinProyectada_ff");
            entity.Property(e => e.ProEtapaFechaFinReal)
                .HasColumnType("datetime")
                .HasColumnName("pro_etapa_fechaFinReal");
            entity.Property(e => e.ProEtapaFechaFinRealFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_etapa_fechaFinReal_ff");
            entity.Property(e => e.ProEtapaFechaInicioPlaneada)
                .HasColumnType("datetime")
                .HasColumnName("pro_etapa_fechaInicioPlaneada");
            entity.Property(e => e.ProEtapaFechaInicioPlaneadaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_etapa_fechaInicioPlaneada_ff");
            entity.Property(e => e.ProEtapaFechaInicioProyectada)
                .HasColumnType("datetime")
                .HasColumnName("pro_etapa_fechaInicioProyectada");
            entity.Property(e => e.ProEtapaFechaInicioProyectadaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_etapa_fechaInicioProyectada_ff");
            entity.Property(e => e.ProEtapaFechaInicioReal)
                .HasColumnType("datetime")
                .HasColumnName("pro_etapa_fechaInicioReal");
            entity.Property(e => e.ProEtapaFechaInicioRealFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_etapa_fechaInicioReal_ff");
            entity.Property(e => e.ProEtapaOrden).HasColumnName("pro_etapa_orden");
            entity.Property(e => e.ProEtapaPorcentajePresupuesto).HasColumnName("pro_etapa_porcentajePresupuesto");
            entity.Property(e => e.ProEtapaValorPresupuesto)
                .HasColumnType("money")
                .HasColumnName("pro_etapa_valorPresupuesto");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoProyectoSucursal>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_proyecto_sucursal");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocDocumentoProyectoCosto).HasColumnName("doc_documento_proyecto_costo");
            entity.Property(e => e.DocDocumentoProyectoCostoPlaneado).HasColumnName("doc_documento_proyecto_costoPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDescripcion)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.proyecto_descripcion");
            entity.Property(e => e.DocDocumentoProyectoDescuento).HasColumnName("doc_documento_proyecto_descuento");
            entity.Property(e => e.DocDocumentoProyectoDescuentoPlaneado).HasColumnName("doc_documento_proyecto_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_documento_codigo");
            entity.Property(e => e.DocDocumentoProyectoDocumentoNumero).HasColumnName("doc_documento_proyecto_documento_numero");
            entity.Property(e => e.DocDocumentoProyectoDocumentoProyecto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.proyecto_documento.proyecto");
            entity.Property(e => e.DocDocumentoProyectoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoProyectoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fecha_fh");
            entity.Property(e => e.DocDocumentoProyectoFechaFinEstimada)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.proyecto_fechaFinEstimada");
            entity.Property(e => e.DocDocumentoProyectoFechaInicioEstimada)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.proyecto_fechaInicioEstimada");
            entity.Property(e => e.DocDocumentoProyectoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoProyectoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoProyectoIdDocumento).HasColumnName("doc_documento_proyecto_id_documento");
            entity.Property(e => e.DocDocumentoProyectoIdEstadoTipoDocumento).HasColumnName("doc_documento_proyecto_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdMoneda).HasColumnName("doc_documento_proyecto_id_moneda");
            entity.Property(e => e.DocDocumentoProyectoIdMotivoestado).HasColumnName("doc_documento_proyecto_id_motivoestado");
            entity.Property(e => e.DocDocumentoProyectoIdPrioridadDocumento).HasColumnName("doc_documento_proyecto_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdSubtipoDocumento).HasColumnName("doc_documento_proyecto_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdTerceroCliente).HasColumnName("doc_documento_proyecto_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoProyectoIdTerceroProveedor).HasColumnName("doc_documento_proyecto_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoProyectoIdUsuarioAsignado).HasColumnName("doc_documento_proyecto_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoProyectoIdUsuarioEnUso).HasColumnName("doc_documento_proyecto_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoProyectoIva).HasColumnName("doc_documento_proyecto_iva");
            entity.Property(e => e.DocDocumentoProyectoIvaPlaneado).HasColumnName("doc_documento_proyecto_ivaPlaneado");
            entity.Property(e => e.DocDocumentoProyectoNombre)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_documento.proyecto_nombre");
            entity.Property(e => e.DocDocumentoProyectoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_prefijo");
            entity.Property(e => e.DocDocumentoProyectoPresupuesto)
                .HasColumnType("money")
                .HasColumnName("doc_documento.proyecto_presupuesto");
            entity.Property(e => e.DocDocumentoProyectoRentabilidad).HasColumnName("doc_documento_proyecto_rentabilidad");
            entity.Property(e => e.DocDocumentoProyectoSubtotal).HasColumnName("doc_documento_proyecto_subtotal");
            entity.Property(e => e.DocDocumentoProyectoSubtotalPlaneado).HasColumnName("doc_documento_proyecto_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoProyectoTotal).HasColumnName("doc_documento_proyecto_total");
            entity.Property(e => e.DocDocumentoProyectoTotalPlaneado).HasColumnName("doc_documento_proyecto_totalPlaneado");
            entity.Property(e => e.DocDocumentoProyectoTrm).HasColumnName("doc_documento_proyecto_trm");
            entity.Property(e => e.DocumentoProyectoSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.proyecto_sucursal");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDocumentoProyecto).HasColumnName("id_documento.proyecto");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TerSucursalCodigorecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_codigorecursiva");
            entity.Property(e => e.TerSucursalContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_contacto");
            entity.Property(e => e.TerSucursalDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Direccion");
            entity.Property(e => e.TerSucursalEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Email");
            entity.Property(e => e.TerSucursalFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Fax");
            entity.Property(e => e.TerSucursalIdEstadoTercero).HasColumnName("ter_sucursal_id_estadoTercero");
            entity.Property(e => e.TerSucursalIdSucursal).HasColumnName("ter_sucursal_id_sucursal");
            entity.Property(e => e.TerSucursalIdTercero).HasColumnName("ter_sucursal_id_tercero");
            entity.Property(e => e.TerSucursalIdUsuarioAsesor).HasColumnName("ter_sucursal_id_usuario_asesor");
            entity.Property(e => e.TerSucursalIdUsuarioTecnico).HasColumnName("ter_sucursal_id_usuario_tecnico");
            entity.Property(e => e.TerSucursalIdZona).HasColumnName("ter_sucursal_id_zona");
            entity.Property(e => e.TerSucursalParaAlquiler).HasColumnName("ter_sucursal_paraAlquiler");
            entity.Property(e => e.TerSucursalParaSoporte).HasColumnName("ter_sucursal_paraSoporte");
            entity.Property(e => e.TerSucursalParaVenta).HasColumnName("ter_sucursal_paraVenta");
            entity.Property(e => e.TerSucursalSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal");
            entity.Property(e => e.TerSucursalSucursalCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal_codigo");
            entity.Property(e => e.TerSucursalTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_telefono");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoRequisicion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_requisicion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Asunto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("asunto");
            entity.Property(e => e.DireccionEntrega)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("direccionEntrega");
            entity.Property(e => e.DocDocumentoRequisicionCosto).HasColumnName("doc_documento_requisicion_costo");
            entity.Property(e => e.DocDocumentoRequisicionCostoPlaneado).HasColumnName("doc_documento_requisicion_costoPlaneado");
            entity.Property(e => e.DocDocumentoRequisicionDescuento).HasColumnName("doc_documento_requisicion_descuento");
            entity.Property(e => e.DocDocumentoRequisicionDescuentoPlaneado).HasColumnName("doc_documento_requisicion_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreCosto).HasColumnName("doc_documento_requisicion_doc_documento_padre_costo");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreCostoPlaneado).HasColumnName("doc_documento_requisicion_doc_documento_padre_costoPlaneado");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreDescuento).HasColumnName("doc_documento_requisicion_doc_documento_padre_descuento");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreDescuentoPlaneado).HasColumnName("doc_documento_requisicion_doc_documento_padre_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_doc_documento_padre_documento");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_doc_documento_padre_documento_codigo");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreDocumentoNumero).HasColumnName("doc_documento_requisicion_doc_documento_padre_documento_numero");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_requisicion_doc_documento_padre_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_requisicion_doc_documento_padre_fecha_fh");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_requisicion_doc_documento_padre_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_requisicion_doc_documento_padre_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreIdDocumento).HasColumnName("doc_documento_requisicion_doc_documento_padre_id_documento");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreIdEstadoTipoDocumento).HasColumnName("doc_documento_requisicion_doc_documento_padre_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreIdMoneda).HasColumnName("doc_documento_requisicion_doc_documento_padre_id_moneda");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreIdMotivoestado).HasColumnName("doc_documento_requisicion_doc_documento_padre_id_motivoestado");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreIdPrioridadDocumento).HasColumnName("doc_documento_requisicion_doc_documento_padre_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreIdSubtipoDocumento).HasColumnName("doc_documento_requisicion_doc_documento_padre_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreIdTerceroCliente).HasColumnName("doc_documento_requisicion_doc_documento_padre_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreIdTerceroProveedor).HasColumnName("doc_documento_requisicion_doc_documento_padre_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreIdUsuarioAsignado).HasColumnName("doc_documento_requisicion_doc_documento_padre_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreIdUsuarioEnUso).HasColumnName("doc_documento_requisicion_doc_documento_padre_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreIva).HasColumnName("doc_documento_requisicion_doc_documento_padre_iva");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreIvaPlaneado).HasColumnName("doc_documento_requisicion_doc_documento_padre_ivaPlaneado");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadrePrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_doc_documento_padre_prefijo");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreRentabilidad).HasColumnName("doc_documento_requisicion_doc_documento_padre_rentabilidad");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreSubtotal).HasColumnName("doc_documento_requisicion_doc_documento_padre_subtotal");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreSubtotalPlaneado).HasColumnName("doc_documento_requisicion_doc_documento_padre_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreTotal).HasColumnName("doc_documento_requisicion_doc_documento_padre_total");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreTotalPlaneado).HasColumnName("doc_documento_requisicion_doc_documento_padre_totalPlaneado");
            entity.Property(e => e.DocDocumentoRequisicionDocDocumentoPadreTrm).HasColumnName("doc_documento_requisicion_doc_documento_padre_trm");
            entity.Property(e => e.DocDocumentoRequisicionDocEstadoTipoDocumentoAfectaIndicador).HasColumnName("doc_documento_requisicion_doc_estadoTipoDocumento_afectaIndicador");
            entity.Property(e => e.DocDocumentoRequisicionDocEstadoTipoDocumentoAfectaInventario).HasColumnName("doc_documento_requisicion_doc_estadoTipoDocumento_afectaInventario");
            entity.Property(e => e.DocDocumentoRequisicionDocEstadoTipoDocumentoColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_doc_estadoTipoDocumento_color");
            entity.Property(e => e.DocDocumentoRequisicionDocEstadoTipoDocumentoDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_doc_estadoTipoDocumento_descripcion");
            entity.Property(e => e.DocDocumentoRequisicionDocEstadoTipoDocumentoEditaDocumento).HasColumnName("doc_documento_requisicion_doc_estadoTipoDocumento_editaDocumento");
            entity.Property(e => e.DocDocumentoRequisicionDocEstadoTipoDocumentoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_doc_estadoTipoDocumento_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoRequisicionDocEstadoTipoDocumentoEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_doc_estadoTipoDocumento_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocDocumentoRequisicionDocEstadoTipoDocumentoIdTipoDocumento).HasColumnName("doc_documento_requisicion_doc_estadoTipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoRequisicionDocEstadoTipoDocumentoOrden).HasColumnName("doc_documento_requisicion_doc_estadoTipoDocumento_orden");
            entity.Property(e => e.DocDocumentoRequisicionDocEstadoTipoDocumentoPuedeRegresar).HasColumnName("doc_documento_requisicion_doc_estadoTipoDocumento_puedeRegresar");
            entity.Property(e => e.DocDocumentoRequisicionDocMotivoestadoIdEstadoTipoDocumento).HasColumnName("doc_documento_requisicion_doc_motivoestado_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoRequisicionDocMotivoestadoMotivoestado)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_doc_motivoestado_motivoestado");
            entity.Property(e => e.DocDocumentoRequisicionDocMotivoestadoMotivoestadoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_doc_motivoestado_motivoestado_codigo");
            entity.Property(e => e.DocDocumentoRequisicionDocPrioridadDocumentoIdEstrategiaPrioridad).HasColumnName("doc_documento_requisicion_doc_prioridadDocumento_id_estrategiaPrioridad");
            entity.Property(e => e.DocDocumentoRequisicionDocPrioridadDocumentoIdTipoDocumento).HasColumnName("doc_documento_requisicion_doc_prioridadDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoRequisicionDocPrioridadDocumentoOrden).HasColumnName("doc_documento_requisicion_doc_prioridadDocumento_orden");
            entity.Property(e => e.DocDocumentoRequisicionDocPrioridadDocumentoPrioridadDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_doc_prioridadDocumento_prioridadDocumento");
            entity.Property(e => e.DocDocumentoRequisicionDocPrioridadDocumentoPrioridadDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_doc_prioridadDocumento_prioridadDocumento_codigo");
            entity.Property(e => e.DocDocumentoRequisicionDocPrioridadDocumentoTiempoRespuesta).HasColumnName("doc_documento_requisicion_doc_prioridadDocumento_tiempoRespuesta");
            entity.Property(e => e.DocDocumentoRequisicionDocSubtipoDocumentoBloquearDespacho).HasColumnName("doc_documento_requisicion_doc_subtipoDocumento_bloquearDespacho");
            entity.Property(e => e.DocDocumentoRequisicionDocSubtipoDocumentoCargarSolicitante).HasColumnName("doc_documento_requisicion_doc_subtipoDocumento_cargarSolicitante");
            entity.Property(e => e.DocDocumentoRequisicionDocSubtipoDocumentoCerrarSol).HasColumnName("doc_documento_requisicion_doc_subtipoDocumento_cerrarSol");
            entity.Property(e => e.DocDocumentoRequisicionDocSubtipoDocumentoConsecutivo).HasColumnName("doc_documento_requisicion_doc_subtipoDocumento_consecutivo");
            entity.Property(e => e.DocDocumentoRequisicionDocSubtipoDocumentoIdTipoDocumento).HasColumnName("doc_documento_requisicion_doc_subtipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoRequisicionDocSubtipoDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_doc_subtipoDocumento_prefijo");
            entity.Property(e => e.DocDocumentoRequisicionDocSubtipoDocumentoProgramarPlaneadas).HasColumnName("doc_documento_requisicion_doc_subtipoDocumento_programarPlaneadas");
            entity.Property(e => e.DocDocumentoRequisicionDocSubtipoDocumentoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_doc_subtipoDocumento_subtipoDocumento");
            entity.Property(e => e.DocDocumentoRequisicionDocSubtipoDocumentoSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_doc_subtipoDocumento_subtipoDocumento_codigo");
            entity.Property(e => e.DocDocumentoRequisicionDocSubtipoDocumentoValUrgente).HasColumnName("doc_documento_requisicion_doc_subtipoDocumento_valUrgente");
            entity.Property(e => e.DocDocumentoRequisicionDocSubtipoDocumentoVerCentroCosto).HasColumnName("doc_documento_requisicion_doc_subtipoDocumento_verCentroCosto");
            entity.Property(e => e.DocDocumentoRequisicionDocSubtipoDocumentoVerIncoterm).HasColumnName("doc_documento_requisicion_doc_subtipoDocumento_verIncoterm");
            entity.Property(e => e.DocDocumentoRequisicionDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_documento_codigo");
            entity.Property(e => e.DocDocumentoRequisicionDocumentoNumero).HasColumnName("doc_documento_requisicion_documento_numero");
            entity.Property(e => e.DocDocumentoRequisicionFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_requisicion_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoRequisicionFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_requisicion_fecha_fh");
            entity.Property(e => e.DocDocumentoRequisicionFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_requisicion_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoRequisicionFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_requisicion_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoRequisicionGenMonedaAbreviatura)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_gen_moneda_abreviatura");
            entity.Property(e => e.DocDocumentoRequisicionGenMonedaCambio).HasColumnName("doc_documento_requisicion_gen_moneda_cambio");
            entity.Property(e => e.DocDocumentoRequisicionGenMonedaMoneda)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_gen_moneda_moneda");
            entity.Property(e => e.DocDocumentoRequisicionGenMonedaMonedaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_gen_moneda_moneda_codigo");
            entity.Property(e => e.DocDocumentoRequisicionIdDocumento).HasColumnName("doc_documento_requisicion_id_documento");
            entity.Property(e => e.DocDocumentoRequisicionIdEstadoTipoDocumento).HasColumnName("doc_documento_requisicion_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoRequisicionIdMoneda).HasColumnName("doc_documento_requisicion_id_moneda");
            entity.Property(e => e.DocDocumentoRequisicionIdMotivoestado).HasColumnName("doc_documento_requisicion_id_motivoestado");
            entity.Property(e => e.DocDocumentoRequisicionIdPrioridadDocumento).HasColumnName("doc_documento_requisicion_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoRequisicionIdSubtipoDocumento).HasColumnName("doc_documento_requisicion_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoRequisicionIdTerceroCliente).HasColumnName("doc_documento_requisicion_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoRequisicionIdTerceroProveedor).HasColumnName("doc_documento_requisicion_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoRequisicionIdUsuarioAsignado).HasColumnName("doc_documento_requisicion_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoRequisicionIdUsuarioEnUso).HasColumnName("doc_documento_requisicion_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoRequisicionIva).HasColumnName("doc_documento_requisicion_iva");
            entity.Property(e => e.DocDocumentoRequisicionIvaPlaneado).HasColumnName("doc_documento_requisicion_ivaPlaneado");
            entity.Property(e => e.DocDocumentoRequisicionPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_prefijo");
            entity.Property(e => e.DocDocumentoRequisicionRentabilidad).HasColumnName("doc_documento_requisicion_rentabilidad");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoAccesoActivo).HasColumnName("doc_documento_requisicion_seg_usuario_asignado_accesoActivo");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoAplicaRecargo).HasColumnName("doc_documento_requisicion_seg_usuario_asignado_aplicaRecargo");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoCambiarClave).HasColumnName("doc_documento_requisicion_seg_usuario_asignado_cambiarClave");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_seg_usuario_asignado_clave");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoCostoHora)
                .HasColumnType("money")
                .HasColumnName("doc_documento_requisicion_seg_usuario_asignado_costoHora");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_seg_usuario_asignado_direccion");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_seg_usuario_asignado_email");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_requisicion_seg_usuario_asignado_fechaIntentoFallido_fh");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_requisicion_seg_usuario_asignado_fechaUltimoCambioClave_fh");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_requisicion_seg_usuario_asignado_fechaUltimoIngreso_fh");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoHabilitado).HasColumnName("doc_documento_requisicion_seg_usuario_asignado_habilitado");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoIdCargo).HasColumnName("doc_documento_requisicion_seg_usuario_asignado_id_cargo");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoIdGrupo).HasColumnName("doc_documento_requisicion_seg_usuario_asignado_id_grupo");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoIdPerfil).HasColumnName("doc_documento_requisicion_seg_usuario_asignado_id_perfil");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoIdUsuario).HasColumnName("doc_documento_requisicion_seg_usuario_asignado_id_usuario");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoIdZona).HasColumnName("doc_documento_requisicion_seg_usuario_asignado_id_zona");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_seg_usuario_asignado_identificacion");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoIntentosFallidos).HasColumnName("doc_documento_requisicion_seg_usuario_asignado_intentosFallidos");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_seg_usuario_asignado_nombre");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoNumeroIngresos).HasColumnName("doc_documento_requisicion_seg_usuario_asignado_numeroIngresos");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoPorcentajeComision).HasColumnName("doc_documento_requisicion_seg_usuario_asignado_porcentajeComision");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoPreferencias)
                .HasColumnType("image")
                .HasColumnName("doc_documento_requisicion_seg_usuario_asignado_preferencias");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_seg_usuario_asignado_profesion");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoSexo).HasColumnName("doc_documento_requisicion_seg_usuario_asignado_sexo");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_seg_usuario_asignado_telefono");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_seg_usuario_asignado_usuario");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioAsignadoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_seg_usuario_asignado_usuario_codigo");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoAccesoActivo).HasColumnName("doc_documento_requisicion_seg_usuario_enUso_accesoActivo");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoAplicaRecargo).HasColumnName("doc_documento_requisicion_seg_usuario_enUso_aplicaRecargo");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoCambiarClave).HasColumnName("doc_documento_requisicion_seg_usuario_enUso_cambiarClave");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_seg_usuario_enUso_clave");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoCostoHora)
                .HasColumnType("money")
                .HasColumnName("doc_documento_requisicion_seg_usuario_enUso_costoHora");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_seg_usuario_enUso_direccion");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_seg_usuario_enUso_email");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_requisicion_seg_usuario_enUso_fechaIntentoFallido_fh");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_requisicion_seg_usuario_enUso_fechaUltimoCambioClave_fh");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_requisicion_seg_usuario_enUso_fechaUltimoIngreso_fh");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoHabilitado).HasColumnName("doc_documento_requisicion_seg_usuario_enUso_habilitado");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoIdCargo).HasColumnName("doc_documento_requisicion_seg_usuario_enUso_id_cargo");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoIdGrupo).HasColumnName("doc_documento_requisicion_seg_usuario_enUso_id_grupo");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoIdPerfil).HasColumnName("doc_documento_requisicion_seg_usuario_enUso_id_perfil");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoIdUsuario).HasColumnName("doc_documento_requisicion_seg_usuario_enUso_id_usuario");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoIdZona).HasColumnName("doc_documento_requisicion_seg_usuario_enUso_id_zona");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_seg_usuario_enUso_identificacion");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoIntentosFallidos).HasColumnName("doc_documento_requisicion_seg_usuario_enUso_intentosFallidos");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_seg_usuario_enUso_nombre");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoNumeroIngresos).HasColumnName("doc_documento_requisicion_seg_usuario_enUso_numeroIngresos");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoPorcentajeComision).HasColumnName("doc_documento_requisicion_seg_usuario_enUso_porcentajeComision");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoPreferencias)
                .HasColumnType("image")
                .HasColumnName("doc_documento_requisicion_seg_usuario_enUso_preferencias");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_seg_usuario_enUso_profesion");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoSexo).HasColumnName("doc_documento_requisicion_seg_usuario_enUso_sexo");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_seg_usuario_enUso_telefono");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_seg_usuario_enUso_usuario");
            entity.Property(e => e.DocDocumentoRequisicionSegUsuarioEnUsoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_seg_usuario_enUso_usuario_codigo");
            entity.Property(e => e.DocDocumentoRequisicionSubtotal).HasColumnName("doc_documento_requisicion_subtotal");
            entity.Property(e => e.DocDocumentoRequisicionSubtotalPlaneado).HasColumnName("doc_documento_requisicion_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroClienteClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_cliente_clasificacion");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroClienteContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_cliente_contacto");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroClienteDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_cliente_direccion");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroClienteEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_cliente_email");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroClienteEsCliente).HasColumnName("doc_documento_requisicion_ter_tercero_cliente_esCliente");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroClienteEsEmpresaPropia).HasColumnName("doc_documento_requisicion_ter_tercero_cliente_esEmpresaPropia");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroClienteEsFabricante).HasColumnName("doc_documento_requisicion_ter_tercero_cliente_esFabricante");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroClienteEsProspecto).HasColumnName("doc_documento_requisicion_ter_tercero_cliente_esProspecto");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroClienteEsProveedor).HasColumnName("doc_documento_requisicion_ter_tercero_cliente_esProveedor");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroClienteEsTransportador).HasColumnName("doc_documento_requisicion_ter_tercero_cliente_esTransportador");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroClienteFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_cliente_fax");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroClienteIdEstadoTercero).HasColumnName("doc_documento_requisicion_ter_tercero_cliente_id_estadoTercero");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroClienteIdNaturalezaTercero).HasColumnName("doc_documento_requisicion_ter_tercero_cliente_id_naturalezaTercero");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroClienteIdZona).HasColumnName("doc_documento_requisicion_ter_tercero_cliente_id_zona");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroClienteNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_cliente_notas");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroClienteRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_cliente_representante");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroClienteTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_cliente_telefono");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroClienteTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_cliente_tercero");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroClienteTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_cliente_tercero_codigo");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroClienteTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_cliente_tercero_nit");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroClienteTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_cliente_tercero_nombreCorto");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroClienteWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_cliente_website");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroProveedorClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_proveedor_clasificacion");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroProveedorContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_proveedor_contacto");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroProveedorDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_proveedor_direccion");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroProveedorEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_proveedor_email");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroProveedorEsCliente).HasColumnName("doc_documento_requisicion_ter_tercero_proveedor_esCliente");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroProveedorEsEmpresaPropia).HasColumnName("doc_documento_requisicion_ter_tercero_proveedor_esEmpresaPropia");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroProveedorEsFabricante).HasColumnName("doc_documento_requisicion_ter_tercero_proveedor_esFabricante");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroProveedorEsProspecto).HasColumnName("doc_documento_requisicion_ter_tercero_proveedor_esProspecto");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroProveedorEsProveedor).HasColumnName("doc_documento_requisicion_ter_tercero_proveedor_esProveedor");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroProveedorEsTransportador).HasColumnName("doc_documento_requisicion_ter_tercero_proveedor_esTransportador");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroProveedorFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_proveedor_fax");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroProveedorIdEstadoTercero).HasColumnName("doc_documento_requisicion_ter_tercero_proveedor_id_estadoTercero");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroProveedorIdNaturalezaTercero).HasColumnName("doc_documento_requisicion_ter_tercero_proveedor_id_naturalezaTercero");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroProveedorIdZona).HasColumnName("doc_documento_requisicion_ter_tercero_proveedor_id_zona");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroProveedorNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_proveedor_notas");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroProveedorRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_proveedor_representante");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroProveedorTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_proveedor_telefono");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroProveedorTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_proveedor_tercero");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroProveedorTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_proveedor_tercero_codigo");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroProveedorTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_proveedor_tercero_nit");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroProveedorTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_proveedor_tercero_nombreCorto");
            entity.Property(e => e.DocDocumentoRequisicionTerTerceroProveedorWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_requisicion_ter_tercero_proveedor_website");
            entity.Property(e => e.DocDocumentoRequisicionTotal).HasColumnName("doc_documento_requisicion_total");
            entity.Property(e => e.DocDocumentoRequisicionTotalPlaneado).HasColumnName("doc_documento_requisicion_totalPlaneado");
            entity.Property(e => e.DocDocumentoRequisicionTrm).HasColumnName("doc_documento_requisicion_trm");
            entity.Property(e => e.DocumentoRequisicion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.requisicion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("observaciones");
            entity.Property(e => e.Solicitante)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("solicitante");
            entity.Property(e => e.TelefonoEntrega)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("telefonoEntrega");
            entity.Property(e => e.TerSucursalCodigorecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_codigorecursiva");
            entity.Property(e => e.TerSucursalContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_contacto");
            entity.Property(e => e.TerSucursalDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Direccion");
            entity.Property(e => e.TerSucursalEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Email");
            entity.Property(e => e.TerSucursalFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Fax");
            entity.Property(e => e.TerSucursalIdEstadoTercero).HasColumnName("ter_sucursal_id_estadoTercero");
            entity.Property(e => e.TerSucursalIdSucursal).HasColumnName("ter_sucursal_id_sucursal");
            entity.Property(e => e.TerSucursalIdTercero).HasColumnName("ter_sucursal_id_tercero");
            entity.Property(e => e.TerSucursalIdUsuarioAsesor).HasColumnName("ter_sucursal_id_usuario_asesor");
            entity.Property(e => e.TerSucursalIdUsuarioTecnico).HasColumnName("ter_sucursal_id_usuario_tecnico");
            entity.Property(e => e.TerSucursalIdZona).HasColumnName("ter_sucursal_id_zona");
            entity.Property(e => e.TerSucursalParaAlquiler).HasColumnName("ter_sucursal_paraAlquiler");
            entity.Property(e => e.TerSucursalParaSoporte).HasColumnName("ter_sucursal_paraSoporte");
            entity.Property(e => e.TerSucursalParaVenta).HasColumnName("ter_sucursal_paraVenta");
            entity.Property(e => e.TerSucursalSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal");
            entity.Property(e => e.TerSucursalSucursalCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal_codigo");
            entity.Property(e => e.TerSucursalTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_telefono");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoSalidum>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_salida");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Asunto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("asunto");
            entity.Property(e => e.DireccionEntrega)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("direccionEntrega");
            entity.Property(e => e.DocDocumentoSalidaCosto).HasColumnName("doc_documento_salida_costo");
            entity.Property(e => e.DocDocumentoSalidaCostoPlaneado).HasColumnName("doc_documento_salida_costoPlaneado");
            entity.Property(e => e.DocDocumentoSalidaDescuento).HasColumnName("doc_documento_salida_descuento");
            entity.Property(e => e.DocDocumentoSalidaDescuentoPlaneado).HasColumnName("doc_documento_salida_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreCosto).HasColumnName("doc_documento_salida_doc_documento_padre_costo");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreCostoPlaneado).HasColumnName("doc_documento_salida_doc_documento_padre_costoPlaneado");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreDescuento).HasColumnName("doc_documento_salida_doc_documento_padre_descuento");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreDescuentoPlaneado).HasColumnName("doc_documento_salida_doc_documento_padre_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_doc_documento_padre_documento");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_doc_documento_padre_documento_codigo");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreDocumentoNumero).HasColumnName("doc_documento_salida_doc_documento_padre_documento_numero");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_salida_doc_documento_padre_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_salida_doc_documento_padre_fecha_fh");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_salida_doc_documento_padre_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_salida_doc_documento_padre_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreIdDocumento).HasColumnName("doc_documento_salida_doc_documento_padre_id_documento");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreIdEstadoTipoDocumento).HasColumnName("doc_documento_salida_doc_documento_padre_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreIdMoneda).HasColumnName("doc_documento_salida_doc_documento_padre_id_moneda");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreIdMotivoestado).HasColumnName("doc_documento_salida_doc_documento_padre_id_motivoestado");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreIdPrioridadDocumento).HasColumnName("doc_documento_salida_doc_documento_padre_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreIdSubtipoDocumento).HasColumnName("doc_documento_salida_doc_documento_padre_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreIdTerceroCliente).HasColumnName("doc_documento_salida_doc_documento_padre_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreIdTerceroProveedor).HasColumnName("doc_documento_salida_doc_documento_padre_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreIdUsuarioAsignado).HasColumnName("doc_documento_salida_doc_documento_padre_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreIdUsuarioEnUso).HasColumnName("doc_documento_salida_doc_documento_padre_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreIva).HasColumnName("doc_documento_salida_doc_documento_padre_iva");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreIvaPlaneado).HasColumnName("doc_documento_salida_doc_documento_padre_ivaPlaneado");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadrePrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_doc_documento_padre_prefijo");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreRentabilidad).HasColumnName("doc_documento_salida_doc_documento_padre_rentabilidad");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreSubtotal).HasColumnName("doc_documento_salida_doc_documento_padre_subtotal");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreSubtotalPlaneado).HasColumnName("doc_documento_salida_doc_documento_padre_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreTotal).HasColumnName("doc_documento_salida_doc_documento_padre_total");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreTotalPlaneado).HasColumnName("doc_documento_salida_doc_documento_padre_totalPlaneado");
            entity.Property(e => e.DocDocumentoSalidaDocDocumentoPadreTrm).HasColumnName("doc_documento_salida_doc_documento_padre_trm");
            entity.Property(e => e.DocDocumentoSalidaDocEstadoTipoDocumentoAfectaIndicador).HasColumnName("doc_documento_salida_doc_estadoTipoDocumento_afectaIndicador");
            entity.Property(e => e.DocDocumentoSalidaDocEstadoTipoDocumentoAfectaInventario).HasColumnName("doc_documento_salida_doc_estadoTipoDocumento_afectaInventario");
            entity.Property(e => e.DocDocumentoSalidaDocEstadoTipoDocumentoColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_doc_estadoTipoDocumento_color");
            entity.Property(e => e.DocDocumentoSalidaDocEstadoTipoDocumentoDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_doc_estadoTipoDocumento_descripcion");
            entity.Property(e => e.DocDocumentoSalidaDocEstadoTipoDocumentoEditaDocumento).HasColumnName("doc_documento_salida_doc_estadoTipoDocumento_editaDocumento");
            entity.Property(e => e.DocDocumentoSalidaDocEstadoTipoDocumentoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_doc_estadoTipoDocumento_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoSalidaDocEstadoTipoDocumentoEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_doc_estadoTipoDocumento_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocDocumentoSalidaDocEstadoTipoDocumentoIdTipoDocumento).HasColumnName("doc_documento_salida_doc_estadoTipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoSalidaDocEstadoTipoDocumentoOrden).HasColumnName("doc_documento_salida_doc_estadoTipoDocumento_orden");
            entity.Property(e => e.DocDocumentoSalidaDocEstadoTipoDocumentoPuedeRegresar).HasColumnName("doc_documento_salida_doc_estadoTipoDocumento_puedeRegresar");
            entity.Property(e => e.DocDocumentoSalidaDocMotivoestadoIdEstadoTipoDocumento).HasColumnName("doc_documento_salida_doc_motivoestado_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoSalidaDocMotivoestadoMotivoestado)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_doc_motivoestado_motivoestado");
            entity.Property(e => e.DocDocumentoSalidaDocMotivoestadoMotivoestadoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_doc_motivoestado_motivoestado_codigo");
            entity.Property(e => e.DocDocumentoSalidaDocPrioridadDocumentoIdEstrategiaPrioridad).HasColumnName("doc_documento_salida_doc_prioridadDocumento_id_estrategiaPrioridad");
            entity.Property(e => e.DocDocumentoSalidaDocPrioridadDocumentoIdTipoDocumento).HasColumnName("doc_documento_salida_doc_prioridadDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoSalidaDocPrioridadDocumentoOrden).HasColumnName("doc_documento_salida_doc_prioridadDocumento_orden");
            entity.Property(e => e.DocDocumentoSalidaDocPrioridadDocumentoPrioridadDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_doc_prioridadDocumento_prioridadDocumento");
            entity.Property(e => e.DocDocumentoSalidaDocPrioridadDocumentoPrioridadDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_doc_prioridadDocumento_prioridadDocumento_codigo");
            entity.Property(e => e.DocDocumentoSalidaDocPrioridadDocumentoTiempoRespuesta).HasColumnName("doc_documento_salida_doc_prioridadDocumento_tiempoRespuesta");
            entity.Property(e => e.DocDocumentoSalidaDocSubtipoDocumentoBloquearDespacho).HasColumnName("doc_documento_salida_doc_subtipoDocumento_bloquearDespacho");
            entity.Property(e => e.DocDocumentoSalidaDocSubtipoDocumentoCargarSolicitante).HasColumnName("doc_documento_salida_doc_subtipoDocumento_cargarSolicitante");
            entity.Property(e => e.DocDocumentoSalidaDocSubtipoDocumentoCerrarSol).HasColumnName("doc_documento_salida_doc_subtipoDocumento_cerrarSol");
            entity.Property(e => e.DocDocumentoSalidaDocSubtipoDocumentoConsecutivo).HasColumnName("doc_documento_salida_doc_subtipoDocumento_consecutivo");
            entity.Property(e => e.DocDocumentoSalidaDocSubtipoDocumentoIdTipoDocumento).HasColumnName("doc_documento_salida_doc_subtipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoSalidaDocSubtipoDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_doc_subtipoDocumento_prefijo");
            entity.Property(e => e.DocDocumentoSalidaDocSubtipoDocumentoProgramarPlaneadas).HasColumnName("doc_documento_salida_doc_subtipoDocumento_programarPlaneadas");
            entity.Property(e => e.DocDocumentoSalidaDocSubtipoDocumentoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_doc_subtipoDocumento_subtipoDocumento");
            entity.Property(e => e.DocDocumentoSalidaDocSubtipoDocumentoSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_doc_subtipoDocumento_subtipoDocumento_codigo");
            entity.Property(e => e.DocDocumentoSalidaDocSubtipoDocumentoValUrgente).HasColumnName("doc_documento_salida_doc_subtipoDocumento_valUrgente");
            entity.Property(e => e.DocDocumentoSalidaDocSubtipoDocumentoVerCentroCosto).HasColumnName("doc_documento_salida_doc_subtipoDocumento_verCentroCosto");
            entity.Property(e => e.DocDocumentoSalidaDocSubtipoDocumentoVerIncoterm).HasColumnName("doc_documento_salida_doc_subtipoDocumento_verIncoterm");
            entity.Property(e => e.DocDocumentoSalidaDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_documento_codigo");
            entity.Property(e => e.DocDocumentoSalidaDocumentoNumero).HasColumnName("doc_documento_salida_documento_numero");
            entity.Property(e => e.DocDocumentoSalidaFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_salida_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoSalidaFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_salida_fecha_fh");
            entity.Property(e => e.DocDocumentoSalidaFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_salida_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoSalidaFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_salida_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoSalidaGenMonedaAbreviatura)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_gen_moneda_abreviatura");
            entity.Property(e => e.DocDocumentoSalidaGenMonedaCambio).HasColumnName("doc_documento_salida_gen_moneda_cambio");
            entity.Property(e => e.DocDocumentoSalidaGenMonedaMoneda)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_gen_moneda_moneda");
            entity.Property(e => e.DocDocumentoSalidaGenMonedaMonedaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_gen_moneda_moneda_codigo");
            entity.Property(e => e.DocDocumentoSalidaIdDocumento).HasColumnName("doc_documento_salida_id_documento");
            entity.Property(e => e.DocDocumentoSalidaIdEstadoTipoDocumento).HasColumnName("doc_documento_salida_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoSalidaIdMoneda).HasColumnName("doc_documento_salida_id_moneda");
            entity.Property(e => e.DocDocumentoSalidaIdMotivoestado).HasColumnName("doc_documento_salida_id_motivoestado");
            entity.Property(e => e.DocDocumentoSalidaIdPrioridadDocumento).HasColumnName("doc_documento_salida_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoSalidaIdSubtipoDocumento).HasColumnName("doc_documento_salida_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoSalidaIdTerceroCliente).HasColumnName("doc_documento_salida_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoSalidaIdTerceroProveedor).HasColumnName("doc_documento_salida_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoSalidaIdUsuarioAsignado).HasColumnName("doc_documento_salida_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoSalidaIdUsuarioEnUso).HasColumnName("doc_documento_salida_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoSalidaIva).HasColumnName("doc_documento_salida_iva");
            entity.Property(e => e.DocDocumentoSalidaIvaPlaneado).HasColumnName("doc_documento_salida_ivaPlaneado");
            entity.Property(e => e.DocDocumentoSalidaPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_prefijo");
            entity.Property(e => e.DocDocumentoSalidaRentabilidad).HasColumnName("doc_documento_salida_rentabilidad");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoAccesoActivo).HasColumnName("doc_documento_salida_seg_usuario_asignado_accesoActivo");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoAplicaRecargo).HasColumnName("doc_documento_salida_seg_usuario_asignado_aplicaRecargo");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoCambiarClave).HasColumnName("doc_documento_salida_seg_usuario_asignado_cambiarClave");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_seg_usuario_asignado_clave");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoCostoHora)
                .HasColumnType("money")
                .HasColumnName("doc_documento_salida_seg_usuario_asignado_costoHora");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_seg_usuario_asignado_direccion");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_seg_usuario_asignado_email");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_salida_seg_usuario_asignado_fechaIntentoFallido_fh");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_salida_seg_usuario_asignado_fechaUltimoCambioClave_fh");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_salida_seg_usuario_asignado_fechaUltimoIngreso_fh");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoHabilitado).HasColumnName("doc_documento_salida_seg_usuario_asignado_habilitado");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoIdCargo).HasColumnName("doc_documento_salida_seg_usuario_asignado_id_cargo");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoIdGrupo).HasColumnName("doc_documento_salida_seg_usuario_asignado_id_grupo");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoIdPerfil).HasColumnName("doc_documento_salida_seg_usuario_asignado_id_perfil");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoIdUsuario).HasColumnName("doc_documento_salida_seg_usuario_asignado_id_usuario");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoIdZona).HasColumnName("doc_documento_salida_seg_usuario_asignado_id_zona");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_seg_usuario_asignado_identificacion");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoIntentosFallidos).HasColumnName("doc_documento_salida_seg_usuario_asignado_intentosFallidos");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_seg_usuario_asignado_nombre");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoNumeroIngresos).HasColumnName("doc_documento_salida_seg_usuario_asignado_numeroIngresos");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoPorcentajeComision).HasColumnName("doc_documento_salida_seg_usuario_asignado_porcentajeComision");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoPreferencias)
                .HasColumnType("image")
                .HasColumnName("doc_documento_salida_seg_usuario_asignado_preferencias");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_seg_usuario_asignado_profesion");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoSexo).HasColumnName("doc_documento_salida_seg_usuario_asignado_sexo");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_seg_usuario_asignado_telefono");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_seg_usuario_asignado_usuario");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioAsignadoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_seg_usuario_asignado_usuario_codigo");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoAccesoActivo).HasColumnName("doc_documento_salida_seg_usuario_enUso_accesoActivo");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoAplicaRecargo).HasColumnName("doc_documento_salida_seg_usuario_enUso_aplicaRecargo");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoCambiarClave).HasColumnName("doc_documento_salida_seg_usuario_enUso_cambiarClave");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_seg_usuario_enUso_clave");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoCostoHora)
                .HasColumnType("money")
                .HasColumnName("doc_documento_salida_seg_usuario_enUso_costoHora");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_seg_usuario_enUso_direccion");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_seg_usuario_enUso_email");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_salida_seg_usuario_enUso_fechaIntentoFallido_fh");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_salida_seg_usuario_enUso_fechaUltimoCambioClave_fh");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_salida_seg_usuario_enUso_fechaUltimoIngreso_fh");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoHabilitado).HasColumnName("doc_documento_salida_seg_usuario_enUso_habilitado");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoIdCargo).HasColumnName("doc_documento_salida_seg_usuario_enUso_id_cargo");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoIdGrupo).HasColumnName("doc_documento_salida_seg_usuario_enUso_id_grupo");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoIdPerfil).HasColumnName("doc_documento_salida_seg_usuario_enUso_id_perfil");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoIdUsuario).HasColumnName("doc_documento_salida_seg_usuario_enUso_id_usuario");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoIdZona).HasColumnName("doc_documento_salida_seg_usuario_enUso_id_zona");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_seg_usuario_enUso_identificacion");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoIntentosFallidos).HasColumnName("doc_documento_salida_seg_usuario_enUso_intentosFallidos");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_seg_usuario_enUso_nombre");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoNumeroIngresos).HasColumnName("doc_documento_salida_seg_usuario_enUso_numeroIngresos");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoPorcentajeComision).HasColumnName("doc_documento_salida_seg_usuario_enUso_porcentajeComision");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoPreferencias)
                .HasColumnType("image")
                .HasColumnName("doc_documento_salida_seg_usuario_enUso_preferencias");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_seg_usuario_enUso_profesion");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoSexo).HasColumnName("doc_documento_salida_seg_usuario_enUso_sexo");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_seg_usuario_enUso_telefono");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_seg_usuario_enUso_usuario");
            entity.Property(e => e.DocDocumentoSalidaSegUsuarioEnUsoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_seg_usuario_enUso_usuario_codigo");
            entity.Property(e => e.DocDocumentoSalidaSubtotal).HasColumnName("doc_documento_salida_subtotal");
            entity.Property(e => e.DocDocumentoSalidaSubtotalPlaneado).HasColumnName("doc_documento_salida_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroClienteClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_cliente_clasificacion");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroClienteContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_cliente_contacto");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroClienteDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_cliente_direccion");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroClienteEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_cliente_email");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroClienteEsCliente).HasColumnName("doc_documento_salida_ter_tercero_cliente_esCliente");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroClienteEsEmpresaPropia).HasColumnName("doc_documento_salida_ter_tercero_cliente_esEmpresaPropia");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroClienteEsFabricante).HasColumnName("doc_documento_salida_ter_tercero_cliente_esFabricante");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroClienteEsProspecto).HasColumnName("doc_documento_salida_ter_tercero_cliente_esProspecto");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroClienteEsProveedor).HasColumnName("doc_documento_salida_ter_tercero_cliente_esProveedor");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroClienteEsTransportador).HasColumnName("doc_documento_salida_ter_tercero_cliente_esTransportador");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroClienteFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_cliente_fax");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroClienteIdEstadoTercero).HasColumnName("doc_documento_salida_ter_tercero_cliente_id_estadoTercero");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroClienteIdNaturalezaTercero).HasColumnName("doc_documento_salida_ter_tercero_cliente_id_naturalezaTercero");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroClienteIdZona).HasColumnName("doc_documento_salida_ter_tercero_cliente_id_zona");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroClienteNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_cliente_notas");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroClienteRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_cliente_representante");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroClienteTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_cliente_telefono");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroClienteTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_cliente_tercero");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroClienteTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_cliente_tercero_codigo");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroClienteTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_cliente_tercero_nit");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroClienteTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_cliente_tercero_nombreCorto");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroClienteWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_cliente_website");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroProveedorClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_proveedor_clasificacion");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroProveedorContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_proveedor_contacto");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroProveedorDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_proveedor_direccion");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroProveedorEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_proveedor_email");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroProveedorEsCliente).HasColumnName("doc_documento_salida_ter_tercero_proveedor_esCliente");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroProveedorEsEmpresaPropia).HasColumnName("doc_documento_salida_ter_tercero_proveedor_esEmpresaPropia");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroProveedorEsFabricante).HasColumnName("doc_documento_salida_ter_tercero_proveedor_esFabricante");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroProveedorEsProspecto).HasColumnName("doc_documento_salida_ter_tercero_proveedor_esProspecto");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroProveedorEsProveedor).HasColumnName("doc_documento_salida_ter_tercero_proveedor_esProveedor");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroProveedorEsTransportador).HasColumnName("doc_documento_salida_ter_tercero_proveedor_esTransportador");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroProveedorFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_proveedor_fax");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroProveedorIdEstadoTercero).HasColumnName("doc_documento_salida_ter_tercero_proveedor_id_estadoTercero");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroProveedorIdNaturalezaTercero).HasColumnName("doc_documento_salida_ter_tercero_proveedor_id_naturalezaTercero");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroProveedorIdZona).HasColumnName("doc_documento_salida_ter_tercero_proveedor_id_zona");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroProveedorNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_proveedor_notas");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroProveedorRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_proveedor_representante");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroProveedorTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_proveedor_telefono");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroProveedorTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_proveedor_tercero");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroProveedorTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_proveedor_tercero_codigo");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroProveedorTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_proveedor_tercero_nit");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroProveedorTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_proveedor_tercero_nombreCorto");
            entity.Property(e => e.DocDocumentoSalidaTerTerceroProveedorWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_salida_ter_tercero_proveedor_website");
            entity.Property(e => e.DocDocumentoSalidaTotal).HasColumnName("doc_documento_salida_total");
            entity.Property(e => e.DocDocumentoSalidaTotalPlaneado).HasColumnName("doc_documento_salida_totalPlaneado");
            entity.Property(e => e.DocDocumentoSalidaTrm).HasColumnName("doc_documento_salida_trm");
            entity.Property(e => e.DocumentoSalida)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.salida");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdTerceroTransportador).HasColumnName("id_tercero_transportador");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdUsuarioRecibe).HasColumnName("id_usuario_recibe");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("observaciones");
            entity.Property(e => e.SegUsuarioRecibeAccesoActivo).HasColumnName("seg_usuario_recibe_accesoActivo");
            entity.Property(e => e.SegUsuarioRecibeAplicaRecargo).HasColumnName("seg_usuario_recibe_aplicaRecargo");
            entity.Property(e => e.SegUsuarioRecibeCambiarClave).HasColumnName("seg_usuario_recibe_cambiarClave");
            entity.Property(e => e.SegUsuarioRecibeClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_recibe_clave");
            entity.Property(e => e.SegUsuarioRecibeCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_recibe_costoHora");
            entity.Property(e => e.SegUsuarioRecibeDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_recibe_direccion");
            entity.Property(e => e.SegUsuarioRecibeEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_recibe_email");
            entity.Property(e => e.SegUsuarioRecibeFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_recibe_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioRecibeFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_recibe_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioRecibeFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_recibe_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioRecibeHabilitado).HasColumnName("seg_usuario_recibe_habilitado");
            entity.Property(e => e.SegUsuarioRecibeIdCargo).HasColumnName("seg_usuario_recibe_id_cargo");
            entity.Property(e => e.SegUsuarioRecibeIdGrupo).HasColumnName("seg_usuario_recibe_id_grupo");
            entity.Property(e => e.SegUsuarioRecibeIdPerfil).HasColumnName("seg_usuario_recibe_id_perfil");
            entity.Property(e => e.SegUsuarioRecibeIdUsuario).HasColumnName("seg_usuario_recibe_id_usuario");
            entity.Property(e => e.SegUsuarioRecibeIdZona).HasColumnName("seg_usuario_recibe_id_zona");
            entity.Property(e => e.SegUsuarioRecibeIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_recibe_identificacion");
            entity.Property(e => e.SegUsuarioRecibeIntentosFallidos).HasColumnName("seg_usuario_recibe_intentosFallidos");
            entity.Property(e => e.SegUsuarioRecibeNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_recibe_nombre");
            entity.Property(e => e.SegUsuarioRecibeNumeroIngresos).HasColumnName("seg_usuario_recibe_numeroIngresos");
            entity.Property(e => e.SegUsuarioRecibePorcentajeComision).HasColumnName("seg_usuario_recibe_porcentajeComision");
            entity.Property(e => e.SegUsuarioRecibePreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_recibe_preferencias");
            entity.Property(e => e.SegUsuarioRecibeProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_recibe_profesion");
            entity.Property(e => e.SegUsuarioRecibeSexo).HasColumnName("seg_usuario_recibe_sexo");
            entity.Property(e => e.SegUsuarioRecibeTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_recibe_telefono");
            entity.Property(e => e.SegUsuarioRecibeUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_recibe_usuario");
            entity.Property(e => e.SegUsuarioRecibeUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_recibe_usuario_codigo");
            entity.Property(e => e.Solicitante)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("solicitante");
            entity.Property(e => e.TelefonoEntrega)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("telefonoEntrega");
            entity.Property(e => e.TerSucursalCodigorecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_codigorecursiva");
            entity.Property(e => e.TerSucursalContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_contacto");
            entity.Property(e => e.TerSucursalDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Direccion");
            entity.Property(e => e.TerSucursalEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Email");
            entity.Property(e => e.TerSucursalFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Fax");
            entity.Property(e => e.TerSucursalIdEstadoTercero).HasColumnName("ter_sucursal_id_estadoTercero");
            entity.Property(e => e.TerSucursalIdSucursal).HasColumnName("ter_sucursal_id_sucursal");
            entity.Property(e => e.TerSucursalIdTercero).HasColumnName("ter_sucursal_id_tercero");
            entity.Property(e => e.TerSucursalIdUsuarioAsesor).HasColumnName("ter_sucursal_id_usuario_asesor");
            entity.Property(e => e.TerSucursalIdUsuarioTecnico).HasColumnName("ter_sucursal_id_usuario_tecnico");
            entity.Property(e => e.TerSucursalIdZona).HasColumnName("ter_sucursal_id_zona");
            entity.Property(e => e.TerSucursalParaAlquiler).HasColumnName("ter_sucursal_paraAlquiler");
            entity.Property(e => e.TerSucursalParaSoporte).HasColumnName("ter_sucursal_paraSoporte");
            entity.Property(e => e.TerSucursalParaVenta).HasColumnName("ter_sucursal_paraVenta");
            entity.Property(e => e.TerSucursalSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal");
            entity.Property(e => e.TerSucursalSucursalCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal_codigo");
            entity.Property(e => e.TerSucursalTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_telefono");
            entity.Property(e => e.TerTerceroTransportadorClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_clasificacion");
            entity.Property(e => e.TerTerceroTransportadorContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_contacto");
            entity.Property(e => e.TerTerceroTransportadorDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_direccion");
            entity.Property(e => e.TerTerceroTransportadorEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_email");
            entity.Property(e => e.TerTerceroTransportadorEsCliente).HasColumnName("ter_tercero_transportador_esCliente");
            entity.Property(e => e.TerTerceroTransportadorEsEmpresaPropia).HasColumnName("ter_tercero_transportador_esEmpresaPropia");
            entity.Property(e => e.TerTerceroTransportadorEsFabricante).HasColumnName("ter_tercero_transportador_esFabricante");
            entity.Property(e => e.TerTerceroTransportadorEsProspecto).HasColumnName("ter_tercero_transportador_esProspecto");
            entity.Property(e => e.TerTerceroTransportadorEsProveedor).HasColumnName("ter_tercero_transportador_esProveedor");
            entity.Property(e => e.TerTerceroTransportadorEsTransportador).HasColumnName("ter_tercero_transportador_esTransportador");
            entity.Property(e => e.TerTerceroTransportadorFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_fax");
            entity.Property(e => e.TerTerceroTransportadorIdEstadoTercero).HasColumnName("ter_tercero_transportador_id_estadoTercero");
            entity.Property(e => e.TerTerceroTransportadorIdNaturalezaTercero).HasColumnName("ter_tercero_transportador_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroTransportadorIdZona).HasColumnName("ter_tercero_transportador_id_zona");
            entity.Property(e => e.TerTerceroTransportadorNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_notas");
            entity.Property(e => e.TerTerceroTransportadorRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_representante");
            entity.Property(e => e.TerTerceroTransportadorTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_telefono");
            entity.Property(e => e.TerTerceroTransportadorTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_tercero");
            entity.Property(e => e.TerTerceroTransportadorTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_tercero_codigo");
            entity.Property(e => e.TerTerceroTransportadorTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_tercero_nit");
            entity.Property(e => e.TerTerceroTransportadorTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroTransportadorWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_transportador_website");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoSolicitud>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_solicitud");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Cargo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cargo");
            entity.Property(e => e.Direccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("direccion");
            entity.Property(e => e.DocDocumentoSolicitudCosto).HasColumnName("doc_documento_solicitud_costo");
            entity.Property(e => e.DocDocumentoSolicitudCostoPlaneado).HasColumnName("doc_documento_solicitud_costoPlaneado");
            entity.Property(e => e.DocDocumentoSolicitudDescuento).HasColumnName("doc_documento_solicitud_descuento");
            entity.Property(e => e.DocDocumentoSolicitudDescuentoPlaneado).HasColumnName("doc_documento_solicitud_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreCosto).HasColumnName("doc_documento_solicitud_doc_documento_padre_costo");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreCostoPlaneado).HasColumnName("doc_documento_solicitud_doc_documento_padre_costoPlaneado");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreDescuento).HasColumnName("doc_documento_solicitud_doc_documento_padre_descuento");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreDescuentoPlaneado).HasColumnName("doc_documento_solicitud_doc_documento_padre_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_doc_documento_padre_documento");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_doc_documento_padre_documento_codigo");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreDocumentoNumero).HasColumnName("doc_documento_solicitud_doc_documento_padre_documento_numero");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_solicitud_doc_documento_padre_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_solicitud_doc_documento_padre_fecha_fh");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_solicitud_doc_documento_padre_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_solicitud_doc_documento_padre_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreIdDocumento).HasColumnName("doc_documento_solicitud_doc_documento_padre_id_documento");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreIdEstadoTipoDocumento).HasColumnName("doc_documento_solicitud_doc_documento_padre_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreIdMoneda).HasColumnName("doc_documento_solicitud_doc_documento_padre_id_moneda");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreIdMotivoestado).HasColumnName("doc_documento_solicitud_doc_documento_padre_id_motivoestado");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreIdPrioridadDocumento).HasColumnName("doc_documento_solicitud_doc_documento_padre_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreIdSubtipoDocumento).HasColumnName("doc_documento_solicitud_doc_documento_padre_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreIdTerceroCliente).HasColumnName("doc_documento_solicitud_doc_documento_padre_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreIdTerceroProveedor).HasColumnName("doc_documento_solicitud_doc_documento_padre_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreIdUsuarioAsignado).HasColumnName("doc_documento_solicitud_doc_documento_padre_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreIdUsuarioEnUso).HasColumnName("doc_documento_solicitud_doc_documento_padre_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreIva).HasColumnName("doc_documento_solicitud_doc_documento_padre_iva");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreIvaPlaneado).HasColumnName("doc_documento_solicitud_doc_documento_padre_ivaPlaneado");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadrePrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_doc_documento_padre_prefijo");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreRentabilidad).HasColumnName("doc_documento_solicitud_doc_documento_padre_rentabilidad");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreSubtotal).HasColumnName("doc_documento_solicitud_doc_documento_padre_subtotal");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreSubtotalPlaneado).HasColumnName("doc_documento_solicitud_doc_documento_padre_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreTotal).HasColumnName("doc_documento_solicitud_doc_documento_padre_total");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreTotalPlaneado).HasColumnName("doc_documento_solicitud_doc_documento_padre_totalPlaneado");
            entity.Property(e => e.DocDocumentoSolicitudDocDocumentoPadreTrm).HasColumnName("doc_documento_solicitud_doc_documento_padre_trm");
            entity.Property(e => e.DocDocumentoSolicitudDocEstadoTipoDocumentoAfectaIndicador).HasColumnName("doc_documento_solicitud_doc_estadoTipoDocumento_afectaIndicador");
            entity.Property(e => e.DocDocumentoSolicitudDocEstadoTipoDocumentoAfectaInventario).HasColumnName("doc_documento_solicitud_doc_estadoTipoDocumento_afectaInventario");
            entity.Property(e => e.DocDocumentoSolicitudDocEstadoTipoDocumentoColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_doc_estadoTipoDocumento_color");
            entity.Property(e => e.DocDocumentoSolicitudDocEstadoTipoDocumentoDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_doc_estadoTipoDocumento_descripcion");
            entity.Property(e => e.DocDocumentoSolicitudDocEstadoTipoDocumentoEditaDocumento).HasColumnName("doc_documento_solicitud_doc_estadoTipoDocumento_editaDocumento");
            entity.Property(e => e.DocDocumentoSolicitudDocEstadoTipoDocumentoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_doc_estadoTipoDocumento_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoSolicitudDocEstadoTipoDocumentoEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_doc_estadoTipoDocumento_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocDocumentoSolicitudDocEstadoTipoDocumentoIdTipoDocumento).HasColumnName("doc_documento_solicitud_doc_estadoTipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoSolicitudDocEstadoTipoDocumentoOrden).HasColumnName("doc_documento_solicitud_doc_estadoTipoDocumento_orden");
            entity.Property(e => e.DocDocumentoSolicitudDocEstadoTipoDocumentoPuedeRegresar).HasColumnName("doc_documento_solicitud_doc_estadoTipoDocumento_puedeRegresar");
            entity.Property(e => e.DocDocumentoSolicitudDocMotivoestadoIdEstadoTipoDocumento).HasColumnName("doc_documento_solicitud_doc_motivoestado_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoSolicitudDocMotivoestadoMotivoestado)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_doc_motivoestado_motivoestado");
            entity.Property(e => e.DocDocumentoSolicitudDocMotivoestadoMotivoestadoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_doc_motivoestado_motivoestado_codigo");
            entity.Property(e => e.DocDocumentoSolicitudDocPrioridadDocumentoIdEstrategiaPrioridad).HasColumnName("doc_documento_solicitud_doc_prioridadDocumento_id_estrategiaPrioridad");
            entity.Property(e => e.DocDocumentoSolicitudDocPrioridadDocumentoIdTipoDocumento).HasColumnName("doc_documento_solicitud_doc_prioridadDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoSolicitudDocPrioridadDocumentoOrden).HasColumnName("doc_documento_solicitud_doc_prioridadDocumento_orden");
            entity.Property(e => e.DocDocumentoSolicitudDocPrioridadDocumentoPrioridadDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_doc_prioridadDocumento_prioridadDocumento");
            entity.Property(e => e.DocDocumentoSolicitudDocPrioridadDocumentoPrioridadDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_doc_prioridadDocumento_prioridadDocumento_codigo");
            entity.Property(e => e.DocDocumentoSolicitudDocPrioridadDocumentoTiempoRespuesta).HasColumnName("doc_documento_solicitud_doc_prioridadDocumento_tiempoRespuesta");
            entity.Property(e => e.DocDocumentoSolicitudDocSubtipoDocumentoBloquearDespacho).HasColumnName("doc_documento_solicitud_doc_subtipoDocumento_bloquearDespacho");
            entity.Property(e => e.DocDocumentoSolicitudDocSubtipoDocumentoCargarSolicitante).HasColumnName("doc_documento_solicitud_doc_subtipoDocumento_cargarSolicitante");
            entity.Property(e => e.DocDocumentoSolicitudDocSubtipoDocumentoCerrarSol).HasColumnName("doc_documento_solicitud_doc_subtipoDocumento_cerrarSol");
            entity.Property(e => e.DocDocumentoSolicitudDocSubtipoDocumentoConsecutivo).HasColumnName("doc_documento_solicitud_doc_subtipoDocumento_consecutivo");
            entity.Property(e => e.DocDocumentoSolicitudDocSubtipoDocumentoIdTipoDocumento).HasColumnName("doc_documento_solicitud_doc_subtipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoSolicitudDocSubtipoDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_doc_subtipoDocumento_prefijo");
            entity.Property(e => e.DocDocumentoSolicitudDocSubtipoDocumentoProgramarPlaneadas).HasColumnName("doc_documento_solicitud_doc_subtipoDocumento_programarPlaneadas");
            entity.Property(e => e.DocDocumentoSolicitudDocSubtipoDocumentoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_doc_subtipoDocumento_subtipoDocumento");
            entity.Property(e => e.DocDocumentoSolicitudDocSubtipoDocumentoSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_doc_subtipoDocumento_subtipoDocumento_codigo");
            entity.Property(e => e.DocDocumentoSolicitudDocSubtipoDocumentoValUrgente).HasColumnName("doc_documento_solicitud_doc_subtipoDocumento_valUrgente");
            entity.Property(e => e.DocDocumentoSolicitudDocSubtipoDocumentoVerCentroCosto).HasColumnName("doc_documento_solicitud_doc_subtipoDocumento_verCentroCosto");
            entity.Property(e => e.DocDocumentoSolicitudDocSubtipoDocumentoVerIncoterm).HasColumnName("doc_documento_solicitud_doc_subtipoDocumento_verIncoterm");
            entity.Property(e => e.DocDocumentoSolicitudDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_documento_codigo");
            entity.Property(e => e.DocDocumentoSolicitudDocumentoNumero).HasColumnName("doc_documento_solicitud_documento_numero");
            entity.Property(e => e.DocDocumentoSolicitudFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_solicitud_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoSolicitudFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_solicitud_fecha_fh");
            entity.Property(e => e.DocDocumentoSolicitudFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_solicitud_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoSolicitudFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_solicitud_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoSolicitudGenMonedaAbreviatura)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_gen_moneda_abreviatura");
            entity.Property(e => e.DocDocumentoSolicitudGenMonedaCambio).HasColumnName("doc_documento_solicitud_gen_moneda_cambio");
            entity.Property(e => e.DocDocumentoSolicitudGenMonedaMoneda)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_gen_moneda_moneda");
            entity.Property(e => e.DocDocumentoSolicitudGenMonedaMonedaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_gen_moneda_moneda_codigo");
            entity.Property(e => e.DocDocumentoSolicitudIdDocumento).HasColumnName("doc_documento_solicitud_id_documento");
            entity.Property(e => e.DocDocumentoSolicitudIdEstadoTipoDocumento).HasColumnName("doc_documento_solicitud_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoSolicitudIdMoneda).HasColumnName("doc_documento_solicitud_id_moneda");
            entity.Property(e => e.DocDocumentoSolicitudIdMotivoestado).HasColumnName("doc_documento_solicitud_id_motivoestado");
            entity.Property(e => e.DocDocumentoSolicitudIdPrioridadDocumento).HasColumnName("doc_documento_solicitud_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoSolicitudIdSubtipoDocumento).HasColumnName("doc_documento_solicitud_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoSolicitudIdTerceroCliente).HasColumnName("doc_documento_solicitud_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoSolicitudIdTerceroProveedor).HasColumnName("doc_documento_solicitud_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoSolicitudIdUsuarioAsignado).HasColumnName("doc_documento_solicitud_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoSolicitudIdUsuarioEnUso).HasColumnName("doc_documento_solicitud_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoSolicitudIva).HasColumnName("doc_documento_solicitud_iva");
            entity.Property(e => e.DocDocumentoSolicitudIvaPlaneado).HasColumnName("doc_documento_solicitud_ivaPlaneado");
            entity.Property(e => e.DocDocumentoSolicitudPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_prefijo");
            entity.Property(e => e.DocDocumentoSolicitudRentabilidad).HasColumnName("doc_documento_solicitud_rentabilidad");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoAccesoActivo).HasColumnName("doc_documento_solicitud_seg_usuario_asignado_accesoActivo");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoAplicaRecargo).HasColumnName("doc_documento_solicitud_seg_usuario_asignado_aplicaRecargo");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoCambiarClave).HasColumnName("doc_documento_solicitud_seg_usuario_asignado_cambiarClave");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_seg_usuario_asignado_clave");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoCostoHora)
                .HasColumnType("money")
                .HasColumnName("doc_documento_solicitud_seg_usuario_asignado_costoHora");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_seg_usuario_asignado_direccion");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_seg_usuario_asignado_email");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_solicitud_seg_usuario_asignado_fechaIntentoFallido_fh");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_solicitud_seg_usuario_asignado_fechaUltimoCambioClave_fh");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_solicitud_seg_usuario_asignado_fechaUltimoIngreso_fh");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoHabilitado).HasColumnName("doc_documento_solicitud_seg_usuario_asignado_habilitado");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoIdCargo).HasColumnName("doc_documento_solicitud_seg_usuario_asignado_id_cargo");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoIdGrupo).HasColumnName("doc_documento_solicitud_seg_usuario_asignado_id_grupo");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoIdPerfil).HasColumnName("doc_documento_solicitud_seg_usuario_asignado_id_perfil");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoIdUsuario).HasColumnName("doc_documento_solicitud_seg_usuario_asignado_id_usuario");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoIdZona).HasColumnName("doc_documento_solicitud_seg_usuario_asignado_id_zona");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_seg_usuario_asignado_identificacion");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoIntentosFallidos).HasColumnName("doc_documento_solicitud_seg_usuario_asignado_intentosFallidos");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_seg_usuario_asignado_nombre");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoNumeroIngresos).HasColumnName("doc_documento_solicitud_seg_usuario_asignado_numeroIngresos");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoPorcentajeComision).HasColumnName("doc_documento_solicitud_seg_usuario_asignado_porcentajeComision");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoPreferencias)
                .HasColumnType("image")
                .HasColumnName("doc_documento_solicitud_seg_usuario_asignado_preferencias");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_seg_usuario_asignado_profesion");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoSexo).HasColumnName("doc_documento_solicitud_seg_usuario_asignado_sexo");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_seg_usuario_asignado_telefono");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_seg_usuario_asignado_usuario");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioAsignadoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_seg_usuario_asignado_usuario_codigo");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoAccesoActivo).HasColumnName("doc_documento_solicitud_seg_usuario_enUso_accesoActivo");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoAplicaRecargo).HasColumnName("doc_documento_solicitud_seg_usuario_enUso_aplicaRecargo");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoCambiarClave).HasColumnName("doc_documento_solicitud_seg_usuario_enUso_cambiarClave");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_seg_usuario_enUso_clave");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoCostoHora)
                .HasColumnType("money")
                .HasColumnName("doc_documento_solicitud_seg_usuario_enUso_costoHora");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_seg_usuario_enUso_direccion");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_seg_usuario_enUso_email");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_solicitud_seg_usuario_enUso_fechaIntentoFallido_fh");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_solicitud_seg_usuario_enUso_fechaUltimoCambioClave_fh");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_solicitud_seg_usuario_enUso_fechaUltimoIngreso_fh");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoHabilitado).HasColumnName("doc_documento_solicitud_seg_usuario_enUso_habilitado");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoIdCargo).HasColumnName("doc_documento_solicitud_seg_usuario_enUso_id_cargo");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoIdGrupo).HasColumnName("doc_documento_solicitud_seg_usuario_enUso_id_grupo");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoIdPerfil).HasColumnName("doc_documento_solicitud_seg_usuario_enUso_id_perfil");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoIdUsuario).HasColumnName("doc_documento_solicitud_seg_usuario_enUso_id_usuario");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoIdZona).HasColumnName("doc_documento_solicitud_seg_usuario_enUso_id_zona");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_seg_usuario_enUso_identificacion");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoIntentosFallidos).HasColumnName("doc_documento_solicitud_seg_usuario_enUso_intentosFallidos");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_seg_usuario_enUso_nombre");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoNumeroIngresos).HasColumnName("doc_documento_solicitud_seg_usuario_enUso_numeroIngresos");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoPorcentajeComision).HasColumnName("doc_documento_solicitud_seg_usuario_enUso_porcentajeComision");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoPreferencias)
                .HasColumnType("image")
                .HasColumnName("doc_documento_solicitud_seg_usuario_enUso_preferencias");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_seg_usuario_enUso_profesion");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoSexo).HasColumnName("doc_documento_solicitud_seg_usuario_enUso_sexo");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_seg_usuario_enUso_telefono");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_seg_usuario_enUso_usuario");
            entity.Property(e => e.DocDocumentoSolicitudSegUsuarioEnUsoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_seg_usuario_enUso_usuario_codigo");
            entity.Property(e => e.DocDocumentoSolicitudSubtotal).HasColumnName("doc_documento_solicitud_subtotal");
            entity.Property(e => e.DocDocumentoSolicitudSubtotalPlaneado).HasColumnName("doc_documento_solicitud_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroClienteClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_cliente_clasificacion");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroClienteContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_cliente_contacto");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroClienteDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_cliente_direccion");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroClienteEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_cliente_email");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroClienteEsCliente).HasColumnName("doc_documento_solicitud_ter_tercero_cliente_esCliente");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroClienteEsEmpresaPropia).HasColumnName("doc_documento_solicitud_ter_tercero_cliente_esEmpresaPropia");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroClienteEsFabricante).HasColumnName("doc_documento_solicitud_ter_tercero_cliente_esFabricante");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroClienteEsProspecto).HasColumnName("doc_documento_solicitud_ter_tercero_cliente_esProspecto");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroClienteEsProveedor).HasColumnName("doc_documento_solicitud_ter_tercero_cliente_esProveedor");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroClienteEsTransportador).HasColumnName("doc_documento_solicitud_ter_tercero_cliente_esTransportador");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroClienteFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_cliente_fax");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroClienteIdEstadoTercero).HasColumnName("doc_documento_solicitud_ter_tercero_cliente_id_estadoTercero");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroClienteIdNaturalezaTercero).HasColumnName("doc_documento_solicitud_ter_tercero_cliente_id_naturalezaTercero");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroClienteIdZona).HasColumnName("doc_documento_solicitud_ter_tercero_cliente_id_zona");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroClienteNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_cliente_notas");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroClienteRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_cliente_representante");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroClienteTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_cliente_telefono");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroClienteTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_cliente_tercero");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroClienteTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_cliente_tercero_codigo");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroClienteTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_cliente_tercero_nit");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroClienteTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_cliente_tercero_nombreCorto");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroClienteWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_cliente_website");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroProveedorClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_proveedor_clasificacion");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroProveedorContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_proveedor_contacto");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroProveedorDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_proveedor_direccion");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroProveedorEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_proveedor_email");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroProveedorEsCliente).HasColumnName("doc_documento_solicitud_ter_tercero_proveedor_esCliente");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroProveedorEsEmpresaPropia).HasColumnName("doc_documento_solicitud_ter_tercero_proveedor_esEmpresaPropia");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroProveedorEsFabricante).HasColumnName("doc_documento_solicitud_ter_tercero_proveedor_esFabricante");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroProveedorEsProspecto).HasColumnName("doc_documento_solicitud_ter_tercero_proveedor_esProspecto");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroProveedorEsProveedor).HasColumnName("doc_documento_solicitud_ter_tercero_proveedor_esProveedor");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroProveedorEsTransportador).HasColumnName("doc_documento_solicitud_ter_tercero_proveedor_esTransportador");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroProveedorFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_proveedor_fax");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroProveedorIdEstadoTercero).HasColumnName("doc_documento_solicitud_ter_tercero_proveedor_id_estadoTercero");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroProveedorIdNaturalezaTercero).HasColumnName("doc_documento_solicitud_ter_tercero_proveedor_id_naturalezaTercero");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroProveedorIdZona).HasColumnName("doc_documento_solicitud_ter_tercero_proveedor_id_zona");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroProveedorNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_proveedor_notas");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroProveedorRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_proveedor_representante");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroProveedorTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_proveedor_telefono");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroProveedorTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_proveedor_tercero");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroProveedorTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_proveedor_tercero_codigo");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroProveedorTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_proveedor_tercero_nit");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroProveedorTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_proveedor_tercero_nombreCorto");
            entity.Property(e => e.DocDocumentoSolicitudTerTerceroProveedorWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_solicitud_ter_tercero_proveedor_website");
            entity.Property(e => e.DocDocumentoSolicitudTotal).HasColumnName("doc_documento_solicitud_total");
            entity.Property(e => e.DocDocumentoSolicitudTotalPlaneado).HasColumnName("doc_documento_solicitud_totalPlaneado");
            entity.Property(e => e.DocDocumentoSolicitudTrm).HasColumnName("doc_documento_solicitud_trm");
            entity.Property(e => e.DocMedioSolicitudMedioSolicitud)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_medioSolicitud_medioSolicitud");
            entity.Property(e => e.DocMedioSolicitudMedioSolicitudCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_medioSolicitud_medioSolicitud_codigo");
            entity.Property(e => e.DocumentoSolicitud)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.solicitud");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.EquEquipoCosto)
                .HasColumnType("money")
                .HasColumnName("equ_equipo_costo");
            entity.Property(e => e.EquEquipoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo");
            entity.Property(e => e.EquEquipoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_codigo");
            entity.Property(e => e.EquEquipoEquipoSerial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_serial");
            entity.Property(e => e.EquEquipoFechaImportacionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaImportacion_ff");
            entity.Property(e => e.EquEquipoFechaPuestaMarchaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaPuestaMarcha_fh");
            entity.Property(e => e.EquEquipoGarantiaCancelada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_garantiaCancelada");
            entity.Property(e => e.EquEquipoHorasGarantia).HasColumnName("equ_equipo_horasGarantia");
            entity.Property(e => e.EquEquipoHorometroActual).HasColumnName("equ_equipo_horometroActual");
            entity.Property(e => e.EquEquipoIdCatalogoEquipo).HasColumnName("equ_equipo_id_catalogo.equipo");
            entity.Property(e => e.EquEquipoIdCentroCosto).HasColumnName("equ_equipo_id_centroCosto");
            entity.Property(e => e.EquEquipoIdEquipo).HasColumnName("equ_equipo_id_equipo");
            entity.Property(e => e.EquEquipoIdEstadoEquipo).HasColumnName("equ_equipo_id_estadoEquipo");
            entity.Property(e => e.EquEquipoIdSistema).HasColumnName("equ_equipo_id_sistema");
            entity.Property(e => e.EquEquipoIdSucursal).HasColumnName("equ_equipo_id_sucursal");
            entity.Property(e => e.EquEquipoIdTercero).HasColumnName("equ_equipo_id_tercero");
            entity.Property(e => e.EquEquipoIdTerceroComprador).HasColumnName("equ_equipo_id_tercero_comprador");
            entity.Property(e => e.EquEquipoIdTerceroServicio).HasColumnName("equ_equipo_id_tercero_servicio");
            entity.Property(e => e.EquEquipoIdVersionEquipo).HasColumnName("equ_equipo_id_versionEquipo");
            entity.Property(e => e.EquEquipoIdZona).HasColumnName("equ_equipo_id_zona");
            entity.Property(e => e.EquEquipoNombreContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_nombreContacto");
            entity.Property(e => e.EquEquipoObservaciones)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_observaciones");
            entity.Property(e => e.EquEquipoPromedioHoras).HasColumnName("equ_equipo_promedioHoras");
            entity.Property(e => e.EquEquipoTelefonoContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_telefonoContacto");
            entity.Property(e => e.EquEquipoUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_ubicacion");
            entity.Property(e => e.EquEquipoUltimaLecturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_ultimaLectura_fh");
            entity.Property(e => e.EquEquipoVencimientoGarantiaDistribuidorFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaDistribuidor_ff");
            entity.Property(e => e.EquEquipoVencimientoGarantiaFabricaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaFabrica_ff");
            entity.Property(e => e.Fax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fax");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenZonaCodigoExterno)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("gen_zona_codigoExterno");
            entity.Property(e => e.GenZonaIdZona).HasColumnName("gen_zona_id_zona");
            entity.Property(e => e.GenZonaNivel).HasColumnName("gen_zona_nivel");
            entity.Property(e => e.GenZonaTiempoDesplazamiento).HasColumnName("gen_zona_tiempoDesplazamiento");
            entity.Property(e => e.GenZonaZona)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_zona_zona");
            entity.Property(e => e.GenZonaZonaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_zona_zona_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDepartamentoSolicitud).HasColumnName("id_departamentoSolicitud");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdMedioSolicitud).HasColumnName("id_medioSolicitud");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdZona).HasColumnName("id_zona");
            entity.Property(e => e.MotivoServicio)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("motivoServicio");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.OrtDepartamentoSolicitudDepartamentoSolicitud)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ort_departamentoSolicitud_departamentoSolicitud");
            entity.Property(e => e.OrtDepartamentoSolicitudDepartamentoSolicitudCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ort_departamentoSolicitud_departamentoSolicitud_codigo");
            entity.Property(e => e.OrtDepartamentoSolicitudRecibeSolicitudes).HasColumnName("ort_departamentoSolicitud_recibeSolicitudes");
            entity.Property(e => e.Solicitante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("solicitante");
            entity.Property(e => e.SolucionTelefonica).HasColumnName("solucionTelefonica");
            entity.Property(e => e.Telefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("telefono");
            entity.Property(e => e.TerSucursalCodigorecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_codigorecursiva");
            entity.Property(e => e.TerSucursalContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_contacto");
            entity.Property(e => e.TerSucursalDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Direccion");
            entity.Property(e => e.TerSucursalEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Email");
            entity.Property(e => e.TerSucursalFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Fax");
            entity.Property(e => e.TerSucursalIdEstadoTercero).HasColumnName("ter_sucursal_id_estadoTercero");
            entity.Property(e => e.TerSucursalIdSucursal).HasColumnName("ter_sucursal_id_sucursal");
            entity.Property(e => e.TerSucursalIdTercero).HasColumnName("ter_sucursal_id_tercero");
            entity.Property(e => e.TerSucursalIdUsuarioAsesor).HasColumnName("ter_sucursal_id_usuario_asesor");
            entity.Property(e => e.TerSucursalIdUsuarioTecnico).HasColumnName("ter_sucursal_id_usuario_tecnico");
            entity.Property(e => e.TerSucursalIdZona).HasColumnName("ter_sucursal_id_zona");
            entity.Property(e => e.TerSucursalParaAlquiler).HasColumnName("ter_sucursal_paraAlquiler");
            entity.Property(e => e.TerSucursalParaSoporte).HasColumnName("ter_sucursal_paraSoporte");
            entity.Property(e => e.TerSucursalParaVenta).HasColumnName("ter_sucursal_paraVenta");
            entity.Property(e => e.TerSucursalSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal");
            entity.Property(e => e.TerSucursalSucursalCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal_codigo");
            entity.Property(e => e.TerSucursalTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_telefono");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocDocumentoTraslado>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_documento_traslado");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocDocumentoTrasladoCosto).HasColumnName("doc_documento_traslado_costo");
            entity.Property(e => e.DocDocumentoTrasladoCostoPlaneado).HasColumnName("doc_documento_traslado_costoPlaneado");
            entity.Property(e => e.DocDocumentoTrasladoDescuento).HasColumnName("doc_documento_traslado_descuento");
            entity.Property(e => e.DocDocumentoTrasladoDescuentoPlaneado).HasColumnName("doc_documento_traslado_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreCosto).HasColumnName("doc_documento_traslado_doc_documento_padre_costo");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreCostoPlaneado).HasColumnName("doc_documento_traslado_doc_documento_padre_costoPlaneado");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreDescuento).HasColumnName("doc_documento_traslado_doc_documento_padre_descuento");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreDescuentoPlaneado).HasColumnName("doc_documento_traslado_doc_documento_padre_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_doc_documento_padre_documento");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_doc_documento_padre_documento_codigo");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreDocumentoNumero).HasColumnName("doc_documento_traslado_doc_documento_padre_documento_numero");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_traslado_doc_documento_padre_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_traslado_doc_documento_padre_fecha_fh");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_traslado_doc_documento_padre_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_traslado_doc_documento_padre_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreIdDocumento).HasColumnName("doc_documento_traslado_doc_documento_padre_id_documento");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreIdEstadoTipoDocumento).HasColumnName("doc_documento_traslado_doc_documento_padre_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreIdMoneda).HasColumnName("doc_documento_traslado_doc_documento_padre_id_moneda");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreIdMotivoestado).HasColumnName("doc_documento_traslado_doc_documento_padre_id_motivoestado");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreIdPrioridadDocumento).HasColumnName("doc_documento_traslado_doc_documento_padre_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreIdSubtipoDocumento).HasColumnName("doc_documento_traslado_doc_documento_padre_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreIdTerceroCliente).HasColumnName("doc_documento_traslado_doc_documento_padre_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreIdTerceroProveedor).HasColumnName("doc_documento_traslado_doc_documento_padre_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreIdUsuarioAsignado).HasColumnName("doc_documento_traslado_doc_documento_padre_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreIdUsuarioEnUso).HasColumnName("doc_documento_traslado_doc_documento_padre_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreIva).HasColumnName("doc_documento_traslado_doc_documento_padre_iva");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreIvaPlaneado).HasColumnName("doc_documento_traslado_doc_documento_padre_ivaPlaneado");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadrePrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_doc_documento_padre_prefijo");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreRentabilidad).HasColumnName("doc_documento_traslado_doc_documento_padre_rentabilidad");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreSubtotal).HasColumnName("doc_documento_traslado_doc_documento_padre_subtotal");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreSubtotalPlaneado).HasColumnName("doc_documento_traslado_doc_documento_padre_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreTotal).HasColumnName("doc_documento_traslado_doc_documento_padre_total");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreTotalPlaneado).HasColumnName("doc_documento_traslado_doc_documento_padre_totalPlaneado");
            entity.Property(e => e.DocDocumentoTrasladoDocDocumentoPadreTrm).HasColumnName("doc_documento_traslado_doc_documento_padre_trm");
            entity.Property(e => e.DocDocumentoTrasladoDocEstadoTipoDocumentoAfectaIndicador).HasColumnName("doc_documento_traslado_doc_estadoTipoDocumento_afectaIndicador");
            entity.Property(e => e.DocDocumentoTrasladoDocEstadoTipoDocumentoAfectaInventario).HasColumnName("doc_documento_traslado_doc_estadoTipoDocumento_afectaInventario");
            entity.Property(e => e.DocDocumentoTrasladoDocEstadoTipoDocumentoColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_doc_estadoTipoDocumento_color");
            entity.Property(e => e.DocDocumentoTrasladoDocEstadoTipoDocumentoDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_doc_estadoTipoDocumento_descripcion");
            entity.Property(e => e.DocDocumentoTrasladoDocEstadoTipoDocumentoEditaDocumento).HasColumnName("doc_documento_traslado_doc_estadoTipoDocumento_editaDocumento");
            entity.Property(e => e.DocDocumentoTrasladoDocEstadoTipoDocumentoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_doc_estadoTipoDocumento_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoTrasladoDocEstadoTipoDocumentoEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_doc_estadoTipoDocumento_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocDocumentoTrasladoDocEstadoTipoDocumentoIdTipoDocumento).HasColumnName("doc_documento_traslado_doc_estadoTipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoTrasladoDocEstadoTipoDocumentoOrden).HasColumnName("doc_documento_traslado_doc_estadoTipoDocumento_orden");
            entity.Property(e => e.DocDocumentoTrasladoDocEstadoTipoDocumentoPuedeRegresar).HasColumnName("doc_documento_traslado_doc_estadoTipoDocumento_puedeRegresar");
            entity.Property(e => e.DocDocumentoTrasladoDocMotivoestadoIdEstadoTipoDocumento).HasColumnName("doc_documento_traslado_doc_motivoestado_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoTrasladoDocMotivoestadoMotivoestado)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_doc_motivoestado_motivoestado");
            entity.Property(e => e.DocDocumentoTrasladoDocMotivoestadoMotivoestadoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_doc_motivoestado_motivoestado_codigo");
            entity.Property(e => e.DocDocumentoTrasladoDocPrioridadDocumentoIdEstrategiaPrioridad).HasColumnName("doc_documento_traslado_doc_prioridadDocumento_id_estrategiaPrioridad");
            entity.Property(e => e.DocDocumentoTrasladoDocPrioridadDocumentoIdTipoDocumento).HasColumnName("doc_documento_traslado_doc_prioridadDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoTrasladoDocPrioridadDocumentoOrden).HasColumnName("doc_documento_traslado_doc_prioridadDocumento_orden");
            entity.Property(e => e.DocDocumentoTrasladoDocPrioridadDocumentoPrioridadDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_doc_prioridadDocumento_prioridadDocumento");
            entity.Property(e => e.DocDocumentoTrasladoDocPrioridadDocumentoPrioridadDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_doc_prioridadDocumento_prioridadDocumento_codigo");
            entity.Property(e => e.DocDocumentoTrasladoDocPrioridadDocumentoTiempoRespuesta).HasColumnName("doc_documento_traslado_doc_prioridadDocumento_tiempoRespuesta");
            entity.Property(e => e.DocDocumentoTrasladoDocSubtipoDocumentoBloquearDespacho).HasColumnName("doc_documento_traslado_doc_subtipoDocumento_bloquearDespacho");
            entity.Property(e => e.DocDocumentoTrasladoDocSubtipoDocumentoCargarSolicitante).HasColumnName("doc_documento_traslado_doc_subtipoDocumento_cargarSolicitante");
            entity.Property(e => e.DocDocumentoTrasladoDocSubtipoDocumentoCerrarSol).HasColumnName("doc_documento_traslado_doc_subtipoDocumento_cerrarSol");
            entity.Property(e => e.DocDocumentoTrasladoDocSubtipoDocumentoConsecutivo).HasColumnName("doc_documento_traslado_doc_subtipoDocumento_consecutivo");
            entity.Property(e => e.DocDocumentoTrasladoDocSubtipoDocumentoIdTipoDocumento).HasColumnName("doc_documento_traslado_doc_subtipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocDocumentoTrasladoDocSubtipoDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_doc_subtipoDocumento_prefijo");
            entity.Property(e => e.DocDocumentoTrasladoDocSubtipoDocumentoProgramarPlaneadas).HasColumnName("doc_documento_traslado_doc_subtipoDocumento_programarPlaneadas");
            entity.Property(e => e.DocDocumentoTrasladoDocSubtipoDocumentoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_doc_subtipoDocumento_subtipoDocumento");
            entity.Property(e => e.DocDocumentoTrasladoDocSubtipoDocumentoSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_doc_subtipoDocumento_subtipoDocumento_codigo");
            entity.Property(e => e.DocDocumentoTrasladoDocSubtipoDocumentoValUrgente).HasColumnName("doc_documento_traslado_doc_subtipoDocumento_valUrgente");
            entity.Property(e => e.DocDocumentoTrasladoDocSubtipoDocumentoVerCentroCosto).HasColumnName("doc_documento_traslado_doc_subtipoDocumento_verCentroCosto");
            entity.Property(e => e.DocDocumentoTrasladoDocSubtipoDocumentoVerIncoterm).HasColumnName("doc_documento_traslado_doc_subtipoDocumento_verIncoterm");
            entity.Property(e => e.DocDocumentoTrasladoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_documento_codigo");
            entity.Property(e => e.DocDocumentoTrasladoDocumentoNumero).HasColumnName("doc_documento_traslado_documento_numero");
            entity.Property(e => e.DocDocumentoTrasladoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_traslado_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoTrasladoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_traslado_fecha_fh");
            entity.Property(e => e.DocDocumentoTrasladoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_traslado_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoTrasladoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_traslado_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoTrasladoGenMonedaAbreviatura)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_gen_moneda_abreviatura");
            entity.Property(e => e.DocDocumentoTrasladoGenMonedaCambio).HasColumnName("doc_documento_traslado_gen_moneda_cambio");
            entity.Property(e => e.DocDocumentoTrasladoGenMonedaMoneda)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_gen_moneda_moneda");
            entity.Property(e => e.DocDocumentoTrasladoGenMonedaMonedaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_gen_moneda_moneda_codigo");
            entity.Property(e => e.DocDocumentoTrasladoIdDocumento).HasColumnName("doc_documento_traslado_id_documento");
            entity.Property(e => e.DocDocumentoTrasladoIdEstadoTipoDocumento).HasColumnName("doc_documento_traslado_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoTrasladoIdMoneda).HasColumnName("doc_documento_traslado_id_moneda");
            entity.Property(e => e.DocDocumentoTrasladoIdMotivoestado).HasColumnName("doc_documento_traslado_id_motivoestado");
            entity.Property(e => e.DocDocumentoTrasladoIdPrioridadDocumento).HasColumnName("doc_documento_traslado_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoTrasladoIdSubtipoDocumento).HasColumnName("doc_documento_traslado_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoTrasladoIdTerceroCliente).HasColumnName("doc_documento_traslado_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoTrasladoIdTerceroProveedor).HasColumnName("doc_documento_traslado_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoTrasladoIdUsuarioAsignado).HasColumnName("doc_documento_traslado_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoTrasladoIdUsuarioEnUso).HasColumnName("doc_documento_traslado_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoTrasladoIva).HasColumnName("doc_documento_traslado_iva");
            entity.Property(e => e.DocDocumentoTrasladoIvaPlaneado).HasColumnName("doc_documento_traslado_ivaPlaneado");
            entity.Property(e => e.DocDocumentoTrasladoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_prefijo");
            entity.Property(e => e.DocDocumentoTrasladoRentabilidad).HasColumnName("doc_documento_traslado_rentabilidad");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoAccesoActivo).HasColumnName("doc_documento_traslado_seg_usuario_asignado_accesoActivo");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoAplicaRecargo).HasColumnName("doc_documento_traslado_seg_usuario_asignado_aplicaRecargo");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoCambiarClave).HasColumnName("doc_documento_traslado_seg_usuario_asignado_cambiarClave");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_seg_usuario_asignado_clave");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoCostoHora)
                .HasColumnType("money")
                .HasColumnName("doc_documento_traslado_seg_usuario_asignado_costoHora");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_seg_usuario_asignado_direccion");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_seg_usuario_asignado_email");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_traslado_seg_usuario_asignado_fechaIntentoFallido_fh");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_traslado_seg_usuario_asignado_fechaUltimoCambioClave_fh");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_traslado_seg_usuario_asignado_fechaUltimoIngreso_fh");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoHabilitado).HasColumnName("doc_documento_traslado_seg_usuario_asignado_habilitado");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoIdCargo).HasColumnName("doc_documento_traslado_seg_usuario_asignado_id_cargo");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoIdGrupo).HasColumnName("doc_documento_traslado_seg_usuario_asignado_id_grupo");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoIdPerfil).HasColumnName("doc_documento_traslado_seg_usuario_asignado_id_perfil");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoIdUsuario).HasColumnName("doc_documento_traslado_seg_usuario_asignado_id_usuario");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoIdZona).HasColumnName("doc_documento_traslado_seg_usuario_asignado_id_zona");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_seg_usuario_asignado_identificacion");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoIntentosFallidos).HasColumnName("doc_documento_traslado_seg_usuario_asignado_intentosFallidos");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_seg_usuario_asignado_nombre");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoNumeroIngresos).HasColumnName("doc_documento_traslado_seg_usuario_asignado_numeroIngresos");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoPorcentajeComision).HasColumnName("doc_documento_traslado_seg_usuario_asignado_porcentajeComision");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoPreferencias)
                .HasColumnType("image")
                .HasColumnName("doc_documento_traslado_seg_usuario_asignado_preferencias");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_seg_usuario_asignado_profesion");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoSexo).HasColumnName("doc_documento_traslado_seg_usuario_asignado_sexo");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_seg_usuario_asignado_telefono");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_seg_usuario_asignado_usuario");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioAsignadoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_seg_usuario_asignado_usuario_codigo");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoAccesoActivo).HasColumnName("doc_documento_traslado_seg_usuario_enUso_accesoActivo");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoAplicaRecargo).HasColumnName("doc_documento_traslado_seg_usuario_enUso_aplicaRecargo");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoCambiarClave).HasColumnName("doc_documento_traslado_seg_usuario_enUso_cambiarClave");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_seg_usuario_enUso_clave");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoCostoHora)
                .HasColumnType("money")
                .HasColumnName("doc_documento_traslado_seg_usuario_enUso_costoHora");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_seg_usuario_enUso_direccion");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_seg_usuario_enUso_email");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_traslado_seg_usuario_enUso_fechaIntentoFallido_fh");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_traslado_seg_usuario_enUso_fechaUltimoCambioClave_fh");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_traslado_seg_usuario_enUso_fechaUltimoIngreso_fh");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoHabilitado).HasColumnName("doc_documento_traslado_seg_usuario_enUso_habilitado");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoIdCargo).HasColumnName("doc_documento_traslado_seg_usuario_enUso_id_cargo");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoIdGrupo).HasColumnName("doc_documento_traslado_seg_usuario_enUso_id_grupo");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoIdPerfil).HasColumnName("doc_documento_traslado_seg_usuario_enUso_id_perfil");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoIdUsuario).HasColumnName("doc_documento_traslado_seg_usuario_enUso_id_usuario");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoIdZona).HasColumnName("doc_documento_traslado_seg_usuario_enUso_id_zona");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_seg_usuario_enUso_identificacion");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoIntentosFallidos).HasColumnName("doc_documento_traslado_seg_usuario_enUso_intentosFallidos");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_seg_usuario_enUso_nombre");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoNumeroIngresos).HasColumnName("doc_documento_traslado_seg_usuario_enUso_numeroIngresos");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoPorcentajeComision).HasColumnName("doc_documento_traslado_seg_usuario_enUso_porcentajeComision");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoPreferencias)
                .HasColumnType("image")
                .HasColumnName("doc_documento_traslado_seg_usuario_enUso_preferencias");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_seg_usuario_enUso_profesion");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoSexo).HasColumnName("doc_documento_traslado_seg_usuario_enUso_sexo");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_seg_usuario_enUso_telefono");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_seg_usuario_enUso_usuario");
            entity.Property(e => e.DocDocumentoTrasladoSegUsuarioEnUsoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_seg_usuario_enUso_usuario_codigo");
            entity.Property(e => e.DocDocumentoTrasladoSubtotal).HasColumnName("doc_documento_traslado_subtotal");
            entity.Property(e => e.DocDocumentoTrasladoSubtotalPlaneado).HasColumnName("doc_documento_traslado_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroClienteClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_cliente_clasificacion");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroClienteContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_cliente_contacto");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroClienteDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_cliente_direccion");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroClienteEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_cliente_email");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroClienteEsCliente).HasColumnName("doc_documento_traslado_ter_tercero_cliente_esCliente");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroClienteEsEmpresaPropia).HasColumnName("doc_documento_traslado_ter_tercero_cliente_esEmpresaPropia");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroClienteEsFabricante).HasColumnName("doc_documento_traslado_ter_tercero_cliente_esFabricante");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroClienteEsProspecto).HasColumnName("doc_documento_traslado_ter_tercero_cliente_esProspecto");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroClienteEsProveedor).HasColumnName("doc_documento_traslado_ter_tercero_cliente_esProveedor");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroClienteEsTransportador).HasColumnName("doc_documento_traslado_ter_tercero_cliente_esTransportador");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroClienteFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_cliente_fax");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroClienteIdEstadoTercero).HasColumnName("doc_documento_traslado_ter_tercero_cliente_id_estadoTercero");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroClienteIdNaturalezaTercero).HasColumnName("doc_documento_traslado_ter_tercero_cliente_id_naturalezaTercero");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroClienteIdZona).HasColumnName("doc_documento_traslado_ter_tercero_cliente_id_zona");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroClienteNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_cliente_notas");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroClienteRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_cliente_representante");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroClienteTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_cliente_telefono");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroClienteTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_cliente_tercero");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroClienteTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_cliente_tercero_codigo");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroClienteTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_cliente_tercero_nit");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroClienteTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_cliente_tercero_nombreCorto");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroClienteWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_cliente_website");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroProveedorClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_proveedor_clasificacion");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroProveedorContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_proveedor_contacto");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroProveedorDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_proveedor_direccion");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroProveedorEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_proveedor_email");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroProveedorEsCliente).HasColumnName("doc_documento_traslado_ter_tercero_proveedor_esCliente");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroProveedorEsEmpresaPropia).HasColumnName("doc_documento_traslado_ter_tercero_proveedor_esEmpresaPropia");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroProveedorEsFabricante).HasColumnName("doc_documento_traslado_ter_tercero_proveedor_esFabricante");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroProveedorEsProspecto).HasColumnName("doc_documento_traslado_ter_tercero_proveedor_esProspecto");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroProveedorEsProveedor).HasColumnName("doc_documento_traslado_ter_tercero_proveedor_esProveedor");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroProveedorEsTransportador).HasColumnName("doc_documento_traslado_ter_tercero_proveedor_esTransportador");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroProveedorFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_proveedor_fax");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroProveedorIdEstadoTercero).HasColumnName("doc_documento_traslado_ter_tercero_proveedor_id_estadoTercero");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroProveedorIdNaturalezaTercero).HasColumnName("doc_documento_traslado_ter_tercero_proveedor_id_naturalezaTercero");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroProveedorIdZona).HasColumnName("doc_documento_traslado_ter_tercero_proveedor_id_zona");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroProveedorNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_proveedor_notas");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroProveedorRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_proveedor_representante");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroProveedorTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_proveedor_telefono");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroProveedorTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_proveedor_tercero");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroProveedorTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_proveedor_tercero_codigo");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroProveedorTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_proveedor_tercero_nit");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroProveedorTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_proveedor_tercero_nombreCorto");
            entity.Property(e => e.DocDocumentoTrasladoTerTerceroProveedorWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_traslado_ter_tercero_proveedor_website");
            entity.Property(e => e.DocDocumentoTrasladoTotal).HasColumnName("doc_documento_traslado_total");
            entity.Property(e => e.DocDocumentoTrasladoTotalPlaneado).HasColumnName("doc_documento_traslado_totalPlaneado");
            entity.Property(e => e.DocDocumentoTrasladoTrm).HasColumnName("doc_documento_traslado_trm");
            entity.Property(e => e.DocumentoTraslado)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.traslado");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenBodegaDestinoBodega)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_bodega_destino_bodega");
            entity.Property(e => e.GenBodegaDestinoBodegaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_bodega_destino_bodega_codigo");
            entity.Property(e => e.GenBodegaDestinoIdSucursal).HasColumnName("gen_bodega_destino_id_sucursal");
            entity.Property(e => e.GenBodegaDestinoSalidasEnRojo).HasColumnName("gen_bodega_destino_salidasEnRojo");
            entity.Property(e => e.GenBodegaDestinoUsaLocalizacion).HasColumnName("gen_bodega_destino_usaLocalizacion");
            entity.Property(e => e.GenBodegaOrigenBodega)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_bodega_origen_bodega");
            entity.Property(e => e.GenBodegaOrigenBodegaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_bodega_origen_bodega_codigo");
            entity.Property(e => e.GenBodegaOrigenIdSucursal).HasColumnName("gen_bodega_origen_id_sucursal");
            entity.Property(e => e.GenBodegaOrigenSalidasEnRojo).HasColumnName("gen_bodega_origen_salidasEnRojo");
            entity.Property(e => e.GenBodegaOrigenUsaLocalizacion).HasColumnName("gen_bodega_origen_usaLocalizacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdBodegaDestino).HasColumnName("id_bodega_destino");
            entity.Property(e => e.IdBodegaOrigen).HasColumnName("id_bodega_origen");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocEstadoTipoDocumento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_estadoTipoDocumento");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.AfectaIndicador).HasColumnName("afectaIndicador");
            entity.Property(e => e.AfectaInventario).HasColumnName("afectaInventario");
            entity.Property(e => e.Color)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("color");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.DocTipoDocumentoEsSalida).HasColumnName("doc_tipoDocumento_esSalida");
            entity.Property(e => e.DocTipoDocumentoMostrarBodega).HasColumnName("doc_tipoDocumento_mostrarBodega");
            entity.Property(e => e.DocTipoDocumentoMostrarCentroCosto).HasColumnName("doc_tipoDocumento_mostrarCentroCosto");
            entity.Property(e => e.DocTipoDocumentoMostrarIncoterm).HasColumnName("doc_tipoDocumento_mostrarIncoterm");
            entity.Property(e => e.DocTipoDocumentoPuedeSerMayor).HasColumnName("doc_tipoDocumento_puedeSerMayor");
            entity.Property(e => e.DocTipoDocumentoPuedeSerMenor).HasColumnName("doc_tipoDocumento_puedeSerMenor");
            entity.Property(e => e.DocTipoDocumentoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_tipoDocumento_tipoDocumento");
            entity.Property(e => e.DocTipoDocumentoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_tipoDocumento_tipoDocumento_codigo");
            entity.Property(e => e.EditaDocumento).HasColumnName("editaDocumento");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("estadoTipoDocumento");
            entity.Property(e => e.EstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("estadoTipoDocumento_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdTipoDocumento).HasColumnName("id_tipoDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MotivoObligatorio).HasColumnName("motivoObligatorio");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ObservacionesObligatorio).HasColumnName("observacionesObligatorio");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.PuedeRegresar).HasColumnName("puedeRegresar");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocEstadoTipoDocumentoPerfil>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_estadoTipoDocumento_perfil");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocEstadoTipoDocumentoAfectaIndicador).HasColumnName("doc_estadoTipoDocumento_afectaIndicador");
            entity.Property(e => e.DocEstadoTipoDocumentoAfectaInventario).HasColumnName("doc_estadoTipoDocumento_afectaInventario");
            entity.Property(e => e.DocEstadoTipoDocumentoColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_color");
            entity.Property(e => e.DocEstadoTipoDocumentoDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_descripcion");
            entity.Property(e => e.DocEstadoTipoDocumentoEditaDocumento).HasColumnName("doc_estadoTipoDocumento_editaDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_estadoTipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocEstadoTipoDocumentoIdTipoDocumento).HasColumnName("doc_estadoTipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoOrden).HasColumnName("doc_estadoTipoDocumento_orden");
            entity.Property(e => e.DocEstadoTipoDocumentoPuedeRegresar).HasColumnName("doc_estadoTipoDocumento_puedeRegresar");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EstadoTipoDocumentoPerfil)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("estadoTipoDocumento_perfil");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEstadoTipoDocumento).HasColumnName("id_estadoTipoDocumento");
            entity.Property(e => e.IdPerfil).HasColumnName("id_perfil");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.SegPerfilDescripcion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_perfil_descripcion");
            entity.Property(e => e.SegPerfilMostrarBotones).HasColumnName("seg_perfil_mostrarBotones");
            entity.Property(e => e.SegPerfilPerfil)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_perfil_perfil");
            entity.Property(e => e.SegPerfilPerfilCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_perfil_perfil_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocEstadoTipoDocumentoSubtipoDocumento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_estadoTipoDocumento_subtipoDocumento");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocEstadoTipoDocumentoAfectaIndicador).HasColumnName("doc_estadoTipoDocumento_afectaIndicador");
            entity.Property(e => e.DocEstadoTipoDocumentoAfectaInventario).HasColumnName("doc_estadoTipoDocumento_afectaInventario");
            entity.Property(e => e.DocEstadoTipoDocumentoColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_color");
            entity.Property(e => e.DocEstadoTipoDocumentoDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_descripcion");
            entity.Property(e => e.DocEstadoTipoDocumentoDestinoAfectaIndicador).HasColumnName("doc_estadoTipoDocumento_destino_afectaIndicador");
            entity.Property(e => e.DocEstadoTipoDocumentoDestinoAfectaInventario).HasColumnName("doc_estadoTipoDocumento_destino_afectaInventario");
            entity.Property(e => e.DocEstadoTipoDocumentoDestinoColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_destino_color");
            entity.Property(e => e.DocEstadoTipoDocumentoDestinoDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_destino_descripcion");
            entity.Property(e => e.DocEstadoTipoDocumentoDestinoEditaDocumento).HasColumnName("doc_estadoTipoDocumento_destino_editaDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoDestinoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_destino_estadoTipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoDestinoEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_destino_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocEstadoTipoDocumentoDestinoIdTipoDocumento).HasColumnName("doc_estadoTipoDocumento_destino_id_tipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoDestinoMotivoObligatorio).HasColumnName("doc_estadoTipoDocumento_destino_motivoObligatorio");
            entity.Property(e => e.DocEstadoTipoDocumentoDestinoObservacionesObligatorio).HasColumnName("doc_estadoTipoDocumento_destino_observacionesObligatorio");
            entity.Property(e => e.DocEstadoTipoDocumentoDestinoOrden).HasColumnName("doc_estadoTipoDocumento_destino_orden");
            entity.Property(e => e.DocEstadoTipoDocumentoDestinoPuedeRegresar).HasColumnName("doc_estadoTipoDocumento_destino_puedeRegresar");
            entity.Property(e => e.DocEstadoTipoDocumentoEditaDocumento).HasColumnName("doc_estadoTipoDocumento_editaDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_estadoTipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocEstadoTipoDocumentoIdTipoDocumento).HasColumnName("doc_estadoTipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoMotivoObligatorio).HasColumnName("doc_estadoTipoDocumento_motivoObligatorio");
            entity.Property(e => e.DocEstadoTipoDocumentoObservacionesObligatorio).HasColumnName("doc_estadoTipoDocumento_observacionesObligatorio");
            entity.Property(e => e.DocEstadoTipoDocumentoOrden).HasColumnName("doc_estadoTipoDocumento_orden");
            entity.Property(e => e.DocEstadoTipoDocumentoPuedeRegresar).HasColumnName("doc_estadoTipoDocumento_puedeRegresar");
            entity.Property(e => e.DocSubtipoDocumentoBloquearDespacho).HasColumnName("doc_subtipoDocumento_bloquearDespacho");
            entity.Property(e => e.DocSubtipoDocumentoCantidadAuxiliar).HasColumnName("doc_subtipoDocumento_cantidadAuxiliar");
            entity.Property(e => e.DocSubtipoDocumentoCargarSolicitante).HasColumnName("doc_subtipoDocumento_cargarSolicitante");
            entity.Property(e => e.DocSubtipoDocumentoCerrarSol).HasColumnName("doc_subtipoDocumento_cerrarSol");
            entity.Property(e => e.DocSubtipoDocumentoConsecutivo).HasColumnName("doc_subtipoDocumento_consecutivo");
            entity.Property(e => e.DocSubtipoDocumentoEjecutaDevolucion).HasColumnName("doc_subtipoDocumento_ejecutaDevolucion");
            entity.Property(e => e.DocSubtipoDocumentoIdTipoDocumento).HasColumnName("doc_subtipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoMostrarPendienteDocumento).HasColumnName("doc_subtipoDocumento_mostrarPendienteDocumento");
            entity.Property(e => e.DocSubtipoDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_prefijo");
            entity.Property(e => e.DocSubtipoDocumentoProgramarPlaneadas).HasColumnName("doc_subtipoDocumento_programarPlaneadas");
            entity.Property(e => e.DocSubtipoDocumentoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_subtipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_subtipoDocumento_codigo");
            entity.Property(e => e.DocSubtipoDocumentoTipoCobro).HasColumnName("doc_subtipoDocumento_tipoCobro");
            entity.Property(e => e.DocSubtipoDocumentoValUrgente).HasColumnName("doc_subtipoDocumento_valUrgente");
            entity.Property(e => e.DocSubtipoDocumentoVerCentroCosto).HasColumnName("doc_subtipoDocumento_verCentroCosto");
            entity.Property(e => e.DocSubtipoDocumentoVerIncoterm).HasColumnName("doc_subtipoDocumento_verIncoterm");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EstadoTipoDocumentoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("estadoTipoDocumento_subtipoDocumento");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEstadoTipoDocumento).HasColumnName("id_estadoTipoDocumento");
            entity.Property(e => e.IdEstadoTipoDocumentoDestino).HasColumnName("id_estadoTipoDocumento_destino");
            entity.Property(e => e.IdSubtipoDocumento).HasColumnName("id_subtipoDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.SpEjecucionfinal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("sp_ejecucionfinal");
            entity.Property(e => e.TiempoDeEjecucion).HasColumnName("tiempoDeEjecucion");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocEstrategiaPrioridad>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_estrategiaPrioridad");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DomingoFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("domingoFin_hh");
            entity.Property(e => e.DomingoIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("domingoIni_hh");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EstrategiaPrioridad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("estrategiaPrioridad");
            entity.Property(e => e.EstrategiaPrioridadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("estrategiaPrioridad_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FestivoFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("festivoFin_hh");
            entity.Property(e => e.FestivoIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("festivoIni_hh");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.JuevesFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("juevesFin_hh");
            entity.Property(e => e.JuevesIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("juevesIni_hh");
            entity.Property(e => e.LunesFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("lunesFin_hh");
            entity.Property(e => e.LunesIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("lunesIni_hh");
            entity.Property(e => e.MartesFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("martesFin_hh");
            entity.Property(e => e.MartesIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("martesIni_hh");
            entity.Property(e => e.MiercolesFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("miercolesFin_hh");
            entity.Property(e => e.MiercolesIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("miercolesIni_hh");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.SabadoFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("sabadoFin_hh");
            entity.Property(e => e.SabadoIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("sabadoIni_hh");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ViernesFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("viernesFin_hh");
            entity.Property(e => e.ViernesIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("viernesIni_hh");
        });

        modelBuilder.Entity<ViewDocEvaluacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_evaluacion");

            entity.Property(e => e.Activa).HasColumnName("activa");
            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocSubtipoDocumentoConsecutivo).HasColumnName("doc_subtipoDocumento_consecutivo");
            entity.Property(e => e.DocSubtipoDocumentoIdTipoDocumento).HasColumnName("doc_subtipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_prefijo");
            entity.Property(e => e.DocSubtipoDocumentoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_subtipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_subtipoDocumento_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Evaluacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("evaluacion");
            entity.Property(e => e.EvaluacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("evaluacion_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdSubtipoDocumento).HasColumnName("id_subtipoDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocFlujoDocumento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_flujoDocumento");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocEstadoTipoDocumentoOrigenAfectaIndicador).HasColumnName("doc_estadoTipoDocumento_origen_afectaIndicador");
            entity.Property(e => e.DocEstadoTipoDocumentoOrigenAfectaInventario).HasColumnName("doc_estadoTipoDocumento_origen_afectaInventario");
            entity.Property(e => e.DocEstadoTipoDocumentoOrigenColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_origen_color");
            entity.Property(e => e.DocEstadoTipoDocumentoOrigenDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_origen_descripcion");
            entity.Property(e => e.DocEstadoTipoDocumentoOrigenEditaDocumento).HasColumnName("doc_estadoTipoDocumento_origen_editaDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoOrigenEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_origen_estadoTipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoOrigenEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_origen_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocEstadoTipoDocumentoOrigenIdTipoDocumento).HasColumnName("doc_estadoTipoDocumento_origen_id_tipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoOrigenOrden).HasColumnName("doc_estadoTipoDocumento_origen_orden");
            entity.Property(e => e.DocEstadoTipoDocumentoOrigenPuedeRegresar).HasColumnName("doc_estadoTipoDocumento_origen_puedeRegresar");
            entity.Property(e => e.DocEstadoTipoDocumentoResultadoAfectaIndicador).HasColumnName("doc_estadoTipoDocumento_resultado_afectaIndicador");
            entity.Property(e => e.DocEstadoTipoDocumentoResultadoAfectaInventario).HasColumnName("doc_estadoTipoDocumento_resultado_afectaInventario");
            entity.Property(e => e.DocEstadoTipoDocumentoResultadoColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_resultado_color");
            entity.Property(e => e.DocEstadoTipoDocumentoResultadoDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_resultado_descripcion");
            entity.Property(e => e.DocEstadoTipoDocumentoResultadoEditaDocumento).HasColumnName("doc_estadoTipoDocumento_resultado_editaDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoResultadoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_resultado_estadoTipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoResultadoEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_resultado_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocEstadoTipoDocumentoResultadoIdTipoDocumento).HasColumnName("doc_estadoTipoDocumento_resultado_id_tipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoResultadoOrden).HasColumnName("doc_estadoTipoDocumento_resultado_orden");
            entity.Property(e => e.DocEstadoTipoDocumentoResultadoPuedeRegresar).HasColumnName("doc_estadoTipoDocumento_resultado_puedeRegresar");
            entity.Property(e => e.DocSubtipoDocumentoDestinoConsecutivo).HasColumnName("doc_subtipoDocumento_destino_consecutivo");
            entity.Property(e => e.DocSubtipoDocumentoDestinoIdTipoDocumento).HasColumnName("doc_subtipoDocumento_destino_id_tipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoDestinoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_destino_prefijo");
            entity.Property(e => e.DocSubtipoDocumentoDestinoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_destino_subtipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoDestinoSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_destino_subtipoDocumento_codigo");
            entity.Property(e => e.DocSubtipoDocumentoOrigenConsecutivo).HasColumnName("doc_subtipoDocumento_origen_consecutivo");
            entity.Property(e => e.DocSubtipoDocumentoOrigenIdTipoDocumento).HasColumnName("doc_subtipoDocumento_origen_id_tipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoOrigenPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_origen_prefijo");
            entity.Property(e => e.DocSubtipoDocumentoOrigenSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_origen_subtipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoOrigenSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_origen_subtipoDocumento_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FlujoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("flujoDocumento");
            entity.Property(e => e.FlujoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("flujoDocumento_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEstadoTipoDocumentoOrigen).HasColumnName("id_estadoTipoDocumento_origen");
            entity.Property(e => e.IdEstadoTipoDocumentoResultado).HasColumnName("id_estadoTipoDocumento_resultado");
            entity.Property(e => e.IdSubtipoDocumentoDestino).HasColumnName("id_subtipoDocumento_destino");
            entity.Property(e => e.IdSubtipoDocumentoOrigen).HasColumnName("id_subtipoDocumento_origen");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ReplicarAtributos).HasColumnName("replicarAtributos");
            entity.Property(e => e.ReplicarComentario).HasColumnName("replicarComentario");
            entity.Property(e => e.ReplicarItems).HasColumnName("replicarItems");
            entity.Property(e => e.ReplicarItemsActividades).HasColumnName("replicarItemsActividades");
            entity.Property(e => e.Restrictivo).HasColumnName("restrictivo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocFormaPago>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_formaPago");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DiasPago).HasColumnName("diasPago");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FormaPago)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("formaPago");
            entity.Property(e => e.FormaPagoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("formaPago_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocIncoterm>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_incoterm");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Incoterm)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("incoterm");
            entity.Property(e => e.IncotermCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("incoterm_codigo");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocItemDocumento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_itemDocumento");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.AfectoInventario).HasColumnName("afectoInventario");
            entity.Property(e => e.CantAuxiliar).HasColumnName("cantAuxiliar");
            entity.Property(e => e.CantidadEjecutado).HasColumnName("cantidadEjecutado");
            entity.Property(e => e.CantidadPlaneado).HasColumnName("cantidadPlaneado");
            entity.Property(e => e.CatCatalogoBloquearCostear).HasColumnName("cat_catalogo_bloquearCostear");
            entity.Property(e => e.CatCatalogoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo");
            entity.Property(e => e.CatCatalogoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_codigoInventario");
            entity.Property(e => e.CatCatalogoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_descripcion");
            entity.Property(e => e.CatCatalogoEsNacional).HasColumnName("cat_catalogo_esNacional");
            entity.Property(e => e.CatCatalogoIdFamilia).HasColumnName("cat_catalogo_id_familia");
            entity.Property(e => e.CatCatalogoIdImpuesto).HasColumnName("cat_catalogo_id_impuesto");
            entity.Property(e => e.CatCatalogoIdSubtipoCatalogo).HasColumnName("cat_catalogo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoIdUnidad).HasColumnName("cat_catalogo_id_unidad");
            entity.Property(e => e.CatCatalogoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_precioVenta");
            entity.Property(e => e.CatCatalogoTiempoConsecucion).HasColumnName("cat_catalogo_tiempoConsecucion");
            entity.Property(e => e.CatListaPrecioEsPrivado).HasColumnName("cat_listaPrecio_esPrivado");
            entity.Property(e => e.CatListaPrecioIdMoneda).HasColumnName("cat_listaPrecio_id_moneda");
            entity.Property(e => e.CatListaPrecioListaPrecio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_listaPrecio_listaPrecio");
            entity.Property(e => e.CatListaPrecioListaPrecioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_listaPrecio_listaPrecio_codigo");
            entity.Property(e => e.CatListaPrecioParaCompra).HasColumnName("cat_listaPrecio_paraCompra");
            entity.Property(e => e.CatListaPrecioPorcentajeDescuento).HasColumnName("cat_listaPrecio_porcentajeDescuento");
            entity.Property(e => e.Costear).HasColumnName("costear");
            entity.Property(e => e.CostoEjecutado).HasColumnName("costoEjecutado");
            entity.Property(e => e.CostoPlaneado).HasColumnName("costoPlaneado");
            entity.Property(e => e.Detalle)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("detalle");
            entity.Property(e => e.DocCentroCostoCentroCosto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_centroCosto_centroCosto");
            entity.Property(e => e.DocCentroCostoCentroCostoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_centroCosto_centroCosto_codigo");
            entity.Property(e => e.DocDocumentoCosto).HasColumnName("doc_documento_costo");
            entity.Property(e => e.DocDocumentoCostoPlaneado).HasColumnName("doc_documento_costoPlaneado");
            entity.Property(e => e.DocDocumentoDescuento).HasColumnName("doc_documento_descuento");
            entity.Property(e => e.DocDocumentoDescuentoPlaneado).HasColumnName("doc_documento_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento");
            entity.Property(e => e.DocDocumentoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento_codigo");
            entity.Property(e => e.DocDocumentoDocumentoNumero).HasColumnName("doc_documento_documento_numero");
            entity.Property(e => e.DocDocumentoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fecha_fh");
            entity.Property(e => e.DocDocumentoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoIdDocumento).HasColumnName("doc_documento_id_documento");
            entity.Property(e => e.DocDocumentoIdEstadoTipoDocumento).HasColumnName("doc_documento_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoIdMoneda).HasColumnName("doc_documento_id_moneda");
            entity.Property(e => e.DocDocumentoIdMotivoestado).HasColumnName("doc_documento_id_motivoestado");
            entity.Property(e => e.DocDocumentoIdPrioridadDocumento).HasColumnName("doc_documento_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoIdSubtipoDocumento).HasColumnName("doc_documento_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoIdTerceroCliente).HasColumnName("doc_documento_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoIdTerceroProveedor).HasColumnName("doc_documento_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoIdUsuarioAsignado).HasColumnName("doc_documento_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoIdUsuarioEnUso).HasColumnName("doc_documento_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoIva).HasColumnName("doc_documento_iva");
            entity.Property(e => e.DocDocumentoIvaPlaneado).HasColumnName("doc_documento_ivaPlaneado");
            entity.Property(e => e.DocDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_prefijo");
            entity.Property(e => e.DocDocumentoRentabilidad).HasColumnName("doc_documento_rentabilidad");
            entity.Property(e => e.DocDocumentoSubtotal).HasColumnName("doc_documento_subtotal");
            entity.Property(e => e.DocDocumentoSubtotalPlaneado).HasColumnName("doc_documento_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoTotal).HasColumnName("doc_documento_total");
            entity.Property(e => e.DocDocumentoTotalPlaneado).HasColumnName("doc_documento_totalPlaneado");
            entity.Property(e => e.DocDocumentoTrm).HasColumnName("doc_documento_trm");
            entity.Property(e => e.DocIncotermIncoterm)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_incoterm_incoterm");
            entity.Property(e => e.DocIncotermIncotermCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_incoterm_incoterm_codigo");
            entity.Property(e => e.DocItemDocumentoPadreAfectoInventario).HasColumnName("doc_itemDocumento_padre_afectoInventario");
            entity.Property(e => e.DocItemDocumentoPadreCantAuxiliar).HasColumnName("doc_itemDocumento_padre_cantAuxiliar");
            entity.Property(e => e.DocItemDocumentoPadreCantidadEjecutado).HasColumnName("doc_itemDocumento_padre_cantidadEjecutado");
            entity.Property(e => e.DocItemDocumentoPadreCantidadPlaneado).HasColumnName("doc_itemDocumento_padre_cantidadPlaneado");
            entity.Property(e => e.DocItemDocumentoPadreCostear).HasColumnName("doc_itemDocumento_padre_costear");
            entity.Property(e => e.DocItemDocumentoPadreCostoEjecutado).HasColumnName("doc_itemDocumento_padre_costoEjecutado");
            entity.Property(e => e.DocItemDocumentoPadreCostoPlaneado).HasColumnName("doc_itemDocumento_padre_costoPlaneado");
            entity.Property(e => e.DocItemDocumentoPadreDetalle)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_padre_detalle");
            entity.Property(e => e.DocItemDocumentoPadreDtoEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_padre_dtoEjecutado");
            entity.Property(e => e.DocItemDocumentoPadreDtoPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_padre_dtoPlaneado");
            entity.Property(e => e.DocItemDocumentoPadreEsUrgente).HasColumnName("doc_itemDocumento_padre_esUrgente");
            entity.Property(e => e.DocItemDocumentoPadreHorasFestivas).HasColumnName("doc_itemDocumento_padre_horasFestivas");
            entity.Property(e => e.DocItemDocumentoPadreHorasGarantia).HasColumnName("doc_itemDocumento_padre_horasGarantia");
            entity.Property(e => e.DocItemDocumentoPadreHorasNocturnas).HasColumnName("doc_itemDocumento_padre_horasNocturnas");
            entity.Property(e => e.DocItemDocumentoPadreHorasOrdinales).HasColumnName("doc_itemDocumento_padre_horasOrdinales");
            entity.Property(e => e.DocItemDocumentoPadreIdBodega).HasColumnName("doc_itemDocumento_padre_id_bodega");
            entity.Property(e => e.DocItemDocumentoPadreIdCatalogo).HasColumnName("doc_itemDocumento_padre_id_catalogo");
            entity.Property(e => e.DocItemDocumentoPadreIdCentroCosto).HasColumnName("doc_itemDocumento_padre_id_centroCosto");
            entity.Property(e => e.DocItemDocumentoPadreIdDocumento).HasColumnName("doc_itemDocumento_padre_id_documento");
            entity.Property(e => e.DocItemDocumentoPadreIdIncoterm).HasColumnName("doc_itemDocumento_padre_id_incoterm");
            entity.Property(e => e.DocItemDocumentoPadreIdItemDocumento).HasColumnName("doc_itemDocumento_padre_id_itemDocumento");
            entity.Property(e => e.DocItemDocumentoPadreIdItemDocumentoSuperior).HasColumnName("doc_itemDocumento_padre_id_itemDocumento_superior");
            entity.Property(e => e.DocItemDocumentoPadreIdListaprecio).HasColumnName("doc_itemDocumento_padre_id_listaprecio");
            entity.Property(e => e.DocItemDocumentoPadreItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_padre_itemDocumento");
            entity.Property(e => e.DocItemDocumentoPadreItemDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_padre_itemDocumento_codigo");
            entity.Property(e => e.DocItemDocumentoPadreIvaEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_padre_ivaEjecutado");
            entity.Property(e => e.DocItemDocumentoPadreIvaPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_padre_ivaPlaneado");
            entity.Property(e => e.DocItemDocumentoPadreMargenPlaneado).HasColumnName("doc_itemDocumento_padre_margenPlaneado");
            entity.Property(e => e.DocItemDocumentoPadrePorcdescuento).HasColumnName("doc_itemDocumento_padre_porcdescuento");
            entity.Property(e => e.DocItemDocumentoPadrePorcdto).HasColumnName("doc_itemDocumento_padre_porcdto");
            entity.Property(e => e.DocItemDocumentoPadrePorcentajeCliente).HasColumnName("doc_itemDocumento_padre_porcentajeCliente");
            entity.Property(e => e.DocItemDocumentoPadrePorcentajeDistribuidor).HasColumnName("doc_itemDocumento_padre_porcentajeDistribuidor");
            entity.Property(e => e.DocItemDocumentoPadrePorcentajeFabricante).HasColumnName("doc_itemDocumento_padre_porcentajeFabricante");
            entity.Property(e => e.DocItemDocumentoPadrePorcentajeMargen).HasColumnName("doc_itemDocumento_padre_porcentajeMargen");
            entity.Property(e => e.DocItemDocumentoPadrePorciva).HasColumnName("doc_itemDocumento_padre_porciva");
            entity.Property(e => e.DocItemDocumentoPadreSubtotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_padre_subtotalEjecutado");
            entity.Property(e => e.DocItemDocumentoPadreSubtotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_padre_subtotalPlaneado");
            entity.Property(e => e.DocItemDocumentoPadreTotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_padre_totalEjecutado");
            entity.Property(e => e.DocItemDocumentoPadreTotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_padre_totalPlaneado");
            entity.Property(e => e.DocItemDocumentoPadreValorUnitarioEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_padre_valorUnitarioEjecutado");
            entity.Property(e => e.DocItemDocumentoPadreValorUnitarioPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_padre_valorUnitarioPlaneado");
            entity.Property(e => e.DocItemDocumentoPadreVencimientoGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_itemDocumento_padre_vencimientoGarantia_ff");
            entity.Property(e => e.DocItemDocumentoPadreVrbase).HasColumnName("doc_itemDocumento_padre_vrbase");
            entity.Property(e => e.DocItemDocumentoPadreVrenlista).HasColumnName("doc_itemDocumento_padre_vrenlista");
            entity.Property(e => e.DocItemDocumentoSuperiorAfectoInventario).HasColumnName("doc_itemDocumento_superior_afectoInventario");
            entity.Property(e => e.DocItemDocumentoSuperiorCantAuxiliar).HasColumnName("doc_itemDocumento_superior_cantAuxiliar");
            entity.Property(e => e.DocItemDocumentoSuperiorCantidadEjecutado).HasColumnName("doc_itemDocumento_superior_cantidadEjecutado");
            entity.Property(e => e.DocItemDocumentoSuperiorCantidadPlaneado).HasColumnName("doc_itemDocumento_superior_cantidadPlaneado");
            entity.Property(e => e.DocItemDocumentoSuperiorCostear).HasColumnName("doc_itemDocumento_superior_costear");
            entity.Property(e => e.DocItemDocumentoSuperiorCostoEjecutado).HasColumnName("doc_itemDocumento_superior_costoEjecutado");
            entity.Property(e => e.DocItemDocumentoSuperiorCostoPlaneado).HasColumnName("doc_itemDocumento_superior_costoPlaneado");
            entity.Property(e => e.DocItemDocumentoSuperiorDetalle)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_superior_detalle");
            entity.Property(e => e.DocItemDocumentoSuperiorDtoEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_superior_dtoEjecutado");
            entity.Property(e => e.DocItemDocumentoSuperiorDtoPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_superior_dtoPlaneado");
            entity.Property(e => e.DocItemDocumentoSuperiorEsUrgente).HasColumnName("doc_itemDocumento_superior_esUrgente");
            entity.Property(e => e.DocItemDocumentoSuperiorHorasFestivas).HasColumnName("doc_itemDocumento_superior_horasFestivas");
            entity.Property(e => e.DocItemDocumentoSuperiorHorasGarantia).HasColumnName("doc_itemDocumento_superior_horasGarantia");
            entity.Property(e => e.DocItemDocumentoSuperiorHorasNocturnas).HasColumnName("doc_itemDocumento_superior_horasNocturnas");
            entity.Property(e => e.DocItemDocumentoSuperiorHorasOrdinales).HasColumnName("doc_itemDocumento_superior_horasOrdinales");
            entity.Property(e => e.DocItemDocumentoSuperiorIdBodega).HasColumnName("doc_itemDocumento_superior_id_bodega");
            entity.Property(e => e.DocItemDocumentoSuperiorIdCatalogo).HasColumnName("doc_itemDocumento_superior_id_catalogo");
            entity.Property(e => e.DocItemDocumentoSuperiorIdCentroCosto).HasColumnName("doc_itemDocumento_superior_id_centroCosto");
            entity.Property(e => e.DocItemDocumentoSuperiorIdDocumento).HasColumnName("doc_itemDocumento_superior_id_documento");
            entity.Property(e => e.DocItemDocumentoSuperiorIdIncoterm).HasColumnName("doc_itemDocumento_superior_id_incoterm");
            entity.Property(e => e.DocItemDocumentoSuperiorIdItemDocumento).HasColumnName("doc_itemDocumento_superior_id_itemDocumento");
            entity.Property(e => e.DocItemDocumentoSuperiorIdItemDocumentoSuperior).HasColumnName("doc_itemDocumento_superior_id_itemDocumento_superior");
            entity.Property(e => e.DocItemDocumentoSuperiorIdListaprecio).HasColumnName("doc_itemDocumento_superior_id_listaprecio");
            entity.Property(e => e.DocItemDocumentoSuperiorItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_superior_itemDocumento");
            entity.Property(e => e.DocItemDocumentoSuperiorItemDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_superior_itemDocumento_codigo");
            entity.Property(e => e.DocItemDocumentoSuperiorIvaEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_superior_ivaEjecutado");
            entity.Property(e => e.DocItemDocumentoSuperiorIvaPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_superior_ivaPlaneado");
            entity.Property(e => e.DocItemDocumentoSuperiorMargenPlaneado).HasColumnName("doc_itemDocumento_superior_margenPlaneado");
            entity.Property(e => e.DocItemDocumentoSuperiorPorcdescuento).HasColumnName("doc_itemDocumento_superior_porcdescuento");
            entity.Property(e => e.DocItemDocumentoSuperiorPorcdto).HasColumnName("doc_itemDocumento_superior_porcdto");
            entity.Property(e => e.DocItemDocumentoSuperiorPorcentajeCliente).HasColumnName("doc_itemDocumento_superior_porcentajeCliente");
            entity.Property(e => e.DocItemDocumentoSuperiorPorcentajeDistribuidor).HasColumnName("doc_itemDocumento_superior_porcentajeDistribuidor");
            entity.Property(e => e.DocItemDocumentoSuperiorPorcentajeFabricante).HasColumnName("doc_itemDocumento_superior_porcentajeFabricante");
            entity.Property(e => e.DocItemDocumentoSuperiorPorcentajeMargen).HasColumnName("doc_itemDocumento_superior_porcentajeMargen");
            entity.Property(e => e.DocItemDocumentoSuperiorPorciva).HasColumnName("doc_itemDocumento_superior_porciva");
            entity.Property(e => e.DocItemDocumentoSuperiorSubtotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_superior_subtotalEjecutado");
            entity.Property(e => e.DocItemDocumentoSuperiorSubtotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_superior_subtotalPlaneado");
            entity.Property(e => e.DocItemDocumentoSuperiorTotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_superior_totalEjecutado");
            entity.Property(e => e.DocItemDocumentoSuperiorTotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_superior_totalPlaneado");
            entity.Property(e => e.DocItemDocumentoSuperiorValorUnitarioEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_superior_valorUnitarioEjecutado");
            entity.Property(e => e.DocItemDocumentoSuperiorValorUnitarioPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_superior_valorUnitarioPlaneado");
            entity.Property(e => e.DocItemDocumentoSuperiorVencimientoGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_itemDocumento_superior_vencimientoGarantia_ff");
            entity.Property(e => e.DocItemDocumentoSuperiorVrbase).HasColumnName("doc_itemDocumento_superior_vrbase");
            entity.Property(e => e.DocItemDocumentoSuperiorVrenlista).HasColumnName("doc_itemDocumento_superior_vrenlista");
            entity.Property(e => e.DtoEjecutado)
                .HasColumnType("money")
                .HasColumnName("dtoEjecutado");
            entity.Property(e => e.DtoPlaneado)
                .HasColumnType("money")
                .HasColumnName("dtoPlaneado");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsUrgente).HasColumnName("esUrgente");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenBodegaBodega)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_bodega_bodega");
            entity.Property(e => e.GenBodegaBodegaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_bodega_bodega_codigo");
            entity.Property(e => e.GenBodegaIdSucursal).HasColumnName("gen_bodega_id_sucursal");
            entity.Property(e => e.GenBodegaSalidasEnRojo).HasColumnName("gen_bodega_salidasEnRojo");
            entity.Property(e => e.GenBodegaUsaLocalizacion).HasColumnName("gen_bodega_usaLocalizacion");
            entity.Property(e => e.HorasFestivas).HasColumnName("horasFestivas");
            entity.Property(e => e.HorasGarantia).HasColumnName("horasGarantia");
            entity.Property(e => e.HorasNocturnas).HasColumnName("horasNocturnas");
            entity.Property(e => e.HorasOrdinales).HasColumnName("horasOrdinales");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdBodega).HasColumnName("id_bodega");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdCentroCosto).HasColumnName("id_centroCosto");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdIncoterm).HasColumnName("id_incoterm");
            entity.Property(e => e.IdItemDocumento).HasColumnName("id_itemDocumento");
            entity.Property(e => e.IdItemDocumentoSuperior).HasColumnName("id_itemDocumento_superior");
            entity.Property(e => e.IdListaprecio).HasColumnName("id_listaprecio");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.ItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("itemDocumento");
            entity.Property(e => e.ItemDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("itemDocumento_codigo");
            entity.Property(e => e.IvaEjecutado)
                .HasColumnType("money")
                .HasColumnName("ivaEjecutado");
            entity.Property(e => e.IvaPlaneado)
                .HasColumnType("money")
                .HasColumnName("ivaPlaneado");
            entity.Property(e => e.MargenPlaneado).HasColumnName("margenPlaneado");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Porcdescuento).HasColumnName("porcdescuento");
            entity.Property(e => e.Porcdto).HasColumnName("porcdto");
            entity.Property(e => e.PorcentajeCliente).HasColumnName("porcentajeCliente");
            entity.Property(e => e.PorcentajeDistribuidor).HasColumnName("porcentajeDistribuidor");
            entity.Property(e => e.PorcentajeFabricante).HasColumnName("porcentajeFabricante");
            entity.Property(e => e.PorcentajeMargen).HasColumnName("porcentajeMargen");
            entity.Property(e => e.Porciva).HasColumnName("porciva");
            entity.Property(e => e.SubtotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("subtotalEjecutado");
            entity.Property(e => e.SubtotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("subtotalPlaneado");
            entity.Property(e => e.TotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("totalEjecutado");
            entity.Property(e => e.TotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("totalPlaneado");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorUnitarioEjecutado)
                .HasColumnType("money")
                .HasColumnName("valorUnitarioEjecutado");
            entity.Property(e => e.ValorUnitarioPlaneado)
                .HasColumnType("money")
                .HasColumnName("valorUnitarioPlaneado");
            entity.Property(e => e.VencimientoGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("vencimientoGarantia_ff");
            entity.Property(e => e.Vrbase).HasColumnName("vrbase");
            entity.Property(e => e.Vrenlista).HasColumnName("vrenlista");
        });

        modelBuilder.Entity<ViewDocMedioSolicitud>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_medioSolicitud");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MedioSolicitud)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("medioSolicitud");
            entity.Property(e => e.MedioSolicitudCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("medioSolicitud_codigo");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocMotivoestado>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_motivoestado");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocEstadoTipoDocumentoAfectaIndicador).HasColumnName("doc_estadoTipoDocumento_afectaIndicador");
            entity.Property(e => e.DocEstadoTipoDocumentoAfectaInventario).HasColumnName("doc_estadoTipoDocumento_afectaInventario");
            entity.Property(e => e.DocEstadoTipoDocumentoColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_color");
            entity.Property(e => e.DocEstadoTipoDocumentoDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_descripcion");
            entity.Property(e => e.DocEstadoTipoDocumentoEditaDocumento).HasColumnName("doc_estadoTipoDocumento_editaDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_estadoTipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocEstadoTipoDocumentoIdTipoDocumento).HasColumnName("doc_estadoTipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoOrden).HasColumnName("doc_estadoTipoDocumento_orden");
            entity.Property(e => e.DocEstadoTipoDocumentoPuedeRegresar).HasColumnName("doc_estadoTipoDocumento_puedeRegresar");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEstadoTipoDocumento).HasColumnName("id_estadoTipoDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Motivoestado)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("motivoestado");
            entity.Property(e => e.MotivoestadoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("motivoestado_codigo");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocOpcionCondicion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_opcionCondicion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocCondicionCondicion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_condicion_condicion");
            entity.Property(e => e.DocCondicionCondicionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_condicion_condicion_codigo");
            entity.Property(e => e.DocCondicionTextoLibre).HasColumnName("doc_condicion_textoLibre");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCondicion).HasColumnName("id_condicion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.OpcionCondicion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("opcionCondicion");
            entity.Property(e => e.OpcionCondicionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("opcionCondicion_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocOpcionRespuestum>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_opcionRespuesta");

            entity.Property(e => e.Activa).HasColumnName("activa");
            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocPreguntaActiva).HasColumnName("doc_pregunta_activa");
            entity.Property(e => e.DocPreguntaIdEvaluacion).HasColumnName("doc_pregunta_id_evaluacion");
            entity.Property(e => e.DocPreguntaOrden).HasColumnName("doc_pregunta_orden");
            entity.Property(e => e.DocPreguntaPregunta)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_pregunta_pregunta");
            entity.Property(e => e.DocPreguntaPreguntaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_pregunta_pregunta_codigo");
            entity.Property(e => e.DocPreguntaValor).HasColumnName("doc_pregunta_valor");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdPregunta).HasColumnName("id_pregunta");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.OpcionRespuesta)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("opcionRespuesta");
            entity.Property(e => e.OpcionRespuestaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("opcionRespuesta_codigo");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor).HasColumnName("valor");
        });

        modelBuilder.Entity<ViewDocPendienteDocumento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_pendienteDocumento");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.CatCatalogoBloquearCostear).HasColumnName("cat_catalogo_bloquearCostear");
            entity.Property(e => e.CatCatalogoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo");
            entity.Property(e => e.CatCatalogoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_codigoInventario");
            entity.Property(e => e.CatCatalogoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_descripcion");
            entity.Property(e => e.CatCatalogoEsNacional).HasColumnName("cat_catalogo_esNacional");
            entity.Property(e => e.CatCatalogoIdFamilia).HasColumnName("cat_catalogo_id_familia");
            entity.Property(e => e.CatCatalogoIdImpuesto).HasColumnName("cat_catalogo_id_impuesto");
            entity.Property(e => e.CatCatalogoIdSubtipoCatalogo).HasColumnName("cat_catalogo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoIdUnidad).HasColumnName("cat_catalogo_id_unidad");
            entity.Property(e => e.CatCatalogoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_precioVenta");
            entity.Property(e => e.CatCatalogoTiempoConsecucion).HasColumnName("cat_catalogo_tiempoConsecucion");
            entity.Property(e => e.CatTipoCatalogoTipocatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_tipoCatalogo_tipocatalogo");
            entity.Property(e => e.DocDocumentoCosto).HasColumnName("doc_documento_costo");
            entity.Property(e => e.DocDocumentoCostoPlaneado).HasColumnName("doc_documento_costoPlaneado");
            entity.Property(e => e.DocDocumentoDescuento).HasColumnName("doc_documento_descuento");
            entity.Property(e => e.DocDocumentoDescuentoPlaneado).HasColumnName("doc_documento_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento");
            entity.Property(e => e.DocDocumentoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento_codigo");
            entity.Property(e => e.DocDocumentoDocumentoNumero).HasColumnName("doc_documento_documento_numero");
            entity.Property(e => e.DocDocumentoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fecha_fh");
            entity.Property(e => e.DocDocumentoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoIdDocumento).HasColumnName("doc_documento_id_documento");
            entity.Property(e => e.DocDocumentoIdEstadoTipoDocumento).HasColumnName("doc_documento_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoIdMoneda).HasColumnName("doc_documento_id_moneda");
            entity.Property(e => e.DocDocumentoIdMotivoestado).HasColumnName("doc_documento_id_motivoestado");
            entity.Property(e => e.DocDocumentoIdPrioridadDocumento).HasColumnName("doc_documento_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoIdSubtipoDocumento).HasColumnName("doc_documento_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoIdTerceroCliente).HasColumnName("doc_documento_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoIdTerceroProveedor).HasColumnName("doc_documento_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoIdUsuarioAsignado).HasColumnName("doc_documento_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoIdUsuarioEnUso).HasColumnName("doc_documento_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoIva).HasColumnName("doc_documento_iva");
            entity.Property(e => e.DocDocumentoIvaPlaneado).HasColumnName("doc_documento_ivaPlaneado");
            entity.Property(e => e.DocDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_prefijo");
            entity.Property(e => e.DocDocumentoRentabilidad).HasColumnName("doc_documento_rentabilidad");
            entity.Property(e => e.DocDocumentoSubtotal).HasColumnName("doc_documento_subtotal");
            entity.Property(e => e.DocDocumentoSubtotalPlaneado).HasColumnName("doc_documento_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoTotal).HasColumnName("doc_documento_total");
            entity.Property(e => e.DocDocumentoTotalPlaneado).HasColumnName("doc_documento_totalPlaneado");
            entity.Property(e => e.DocDocumentoTrm).HasColumnName("doc_documento_trm");
            entity.Property(e => e.DocTipoDocumentoEsSalida).HasColumnName("doc_tipoDocumento_esSalida");
            entity.Property(e => e.DocTipoDocumentoEsUrgente).HasColumnName("doc_tipoDocumento_esUrgente");
            entity.Property(e => e.DocTipoDocumentoMostrarBodega).HasColumnName("doc_tipoDocumento_mostrarBodega");
            entity.Property(e => e.DocTipoDocumentoMostrarCentroCosto).HasColumnName("doc_tipoDocumento_mostrarCentroCosto");
            entity.Property(e => e.DocTipoDocumentoMostrarIncoterm).HasColumnName("doc_tipoDocumento_mostrarIncoterm");
            entity.Property(e => e.DocTipoDocumentoPuedeSerMayor).HasColumnName("doc_tipoDocumento_puedeSerMayor");
            entity.Property(e => e.DocTipoDocumentoPuedeSerMenor).HasColumnName("doc_tipoDocumento_puedeSerMenor");
            entity.Property(e => e.DocTipoDocumentoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_tipoDocumento_tipoDocumento");
            entity.Property(e => e.DocTipoDocumentoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_tipoDocumento_tipoDocumento_codigo");
            entity.Property(e => e.DocTipoPendienteTipoPendiente)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_tipoPendiente_tipoPendiente");
            entity.Property(e => e.DocTipoPendienteTipoPendienteCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_tipoPendiente_tipoPendiente_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdReporteTecnico).HasColumnName("id_reporteTecnico");
            entity.Property(e => e.IdTipoDocumento).HasColumnName("id_tipoDocumento");
            entity.Property(e => e.IdTipoPendiente).HasColumnName("id_tipoPendiente");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Olvidar).HasColumnName("olvidar");
            entity.Property(e => e.OrtReporteTecnicoCompromisos)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_compromisos");
            entity.Property(e => e.OrtReporteTecnicoIdCanalAtencion).HasColumnName("ort_reporteTecnico_id_canalAtencion");
            entity.Property(e => e.OrtReporteTecnicoIdGasto).HasColumnName("ort_reporteTecnico_id_gasto");
            entity.Property(e => e.OrtReporteTecnicoNumero)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_numero");
            entity.Property(e => e.OrtReporteTecnicoRecomendaciones)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_recomendaciones");
            entity.Property(e => e.OrtReporteTecnicoReporteTecnico)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_reporteTecnico");
            entity.Property(e => e.OrtReporteTecnicoReporteTecnicoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_reporteTecnico_codigo");
            entity.Property(e => e.OrtReporteTecnicoTrabajos)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_trabajos");
            entity.Property(e => e.PendienteDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pendienteDocumento");
            entity.Property(e => e.PendienteDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pendienteDocumento_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocPendienteDocumentoDocItemDocumento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_pendienteDocumento_doc_itemDocumento");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocItemDocumentoAfectoInventario).HasColumnName("doc_itemDocumento_afectoInventario");
            entity.Property(e => e.DocItemDocumentoCantAuxiliar).HasColumnName("doc_itemDocumento_cantAuxiliar");
            entity.Property(e => e.DocItemDocumentoCantidadEjecutado).HasColumnName("doc_itemDocumento_cantidadEjecutado");
            entity.Property(e => e.DocItemDocumentoCantidadPlaneado).HasColumnName("doc_itemDocumento_cantidadPlaneado");
            entity.Property(e => e.DocItemDocumentoCostear).HasColumnName("doc_itemDocumento_costear");
            entity.Property(e => e.DocItemDocumentoCostoEjecutado).HasColumnName("doc_itemDocumento_costoEjecutado");
            entity.Property(e => e.DocItemDocumentoCostoPlaneado).HasColumnName("doc_itemDocumento_costoPlaneado");
            entity.Property(e => e.DocItemDocumentoDetalle)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_detalle");
            entity.Property(e => e.DocItemDocumentoDtoEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_dtoEjecutado");
            entity.Property(e => e.DocItemDocumentoDtoPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_dtoPlaneado");
            entity.Property(e => e.DocItemDocumentoEsUrgente).HasColumnName("doc_itemDocumento_esUrgente");
            entity.Property(e => e.DocItemDocumentoHorasFestivas).HasColumnName("doc_itemDocumento_horasFestivas");
            entity.Property(e => e.DocItemDocumentoHorasGarantia).HasColumnName("doc_itemDocumento_horasGarantia");
            entity.Property(e => e.DocItemDocumentoHorasNocturnas).HasColumnName("doc_itemDocumento_horasNocturnas");
            entity.Property(e => e.DocItemDocumentoHorasOrdinales).HasColumnName("doc_itemDocumento_horasOrdinales");
            entity.Property(e => e.DocItemDocumentoIdBodega).HasColumnName("doc_itemDocumento_id_bodega");
            entity.Property(e => e.DocItemDocumentoIdCatalogo).HasColumnName("doc_itemDocumento_id_catalogo");
            entity.Property(e => e.DocItemDocumentoIdCentroCosto).HasColumnName("doc_itemDocumento_id_centroCosto");
            entity.Property(e => e.DocItemDocumentoIdDocumento).HasColumnName("doc_itemDocumento_id_documento");
            entity.Property(e => e.DocItemDocumentoIdIncoterm).HasColumnName("doc_itemDocumento_id_incoterm");
            entity.Property(e => e.DocItemDocumentoIdItemDocumento).HasColumnName("doc_itemDocumento_id_itemDocumento");
            entity.Property(e => e.DocItemDocumentoIdItemDocumentoSuperior).HasColumnName("doc_itemDocumento_id_itemDocumento_superior");
            entity.Property(e => e.DocItemDocumentoIdListaprecio).HasColumnName("doc_itemDocumento_id_listaprecio");
            entity.Property(e => e.DocItemDocumentoItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_itemDocumento");
            entity.Property(e => e.DocItemDocumentoItemDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_itemDocumento_codigo");
            entity.Property(e => e.DocItemDocumentoIvaEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_ivaEjecutado");
            entity.Property(e => e.DocItemDocumentoIvaPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_ivaPlaneado");
            entity.Property(e => e.DocItemDocumentoPorcdescuento).HasColumnName("doc_itemDocumento_porcdescuento");
            entity.Property(e => e.DocItemDocumentoPorcdto).HasColumnName("doc_itemDocumento_porcdto");
            entity.Property(e => e.DocItemDocumentoPorcentajeCliente).HasColumnName("doc_itemDocumento_porcentajeCliente");
            entity.Property(e => e.DocItemDocumentoPorcentajeDistribuidor).HasColumnName("doc_itemDocumento_porcentajeDistribuidor");
            entity.Property(e => e.DocItemDocumentoPorcentajeFabricante).HasColumnName("doc_itemDocumento_porcentajeFabricante");
            entity.Property(e => e.DocItemDocumentoPorciva).HasColumnName("doc_itemDocumento_porciva");
            entity.Property(e => e.DocItemDocumentoSubtotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_subtotalEjecutado");
            entity.Property(e => e.DocItemDocumentoSubtotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_subtotalPlaneado");
            entity.Property(e => e.DocItemDocumentoTotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_totalEjecutado");
            entity.Property(e => e.DocItemDocumentoTotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_totalPlaneado");
            entity.Property(e => e.DocItemDocumentoValorUnitarioEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_valorUnitarioEjecutado");
            entity.Property(e => e.DocItemDocumentoValorUnitarioPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_valorUnitarioPlaneado");
            entity.Property(e => e.DocItemDocumentoVencimientoGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_itemDocumento_vencimientoGarantia_ff");
            entity.Property(e => e.DocItemDocumentoVrbase).HasColumnName("doc_itemDocumento_vrbase");
            entity.Property(e => e.DocItemDocumentoVrenlista).HasColumnName("doc_itemDocumento_vrenlista");
            entity.Property(e => e.DocPendienteDocumentoCantidad).HasColumnName("doc_pendienteDocumento_cantidad");
            entity.Property(e => e.DocPendienteDocumentoIdCatalogo).HasColumnName("doc_pendienteDocumento_id_catalogo");
            entity.Property(e => e.DocPendienteDocumentoIdDocumento).HasColumnName("doc_pendienteDocumento_id_documento");
            entity.Property(e => e.DocPendienteDocumentoIdReporteTecnico).HasColumnName("doc_pendienteDocumento_id_reporteTecnico");
            entity.Property(e => e.DocPendienteDocumentoIdTipoDocumento).HasColumnName("doc_pendienteDocumento_id_tipoDocumento");
            entity.Property(e => e.DocPendienteDocumentoOlvidar).HasColumnName("doc_pendienteDocumento_olvidar");
            entity.Property(e => e.DocPendienteDocumentoPendienteDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_pendienteDocumento_pendienteDocumento");
            entity.Property(e => e.DocPendienteDocumentoPendienteDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_pendienteDocumento_pendienteDocumento_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdItemDocumento).HasColumnName("id_itemDocumento");
            entity.Property(e => e.IdPendienteDocumento).HasColumnName("id_pendienteDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PendienteDocumentoDocItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pendienteDocumento_doc_itemDocumento");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocPreguntum>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_pregunta");

            entity.Property(e => e.Activa).HasColumnName("activa");
            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocEvaluacionActiva).HasColumnName("doc_evaluacion_activa");
            entity.Property(e => e.DocEvaluacionEvaluacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_evaluacion_evaluacion");
            entity.Property(e => e.DocEvaluacionEvaluacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_evaluacion_evaluacion_codigo");
            entity.Property(e => e.DocEvaluacionIdSubtipoDocumento).HasColumnName("doc_evaluacion_id_subtipoDocumento");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEvaluacion).HasColumnName("id_evaluacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.Pregunta)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pregunta");
            entity.Property(e => e.PreguntaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pregunta_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor).HasColumnName("valor");
        });

        modelBuilder.Entity<ViewDocPrioridadDocumento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_prioridadDocumento");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocEstrategiaPrioridadDomingoFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_domingoFin_hh");
            entity.Property(e => e.DocEstrategiaPrioridadDomingoIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_domingoIni_hh");
            entity.Property(e => e.DocEstrategiaPrioridadEstrategiaPrioridad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_estrategiaPrioridad_estrategiaPrioridad");
            entity.Property(e => e.DocEstrategiaPrioridadEstrategiaPrioridadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_estrategiaPrioridad_estrategiaPrioridad_codigo");
            entity.Property(e => e.DocEstrategiaPrioridadFestivoFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_festivoFin_hh");
            entity.Property(e => e.DocEstrategiaPrioridadFestivoIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_festivoIni_hh");
            entity.Property(e => e.DocEstrategiaPrioridadJuevesFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_juevesFin_hh");
            entity.Property(e => e.DocEstrategiaPrioridadJuevesIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_juevesIni_hh");
            entity.Property(e => e.DocEstrategiaPrioridadLunesFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_lunesFin_hh");
            entity.Property(e => e.DocEstrategiaPrioridadLunesIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_lunesIni_hh");
            entity.Property(e => e.DocEstrategiaPrioridadMartesFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_martesFin_hh");
            entity.Property(e => e.DocEstrategiaPrioridadMartesIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_martesIni_hh");
            entity.Property(e => e.DocEstrategiaPrioridadMiercolesFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_miercolesFin_hh");
            entity.Property(e => e.DocEstrategiaPrioridadMiercolesIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_miercolesIni_hh");
            entity.Property(e => e.DocEstrategiaPrioridadSabadoFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_sabadoFin_hh");
            entity.Property(e => e.DocEstrategiaPrioridadSabadoIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_sabadoIni_hh");
            entity.Property(e => e.DocEstrategiaPrioridadViernesFinHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_viernesFin_hh");
            entity.Property(e => e.DocEstrategiaPrioridadViernesIniHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_estrategiaPrioridad_viernesIni_hh");
            entity.Property(e => e.DocTipoDocumentoEsSalida).HasColumnName("doc_tipoDocumento_esSalida");
            entity.Property(e => e.DocTipoDocumentoMostrarBodega).HasColumnName("doc_tipoDocumento_mostrarBodega");
            entity.Property(e => e.DocTipoDocumentoMostrarCentroCosto).HasColumnName("doc_tipoDocumento_mostrarCentroCosto");
            entity.Property(e => e.DocTipoDocumentoMostrarIncoterm).HasColumnName("doc_tipoDocumento_mostrarIncoterm");
            entity.Property(e => e.DocTipoDocumentoPuedeSerMayor).HasColumnName("doc_tipoDocumento_puedeSerMayor");
            entity.Property(e => e.DocTipoDocumentoPuedeSerMenor).HasColumnName("doc_tipoDocumento_puedeSerMenor");
            entity.Property(e => e.DocTipoDocumentoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_tipoDocumento_tipoDocumento");
            entity.Property(e => e.DocTipoDocumentoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_tipoDocumento_tipoDocumento_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEstrategiaPrioridad).HasColumnName("id_estrategiaPrioridad");
            entity.Property(e => e.IdTipoDocumento).HasColumnName("id_tipoDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.PrioridadDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("prioridadDocumento");
            entity.Property(e => e.PrioridadDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("prioridadDocumento_codigo");
            entity.Property(e => e.TiempoRespuesta).HasColumnName("tiempoRespuesta");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocPrioridadSubtipoDocumento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_prioridadSubtipoDocumento");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocPrioridadDocumentoIdEstrategiaPrioridad).HasColumnName("doc_prioridadDocumento_id_estrategiaPrioridad");
            entity.Property(e => e.DocPrioridadDocumentoIdTipoDocumento).HasColumnName("doc_prioridadDocumento_id_tipoDocumento");
            entity.Property(e => e.DocPrioridadDocumentoOrden).HasColumnName("doc_prioridadDocumento_orden");
            entity.Property(e => e.DocPrioridadDocumentoPrioridadDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_prioridadDocumento_prioridadDocumento");
            entity.Property(e => e.DocPrioridadDocumentoPrioridadDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_prioridadDocumento_prioridadDocumento_codigo");
            entity.Property(e => e.DocPrioridadDocumentoTiempoRespuesta).HasColumnName("doc_prioridadDocumento_tiempoRespuesta");
            entity.Property(e => e.DocSubtipoDocumentoBloquearDespacho).HasColumnName("doc_subtipoDocumento_bloquearDespacho");
            entity.Property(e => e.DocSubtipoDocumentoCantidadAuxiliar).HasColumnName("doc_subtipoDocumento_cantidadAuxiliar");
            entity.Property(e => e.DocSubtipoDocumentoCargarSolicitante).HasColumnName("doc_subtipoDocumento_cargarSolicitante");
            entity.Property(e => e.DocSubtipoDocumentoCerrarSol).HasColumnName("doc_subtipoDocumento_cerrarSol");
            entity.Property(e => e.DocSubtipoDocumentoConsecutivo).HasColumnName("doc_subtipoDocumento_consecutivo");
            entity.Property(e => e.DocSubtipoDocumentoEjecutaDevolucion).HasColumnName("doc_subtipoDocumento_ejecutaDevolucion");
            entity.Property(e => e.DocSubtipoDocumentoIdTipoDocumento).HasColumnName("doc_subtipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoMostrarPendienteDocumento).HasColumnName("doc_subtipoDocumento_mostrarPendienteDocumento");
            entity.Property(e => e.DocSubtipoDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_prefijo");
            entity.Property(e => e.DocSubtipoDocumentoProgramarPlaneadas).HasColumnName("doc_subtipoDocumento_programarPlaneadas");
            entity.Property(e => e.DocSubtipoDocumentoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_subtipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_subtipoDocumento_codigo");
            entity.Property(e => e.DocSubtipoDocumentoTipoCobro).HasColumnName("doc_subtipoDocumento_tipoCobro");
            entity.Property(e => e.DocSubtipoDocumentoValUrgente).HasColumnName("doc_subtipoDocumento_valUrgente");
            entity.Property(e => e.DocSubtipoDocumentoVerCentroCosto).HasColumnName("doc_subtipoDocumento_verCentroCosto");
            entity.Property(e => e.DocSubtipoDocumentoVerIncoterm).HasColumnName("doc_subtipoDocumento_verIncoterm");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdPrioridadDocumento).HasColumnName("id_prioridadDocumento");
            entity.Property(e => e.IdSubtipoDocumento).HasColumnName("id_subtipoDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PrioridadSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("prioridadSubtipoDocumento");
            entity.Property(e => e.PrioridadSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("prioridadSubtipoDocumento_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocPruebaSop>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_prueba_sop");

            entity.Property(e => e.Cuerpo)
                .HasMaxLength(47)
                .IsUnicode(false)
                .HasColumnName("CUERPO");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
        });

        modelBuilder.Entity<ViewDocSoporteItemDocumento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_soporteItemDocumento");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Costo).HasColumnType("money");
            entity.Property(e => e.DocItemDocumentoAfectoInventario).HasColumnName("doc_itemDocumento_afectoInventario");
            entity.Property(e => e.DocItemDocumentoCantidadEjecutado).HasColumnName("doc_itemDocumento_cantidadEjecutado");
            entity.Property(e => e.DocItemDocumentoCantidadPlaneado).HasColumnName("doc_itemDocumento_cantidadPlaneado");
            entity.Property(e => e.DocItemDocumentoCostear).HasColumnName("doc_itemDocumento_costear");
            entity.Property(e => e.DocItemDocumentoCostoEjecutado).HasColumnName("doc_itemDocumento_costoEjecutado");
            entity.Property(e => e.DocItemDocumentoCostoPlaneado).HasColumnName("doc_itemDocumento_costoPlaneado");
            entity.Property(e => e.DocItemDocumentoDetalle)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_detalle");
            entity.Property(e => e.DocItemDocumentoDtoEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_dtoEjecutado");
            entity.Property(e => e.DocItemDocumentoDtoPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_dtoPlaneado");
            entity.Property(e => e.DocItemDocumentoEsUrgente).HasColumnName("doc_itemDocumento_esUrgente");
            entity.Property(e => e.DocItemDocumentoHorasFestivas).HasColumnName("doc_itemDocumento_horasFestivas");
            entity.Property(e => e.DocItemDocumentoHorasGarantia).HasColumnName("doc_itemDocumento_horasGarantia");
            entity.Property(e => e.DocItemDocumentoHorasNocturnas).HasColumnName("doc_itemDocumento_horasNocturnas");
            entity.Property(e => e.DocItemDocumentoHorasOrdinales).HasColumnName("doc_itemDocumento_horasOrdinales");
            entity.Property(e => e.DocItemDocumentoIdBodega).HasColumnName("doc_itemDocumento_id_bodega");
            entity.Property(e => e.DocItemDocumentoIdCatalogo).HasColumnName("doc_itemDocumento_id_catalogo");
            entity.Property(e => e.DocItemDocumentoIdCentroCosto).HasColumnName("doc_itemDocumento_id_centroCosto");
            entity.Property(e => e.DocItemDocumentoIdDocumento).HasColumnName("doc_itemDocumento_id_documento");
            entity.Property(e => e.DocItemDocumentoIdIncoterm).HasColumnName("doc_itemDocumento_id_incoterm");
            entity.Property(e => e.DocItemDocumentoIdItemDocumento).HasColumnName("doc_itemDocumento_id_itemDocumento");
            entity.Property(e => e.DocItemDocumentoIdItemDocumentoSuperior).HasColumnName("doc_itemDocumento_id_itemDocumento_superior");
            entity.Property(e => e.DocItemDocumentoIdListaprecio).HasColumnName("doc_itemDocumento_id_listaprecio");
            entity.Property(e => e.DocItemDocumentoItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_itemDocumento");
            entity.Property(e => e.DocItemDocumentoItemDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_itemDocumento_codigo");
            entity.Property(e => e.DocItemDocumentoIvaEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_ivaEjecutado");
            entity.Property(e => e.DocItemDocumentoIvaPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_ivaPlaneado");
            entity.Property(e => e.DocItemDocumentoPorcdto).HasColumnName("doc_itemDocumento_porcdto");
            entity.Property(e => e.DocItemDocumentoPorcentajeCliente).HasColumnName("doc_itemDocumento_porcentajeCliente");
            entity.Property(e => e.DocItemDocumentoPorcentajeDistribuidor).HasColumnName("doc_itemDocumento_porcentajeDistribuidor");
            entity.Property(e => e.DocItemDocumentoPorcentajeFabricante).HasColumnName("doc_itemDocumento_porcentajeFabricante");
            entity.Property(e => e.DocItemDocumentoPorciva).HasColumnName("doc_itemDocumento_porciva");
            entity.Property(e => e.DocItemDocumentoSubtotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_subtotalEjecutado");
            entity.Property(e => e.DocItemDocumentoSubtotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_subtotalPlaneado");
            entity.Property(e => e.DocItemDocumentoTotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_totalEjecutado");
            entity.Property(e => e.DocItemDocumentoTotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_totalPlaneado");
            entity.Property(e => e.DocItemDocumentoValorUnitarioEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_valorUnitarioEjecutado");
            entity.Property(e => e.DocItemDocumentoValorUnitarioPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_valorUnitarioPlaneado");
            entity.Property(e => e.DocItemDocumentoVencimientoGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_itemDocumento_vencimientoGarantia_ff");
            entity.Property(e => e.DuracionEjecutada).HasColumnName("duracionEjecutada");
            entity.Property(e => e.DuracionPlaneada).HasColumnName("duracionPlaneada");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.HorasFestivas).HasColumnName("horasFestivas");
            entity.Property(e => e.HorasNocturnas).HasColumnName("horasNocturnas");
            entity.Property(e => e.HorasOrdinales).HasColumnName("horasOrdinales");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdItemDocumento).HasColumnName("id_itemDocumento");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Periodo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("periodo");
            entity.Property(e => e.SegUsuarioAccesoActivo).HasColumnName("seg_usuario_accesoActivo");
            entity.Property(e => e.SegUsuarioAplicaRecargo).HasColumnName("seg_usuario_aplicaRecargo");
            entity.Property(e => e.SegUsuarioCambiarClave).HasColumnName("seg_usuario_cambiarClave");
            entity.Property(e => e.SegUsuarioClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_clave");
            entity.Property(e => e.SegUsuarioCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_costoHora");
            entity.Property(e => e.SegUsuarioDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_direccion");
            entity.Property(e => e.SegUsuarioEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_email");
            entity.Property(e => e.SegUsuarioFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioHabilitado).HasColumnName("seg_usuario_habilitado");
            entity.Property(e => e.SegUsuarioIdCargo).HasColumnName("seg_usuario_id_cargo");
            entity.Property(e => e.SegUsuarioIdGrupo).HasColumnName("seg_usuario_id_grupo");
            entity.Property(e => e.SegUsuarioIdPerfil).HasColumnName("seg_usuario_id_perfil");
            entity.Property(e => e.SegUsuarioIdUsuario).HasColumnName("seg_usuario_id_usuario");
            entity.Property(e => e.SegUsuarioIdZona).HasColumnName("seg_usuario_id_zona");
            entity.Property(e => e.SegUsuarioIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_identificacion");
            entity.Property(e => e.SegUsuarioIntentosFallidos).HasColumnName("seg_usuario_intentosFallidos");
            entity.Property(e => e.SegUsuarioNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_nombre");
            entity.Property(e => e.SegUsuarioNumeroIngresos).HasColumnName("seg_usuario_numeroIngresos");
            entity.Property(e => e.SegUsuarioPorcentajeComision).HasColumnName("seg_usuario_porcentajeComision");
            entity.Property(e => e.SegUsuarioPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_preferencias");
            entity.Property(e => e.SegUsuarioProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_profesion");
            entity.Property(e => e.SegUsuarioSexo).HasColumnName("seg_usuario_sexo");
            entity.Property(e => e.SegUsuarioTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_telefono");
            entity.Property(e => e.SegUsuarioUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario");
            entity.Property(e => e.SegUsuarioUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario_codigo");
            entity.Property(e => e.SoporteItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("soporteItemDocumento");
            entity.Property(e => e.SoporteItemDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("soporteItemDocumento_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor).HasColumnType("money");
        });

        modelBuilder.Entity<ViewDocSubtipoDocumento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_subtipoDocumento");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.ArchivosAdjuntosApp).HasColumnName("archivosAdjuntosApp");
            entity.Property(e => e.BloquearDespacho).HasColumnName("bloquearDespacho");
            entity.Property(e => e.CantidadAuxiliar).HasColumnName("cantidadAuxiliar");
            entity.Property(e => e.CargarSolicitante).HasColumnName("cargarSolicitante");
            entity.Property(e => e.CerrarSol).HasColumnName("cerrarSol");
            entity.Property(e => e.Consecutivo).HasColumnName("consecutivo");
            entity.Property(e => e.DocTipoDocumentoEsSalida).HasColumnName("doc_tipoDocumento_esSalida");
            entity.Property(e => e.DocTipoDocumentoEsUrgente).HasColumnName("doc_tipoDocumento_esUrgente");
            entity.Property(e => e.DocTipoDocumentoMostrarBodega).HasColumnName("doc_tipoDocumento_mostrarBodega");
            entity.Property(e => e.DocTipoDocumentoMostrarCentroCosto).HasColumnName("doc_tipoDocumento_mostrarCentroCosto");
            entity.Property(e => e.DocTipoDocumentoMostrarIncoterm).HasColumnName("doc_tipoDocumento_mostrarIncoterm");
            entity.Property(e => e.DocTipoDocumentoPuedeSerMayor).HasColumnName("doc_tipoDocumento_puedeSerMayor");
            entity.Property(e => e.DocTipoDocumentoPuedeSerMenor).HasColumnName("doc_tipoDocumento_puedeSerMenor");
            entity.Property(e => e.DocTipoDocumentoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_tipoDocumento_tipoDocumento");
            entity.Property(e => e.DocTipoDocumentoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_tipoDocumento_tipoDocumento_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EjecutaDevolucion).HasColumnName("ejecutaDevolucion");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdTipoDocumento).HasColumnName("id_tipoDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MostrarPendienteDocumento).HasColumnName("mostrarPendienteDocumento");
            entity.Property(e => e.MostrarValoresEjecutados).HasColumnName("mostrarValoresEjecutados");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Prefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("prefijo");
            entity.Property(e => e.ProgramarPlaneadas).HasColumnName("programarPlaneadas");
            entity.Property(e => e.SubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("subtipoDocumento");
            entity.Property(e => e.SubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("subtipoDocumento_codigo");
            entity.Property(e => e.TipoCobro).HasColumnName("tipoCobro");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValUrgente).HasColumnName("valUrgente");
            entity.Property(e => e.VerCentroCosto).HasColumnName("verCentroCosto");
            entity.Property(e => e.VerIncoterm).HasColumnName("verIncoterm");
        });

        modelBuilder.Entity<ViewDocSubtipoLectura>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_subtipoLectura");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocSubtipoDocumentoBloquearDespacho).HasColumnName("doc_subtipoDocumento_bloquearDespacho");
            entity.Property(e => e.DocSubtipoDocumentoCargarSolicitante).HasColumnName("doc_subtipoDocumento_cargarSolicitante");
            entity.Property(e => e.DocSubtipoDocumentoCerrarSol).HasColumnName("doc_subtipoDocumento_cerrarSol");
            entity.Property(e => e.DocSubtipoDocumentoConsecutivo).HasColumnName("doc_subtipoDocumento_consecutivo");
            entity.Property(e => e.DocSubtipoDocumentoEjecutaDevolucion).HasColumnName("doc_subtipoDocumento_ejecutaDevolucion");
            entity.Property(e => e.DocSubtipoDocumentoIdTipoDocumento).HasColumnName("doc_subtipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoOrigenBloquearDespacho).HasColumnName("doc_subtipoDocumento_origen_bloquearDespacho");
            entity.Property(e => e.DocSubtipoDocumentoOrigenCargarSolicitante).HasColumnName("doc_subtipoDocumento_origen_cargarSolicitante");
            entity.Property(e => e.DocSubtipoDocumentoOrigenCerrarSol).HasColumnName("doc_subtipoDocumento_origen_cerrarSol");
            entity.Property(e => e.DocSubtipoDocumentoOrigenConsecutivo).HasColumnName("doc_subtipoDocumento_origen_consecutivo");
            entity.Property(e => e.DocSubtipoDocumentoOrigenEjecutaDevolucion).HasColumnName("doc_subtipoDocumento_origen_ejecutaDevolucion");
            entity.Property(e => e.DocSubtipoDocumentoOrigenIdTipoDocumento).HasColumnName("doc_subtipoDocumento_origen_id_tipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoOrigenPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_origen_prefijo");
            entity.Property(e => e.DocSubtipoDocumentoOrigenProgramarPlaneadas).HasColumnName("doc_subtipoDocumento_origen_programarPlaneadas");
            entity.Property(e => e.DocSubtipoDocumentoOrigenSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_origen_subtipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoOrigenSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_origen_subtipoDocumento_codigo");
            entity.Property(e => e.DocSubtipoDocumentoOrigenValUrgente).HasColumnName("doc_subtipoDocumento_origen_valUrgente");
            entity.Property(e => e.DocSubtipoDocumentoOrigenVerCentroCosto).HasColumnName("doc_subtipoDocumento_origen_verCentroCosto");
            entity.Property(e => e.DocSubtipoDocumentoOrigenVerIncoterm).HasColumnName("doc_subtipoDocumento_origen_verIncoterm");
            entity.Property(e => e.DocSubtipoDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_prefijo");
            entity.Property(e => e.DocSubtipoDocumentoProgramarPlaneadas).HasColumnName("doc_subtipoDocumento_programarPlaneadas");
            entity.Property(e => e.DocSubtipoDocumentoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_subtipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_subtipoDocumento_codigo");
            entity.Property(e => e.DocSubtipoDocumentoValUrgente).HasColumnName("doc_subtipoDocumento_valUrgente");
            entity.Property(e => e.DocSubtipoDocumentoVerCentroCosto).HasColumnName("doc_subtipoDocumento_verCentroCosto");
            entity.Property(e => e.DocSubtipoDocumentoVerIncoterm).HasColumnName("doc_subtipoDocumento_verIncoterm");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdSubtipoDocumento).HasColumnName("id_subtipoDocumento");
            entity.Property(e => e.IdSubtipoDocumentoOrigen).HasColumnName("id_subtipoDocumento_origen");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.SubtipoLectura)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("subtipoLectura");
            entity.Property(e => e.SubtipoLecturaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("subtipoLectura_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocTarea>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_tarea");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoBloquearCostear).HasColumnName("cat_catalogo_bloquearCostear");
            entity.Property(e => e.CatCatalogoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo");
            entity.Property(e => e.CatCatalogoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_codigoInventario");
            entity.Property(e => e.CatCatalogoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_descripcion");
            entity.Property(e => e.CatCatalogoEsNacional).HasColumnName("cat_catalogo_esNacional");
            entity.Property(e => e.CatCatalogoIdFamilia).HasColumnName("cat_catalogo_id_familia");
            entity.Property(e => e.CatCatalogoIdImpuesto).HasColumnName("cat_catalogo_id_impuesto");
            entity.Property(e => e.CatCatalogoIdSubTipoCatalogo).HasColumnName("cat_catalogo_id_subTipoCatalogo");
            entity.Property(e => e.CatCatalogoIdUnidad).HasColumnName("cat_catalogo_id_unidad");
            entity.Property(e => e.CatCatalogoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_precioVenta");
            entity.Property(e => e.CatCatalogoTiempoConsecucion).HasColumnName("cat_catalogo_tiempoConsecucion");
            entity.Property(e => e.DocDocumentoCosto).HasColumnName("doc_documento_costo");
            entity.Property(e => e.DocDocumentoCostoPlaneado).HasColumnName("doc_documento_costoPlaneado");
            entity.Property(e => e.DocDocumentoDescuento).HasColumnName("doc_documento_descuento");
            entity.Property(e => e.DocDocumentoDescuentoPlaneado).HasColumnName("doc_documento_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento");
            entity.Property(e => e.DocDocumentoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento_codigo");
            entity.Property(e => e.DocDocumentoDocumentoNumero).HasColumnName("doc_documento_documento_numero");
            entity.Property(e => e.DocDocumentoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fecha_fh");
            entity.Property(e => e.DocDocumentoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoIdDocumento).HasColumnName("doc_documento_id_documento");
            entity.Property(e => e.DocDocumentoIdEstadoTipoDocumento).HasColumnName("doc_documento_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoIdMoneda).HasColumnName("doc_documento_id_moneda");
            entity.Property(e => e.DocDocumentoIdMotivoestado).HasColumnName("doc_documento_id_motivoestado");
            entity.Property(e => e.DocDocumentoIdPrioridadDocumento).HasColumnName("doc_documento_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoIdSubtipoDocumento).HasColumnName("doc_documento_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoIdTerceroCliente).HasColumnName("doc_documento_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoIdTerceroProveedor).HasColumnName("doc_documento_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoIva).HasColumnName("doc_documento_iva");
            entity.Property(e => e.DocDocumentoIvaPlaneado).HasColumnName("doc_documento_ivaPlaneado");
            entity.Property(e => e.DocDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_prefijo");
            entity.Property(e => e.DocDocumentoRentabilidad).HasColumnName("doc_documento_rentabilidad");
            entity.Property(e => e.DocDocumentoSubtotal).HasColumnName("doc_documento_subtotal");
            entity.Property(e => e.DocDocumentoSubtotalPlaneado).HasColumnName("doc_documento_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoTotal).HasColumnName("doc_documento_total");
            entity.Property(e => e.DocDocumentoTotalPlaneado).HasColumnName("doc_documento_totalPlaneado");
            entity.Property(e => e.DocDocumentoTrm).HasColumnName("doc_documento_trm");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaPlaneadaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaPlaneada_fh");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCargo).HasColumnName("id_cargo");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PorcentajeAvance).HasColumnName("porcentajeAvance");
            entity.Property(e => e.SegCargoCargo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_cargo_cargo");
            entity.Property(e => e.SegCargoCargoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_cargo_cargo_codigo");
            entity.Property(e => e.SegCargoEsAdministrativo).HasColumnName("seg_cargo_esAdministrativo");
            entity.Property(e => e.SegCargoEsComercial).HasColumnName("seg_cargo_esComercial");
            entity.Property(e => e.SegCargoEsCoordinador).HasColumnName("seg_cargo_esCoordinador");
            entity.Property(e => e.SegCargoEsTecnico).HasColumnName("seg_cargo_esTecnico");
            entity.Property(e => e.SegCargoValorHora)
                .HasColumnType("money")
                .HasColumnName("seg_cargo_valorHora");
            entity.Property(e => e.Tarea)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tarea");
            entity.Property(e => e.TareaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tarea_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocTipoDocumento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_tipoDocumento");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsSalida).HasColumnName("esSalida");
            entity.Property(e => e.EsUrgente).HasColumnName("esUrgente");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MostrarBodega).HasColumnName("mostrarBodega");
            entity.Property(e => e.MostrarCentroCosto).HasColumnName("mostrarCentroCosto");
            entity.Property(e => e.MostrarIncoterm).HasColumnName("mostrarIncoterm");
            entity.Property(e => e.MostrarPendientedocumento).HasColumnName("mostrarPendientedocumento");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PuedeSerMayor).HasColumnName("puedeSerMayor");
            entity.Property(e => e.PuedeSerMenor).HasColumnName("puedeSerMenor");
            entity.Property(e => e.TipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoDocumento");
            entity.Property(e => e.TipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoDocumento_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewDocTipoPendiente>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_doc_tipoPendiente");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TipoPendiente)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoPendiente");
            entity.Property(e => e.TipoPendienteCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoPendiente_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewEquAlquiler>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_alquiler");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Alquiler)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("alquiler");
            entity.Property(e => e.AlquilerCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("alquiler_codigo");
            entity.Property(e => e.AlquilerNumero).HasColumnName("alquiler_numero");
            entity.Property(e => e.DocDocumentoCosto).HasColumnName("doc_documento_costo");
            entity.Property(e => e.DocDocumentoCostoPlaneado).HasColumnName("doc_documento_costoPlaneado");
            entity.Property(e => e.DocDocumentoDescuento).HasColumnName("doc_documento_descuento");
            entity.Property(e => e.DocDocumentoDescuentoPlaneado).HasColumnName("doc_documento_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento");
            entity.Property(e => e.DocDocumentoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento_codigo");
            entity.Property(e => e.DocDocumentoDocumentoNumero).HasColumnName("doc_documento_documento_numero");
            entity.Property(e => e.DocDocumentoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fecha_fh");
            entity.Property(e => e.DocDocumentoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoIdDocumento).HasColumnName("doc_documento_id_documento");
            entity.Property(e => e.DocDocumentoIdEstadoTipoDocumento).HasColumnName("doc_documento_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoIdMoneda).HasColumnName("doc_documento_id_moneda");
            entity.Property(e => e.DocDocumentoIdMotivoestado).HasColumnName("doc_documento_id_motivoestado");
            entity.Property(e => e.DocDocumentoIdPrioridadDocumento).HasColumnName("doc_documento_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoIdSubtipoDocumento).HasColumnName("doc_documento_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoIdTerceroCliente).HasColumnName("doc_documento_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoIdTerceroProveedor).HasColumnName("doc_documento_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoIva).HasColumnName("doc_documento_iva");
            entity.Property(e => e.DocDocumentoIvaPlaneado).HasColumnName("doc_documento_ivaPlaneado");
            entity.Property(e => e.DocDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_prefijo");
            entity.Property(e => e.DocDocumentoRentabilidad).HasColumnName("doc_documento_rentabilidad");
            entity.Property(e => e.DocDocumentoSubtotal).HasColumnName("doc_documento_subtotal");
            entity.Property(e => e.DocDocumentoSubtotalPlaneado).HasColumnName("doc_documento_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoTotal).HasColumnName("doc_documento_total");
            entity.Property(e => e.DocDocumentoTotalPlaneado).HasColumnName("doc_documento_totalPlaneado");
            entity.Property(e => e.DocDocumentoTrm).HasColumnName("doc_documento_trm");
            entity.Property(e => e.DocSubtipoDocumentoConsecutivo).HasColumnName("doc_subtipoDocumento_consecutivo");
            entity.Property(e => e.DocSubtipoDocumentoIdTipoDocumento).HasColumnName("doc_subtipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_prefijo");
            entity.Property(e => e.DocSubtipoDocumentoProgramarPlaneadas).HasColumnName("doc_subtipoDocumento_programarPlaneadas");
            entity.Property(e => e.DocSubtipoDocumentoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_subtipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_subtipoDocumento_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCompromisoFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCompromiso_ff");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFin_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdSubtipoDocumento).HasColumnName("id_subtipoDocumento");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MesVencido).HasColumnName("mesVencido");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("observaciones");
            entity.Property(e => e.TerSucursalCodigorecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_codigorecursiva");
            entity.Property(e => e.TerSucursalContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_contacto");
            entity.Property(e => e.TerSucursalDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Direccion");
            entity.Property(e => e.TerSucursalEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Email");
            entity.Property(e => e.TerSucursalFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Fax");
            entity.Property(e => e.TerSucursalIdEstadoTercero).HasColumnName("ter_sucursal_id_estadoTercero");
            entity.Property(e => e.TerSucursalIdSucursal).HasColumnName("ter_sucursal_id_sucursal");
            entity.Property(e => e.TerSucursalIdTercero).HasColumnName("ter_sucursal_id_tercero");
            entity.Property(e => e.TerSucursalIdUsuarioAsesor).HasColumnName("ter_sucursal_id_usuario_asesor");
            entity.Property(e => e.TerSucursalIdUsuarioTecnico).HasColumnName("ter_sucursal_id_usuario_tecnico");
            entity.Property(e => e.TerSucursalIdZona).HasColumnName("ter_sucursal_id_zona");
            entity.Property(e => e.TerSucursalParaAlquiler).HasColumnName("ter_sucursal_paraAlquiler");
            entity.Property(e => e.TerSucursalParaSoporte).HasColumnName("ter_sucursal_paraSoporte");
            entity.Property(e => e.TerSucursalParaVenta).HasColumnName("ter_sucursal_paraVenta");
            entity.Property(e => e.TerSucursalSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal");
            entity.Property(e => e.TerSucursalSucursalCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal_codigo");
            entity.Property(e => e.TerSucursalTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_telefono");
            entity.Property(e => e.TerTerceroClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_clasificacion");
            entity.Property(e => e.TerTerceroContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_contacto");
            entity.Property(e => e.TerTerceroDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_direccion");
            entity.Property(e => e.TerTerceroEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_email");
            entity.Property(e => e.TerTerceroEsCliente).HasColumnName("ter_tercero_esCliente");
            entity.Property(e => e.TerTerceroEsEmpresaPropia).HasColumnName("ter_tercero_esEmpresaPropia");
            entity.Property(e => e.TerTerceroEsFabricante).HasColumnName("ter_tercero_esFabricante");
            entity.Property(e => e.TerTerceroEsProspecto).HasColumnName("ter_tercero_esProspecto");
            entity.Property(e => e.TerTerceroEsProveedor).HasColumnName("ter_tercero_esProveedor");
            entity.Property(e => e.TerTerceroEsTransportador).HasColumnName("ter_tercero_esTransportador");
            entity.Property(e => e.TerTerceroFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fax");
            entity.Property(e => e.TerTerceroIdEstadoTercero).HasColumnName("ter_tercero_id_estadoTercero");
            entity.Property(e => e.TerTerceroIdNaturalezaTercero).HasColumnName("ter_tercero_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroIdZona).HasColumnName("ter_tercero_id_zona");
            entity.Property(e => e.TerTerceroNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_notas");
            entity.Property(e => e.TerTerceroRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_representante");
            entity.Property(e => e.TerTerceroTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_telefono");
            entity.Property(e => e.TerTerceroTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero");
            entity.Property(e => e.TerTerceroTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_codigo");
            entity.Property(e => e.TerTerceroTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nit");
            entity.Property(e => e.TerTerceroTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_website");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewEquAnalisisFalla>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_analisisFalla");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.AnalisisFalla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("analisisFalla");
            entity.Property(e => e.AnalisisFallaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("analisisFalla_codigo");
            entity.Property(e => e.CatCatalogoEquipoBloquearCostear).HasColumnName("cat_catalogo_equipo_bloquearCostear");
            entity.Property(e => e.CatCatalogoEquipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoEquipoCatalogoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.equipo_catalogo.equipo");
            entity.Property(e => e.CatCatalogoEquipoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_codigoInventario");
            entity.Property(e => e.CatCatalogoEquipoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_descripcion");
            entity.Property(e => e.CatCatalogoEquipoEsNacional).HasColumnName("cat_catalogo_equipo_esNacional");
            entity.Property(e => e.CatCatalogoEquipoGarantiaHoras).HasColumnName("cat_catalogo.equipo_garantiaHoras");
            entity.Property(e => e.CatCatalogoEquipoGarantiaMeses).HasColumnName("cat_catalogo.equipo_garantiaMeses");
            entity.Property(e => e.CatCatalogoEquipoIdFamilia).HasColumnName("cat_catalogo_equipo_id_familia");
            entity.Property(e => e.CatCatalogoEquipoIdImpuesto).HasColumnName("cat_catalogo_equipo_id_impuesto");
            entity.Property(e => e.CatCatalogoEquipoIdMarca).HasColumnName("cat_catalogo.equipo_id_marca");
            entity.Property(e => e.CatCatalogoEquipoIdSubtipoCatalogo).HasColumnName("cat_catalogo_equipo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoEquipoIdUnidad).HasColumnName("cat_catalogo_equipo_id_unidad");
            entity.Property(e => e.CatCatalogoEquipoManejaHorometro).HasColumnName("cat_catalogo.equipo_manejaHorometro");
            entity.Property(e => e.CatCatalogoEquipoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_equipo_precioVenta");
            entity.Property(e => e.CatCatalogoEquipoTiempoConsecucion).HasColumnName("cat_catalogo_equipo_tiempoConsecucion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquFallaCausaFalla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_falla_causa_falla");
            entity.Property(e => e.EquFallaCausaFallaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_falla_causa_falla_codigo");
            entity.Property(e => e.EquFallaCausaIdFalla).HasColumnName("equ_falla_causa_id_falla");
            entity.Property(e => e.EquFallaCausaIdTipoFalla).HasColumnName("equ_falla_causa_id_tipoFalla");
            entity.Property(e => e.EquFallaCausaProcedimiento)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("equ_falla_causa_procedimiento");
            entity.Property(e => e.EquFallaEfectoFalla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_falla_efecto_falla");
            entity.Property(e => e.EquFallaEfectoFallaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_falla_efecto_falla_codigo");
            entity.Property(e => e.EquFallaEfectoIdFalla).HasColumnName("equ_falla_efecto_id_falla");
            entity.Property(e => e.EquFallaEfectoIdTipoFalla).HasColumnName("equ_falla_efecto_id_tipoFalla");
            entity.Property(e => e.EquFallaEfectoProcedimiento)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("equ_falla_efecto_procedimiento");
            entity.Property(e => e.EquFallaFalla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_falla_falla");
            entity.Property(e => e.EquFallaFallaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_falla_falla_codigo");
            entity.Property(e => e.EquFallaIdFalla).HasColumnName("equ_falla_id_falla");
            entity.Property(e => e.EquFallaIdTipoFalla).HasColumnName("equ_falla_id_tipoFalla");
            entity.Property(e => e.EquFallaProcedimiento)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("equ_falla_procedimiento");
            entity.Property(e => e.EquFallaSolucionFalla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_falla_solucion_falla");
            entity.Property(e => e.EquFallaSolucionFallaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_falla_solucion_falla_codigo");
            entity.Property(e => e.EquFallaSolucionIdFalla).HasColumnName("equ_falla_solucion_id_falla");
            entity.Property(e => e.EquFallaSolucionIdTipoFalla).HasColumnName("equ_falla_solucion_id_tipoFalla");
            entity.Property(e => e.EquFallaSolucionProcedimiento)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("equ_falla_solucion_procedimiento");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogoEquipo).HasColumnName("id_catalogo.equipo");
            entity.Property(e => e.IdFalla).HasColumnName("id_falla");
            entity.Property(e => e.IdFallaCausa).HasColumnName("id_falla_causa");
            entity.Property(e => e.IdFallaEfecto).HasColumnName("id_falla_efecto");
            entity.Property(e => e.IdFallaSolucion).HasColumnName("id_falla_solucion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewEquCampana>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_campana");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Campana)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("campana");
            entity.Property(e => e.CampanaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("campana_codigo");
            entity.Property(e => e.CatCatalogoTemparioBloquearCostear).HasColumnName("cat_catalogo_tempario_bloquearCostear");
            entity.Property(e => e.CatCatalogoTemparioCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_catalogo_codigo");
            entity.Property(e => e.CatCatalogoTemparioCatalogoTempario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.tempario_catalogo.tempario");
            entity.Property(e => e.CatCatalogoTemparioCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_codigoInventario");
            entity.Property(e => e.CatCatalogoTemparioDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_tempario_descripcion");
            entity.Property(e => e.CatCatalogoTemparioDetieneEquipos).HasColumnName("cat_catalogo.tempario_detieneEquipos");
            entity.Property(e => e.CatCatalogoTemparioDuracionEstimada).HasColumnName("cat_catalogo.tempario_duracionEstimada");
            entity.Property(e => e.CatCatalogoTemparioEnTaller).HasColumnName("cat_catalogo.tempario_enTaller");
            entity.Property(e => e.CatCatalogoTemparioEsCiclico).HasColumnName("cat_catalogo.tempario_esCiclico");
            entity.Property(e => e.CatCatalogoTemparioEsNacional).HasColumnName("cat_catalogo_tempario_esNacional");
            entity.Property(e => e.CatCatalogoTemparioFacturaTodo).HasColumnName("cat_catalogo.tempario_facturaTodo");
            entity.Property(e => e.CatCatalogoTemparioHorasDetencion).HasColumnName("cat_catalogo.tempario_horasDetencion");
            entity.Property(e => e.CatCatalogoTemparioIdFamilia).HasColumnName("cat_catalogo_tempario_id_familia");
            entity.Property(e => e.CatCatalogoTemparioIdImpuesto).HasColumnName("cat_catalogo_tempario_id_impuesto");
            entity.Property(e => e.CatCatalogoTemparioIdSubTipoCatalogo).HasColumnName("cat_catalogo_tempario_id_subTipoCatalogo");
            entity.Property(e => e.CatCatalogoTemparioIdTipoServicio).HasColumnName("cat_catalogo.tempario_id_tipoServicio");
            entity.Property(e => e.CatCatalogoTemparioIdUnidad).HasColumnName("cat_catalogo_tempario_id_unidad");
            entity.Property(e => e.CatCatalogoTemparioIncluirMenores).HasColumnName("cat_catalogo.tempario_incluirMenores");
            entity.Property(e => e.CatCatalogoTemparioModoAjuste).HasColumnName("cat_catalogo.tempario_modoAjuste");
            entity.Property(e => e.CatCatalogoTemparioPeriodoDias).HasColumnName("cat_catalogo.tempario_periodoDias");
            entity.Property(e => e.CatCatalogoTemparioPeriodoHoras).HasColumnName("cat_catalogo.tempario_periodoHoras");
            entity.Property(e => e.CatCatalogoTemparioPorcGarantia).HasColumnName("cat_catalogo.tempario_porcGarantia");
            entity.Property(e => e.CatCatalogoTemparioPorcTropicalizacion).HasColumnName("cat_catalogo.tempario_porcTropicalizacion");
            entity.Property(e => e.CatCatalogoTemparioPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_tempario_precioVenta");
            entity.Property(e => e.CatCatalogoTemparioProyectar).HasColumnName("cat_catalogo.tempario_proyectar");
            entity.Property(e => e.CatCatalogoTemparioTiempoConsecucion).HasColumnName("cat_catalogo_tempario_tiempoConsecucion");
            entity.Property(e => e.DetalleCampana)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("detalleCampana");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaInicioFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicio_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechafinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechafin_ff");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogoTempario).HasColumnName("id_catalogo.tempario");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TerTerceroClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_clasificacion");
            entity.Property(e => e.TerTerceroContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_contacto");
            entity.Property(e => e.TerTerceroDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_direccion");
            entity.Property(e => e.TerTerceroEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_email");
            entity.Property(e => e.TerTerceroEsCliente).HasColumnName("ter_tercero_esCliente");
            entity.Property(e => e.TerTerceroEsEmpresaPropia).HasColumnName("ter_tercero_esEmpresaPropia");
            entity.Property(e => e.TerTerceroEsFabricante).HasColumnName("ter_tercero_esFabricante");
            entity.Property(e => e.TerTerceroEsProspecto).HasColumnName("ter_tercero_esProspecto");
            entity.Property(e => e.TerTerceroEsProveedor).HasColumnName("ter_tercero_esProveedor");
            entity.Property(e => e.TerTerceroEsTransportador).HasColumnName("ter_tercero_esTransportador");
            entity.Property(e => e.TerTerceroFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fax");
            entity.Property(e => e.TerTerceroIdEstadoTercero).HasColumnName("ter_tercero_id_estadoTercero");
            entity.Property(e => e.TerTerceroIdNaturalezaTercero).HasColumnName("ter_tercero_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroIdZona).HasColumnName("ter_tercero_id_zona");
            entity.Property(e => e.TerTerceroNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_notas");
            entity.Property(e => e.TerTerceroRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_representante");
            entity.Property(e => e.TerTerceroTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_telefono");
            entity.Property(e => e.TerTerceroTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero");
            entity.Property(e => e.TerTerceroTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_codigo");
            entity.Property(e => e.TerTerceroTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nit");
            entity.Property(e => e.TerTerceroTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_website");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewEquCampanaDocumentoOt>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_campana_documento_OT");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CampanaDocumentoOt)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("campana_documento.OT");
            entity.Property(e => e.DocDocumentoOtCargo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_cargo");
            entity.Property(e => e.DocDocumentoOtCompromisos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_compromisos");
            entity.Property(e => e.DocDocumentoOtContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_contacto");
            entity.Property(e => e.DocDocumentoOtCosto).HasColumnName("doc_documento_ot_costo");
            entity.Property(e => e.DocDocumentoOtCostoPlaneado).HasColumnName("doc_documento_ot_costoPlaneado");
            entity.Property(e => e.DocDocumentoOtDescuento).HasColumnName("doc_documento_ot_descuento");
            entity.Property(e => e.DocDocumentoOtDescuentoPlaneado).HasColumnName("doc_documento_ot_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoOtDiagnosticoInicial)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_diagnosticoInicial");
            entity.Property(e => e.DocDocumentoOtDireccionUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_direccionUbicacion");
            entity.Property(e => e.DocDocumentoOtDistribuyeCentros).HasColumnName("doc_documento.ot_distribuyeCentros");
            entity.Property(e => e.DocDocumentoOtDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_documento_codigo");
            entity.Property(e => e.DocDocumentoOtDocumentoNumero).HasColumnName("doc_documento_ot_documento_numero");
            entity.Property(e => e.DocDocumentoOtDocumentoOt)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_documento.ot");
            entity.Property(e => e.DocDocumentoOtDuracionEstimada).HasColumnName("doc_documento.ot_duracionEstimada");
            entity.Property(e => e.DocDocumentoOtEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_email");
            entity.Property(e => e.DocDocumentoOtEnTaller).HasColumnName("doc_documento.ot_enTaller");
            entity.Property(e => e.DocDocumentoOtFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_fax");
            entity.Property(e => e.DocDocumentoOtFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoOtFechaCompromisoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.ot_fechaCompromiso_fh");
            entity.Property(e => e.DocDocumentoOtFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fecha_fh");
            entity.Property(e => e.DocDocumentoOtFechaGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.ot_fechaGarantia_ff");
            entity.Property(e => e.DocDocumentoOtFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoOtFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoOtIdContrato).HasColumnName("doc_documento.ot_id_contrato");
            entity.Property(e => e.DocDocumentoOtIdDepartamentoSolicitud).HasColumnName("doc_documento.ot_id_departamentoSolicitud");
            entity.Property(e => e.DocDocumentoOtIdDocumento).HasColumnName("doc_documento_ot_id_documento");
            entity.Property(e => e.DocDocumentoOtIdEquipo).HasColumnName("doc_documento.ot_id_equipo");
            entity.Property(e => e.DocDocumentoOtIdEstadoTipoDocumento).HasColumnName("doc_documento_ot_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoOtIdMoneda).HasColumnName("doc_documento_ot_id_moneda");
            entity.Property(e => e.DocDocumentoOtIdMotivoCancelacion).HasColumnName("doc_documento.ot_id_motivoCancelacion");
            entity.Property(e => e.DocDocumentoOtIdMotivoestado).HasColumnName("doc_documento_ot_id_motivoestado");
            entity.Property(e => e.DocDocumentoOtIdPrioridadDocumento).HasColumnName("doc_documento_ot_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoOtIdSistema).HasColumnName("doc_documento.ot_id_sistema");
            entity.Property(e => e.DocDocumentoOtIdSubtipoDocumento).HasColumnName("doc_documento_ot_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoOtIdSucursal).HasColumnName("doc_documento.ot_id_sucursal");
            entity.Property(e => e.DocDocumentoOtIdTerceroCliente).HasColumnName("doc_documento_ot_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoOtIdTerceroProveedor).HasColumnName("doc_documento_ot_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoOtIdTipoServicio).HasColumnName("doc_documento.ot_id_tipoServicio");
            entity.Property(e => e.DocDocumentoOtIdUsuarioCoordinador).HasColumnName("doc_documento.ot_id_usuario_coordinador");
            entity.Property(e => e.DocDocumentoOtIdZona).HasColumnName("doc_documento.ot_id_zona");
            entity.Property(e => e.DocDocumentoOtIva).HasColumnName("doc_documento_ot_iva");
            entity.Property(e => e.DocDocumentoOtIvaPlaneado).HasColumnName("doc_documento_ot_ivaPlaneado");
            entity.Property(e => e.DocDocumentoOtMotivoServicio)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_motivoServicio");
            entity.Property(e => e.DocDocumentoOtPorcentajeCliente).HasColumnName("doc_documento.ot_porcentajeCliente");
            entity.Property(e => e.DocDocumentoOtPorcentajeDistribuidor).HasColumnName("doc_documento.ot_porcentajeDistribuidor");
            entity.Property(e => e.DocDocumentoOtPorcentajeFabricante).HasColumnName("doc_documento.ot_porcentajeFabricante");
            entity.Property(e => e.DocDocumentoOtPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_prefijo");
            entity.Property(e => e.DocDocumentoOtReclamacionFabrica)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_reclamacionFabrica");
            entity.Property(e => e.DocDocumentoOtRecomendaciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_recomendaciones");
            entity.Property(e => e.DocDocumentoOtRentabilidad).HasColumnName("doc_documento_ot_rentabilidad");
            entity.Property(e => e.DocDocumentoOtSegunTempario).HasColumnName("doc_documento.ot_segunTempario");
            entity.Property(e => e.DocDocumentoOtSubtotal).HasColumnName("doc_documento_ot_subtotal");
            entity.Property(e => e.DocDocumentoOtSubtotalPlaneado).HasColumnName("doc_documento_ot_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoOtTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_telefono");
            entity.Property(e => e.DocDocumentoOtTotal).HasColumnName("doc_documento_ot_total");
            entity.Property(e => e.DocDocumentoOtTotalPlaneado).HasColumnName("doc_documento_ot_totalPlaneado");
            entity.Property(e => e.DocDocumentoOtTrabajos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_trabajos");
            entity.Property(e => e.DocDocumentoOtTrm).HasColumnName("doc_documento_ot_trm");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquCampanaActivo).HasColumnName("equ_campana_activo");
            entity.Property(e => e.EquCampanaCampana)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_campana_campana");
            entity.Property(e => e.EquCampanaCampanaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_campana_campana_codigo");
            entity.Property(e => e.EquCampanaDetalleCampana)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("equ_campana_detalleCampana");
            entity.Property(e => e.EquCampanaFechaInicioFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_campana_fechaInicio_ff");
            entity.Property(e => e.EquCampanaFechafinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_campana_fechafin_ff");
            entity.Property(e => e.EquCampanaIdCatalogoTempario).HasColumnName("equ_campana_id_catalogo.tempario");
            entity.Property(e => e.EquCampanaIdTercero).HasColumnName("equ_campana_id_tercero");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCampana).HasColumnName("id_campana");
            entity.Property(e => e.IdDocumentoOt).HasColumnName("id_documento.ot");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewEquCicloHorometro>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_cicloHorometro");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.AfectarProyeccion).HasColumnName("afectarProyeccion");
            entity.Property(e => e.CicloHorometro)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cicloHorometro");
            entity.Property(e => e.CicloHorometroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cicloHorometro_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquEquipoCosto)
                .HasColumnType("money")
                .HasColumnName("equ_equipo_costo");
            entity.Property(e => e.EquEquipoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo");
            entity.Property(e => e.EquEquipoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_codigo");
            entity.Property(e => e.EquEquipoEquipoSerial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_serial");
            entity.Property(e => e.EquEquipoFechaImportacionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaImportacion_ff");
            entity.Property(e => e.EquEquipoFechaPuestaMarchaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaPuestaMarcha_fh");
            entity.Property(e => e.EquEquipoGarantiaCancelada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_garantiaCancelada");
            entity.Property(e => e.EquEquipoHorasGarantia).HasColumnName("equ_equipo_horasGarantia");
            entity.Property(e => e.EquEquipoHorometroActual).HasColumnName("equ_equipo_horometroActual");
            entity.Property(e => e.EquEquipoIdCatalogoEquipo).HasColumnName("equ_equipo_id_catalogo.equipo");
            entity.Property(e => e.EquEquipoIdEquipo).HasColumnName("equ_equipo_id_equipo");
            entity.Property(e => e.EquEquipoIdEstadoEquipo).HasColumnName("equ_equipo_id_estadoEquipo");
            entity.Property(e => e.EquEquipoIdSistema).HasColumnName("equ_equipo_id_sistema");
            entity.Property(e => e.EquEquipoIdSucursal).HasColumnName("equ_equipo_id_sucursal");
            entity.Property(e => e.EquEquipoIdTercero).HasColumnName("equ_equipo_id_tercero");
            entity.Property(e => e.EquEquipoIdTerceroComprador).HasColumnName("equ_equipo_id_tercero_comprador");
            entity.Property(e => e.EquEquipoIdTerceroServicio).HasColumnName("equ_equipo_id_tercero_servicio");
            entity.Property(e => e.EquEquipoIdVersionEquipo).HasColumnName("equ_equipo_id_versionEquipo");
            entity.Property(e => e.EquEquipoIdZona).HasColumnName("equ_equipo_id_zona");
            entity.Property(e => e.EquEquipoNombreContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_nombreContacto");
            entity.Property(e => e.EquEquipoObservaciones)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_observaciones");
            entity.Property(e => e.EquEquipoPromedioHoras).HasColumnName("equ_equipo_promedioHoras");
            entity.Property(e => e.EquEquipoTelefonoContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_telefonoContacto");
            entity.Property(e => e.EquEquipoUbicacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_ubicacion");
            entity.Property(e => e.EquEquipoUltimaLecturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_ultimaLectura_fh");
            entity.Property(e => e.EquEquipoVencimientoGarantiaDistribuidorFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaDistribuidor_ff");
            entity.Property(e => e.EquEquipoVencimientoGarantiaFabricaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaFabrica_ff");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.HorometroFinal).HasColumnName("horometroFinal");
            entity.Property(e => e.HorometroInicial).HasColumnName("horometroInicial");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ReiniciarHorometro).HasColumnName("reiniciarHorometro");
            entity.Property(e => e.ReparacionMayor).HasColumnName("reparacionMayor");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewEquDetalleAlquiler>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_detalleAlquiler");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.BloquearDespacho).HasColumnName("bloquearDespacho");
            entity.Property(e => e.CantidadAlquilada).HasColumnName("cantidadAlquilada");
            entity.Property(e => e.CantidadSolicitada).HasColumnName("cantidadSolicitada");
            entity.Property(e => e.CatCatalogoBloquearCostear).HasColumnName("cat_catalogo_bloquearCostear");
            entity.Property(e => e.CatCatalogoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo");
            entity.Property(e => e.CatCatalogoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_codigoInventario");
            entity.Property(e => e.CatCatalogoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_descripcion");
            entity.Property(e => e.CatCatalogoEsNacional).HasColumnName("cat_catalogo_esNacional");
            entity.Property(e => e.CatCatalogoIdFamilia).HasColumnName("cat_catalogo_id_familia");
            entity.Property(e => e.CatCatalogoIdImpuesto).HasColumnName("cat_catalogo_id_impuesto");
            entity.Property(e => e.CatCatalogoIdSubtipoCatalogo).HasColumnName("cat_catalogo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoIdUnidad).HasColumnName("cat_catalogo_id_unidad");
            entity.Property(e => e.CatCatalogoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_precioVenta");
            entity.Property(e => e.CatCatalogoTiempoConsecucion).HasColumnName("cat_catalogo_tiempoConsecucion");
            entity.Property(e => e.DetalleAlquiler)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("detalleAlquiler");
            entity.Property(e => e.DetalleAlquilerCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("detalleAlquiler_codigo");
            entity.Property(e => e.DocDocumentoAlquilerCosto).HasColumnName("doc_documento_alquiler_costo");
            entity.Property(e => e.DocDocumentoAlquilerCostoPlaneado).HasColumnName("doc_documento_alquiler_costoPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerDescuento).HasColumnName("doc_documento_alquiler_descuento");
            entity.Property(e => e.DocDocumentoAlquilerDescuentoPlaneado).HasColumnName("doc_documento_alquiler_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerDocumentoAlquiler)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.alquiler_documento.alquiler");
            entity.Property(e => e.DocDocumentoAlquilerDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_documento_codigo");
            entity.Property(e => e.DocDocumentoAlquilerDocumentoNumero).HasColumnName("doc_documento_alquiler_documento_numero");
            entity.Property(e => e.DocDocumentoAlquilerFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoAlquilerFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_fecha_fh");
            entity.Property(e => e.DocDocumentoAlquilerFechaFinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.alquiler_fechaFin_ff");
            entity.Property(e => e.DocDocumentoAlquilerFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoAlquilerFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoAlquilerIdDocumento).HasColumnName("doc_documento_alquiler_id_documento");
            entity.Property(e => e.DocDocumentoAlquilerIdEstadoTipoDocumento).HasColumnName("doc_documento_alquiler_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoAlquilerIdMoneda).HasColumnName("doc_documento_alquiler_id_moneda");
            entity.Property(e => e.DocDocumentoAlquilerIdMotivoestado).HasColumnName("doc_documento_alquiler_id_motivoestado");
            entity.Property(e => e.DocDocumentoAlquilerIdPrioridadDocumento).HasColumnName("doc_documento_alquiler_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoAlquilerIdSubtipoDocumento).HasColumnName("doc_documento_alquiler_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoAlquilerIdTerceroCliente).HasColumnName("doc_documento_alquiler_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoAlquilerIdTerceroProveedor).HasColumnName("doc_documento_alquiler_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoAlquilerIva).HasColumnName("doc_documento_alquiler_iva");
            entity.Property(e => e.DocDocumentoAlquilerIvaPlaneado).HasColumnName("doc_documento_alquiler_ivaPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerMesVencido).HasColumnName("doc_documento.alquiler_mesVencido");
            entity.Property(e => e.DocDocumentoAlquilerObservaciones)
                .HasMaxLength(3000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.alquiler_observaciones");
            entity.Property(e => e.DocDocumentoAlquilerPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_prefijo");
            entity.Property(e => e.DocDocumentoAlquilerRentabilidad).HasColumnName("doc_documento_alquiler_rentabilidad");
            entity.Property(e => e.DocDocumentoAlquilerSubtotal).HasColumnName("doc_documento_alquiler_subtotal");
            entity.Property(e => e.DocDocumentoAlquilerSubtotalPlaneado).HasColumnName("doc_documento_alquiler_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerTotal).HasColumnName("doc_documento_alquiler_total");
            entity.Property(e => e.DocDocumentoAlquilerTotalPlaneado).HasColumnName("doc_documento_alquiler_totalPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerTrm).HasColumnName("doc_documento_alquiler_trm");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquEquipoCosto)
                .HasColumnType("money")
                .HasColumnName("equ_equipo_costo");
            entity.Property(e => e.EquEquipoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo");
            entity.Property(e => e.EquEquipoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_codigo");
            entity.Property(e => e.EquEquipoEquipoSerial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_serial");
            entity.Property(e => e.EquEquipoFechaImportacionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaImportacion_ff");
            entity.Property(e => e.EquEquipoFechaPuestaMarchaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaPuestaMarcha_fh");
            entity.Property(e => e.EquEquipoGarantiaCancelada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_garantiaCancelada");
            entity.Property(e => e.EquEquipoHorasGarantia).HasColumnName("equ_equipo_horasGarantia");
            entity.Property(e => e.EquEquipoHorometroActual).HasColumnName("equ_equipo_horometroActual");
            entity.Property(e => e.EquEquipoIdCatalogoEquipo).HasColumnName("equ_equipo_id_catalogo.equipo");
            entity.Property(e => e.EquEquipoIdEquipo).HasColumnName("equ_equipo_id_equipo");
            entity.Property(e => e.EquEquipoIdEstadoEquipo).HasColumnName("equ_equipo_id_estadoEquipo");
            entity.Property(e => e.EquEquipoIdSistema).HasColumnName("equ_equipo_id_sistema");
            entity.Property(e => e.EquEquipoIdSucursal).HasColumnName("equ_equipo_id_sucursal");
            entity.Property(e => e.EquEquipoIdTercero).HasColumnName("equ_equipo_id_tercero");
            entity.Property(e => e.EquEquipoIdTerceroComprador).HasColumnName("equ_equipo_id_tercero_comprador");
            entity.Property(e => e.EquEquipoIdTerceroServicio).HasColumnName("equ_equipo_id_tercero_servicio");
            entity.Property(e => e.EquEquipoIdVersionEquipo).HasColumnName("equ_equipo_id_versionEquipo");
            entity.Property(e => e.EquEquipoIdZona).HasColumnName("equ_equipo_id_zona");
            entity.Property(e => e.EquEquipoNombreContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_nombreContacto");
            entity.Property(e => e.EquEquipoObservaciones)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_observaciones");
            entity.Property(e => e.EquEquipoPromedioHoras).HasColumnName("equ_equipo_promedioHoras");
            entity.Property(e => e.EquEquipoTelefonoContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_telefonoContacto");
            entity.Property(e => e.EquEquipoUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_ubicacion");
            entity.Property(e => e.EquEquipoUltimaLecturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_ultimaLectura_fh");
            entity.Property(e => e.EquEquipoVencimientoGarantiaDistribuidorFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaDistribuidor_ff");
            entity.Property(e => e.EquEquipoVencimientoGarantiaFabricaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaFabrica_ff");
            entity.Property(e => e.EsSerializado).HasColumnName("esSerializado");
            entity.Property(e => e.Estadoalquiler).HasColumnName("estadoalquiler");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaDespachoFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaDespacho_ff");
            entity.Property(e => e.FechaDevolucionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaDevolucion_ff");
            entity.Property(e => e.FechaInicioFacturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicioFactura_fh");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaUltimaFacturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaUltimaFactura_fh");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdDocumentoAlquiler).HasColumnName("id_documento.alquiler");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TerSucursalCodigorecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_codigorecursiva");
            entity.Property(e => e.TerSucursalContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_contacto");
            entity.Property(e => e.TerSucursalDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Direccion");
            entity.Property(e => e.TerSucursalEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Email");
            entity.Property(e => e.TerSucursalFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Fax");
            entity.Property(e => e.TerSucursalIdEstadoTercero).HasColumnName("ter_sucursal_id_estadoTercero");
            entity.Property(e => e.TerSucursalIdSucursal).HasColumnName("ter_sucursal_id_sucursal");
            entity.Property(e => e.TerSucursalIdTercero).HasColumnName("ter_sucursal_id_tercero");
            entity.Property(e => e.TerSucursalIdUsuarioAsesor).HasColumnName("ter_sucursal_id_usuario_asesor");
            entity.Property(e => e.TerSucursalIdUsuarioTecnico).HasColumnName("ter_sucursal_id_usuario_tecnico");
            entity.Property(e => e.TerSucursalIdZona).HasColumnName("ter_sucursal_id_zona");
            entity.Property(e => e.TerSucursalParaAlquiler).HasColumnName("ter_sucursal_paraAlquiler");
            entity.Property(e => e.TerSucursalParaSoporte).HasColumnName("ter_sucursal_paraSoporte");
            entity.Property(e => e.TerSucursalParaVenta).HasColumnName("ter_sucursal_paraVenta");
            entity.Property(e => e.TerSucursalSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal");
            entity.Property(e => e.TerSucursalSucursalCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal_codigo");
            entity.Property(e => e.TerSucursalTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_telefono");
            entity.Property(e => e.TerTerceroClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_clasificacion");
            entity.Property(e => e.TerTerceroContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_contacto");
            entity.Property(e => e.TerTerceroDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_direccion");
            entity.Property(e => e.TerTerceroEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_email");
            entity.Property(e => e.TerTerceroEsCliente).HasColumnName("ter_tercero_esCliente");
            entity.Property(e => e.TerTerceroEsEmpresaPropia).HasColumnName("ter_tercero_esEmpresaPropia");
            entity.Property(e => e.TerTerceroEsFabricante).HasColumnName("ter_tercero_esFabricante");
            entity.Property(e => e.TerTerceroEsProspecto).HasColumnName("ter_tercero_esProspecto");
            entity.Property(e => e.TerTerceroEsProveedor).HasColumnName("ter_tercero_esProveedor");
            entity.Property(e => e.TerTerceroEsTransportador).HasColumnName("ter_tercero_esTransportador");
            entity.Property(e => e.TerTerceroFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fax");
            entity.Property(e => e.TerTerceroIdEstadoTercero).HasColumnName("ter_tercero_id_estadoTercero");
            entity.Property(e => e.TerTerceroIdNaturalezaTercero).HasColumnName("ter_tercero_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroIdZona).HasColumnName("ter_tercero_id_zona");
            entity.Property(e => e.TerTerceroNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_notas");
            entity.Property(e => e.TerTerceroRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_representante");
            entity.Property(e => e.TerTerceroTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_telefono");
            entity.Property(e => e.TerTerceroTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero");
            entity.Property(e => e.TerTerceroTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_codigo");
            entity.Property(e => e.TerTerceroTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nit");
            entity.Property(e => e.TerTerceroTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_website");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorHora)
                .HasColumnType("money")
                .HasColumnName("valorHora");
            entity.Property(e => e.ValorHoraStandBy).HasColumnType("money");
            entity.Property(e => e.ValorMes).HasColumnName("valorMes");
            entity.Property(e => e.ValorMulta)
                .HasColumnType("money")
                .HasColumnName("valorMulta");
            entity.Property(e => e.ValorPeriodo)
                .HasColumnType("money")
                .HasColumnName("valorPeriodo");
        });

        modelBuilder.Entity<ViewEquDetallePagoAlquiler>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_detallePagoAlquiler");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DetallePagoAlquiler)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("detallePagoAlquiler");
            entity.Property(e => e.DetallePagoAlquilerCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("detallePagoAlquiler_codigo");
            entity.Property(e => e.DocDocumentoCosto).HasColumnName("doc_documento_costo");
            entity.Property(e => e.DocDocumentoCostoPlaneado).HasColumnName("doc_documento_costoPlaneado");
            entity.Property(e => e.DocDocumentoDescuento).HasColumnName("doc_documento_descuento");
            entity.Property(e => e.DocDocumentoDescuentoPlaneado).HasColumnName("doc_documento_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento");
            entity.Property(e => e.DocDocumentoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento_codigo");
            entity.Property(e => e.DocDocumentoDocumentoNumero).HasColumnName("doc_documento_documento_numero");
            entity.Property(e => e.DocDocumentoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fecha_fh");
            entity.Property(e => e.DocDocumentoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoIdDocumento).HasColumnName("doc_documento_id_documento");
            entity.Property(e => e.DocDocumentoIdEstadoTipoDocumento).HasColumnName("doc_documento_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoIdMoneda).HasColumnName("doc_documento_id_moneda");
            entity.Property(e => e.DocDocumentoIdMotivoestado).HasColumnName("doc_documento_id_motivoestado");
            entity.Property(e => e.DocDocumentoIdPrioridadDocumento).HasColumnName("doc_documento_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoIdSubtipoDocumento).HasColumnName("doc_documento_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoIdTerceroCliente).HasColumnName("doc_documento_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoIdTerceroProveedor).HasColumnName("doc_documento_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoIva).HasColumnName("doc_documento_iva");
            entity.Property(e => e.DocDocumentoIvaPlaneado).HasColumnName("doc_documento_ivaPlaneado");
            entity.Property(e => e.DocDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_prefijo");
            entity.Property(e => e.DocDocumentoRentabilidad).HasColumnName("doc_documento_rentabilidad");
            entity.Property(e => e.DocDocumentoSubtotal).HasColumnName("doc_documento_subtotal");
            entity.Property(e => e.DocDocumentoSubtotalPlaneado).HasColumnName("doc_documento_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoTotal).HasColumnName("doc_documento_total");
            entity.Property(e => e.DocDocumentoTotalPlaneado).HasColumnName("doc_documento_totalPlaneado");
            entity.Property(e => e.DocDocumentoTrm).HasColumnName("doc_documento_trm");
            entity.Property(e => e.DocItemDocumentoAfectoInventario).HasColumnName("doc_itemDocumento_afectoInventario");
            entity.Property(e => e.DocItemDocumentoCantidadEjecutado).HasColumnName("doc_itemDocumento_cantidadEjecutado");
            entity.Property(e => e.DocItemDocumentoCantidadPlaneado).HasColumnName("doc_itemDocumento_cantidadPlaneado");
            entity.Property(e => e.DocItemDocumentoCostear).HasColumnName("doc_itemDocumento_costear");
            entity.Property(e => e.DocItemDocumentoCostoEjecutado).HasColumnName("doc_itemDocumento_costoEjecutado");
            entity.Property(e => e.DocItemDocumentoCostoPlaneado).HasColumnName("doc_itemDocumento_costoPlaneado");
            entity.Property(e => e.DocItemDocumentoDetalle)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_detalle");
            entity.Property(e => e.DocItemDocumentoDtoEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_dtoEjecutado");
            entity.Property(e => e.DocItemDocumentoDtoPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_dtoPlaneado");
            entity.Property(e => e.DocItemDocumentoEsUrgente).HasColumnName("doc_itemDocumento_esUrgente");
            entity.Property(e => e.DocItemDocumentoHorasFestivas).HasColumnName("doc_itemDocumento_horasFestivas");
            entity.Property(e => e.DocItemDocumentoHorasGarantia).HasColumnName("doc_itemDocumento_horasGarantia");
            entity.Property(e => e.DocItemDocumentoHorasNocturnas).HasColumnName("doc_itemDocumento_horasNocturnas");
            entity.Property(e => e.DocItemDocumentoHorasOrdinales).HasColumnName("doc_itemDocumento_horasOrdinales");
            entity.Property(e => e.DocItemDocumentoIdBodega).HasColumnName("doc_itemDocumento_id_bodega");
            entity.Property(e => e.DocItemDocumentoIdCatalogo).HasColumnName("doc_itemDocumento_id_catalogo");
            entity.Property(e => e.DocItemDocumentoIdCentroCosto).HasColumnName("doc_itemDocumento_id_centroCosto");
            entity.Property(e => e.DocItemDocumentoIdDocumento).HasColumnName("doc_itemDocumento_id_documento");
            entity.Property(e => e.DocItemDocumentoIdIncoterm).HasColumnName("doc_itemDocumento_id_incoterm");
            entity.Property(e => e.DocItemDocumentoIdItemDocumento).HasColumnName("doc_itemDocumento_id_itemDocumento");
            entity.Property(e => e.DocItemDocumentoIdItemDocumentoSuperior).HasColumnName("doc_itemDocumento_id_itemDocumento_superior");
            entity.Property(e => e.DocItemDocumentoIdListaprecio).HasColumnName("doc_itemDocumento_id_listaprecio");
            entity.Property(e => e.DocItemDocumentoItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_itemDocumento");
            entity.Property(e => e.DocItemDocumentoItemDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_itemDocumento_codigo");
            entity.Property(e => e.DocItemDocumentoIvaEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_ivaEjecutado");
            entity.Property(e => e.DocItemDocumentoIvaPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_ivaPlaneado");
            entity.Property(e => e.DocItemDocumentoPorcdto).HasColumnName("doc_itemDocumento_porcdto");
            entity.Property(e => e.DocItemDocumentoPorcentajeCliente).HasColumnName("doc_itemDocumento_porcentajeCliente");
            entity.Property(e => e.DocItemDocumentoPorcentajeDistribuidor).HasColumnName("doc_itemDocumento_porcentajeDistribuidor");
            entity.Property(e => e.DocItemDocumentoPorcentajeFabricante).HasColumnName("doc_itemDocumento_porcentajeFabricante");
            entity.Property(e => e.DocItemDocumentoPorciva).HasColumnName("doc_itemDocumento_porciva");
            entity.Property(e => e.DocItemDocumentoSubtotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_subtotalEjecutado");
            entity.Property(e => e.DocItemDocumentoSubtotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_subtotalPlaneado");
            entity.Property(e => e.DocItemDocumentoTotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_totalEjecutado");
            entity.Property(e => e.DocItemDocumentoTotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_totalPlaneado");
            entity.Property(e => e.DocItemDocumentoValorUnitarioEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_valorUnitarioEjecutado");
            entity.Property(e => e.DocItemDocumentoValorUnitarioPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_valorUnitarioPlaneado");
            entity.Property(e => e.DocItemDocumentoVencimientoGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_itemDocumento_vencimientoGarantia_ff");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquEquipoCosto)
                .HasColumnType("money")
                .HasColumnName("equ_equipo_costo");
            entity.Property(e => e.EquEquipoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo");
            entity.Property(e => e.EquEquipoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_codigo");
            entity.Property(e => e.EquEquipoEquipoSerial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_serial");
            entity.Property(e => e.EquEquipoFechaImportacionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaImportacion_ff");
            entity.Property(e => e.EquEquipoFechaPuestaMarchaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaPuestaMarcha_fh");
            entity.Property(e => e.EquEquipoGarantiaCancelada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_garantiaCancelada");
            entity.Property(e => e.EquEquipoHorasGarantia).HasColumnName("equ_equipo_horasGarantia");
            entity.Property(e => e.EquEquipoHorometroActual).HasColumnName("equ_equipo_horometroActual");
            entity.Property(e => e.EquEquipoIdCatalogoEquipo).HasColumnName("equ_equipo_id_catalogo.equipo");
            entity.Property(e => e.EquEquipoIdEquipo).HasColumnName("equ_equipo_id_equipo");
            entity.Property(e => e.EquEquipoIdEstadoEquipo).HasColumnName("equ_equipo_id_estadoEquipo");
            entity.Property(e => e.EquEquipoIdSistema).HasColumnName("equ_equipo_id_sistema");
            entity.Property(e => e.EquEquipoIdSucursal).HasColumnName("equ_equipo_id_sucursal");
            entity.Property(e => e.EquEquipoIdTercero).HasColumnName("equ_equipo_id_tercero");
            entity.Property(e => e.EquEquipoIdTerceroComprador).HasColumnName("equ_equipo_id_tercero_comprador");
            entity.Property(e => e.EquEquipoIdTerceroServicio).HasColumnName("equ_equipo_id_tercero_servicio");
            entity.Property(e => e.EquEquipoIdVersionEquipo).HasColumnName("equ_equipo_id_versionEquipo");
            entity.Property(e => e.EquEquipoIdZona).HasColumnName("equ_equipo_id_zona");
            entity.Property(e => e.EquEquipoNombreContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_nombreContacto");
            entity.Property(e => e.EquEquipoObservaciones)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_observaciones");
            entity.Property(e => e.EquEquipoPromedioHoras).HasColumnName("equ_equipo_promedioHoras");
            entity.Property(e => e.EquEquipoTelefonoContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_telefonoContacto");
            entity.Property(e => e.EquEquipoUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_ubicacion");
            entity.Property(e => e.EquEquipoUltimaLecturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_ultimaLectura_fh");
            entity.Property(e => e.EquEquipoVencimientoGarantiaDistribuidorFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaDistribuidor_ff");
            entity.Property(e => e.EquEquipoVencimientoGarantiaFabricaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaFabrica_ff");
            entity.Property(e => e.EquPagoAlquilerFechaEsperadaPagoFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_pagoAlquiler_fechaEsperadaPago_ff");
            entity.Property(e => e.EquPagoAlquilerFechaFacturaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_pagoAlquiler_fecha_factura_ff");
            entity.Property(e => e.EquPagoAlquilerIdDocumentoAlquiler).HasColumnName("equ_pagoAlquiler_id_documento.alquiler");
            entity.Property(e => e.EquPagoAlquilerNumeroFactura)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_pagoAlquiler_numeroFactura");
            entity.Property(e => e.EquPagoAlquilerPagoAlquiler)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_pagoAlquiler_pagoAlquiler");
            entity.Property(e => e.EquPagoAlquilerPagoAlquilerCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_pagoAlquiler_pagoAlquiler_codigo");
            entity.Property(e => e.EquPagoAlquilerValorFacturado)
                .HasColumnType("money")
                .HasColumnName("equ_pagoAlquiler_valorFacturado");
            entity.Property(e => e.EquPagoAlquilerValorPorCobrar)
                .HasColumnType("money")
                .HasColumnName("equ_pagoAlquiler_valorPorCobrar");
            entity.Property(e => e.Facturado).HasColumnName("facturado");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFin_ff");
            entity.Property(e => e.FechaInicialFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicial_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Horometro).HasColumnName("horometro");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdItemDocumento).HasColumnName("id_itemDocumento");
            entity.Property(e => e.IdPagoAlquiler).HasColumnName("id_pagoAlquiler");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor)
                .HasColumnType("money")
                .HasColumnName("valor");
            entity.Property(e => e.ValorMulta).HasColumnName("valorMulta");
        });

        modelBuilder.Entity<ViewEquEquipo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_equipo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoEquipoBloquearCostear).HasColumnName("cat_catalogo_equipo_bloquearCostear");
            entity.Property(e => e.CatCatalogoEquipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoEquipoCatalogoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.equipo_catalogo.equipo");
            entity.Property(e => e.CatCatalogoEquipoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_codigoInventario");
            entity.Property(e => e.CatCatalogoEquipoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_descripcion");
            entity.Property(e => e.CatCatalogoEquipoEsNacional).HasColumnName("cat_catalogo_equipo_esNacional");
            entity.Property(e => e.CatCatalogoEquipoGarantiaHoras).HasColumnName("cat_catalogo.equipo_garantiaHoras");
            entity.Property(e => e.CatCatalogoEquipoGarantiaMeses).HasColumnName("cat_catalogo.equipo_garantiaMeses");
            entity.Property(e => e.CatCatalogoEquipoIdFamilia).HasColumnName("cat_catalogo_equipo_id_familia");
            entity.Property(e => e.CatCatalogoEquipoIdImpuesto).HasColumnName("cat_catalogo_equipo_id_impuesto");
            entity.Property(e => e.CatCatalogoEquipoIdMarca).HasColumnName("cat_catalogo.equipo_id_marca");
            entity.Property(e => e.CatCatalogoEquipoIdSubtipoCatalogo).HasColumnName("cat_catalogo_equipo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoEquipoIdUnidad).HasColumnName("cat_catalogo_equipo_id_unidad");
            entity.Property(e => e.CatCatalogoEquipoManejaHorometro).HasColumnName("cat_catalogo.equipo_manejaHorometro");
            entity.Property(e => e.CatCatalogoEquipoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_equipo_precioVenta");
            entity.Property(e => e.CatCatalogoEquipoTiempoConsecucion).HasColumnName("cat_catalogo_equipo_tiempoConsecucion");
            entity.Property(e => e.CatSistemaIdSistema).HasColumnName("cat_sistema_id_sistema");
            entity.Property(e => e.CatSistemaSistema)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_sistema_sistema");
            entity.Property(e => e.CatSistemaSistemaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_sistema_sistema_codigo");
            entity.Property(e => e.CatSubtipocatalogoSubtipocatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_subtipocatalogo_subtipocatalogo");
            entity.Property(e => e.CatVersionEquipoIdCatalogoEquipo).HasColumnName("cat_versionEquipo_id_catalogo.equipo");
            entity.Property(e => e.CatVersionEquipoVersionEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_versionEquipo_versionEquipo");
            entity.Property(e => e.CatVersionEquipoVersionEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_versionEquipo_versionEquipo_codigo");
            entity.Property(e => e.Costo)
                .HasColumnType("money")
                .HasColumnName("costo");
            entity.Property(e => e.DocCentroCostoCentroCosto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_centroCosto_centroCosto");
            entity.Property(e => e.DocCentroCostoCentroCostoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_centroCosto_centroCosto_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquEquipoPadreCosto)
                .HasColumnType("money")
                .HasColumnName("equ_equipo_padre_costo");
            entity.Property(e => e.EquEquipoPadreEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_padre_equipo");
            entity.Property(e => e.EquEquipoPadreEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_padre_equipo_codigo");
            entity.Property(e => e.EquEquipoPadreEquipoSerial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_padre_equipo_serial");
            entity.Property(e => e.EquEquipoPadreFechaImportacionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_padre_fechaImportacion_ff");
            entity.Property(e => e.EquEquipoPadreFechaPuestaMarchaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_padre_fechaPuestaMarcha_fh");
            entity.Property(e => e.EquEquipoPadreGarantiaCancelada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_padre_garantiaCancelada");
            entity.Property(e => e.EquEquipoPadreHorasGarantia).HasColumnName("equ_equipo_padre_horasGarantia");
            entity.Property(e => e.EquEquipoPadreHorometroActual).HasColumnName("equ_equipo_padre_horometroActual");
            entity.Property(e => e.EquEquipoPadreIdCatalogoEquipo).HasColumnName("equ_equipo_padre_id_catalogo.equipo");
            entity.Property(e => e.EquEquipoPadreIdCentroCosto).HasColumnName("equ_equipo_padre_id_centroCosto");
            entity.Property(e => e.EquEquipoPadreIdEquipo).HasColumnName("equ_equipo_padre_id_equipo");
            entity.Property(e => e.EquEquipoPadreIdEstadoEquipo).HasColumnName("equ_equipo_padre_id_estadoEquipo");
            entity.Property(e => e.EquEquipoPadreIdSistema).HasColumnName("equ_equipo_padre_id_sistema");
            entity.Property(e => e.EquEquipoPadreIdSucursal).HasColumnName("equ_equipo_padre_id_sucursal");
            entity.Property(e => e.EquEquipoPadreIdTercero).HasColumnName("equ_equipo_padre_id_tercero");
            entity.Property(e => e.EquEquipoPadreIdTerceroComprador).HasColumnName("equ_equipo_padre_id_tercero_comprador");
            entity.Property(e => e.EquEquipoPadreIdTerceroServicio).HasColumnName("equ_equipo_padre_id_tercero_servicio");
            entity.Property(e => e.EquEquipoPadreIdVersionEquipo).HasColumnName("equ_equipo_padre_id_versionEquipo");
            entity.Property(e => e.EquEquipoPadreIdZona).HasColumnName("equ_equipo_padre_id_zona");
            entity.Property(e => e.EquEquipoPadreNombreContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_padre_nombreContacto");
            entity.Property(e => e.EquEquipoPadreObservaciones)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_padre_observaciones");
            entity.Property(e => e.EquEquipoPadrePromedioHoras).HasColumnName("equ_equipo_padre_promedioHoras");
            entity.Property(e => e.EquEquipoPadreTelefonoContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_padre_telefonoContacto");
            entity.Property(e => e.EquEquipoPadreUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_padre_ubicacion");
            entity.Property(e => e.EquEquipoPadreUltimaLecturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_padre_ultimaLectura_fh");
            entity.Property(e => e.EquEquipoPadreVencimientoGarantiaDistribuidorFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_padre_vencimientoGarantiaDistribuidor_ff");
            entity.Property(e => e.EquEquipoPadreVencimientoGarantiaFabricaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_padre_vencimientoGarantiaFabrica_ff");
            entity.Property(e => e.EquEstadoEquipoActivo).HasColumnName("equ_estadoEquipo_activo");
            entity.Property(e => e.EquEstadoEquipoEstadoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_estadoEquipo_estadoEquipo");
            entity.Property(e => e.EquEstadoEquipoEstadoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_estadoEquipo_estadoEquipo_codigo");
            entity.Property(e => e.Equipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equipo");
            entity.Property(e => e.EquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equipo_codigo");
            entity.Property(e => e.EquipoSerial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equipo_serial");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaImportacionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaImportacion_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaPuestaMarchaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaPuestaMarcha_fh");
            entity.Property(e => e.GarantiaCancelada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("garantiaCancelada");
            entity.Property(e => e.GenZonaCodigoExterno)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("gen_zona_codigoExterno");
            entity.Property(e => e.GenZonaIdZona).HasColumnName("gen_zona_id_zona");
            entity.Property(e => e.GenZonaNivel).HasColumnName("gen_zona_nivel");
            entity.Property(e => e.GenZonaTiempoDesplazamiento).HasColumnName("gen_zona_tiempoDesplazamiento");
            entity.Property(e => e.GenZonaZona)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_zona_zona");
            entity.Property(e => e.GenZonaZonaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_zona_zona_codigo");
            entity.Property(e => e.HorasGarantia).HasColumnName("horasGarantia");
            entity.Property(e => e.HorometroActual).HasColumnName("horometroActual");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogoEquipo).HasColumnName("id_catalogo.equipo");
            entity.Property(e => e.IdCentroCosto).HasColumnName("id_centroCosto");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdEstadoEquipo).HasColumnName("id_estadoEquipo");
            entity.Property(e => e.IdSistema).HasColumnName("id_sistema");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdTerceroComprador).HasColumnName("id_tercero_comprador");
            entity.Property(e => e.IdTerceroServicio).HasColumnName("id_tercero_servicio");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdVersionEquipo).HasColumnName("id_versionEquipo");
            entity.Property(e => e.IdZona).HasColumnName("id_zona");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.NombreContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombreContacto");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("observaciones");
            entity.Property(e => e.PromedioHoras).HasColumnName("promedioHoras");
            entity.Property(e => e.TelefonoContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("telefonoContacto");
            entity.Property(e => e.TerSucursalCargo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_cargo");
            entity.Property(e => e.TerSucursalCodigorecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_codigorecursiva");
            entity.Property(e => e.TerSucursalContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_contacto");
            entity.Property(e => e.TerSucursalDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Direccion");
            entity.Property(e => e.TerSucursalEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Email");
            entity.Property(e => e.TerSucursalFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Fax");
            entity.Property(e => e.TerSucursalIdEstadoTercero).HasColumnName("ter_sucursal_id_estadoTercero");
            entity.Property(e => e.TerSucursalIdSucursal).HasColumnName("ter_sucursal_id_sucursal");
            entity.Property(e => e.TerSucursalIdTercero).HasColumnName("ter_sucursal_id_tercero");
            entity.Property(e => e.TerSucursalIdUsuarioAsesor).HasColumnName("ter_sucursal_id_usuario_asesor");
            entity.Property(e => e.TerSucursalIdUsuarioTecnico).HasColumnName("ter_sucursal_id_usuario_tecnico");
            entity.Property(e => e.TerSucursalIdZona).HasColumnName("ter_sucursal_id_zona");
            entity.Property(e => e.TerSucursalParaAlquiler).HasColumnName("ter_sucursal_paraAlquiler");
            entity.Property(e => e.TerSucursalParaSoporte).HasColumnName("ter_sucursal_paraSoporte");
            entity.Property(e => e.TerSucursalParaVenta).HasColumnName("ter_sucursal_paraVenta");
            entity.Property(e => e.TerSucursalSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal");
            entity.Property(e => e.TerSucursalSucursalCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal_codigo");
            entity.Property(e => e.TerSucursalTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_telefono");
            entity.Property(e => e.TerTerceroClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_clasificacion");
            entity.Property(e => e.TerTerceroCompradorClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_comprador_clasificacion");
            entity.Property(e => e.TerTerceroCompradorContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_comprador_contacto");
            entity.Property(e => e.TerTerceroCompradorDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_comprador_direccion");
            entity.Property(e => e.TerTerceroCompradorEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_comprador_email");
            entity.Property(e => e.TerTerceroCompradorEsCliente).HasColumnName("ter_tercero_comprador_esCliente");
            entity.Property(e => e.TerTerceroCompradorEsEmpresaPropia).HasColumnName("ter_tercero_comprador_esEmpresaPropia");
            entity.Property(e => e.TerTerceroCompradorEsFabricante).HasColumnName("ter_tercero_comprador_esFabricante");
            entity.Property(e => e.TerTerceroCompradorEsProspecto).HasColumnName("ter_tercero_comprador_esProspecto");
            entity.Property(e => e.TerTerceroCompradorEsProveedor).HasColumnName("ter_tercero_comprador_esProveedor");
            entity.Property(e => e.TerTerceroCompradorEsTransportador).HasColumnName("ter_tercero_comprador_esTransportador");
            entity.Property(e => e.TerTerceroCompradorFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_comprador_fax");
            entity.Property(e => e.TerTerceroCompradorIdEstadoTercero).HasColumnName("ter_tercero_comprador_id_estadoTercero");
            entity.Property(e => e.TerTerceroCompradorIdNaturalezaTercero).HasColumnName("ter_tercero_comprador_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroCompradorIdZona).HasColumnName("ter_tercero_comprador_id_zona");
            entity.Property(e => e.TerTerceroCompradorNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_comprador_notas");
            entity.Property(e => e.TerTerceroCompradorRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_comprador_representante");
            entity.Property(e => e.TerTerceroCompradorTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_comprador_telefono");
            entity.Property(e => e.TerTerceroCompradorTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_comprador_tercero");
            entity.Property(e => e.TerTerceroCompradorTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_comprador_tercero_codigo");
            entity.Property(e => e.TerTerceroCompradorTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_comprador_tercero_nit");
            entity.Property(e => e.TerTerceroCompradorTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_comprador_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroCompradorWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_comprador_website");
            entity.Property(e => e.TerTerceroContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_contacto");
            entity.Property(e => e.TerTerceroDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_direccion");
            entity.Property(e => e.TerTerceroEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_email");
            entity.Property(e => e.TerTerceroEsCliente).HasColumnName("ter_tercero_esCliente");
            entity.Property(e => e.TerTerceroEsEmpresaPropia).HasColumnName("ter_tercero_esEmpresaPropia");
            entity.Property(e => e.TerTerceroEsFabricante).HasColumnName("ter_tercero_esFabricante");
            entity.Property(e => e.TerTerceroEsProspecto).HasColumnName("ter_tercero_esProspecto");
            entity.Property(e => e.TerTerceroEsProveedor).HasColumnName("ter_tercero_esProveedor");
            entity.Property(e => e.TerTerceroEsTransportador).HasColumnName("ter_tercero_esTransportador");
            entity.Property(e => e.TerTerceroFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fax");
            entity.Property(e => e.TerTerceroIdEstadoTercero).HasColumnName("ter_tercero_id_estadoTercero");
            entity.Property(e => e.TerTerceroIdNaturalezaTercero).HasColumnName("ter_tercero_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroIdZona).HasColumnName("ter_tercero_id_zona");
            entity.Property(e => e.TerTerceroNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_notas");
            entity.Property(e => e.TerTerceroRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_representante");
            entity.Property(e => e.TerTerceroServicioClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_clasificacion");
            entity.Property(e => e.TerTerceroServicioContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_contacto");
            entity.Property(e => e.TerTerceroServicioDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_direccion");
            entity.Property(e => e.TerTerceroServicioEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_email");
            entity.Property(e => e.TerTerceroServicioEsCliente).HasColumnName("ter_tercero_servicio_esCliente");
            entity.Property(e => e.TerTerceroServicioEsEmpresaPropia).HasColumnName("ter_tercero_servicio_esEmpresaPropia");
            entity.Property(e => e.TerTerceroServicioEsFabricante).HasColumnName("ter_tercero_servicio_esFabricante");
            entity.Property(e => e.TerTerceroServicioEsProspecto).HasColumnName("ter_tercero_servicio_esProspecto");
            entity.Property(e => e.TerTerceroServicioEsProveedor).HasColumnName("ter_tercero_servicio_esProveedor");
            entity.Property(e => e.TerTerceroServicioEsTransportador).HasColumnName("ter_tercero_servicio_esTransportador");
            entity.Property(e => e.TerTerceroServicioFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_fax");
            entity.Property(e => e.TerTerceroServicioIdEstadoTercero).HasColumnName("ter_tercero_servicio_id_estadoTercero");
            entity.Property(e => e.TerTerceroServicioIdNaturalezaTercero).HasColumnName("ter_tercero_servicio_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroServicioIdZona).HasColumnName("ter_tercero_servicio_id_zona");
            entity.Property(e => e.TerTerceroServicioNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_notas");
            entity.Property(e => e.TerTerceroServicioRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_representante");
            entity.Property(e => e.TerTerceroServicioTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_telefono");
            entity.Property(e => e.TerTerceroServicioTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_tercero");
            entity.Property(e => e.TerTerceroServicioTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_tercero_codigo");
            entity.Property(e => e.TerTerceroServicioTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_tercero_nit");
            entity.Property(e => e.TerTerceroServicioTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroServicioWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_servicio_website");
            entity.Property(e => e.TerTerceroTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_telefono");
            entity.Property(e => e.TerTerceroTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero");
            entity.Property(e => e.TerTerceroTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_codigo");
            entity.Property(e => e.TerTerceroTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nit");
            entity.Property(e => e.TerTerceroTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_website");
            entity.Property(e => e.Ubicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ubicacion");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.UltimaLecturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("ultimaLectura_fh");
            entity.Property(e => e.VencimientoGarantiaDistribuidorFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("vencimientoGarantiaDistribuidor_ff");
            entity.Property(e => e.VencimientoGarantiaFabricaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("vencimientoGarantiaFabrica_ff");
        });

        modelBuilder.Entity<ViewEquEquipoAtributo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_equipoAtributo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatAtributoAtributo)
                .HasMaxLength(900)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_atributo");
            entity.Property(e => e.CatAtributoAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_atributo_codigo");
            entity.Property(e => e.CatAtributoEsObligatorio).HasColumnName("cat_atributo_esObligatorio");
            entity.Property(e => e.CatAtributoEsVariable).HasColumnName("cat_atributo_esVariable");
            entity.Property(e => e.CatAtributoIdSeccionAtributo).HasColumnName("cat_atributo_id_seccionAtributo");
            entity.Property(e => e.CatAtributoIdTipoAtributo).HasColumnName("cat_atributo_id_tipoAtributo");
            entity.Property(e => e.CatAtributoIdUnidad).HasColumnName("cat_atributo_id_unidad");
            entity.Property(e => e.CatAtributoNombreControl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_nombreControl");
            entity.Property(e => e.CatAtributoResaltado).HasColumnName("cat_atributo_resaltado");
            entity.Property(e => e.CatAtributoValorMaximo).HasColumnName("cat_atributo_ValorMaximo");
            entity.Property(e => e.CatAtributoValorMinimo).HasColumnName("cat_atributo_valorMinimo");
            entity.Property(e => e.CatPruebaCheckListActivo).HasColumnName("cat_pruebaCheckList_activo");
            entity.Property(e => e.CatPruebaCheckListPruebaCheckList)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_pruebaCheckList_pruebaCheckList");
            entity.Property(e => e.CatPruebaCheckListPruebaCheckListCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_pruebaCheckList_pruebaCheckList_codigo");
            entity.Property(e => e.DisEventoAfectaCliente).HasColumnName("dis_evento_afectaCliente");
            entity.Property(e => e.DisEventoAfectaProduccion).HasColumnName("dis_evento_afectaProduccion");
            entity.Property(e => e.DisEventoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dis_evento_codigo");
            entity.Property(e => e.DisEventoDuracionHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("dis_evento_duracion_hh");
            entity.Property(e => e.DisEventoEvento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("dis_evento_evento");
            entity.Property(e => e.DisEventoEventoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dis_evento_evento_codigo");
            entity.Property(e => e.DisEventoEventoTipo).HasColumnName("dis_evento_eventoTipo");
            entity.Property(e => e.DisEventoFechaHoraEstimadaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("dis_evento_fechaHoraEstimada_fh");
            entity.Property(e => e.DisEventoFechaHoraInicioFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("dis_evento_fechaHoraInicio_ff");
            entity.Property(e => e.DisEventoIdEquipo).HasColumnName("dis_evento_id_equipo");
            entity.Property(e => e.DisEventoIdEstadoEquipo).HasColumnName("dis_evento_id_estadoEquipo");
            entity.Property(e => e.DisEventoIdEstadoEvento).HasColumnName("dis_evento_id_estadoEvento");
            entity.Property(e => e.DisEventoIdFalla).HasColumnName("dis_evento_id_falla");
            entity.Property(e => e.DisEventoIdFallaCausa).HasColumnName("dis_evento_id_falla_causa");
            entity.Property(e => e.DisEventoIdMetodoDeteccion).HasColumnName("dis_evento_id_metodoDeteccion");
            entity.Property(e => e.DisEventoIdMotivoEvento).HasColumnName("dis_evento_id_motivoEvento");
            entity.Property(e => e.DisEventoIdUsuario).HasColumnName("dis_evento_id_usuario");
            entity.Property(e => e.DisEventoNotas)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("dis_evento_notas");
            entity.Property(e => e.DocDocumentoOtCargo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_cargo");
            entity.Property(e => e.DocDocumentoOtCompromisos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_compromisos");
            entity.Property(e => e.DocDocumentoOtContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_contacto");
            entity.Property(e => e.DocDocumentoOtCosto).HasColumnName("doc_documento_ot_costo");
            entity.Property(e => e.DocDocumentoOtCostoPlaneado).HasColumnName("doc_documento_ot_costoPlaneado");
            entity.Property(e => e.DocDocumentoOtDescuento).HasColumnName("doc_documento_ot_descuento");
            entity.Property(e => e.DocDocumentoOtDescuentoPlaneado).HasColumnName("doc_documento_ot_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoOtDiagnosticoInicial)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_diagnosticoInicial");
            entity.Property(e => e.DocDocumentoOtDireccionUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_direccionUbicacion");
            entity.Property(e => e.DocDocumentoOtDistribuyeCentros).HasColumnName("doc_documento.ot_distribuyeCentros");
            entity.Property(e => e.DocDocumentoOtDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_documento_codigo");
            entity.Property(e => e.DocDocumentoOtDocumentoNumero).HasColumnName("doc_documento_ot_documento_numero");
            entity.Property(e => e.DocDocumentoOtDocumentoOt)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_documento.ot");
            entity.Property(e => e.DocDocumentoOtDuracionEstimada).HasColumnName("doc_documento.ot_duracionEstimada");
            entity.Property(e => e.DocDocumentoOtEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_email");
            entity.Property(e => e.DocDocumentoOtEnTaller).HasColumnName("doc_documento.ot_enTaller");
            entity.Property(e => e.DocDocumentoOtFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_fax");
            entity.Property(e => e.DocDocumentoOtFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoOtFechaCompromisoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.ot_fechaCompromiso_fh");
            entity.Property(e => e.DocDocumentoOtFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fecha_fh");
            entity.Property(e => e.DocDocumentoOtFechaGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.ot_fechaGarantia_ff");
            entity.Property(e => e.DocDocumentoOtFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoOtFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoOtIdContrato).HasColumnName("doc_documento.ot_id_contrato");
            entity.Property(e => e.DocDocumentoOtIdDepartamentoSolicitud).HasColumnName("doc_documento.ot_id_departamentoSolicitud");
            entity.Property(e => e.DocDocumentoOtIdDocumento).HasColumnName("doc_documento_ot_id_documento");
            entity.Property(e => e.DocDocumentoOtIdEquipo).HasColumnName("doc_documento.ot_id_equipo");
            entity.Property(e => e.DocDocumentoOtIdEstadoTipoDocumento).HasColumnName("doc_documento_ot_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoOtIdMoneda).HasColumnName("doc_documento_ot_id_moneda");
            entity.Property(e => e.DocDocumentoOtIdMotivoCancelacion).HasColumnName("doc_documento.ot_id_motivoCancelacion");
            entity.Property(e => e.DocDocumentoOtIdMotivoestado).HasColumnName("doc_documento_ot_id_motivoestado");
            entity.Property(e => e.DocDocumentoOtIdPrioridadDocumento).HasColumnName("doc_documento_ot_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoOtIdSistema).HasColumnName("doc_documento.ot_id_sistema");
            entity.Property(e => e.DocDocumentoOtIdSubtipoDocumento).HasColumnName("doc_documento_ot_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoOtIdSucursal).HasColumnName("doc_documento.ot_id_sucursal");
            entity.Property(e => e.DocDocumentoOtIdTerceroCliente).HasColumnName("doc_documento_ot_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoOtIdTerceroProveedor).HasColumnName("doc_documento_ot_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoOtIdTipoServicio).HasColumnName("doc_documento.ot_id_tipoServicio");
            entity.Property(e => e.DocDocumentoOtIdUsuarioAsignado).HasColumnName("doc_documento_ot_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoOtIdUsuarioCoordinador).HasColumnName("doc_documento.ot_id_usuario_coordinador");
            entity.Property(e => e.DocDocumentoOtIdUsuarioEnUso).HasColumnName("doc_documento_ot_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoOtIdZona).HasColumnName("doc_documento.ot_id_zona");
            entity.Property(e => e.DocDocumentoOtIva).HasColumnName("doc_documento_ot_iva");
            entity.Property(e => e.DocDocumentoOtIvaPlaneado).HasColumnName("doc_documento_ot_ivaPlaneado");
            entity.Property(e => e.DocDocumentoOtMotivoServicio)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_motivoServicio");
            entity.Property(e => e.DocDocumentoOtPorcentajeCliente).HasColumnName("doc_documento.ot_porcentajeCliente");
            entity.Property(e => e.DocDocumentoOtPorcentajeDistribuidor).HasColumnName("doc_documento.ot_porcentajeDistribuidor");
            entity.Property(e => e.DocDocumentoOtPorcentajeFabricante).HasColumnName("doc_documento.ot_porcentajeFabricante");
            entity.Property(e => e.DocDocumentoOtPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_prefijo");
            entity.Property(e => e.DocDocumentoOtReclamacionFabrica)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_reclamacionFabrica");
            entity.Property(e => e.DocDocumentoOtRecomendaciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_recomendaciones");
            entity.Property(e => e.DocDocumentoOtRentabilidad).HasColumnName("doc_documento_ot_rentabilidad");
            entity.Property(e => e.DocDocumentoOtSegunTempario).HasColumnName("doc_documento.ot_segunTempario");
            entity.Property(e => e.DocDocumentoOtSubtotal).HasColumnName("doc_documento_ot_subtotal");
            entity.Property(e => e.DocDocumentoOtSubtotalPlaneado).HasColumnName("doc_documento_ot_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoOtTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_telefono");
            entity.Property(e => e.DocDocumentoOtTotal).HasColumnName("doc_documento_ot_total");
            entity.Property(e => e.DocDocumentoOtTotalPlaneado).HasColumnName("doc_documento_ot_totalPlaneado");
            entity.Property(e => e.DocDocumentoOtTrabajos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_trabajos");
            entity.Property(e => e.DocDocumentoOtTrm).HasColumnName("doc_documento_ot_trm");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquEquipoCosto)
                .HasColumnType("money")
                .HasColumnName("equ_equipo_costo");
            entity.Property(e => e.EquEquipoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo");
            entity.Property(e => e.EquEquipoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_codigo");
            entity.Property(e => e.EquEquipoEquipoSerial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_serial");
            entity.Property(e => e.EquEquipoFechaImportacionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaImportacion_ff");
            entity.Property(e => e.EquEquipoFechaPuestaMarchaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaPuestaMarcha_fh");
            entity.Property(e => e.EquEquipoGarantiaCancelada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_garantiaCancelada");
            entity.Property(e => e.EquEquipoHorasGarantia).HasColumnName("equ_equipo_horasGarantia");
            entity.Property(e => e.EquEquipoHorometroActual).HasColumnName("equ_equipo_horometroActual");
            entity.Property(e => e.EquEquipoIdCatalogoEquipo).HasColumnName("equ_equipo_id_catalogo.equipo");
            entity.Property(e => e.EquEquipoIdCentroCosto).HasColumnName("equ_equipo_id_centroCosto");
            entity.Property(e => e.EquEquipoIdEquipo).HasColumnName("equ_equipo_id_equipo");
            entity.Property(e => e.EquEquipoIdEstadoEquipo).HasColumnName("equ_equipo_id_estadoEquipo");
            entity.Property(e => e.EquEquipoIdSistema).HasColumnName("equ_equipo_id_sistema");
            entity.Property(e => e.EquEquipoIdSucursal).HasColumnName("equ_equipo_id_sucursal");
            entity.Property(e => e.EquEquipoIdTercero).HasColumnName("equ_equipo_id_tercero");
            entity.Property(e => e.EquEquipoIdTerceroComprador).HasColumnName("equ_equipo_id_tercero_comprador");
            entity.Property(e => e.EquEquipoIdTerceroServicio).HasColumnName("equ_equipo_id_tercero_servicio");
            entity.Property(e => e.EquEquipoIdVersionEquipo).HasColumnName("equ_equipo_id_versionEquipo");
            entity.Property(e => e.EquEquipoIdZona).HasColumnName("equ_equipo_id_zona");
            entity.Property(e => e.EquEquipoNombreContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_nombreContacto");
            entity.Property(e => e.EquEquipoObservaciones)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_observaciones");
            entity.Property(e => e.EquEquipoPromedioHoras).HasColumnName("equ_equipo_promedioHoras");
            entity.Property(e => e.EquEquipoTelefonoContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_telefonoContacto");
            entity.Property(e => e.EquEquipoUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_ubicacion");
            entity.Property(e => e.EquEquipoUltimaLecturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_ultimaLectura_fh");
            entity.Property(e => e.EquEquipoVencimientoGarantiaDistribuidorFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaDistribuidor_ff");
            entity.Property(e => e.EquEquipoVencimientoGarantiaFabricaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaFabrica_ff");
            entity.Property(e => e.EquOpcionAtributoIdAtributo).HasColumnName("equ_opcionAtributo_id_atributo");
            entity.Property(e => e.EquOpcionAtributoOpcionAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_opcionAtributo_opcionAtributo");
            entity.Property(e => e.EquOpcionAtributoOpcionAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_opcionAtributo_opcionAtributo_codigo");
            entity.Property(e => e.EquOpcionAtributoOrden).HasColumnName("equ_opcionAtributo_orden");
            entity.Property(e => e.EquipoAtributo)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("equipoAtributo");
            entity.Property(e => e.EquipoAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equipoAtributo_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdAtributo).HasColumnName("id_atributo");
            entity.Property(e => e.IdDocumentoOt).HasColumnName("id_documento.ot");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdEvento).HasColumnName("id_evento");
            entity.Property(e => e.IdOpcionAtributo).HasColumnName("id_opcionAtributo");
            entity.Property(e => e.IdPruebaCheckList).HasColumnName("id_pruebaCheckList");
            entity.Property(e => e.IdReporteTecnico).HasColumnName("id_reporteTecnico");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.OrtReporteTecnicoCompromisos)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_compromisos");
            entity.Property(e => e.OrtReporteTecnicoDiagnostico)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_diagnostico");
            entity.Property(e => e.OrtReporteTecnicoIdCanalAtencion).HasColumnName("ort_reporteTecnico_id_canalAtencion");
            entity.Property(e => e.OrtReporteTecnicoIdDocumentoGasto).HasColumnName("ort_reporteTecnico_id_documento.gasto");
            entity.Property(e => e.OrtReporteTecnicoIdGasto).HasColumnName("ort_reporteTecnico_id_gasto");
            entity.Property(e => e.OrtReporteTecnicoNumero)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_numero");
            entity.Property(e => e.OrtReporteTecnicoRecomendaciones)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_recomendaciones");
            entity.Property(e => e.OrtReporteTecnicoReporteTecnico)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_reporteTecnico");
            entity.Property(e => e.OrtReporteTecnicoReporteTecnicoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_reporteTecnico_codigo");
            entity.Property(e => e.OrtReporteTecnicoTrabajos)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_trabajos");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Unidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("unidad");
        });

        modelBuilder.Entity<ViewEquEquipoItemDocumento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_equipo_itemDocumento");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoBloquearCostear).HasColumnName("cat_catalogo_bloquearCostear");
            entity.Property(e => e.CatCatalogoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo");
            entity.Property(e => e.CatCatalogoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_codigoInventario");
            entity.Property(e => e.CatCatalogoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_descripcion");
            entity.Property(e => e.CatCatalogoEsNacional).HasColumnName("cat_catalogo_esNacional");
            entity.Property(e => e.CatCatalogoIdFamilia).HasColumnName("cat_catalogo_id_familia");
            entity.Property(e => e.CatCatalogoIdImpuesto).HasColumnName("cat_catalogo_id_impuesto");
            entity.Property(e => e.CatCatalogoIdSubtipoCatalogo).HasColumnName("cat_catalogo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoIdUnidad).HasColumnName("cat_catalogo_id_unidad");
            entity.Property(e => e.CatCatalogoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_precioVenta");
            entity.Property(e => e.CatCatalogoTiempoConsecucion).HasColumnName("cat_catalogo_tiempoConsecucion");
            entity.Property(e => e.DocItemDocumentoAfectoInventario).HasColumnName("doc_itemDocumento_afectoInventario");
            entity.Property(e => e.DocItemDocumentoCantAuxiliar).HasColumnName("doc_itemDocumento_cantAuxiliar");
            entity.Property(e => e.DocItemDocumentoCantidadEjecutado).HasColumnName("doc_itemDocumento_cantidadEjecutado");
            entity.Property(e => e.DocItemDocumentoCantidadPlaneado).HasColumnName("doc_itemDocumento_cantidadPlaneado");
            entity.Property(e => e.DocItemDocumentoCostear).HasColumnName("doc_itemDocumento_costear");
            entity.Property(e => e.DocItemDocumentoCostoEjecutado).HasColumnName("doc_itemDocumento_costoEjecutado");
            entity.Property(e => e.DocItemDocumentoCostoPlaneado).HasColumnName("doc_itemDocumento_costoPlaneado");
            entity.Property(e => e.DocItemDocumentoDetalle)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_detalle");
            entity.Property(e => e.DocItemDocumentoDtoEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_dtoEjecutado");
            entity.Property(e => e.DocItemDocumentoDtoPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_dtoPlaneado");
            entity.Property(e => e.DocItemDocumentoEsUrgente).HasColumnName("doc_itemDocumento_esUrgente");
            entity.Property(e => e.DocItemDocumentoHorasFestivas).HasColumnName("doc_itemDocumento_horasFestivas");
            entity.Property(e => e.DocItemDocumentoHorasGarantia).HasColumnName("doc_itemDocumento_horasGarantia");
            entity.Property(e => e.DocItemDocumentoHorasNocturnas).HasColumnName("doc_itemDocumento_horasNocturnas");
            entity.Property(e => e.DocItemDocumentoHorasOrdinales).HasColumnName("doc_itemDocumento_horasOrdinales");
            entity.Property(e => e.DocItemDocumentoIdBodega).HasColumnName("doc_itemDocumento_id_bodega");
            entity.Property(e => e.DocItemDocumentoIdCatalogo).HasColumnName("doc_itemDocumento_id_catalogo");
            entity.Property(e => e.DocItemDocumentoIdCentroCosto).HasColumnName("doc_itemDocumento_id_centroCosto");
            entity.Property(e => e.DocItemDocumentoIdDocumento).HasColumnName("doc_itemDocumento_id_documento");
            entity.Property(e => e.DocItemDocumentoIdIncoterm).HasColumnName("doc_itemDocumento_id_incoterm");
            entity.Property(e => e.DocItemDocumentoIdItemDocumento).HasColumnName("doc_itemDocumento_id_itemDocumento");
            entity.Property(e => e.DocItemDocumentoIdItemDocumentoSuperior).HasColumnName("doc_itemDocumento_id_itemDocumento_superior");
            entity.Property(e => e.DocItemDocumentoIdListaprecio).HasColumnName("doc_itemDocumento_id_listaprecio");
            entity.Property(e => e.DocItemDocumentoItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_itemDocumento");
            entity.Property(e => e.DocItemDocumentoItemDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_itemDocumento_codigo");
            entity.Property(e => e.DocItemDocumentoIvaEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_ivaEjecutado");
            entity.Property(e => e.DocItemDocumentoIvaPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_ivaPlaneado");
            entity.Property(e => e.DocItemDocumentoPorcdescuento).HasColumnName("doc_itemDocumento_porcdescuento");
            entity.Property(e => e.DocItemDocumentoPorcdto).HasColumnName("doc_itemDocumento_porcdto");
            entity.Property(e => e.DocItemDocumentoPorcentajeCliente).HasColumnName("doc_itemDocumento_porcentajeCliente");
            entity.Property(e => e.DocItemDocumentoPorcentajeDistribuidor).HasColumnName("doc_itemDocumento_porcentajeDistribuidor");
            entity.Property(e => e.DocItemDocumentoPorcentajeFabricante).HasColumnName("doc_itemDocumento_porcentajeFabricante");
            entity.Property(e => e.DocItemDocumentoPorciva).HasColumnName("doc_itemDocumento_porciva");
            entity.Property(e => e.DocItemDocumentoSubtotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_subtotalEjecutado");
            entity.Property(e => e.DocItemDocumentoSubtotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_subtotalPlaneado");
            entity.Property(e => e.DocItemDocumentoTotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_totalEjecutado");
            entity.Property(e => e.DocItemDocumentoTotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_totalPlaneado");
            entity.Property(e => e.DocItemDocumentoValorUnitarioEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_valorUnitarioEjecutado");
            entity.Property(e => e.DocItemDocumentoValorUnitarioPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_valorUnitarioPlaneado");
            entity.Property(e => e.DocItemDocumentoVencimientoGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_itemDocumento_vencimientoGarantia_ff");
            entity.Property(e => e.DocItemDocumentoVrbase).HasColumnName("doc_itemDocumento_vrbase");
            entity.Property(e => e.DocItemDocumentoVrenlista).HasColumnName("doc_itemDocumento_vrenlista");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquEquipoCosto)
                .HasColumnType("money")
                .HasColumnName("equ_equipo_costo");
            entity.Property(e => e.EquEquipoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo");
            entity.Property(e => e.EquEquipoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_codigo");
            entity.Property(e => e.EquEquipoEquipoSerial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_serial");
            entity.Property(e => e.EquEquipoFechaImportacionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaImportacion_ff");
            entity.Property(e => e.EquEquipoFechaPuestaMarchaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaPuestaMarcha_fh");
            entity.Property(e => e.EquEquipoGarantiaCancelada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_garantiaCancelada");
            entity.Property(e => e.EquEquipoHorasGarantia).HasColumnName("equ_equipo_horasGarantia");
            entity.Property(e => e.EquEquipoHorometroActual).HasColumnName("equ_equipo_horometroActual");
            entity.Property(e => e.EquEquipoIdCatalogoEquipo).HasColumnName("equ_equipo_id_catalogo.equipo");
            entity.Property(e => e.EquEquipoIdCentroCosto).HasColumnName("equ_equipo_id_centroCosto");
            entity.Property(e => e.EquEquipoIdEquipo).HasColumnName("equ_equipo_id_equipo");
            entity.Property(e => e.EquEquipoIdEstadoEquipo).HasColumnName("equ_equipo_id_estadoEquipo");
            entity.Property(e => e.EquEquipoIdSistema).HasColumnName("equ_equipo_id_sistema");
            entity.Property(e => e.EquEquipoIdSucursal).HasColumnName("equ_equipo_id_sucursal");
            entity.Property(e => e.EquEquipoIdTercero).HasColumnName("equ_equipo_id_tercero");
            entity.Property(e => e.EquEquipoIdTerceroComprador).HasColumnName("equ_equipo_id_tercero_comprador");
            entity.Property(e => e.EquEquipoIdTerceroServicio).HasColumnName("equ_equipo_id_tercero_servicio");
            entity.Property(e => e.EquEquipoIdVersionEquipo).HasColumnName("equ_equipo_id_versionEquipo");
            entity.Property(e => e.EquEquipoIdZona).HasColumnName("equ_equipo_id_zona");
            entity.Property(e => e.EquEquipoNombreContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_nombreContacto");
            entity.Property(e => e.EquEquipoObservaciones)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_observaciones");
            entity.Property(e => e.EquEquipoPromedioHoras).HasColumnName("equ_equipo_promedioHoras");
            entity.Property(e => e.EquEquipoTelefonoContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_telefonoContacto");
            entity.Property(e => e.EquEquipoUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_ubicacion");
            entity.Property(e => e.EquEquipoUltimaLecturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_ultimaLectura_fh");
            entity.Property(e => e.EquEquipoVencimientoGarantiaDistribuidorFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaDistribuidor_ff");
            entity.Property(e => e.EquEquipoVencimientoGarantiaFabricaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaFabrica_ff");
            entity.Property(e => e.EquipoItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equipo_itemDocumento");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdDocitemDocumento).HasColumnName("id_docitemDocumento");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdItemDocumento).HasColumnName("id_itemDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewEquEstadoEquipo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_estadoEquipo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EstadoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("estadoEquipo");
            entity.Property(e => e.EstadoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("estadoEquipo_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewEquEstadoPrestamo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_estadoPrestamo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EstadoPrestamo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("estadoPrestamo");
            entity.Property(e => e.EstadoPrestamoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("estadoPrestamo_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewEquFalla>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_falla");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquFallaPadreFalla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_falla_padre_falla");
            entity.Property(e => e.EquFallaPadreFallaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_falla_padre_falla_codigo");
            entity.Property(e => e.EquFallaPadreIdFalla).HasColumnName("equ_falla_padre_id_falla");
            entity.Property(e => e.EquFallaPadreIdTipoFalla).HasColumnName("equ_falla_padre_id_tipoFalla");
            entity.Property(e => e.EquFallaPadreProcedimiento)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("equ_falla_padre_procedimiento");
            entity.Property(e => e.EquTipoFallaTipoFalla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_tipoFalla_tipoFalla");
            entity.Property(e => e.EquTipoFallaTipoFallaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_tipoFalla_tipoFalla_codigo");
            entity.Property(e => e.Falla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("falla");
            entity.Property(e => e.FallaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("falla_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdFalla).HasColumnName("id_falla");
            entity.Property(e => e.IdTipoFalla).HasColumnName("id_tipoFalla");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Procedimiento)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("procedimiento");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewEquFamiliaFalla>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_familia_falla");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquFallaFalla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_falla_falla");
            entity.Property(e => e.EquFallaFallaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_falla_falla_codigo");
            entity.Property(e => e.EquFallaIdFalla).HasColumnName("equ_falla_id_falla");
            entity.Property(e => e.EquFallaIdTipoFalla).HasColumnName("equ_falla_id_tipoFalla");
            entity.Property(e => e.EquFallaProcedimiento)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("equ_falla_procedimiento");
            entity.Property(e => e.FamiliaFalla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("familia_falla");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenFamiliaFamilia)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_familia_familia");
            entity.Property(e => e.GenFamiliaFamiliaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_familia_familia_codigo");
            entity.Property(e => e.GenFamiliaIdFamilia).HasColumnName("gen_familia_id_familia");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdFalla).HasColumnName("id_falla");
            entity.Property(e => e.IdFamilia).HasColumnName("id_familia");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewEquOpcionAtributo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_opcionAtributo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatAtributoAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_atributo");
            entity.Property(e => e.CatAtributoAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_atributo_codigo");
            entity.Property(e => e.CatAtributoEsObligatorio).HasColumnName("cat_atributo_esObligatorio");
            entity.Property(e => e.CatAtributoEsVariable).HasColumnName("cat_atributo_esVariable");
            entity.Property(e => e.CatAtributoIdSeccionAtributo).HasColumnName("cat_atributo_id_seccionAtributo");
            entity.Property(e => e.CatAtributoIdTipoAtributo).HasColumnName("cat_atributo_id_tipoAtributo");
            entity.Property(e => e.CatAtributoIdUnidad).HasColumnName("cat_atributo_id_unidad");
            entity.Property(e => e.CatAtributoNombreControl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_nombreControl");
            entity.Property(e => e.CatAtributoResaltado).HasColumnName("cat_atributo_resaltado");
            entity.Property(e => e.CatAtributoValorMaximo).HasColumnName("cat_atributo_ValorMaximo");
            entity.Property(e => e.CatAtributoValorMinimo).HasColumnName("cat_atributo_valorMinimo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdAtributo).HasColumnName("id_atributo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.OpcionAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("opcionAtributo");
            entity.Property(e => e.OpcionAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("opcionAtributo_codigo");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewEquOpcionAtributoDependiente>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_opcionAtributoDependiente");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquOpcionAtributoHijoIdAtributo).HasColumnName("equ_opcionAtributo_hijo_id_atributo");
            entity.Property(e => e.EquOpcionAtributoHijoOpcionAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_opcionAtributo_hijo_opcionAtributo");
            entity.Property(e => e.EquOpcionAtributoHijoOpcionAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_opcionAtributo_hijo_opcionAtributo_codigo");
            entity.Property(e => e.EquOpcionAtributoHijoOrden).HasColumnName("equ_opcionAtributo_hijo_orden");
            entity.Property(e => e.EquOpcionAtributoPadreIdAtributo).HasColumnName("equ_opcionAtributo_padre_id_atributo");
            entity.Property(e => e.EquOpcionAtributoPadreOpcionAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_opcionAtributo_padre_opcionAtributo");
            entity.Property(e => e.EquOpcionAtributoPadreOpcionAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_opcionAtributo_padre_opcionAtributo_codigo");
            entity.Property(e => e.EquOpcionAtributoPadreOrden).HasColumnName("equ_opcionAtributo_padre_orden");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdOpcionAtributoHijo).HasColumnName("id_opcionAtributo_hijo");
            entity.Property(e => e.IdOpcionAtributoPadre).HasColumnName("id_opcionAtributo_padre");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.OpcionAtributoDependiente)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("opcionAtributoDependiente");
            entity.Property(e => e.OpcionAtributoDependienteCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("opcionAtributoDependiente_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewEquOverhall>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_overhall");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocDocumentoOtCargo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_cargo");
            entity.Property(e => e.DocDocumentoOtCompromisos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_compromisos");
            entity.Property(e => e.DocDocumentoOtContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_contacto");
            entity.Property(e => e.DocDocumentoOtCosto).HasColumnName("doc_documento_ot_costo");
            entity.Property(e => e.DocDocumentoOtCostoPlaneado).HasColumnName("doc_documento_ot_costoPlaneado");
            entity.Property(e => e.DocDocumentoOtDescuento).HasColumnName("doc_documento_ot_descuento");
            entity.Property(e => e.DocDocumentoOtDescuentoPlaneado).HasColumnName("doc_documento_ot_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoOtDiagnosticoInicial)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_diagnosticoInicial");
            entity.Property(e => e.DocDocumentoOtDireccionUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_direccionUbicacion");
            entity.Property(e => e.DocDocumentoOtDistribuyeCentros).HasColumnName("doc_documento.ot_distribuyeCentros");
            entity.Property(e => e.DocDocumentoOtDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_documento_codigo");
            entity.Property(e => e.DocDocumentoOtDocumentoNumero).HasColumnName("doc_documento_ot_documento_numero");
            entity.Property(e => e.DocDocumentoOtDocumentoOt)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_documento.ot");
            entity.Property(e => e.DocDocumentoOtDuracionEstimada).HasColumnName("doc_documento.ot_duracionEstimada");
            entity.Property(e => e.DocDocumentoOtEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_email");
            entity.Property(e => e.DocDocumentoOtEnTaller).HasColumnName("doc_documento.ot_enTaller");
            entity.Property(e => e.DocDocumentoOtFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_fax");
            entity.Property(e => e.DocDocumentoOtFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoOtFechaCompromisoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.ot_fechaCompromiso_fh");
            entity.Property(e => e.DocDocumentoOtFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fecha_fh");
            entity.Property(e => e.DocDocumentoOtFechaGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.ot_fechaGarantia_ff");
            entity.Property(e => e.DocDocumentoOtFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoOtFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoOtIdContrato).HasColumnName("doc_documento.ot_id_contrato");
            entity.Property(e => e.DocDocumentoOtIdDepartamentoSolicitud).HasColumnName("doc_documento.ot_id_departamentoSolicitud");
            entity.Property(e => e.DocDocumentoOtIdDocumento).HasColumnName("doc_documento_ot_id_documento");
            entity.Property(e => e.DocDocumentoOtIdEquipo).HasColumnName("doc_documento.ot_id_equipo");
            entity.Property(e => e.DocDocumentoOtIdEstadoTipoDocumento).HasColumnName("doc_documento_ot_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoOtIdMoneda).HasColumnName("doc_documento_ot_id_moneda");
            entity.Property(e => e.DocDocumentoOtIdMotivoCancelacion).HasColumnName("doc_documento.ot_id_motivoCancelacion");
            entity.Property(e => e.DocDocumentoOtIdMotivoestado).HasColumnName("doc_documento_ot_id_motivoestado");
            entity.Property(e => e.DocDocumentoOtIdPrioridadDocumento).HasColumnName("doc_documento_ot_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoOtIdSistema).HasColumnName("doc_documento.ot_id_sistema");
            entity.Property(e => e.DocDocumentoOtIdSubtipoDocumento).HasColumnName("doc_documento_ot_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoOtIdSucursal).HasColumnName("doc_documento.ot_id_sucursal");
            entity.Property(e => e.DocDocumentoOtIdTerceroCliente).HasColumnName("doc_documento_ot_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoOtIdTerceroProveedor).HasColumnName("doc_documento_ot_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoOtIdTipoServicio).HasColumnName("doc_documento.ot_id_tipoServicio");
            entity.Property(e => e.DocDocumentoOtIdUsuarioCoordinador).HasColumnName("doc_documento.ot_id_usuario_coordinador");
            entity.Property(e => e.DocDocumentoOtIdZona).HasColumnName("doc_documento.ot_id_zona");
            entity.Property(e => e.DocDocumentoOtIva).HasColumnName("doc_documento_ot_iva");
            entity.Property(e => e.DocDocumentoOtIvaPlaneado).HasColumnName("doc_documento_ot_ivaPlaneado");
            entity.Property(e => e.DocDocumentoOtMotivoServicio)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_motivoServicio");
            entity.Property(e => e.DocDocumentoOtPorcentajeCliente).HasColumnName("doc_documento.ot_porcentajeCliente");
            entity.Property(e => e.DocDocumentoOtPorcentajeDistribuidor).HasColumnName("doc_documento.ot_porcentajeDistribuidor");
            entity.Property(e => e.DocDocumentoOtPorcentajeFabricante).HasColumnName("doc_documento.ot_porcentajeFabricante");
            entity.Property(e => e.DocDocumentoOtPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_prefijo");
            entity.Property(e => e.DocDocumentoOtReclamacionFabrica)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_reclamacionFabrica");
            entity.Property(e => e.DocDocumentoOtRecomendaciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_recomendaciones");
            entity.Property(e => e.DocDocumentoOtRentabilidad).HasColumnName("doc_documento_ot_rentabilidad");
            entity.Property(e => e.DocDocumentoOtSegunTempario).HasColumnName("doc_documento.ot_segunTempario");
            entity.Property(e => e.DocDocumentoOtSubtotal).HasColumnName("doc_documento_ot_subtotal");
            entity.Property(e => e.DocDocumentoOtSubtotalPlaneado).HasColumnName("doc_documento_ot_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoOtTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_telefono");
            entity.Property(e => e.DocDocumentoOtTotal).HasColumnName("doc_documento_ot_total");
            entity.Property(e => e.DocDocumentoOtTotalPlaneado).HasColumnName("doc_documento_ot_totalPlaneado");
            entity.Property(e => e.DocDocumentoOtTrabajos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_trabajos");
            entity.Property(e => e.DocDocumentoOtTrm).HasColumnName("doc_documento_ot_trm");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquEquipoCosto)
                .HasColumnType("money")
                .HasColumnName("equ_equipo_costo");
            entity.Property(e => e.EquEquipoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo");
            entity.Property(e => e.EquEquipoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_codigo");
            entity.Property(e => e.EquEquipoEquipoSerial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_serial");
            entity.Property(e => e.EquEquipoFechaImportacionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaImportacion_ff");
            entity.Property(e => e.EquEquipoFechaPuestaMarchaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaPuestaMarcha_fh");
            entity.Property(e => e.EquEquipoGarantiaCancelada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_garantiaCancelada");
            entity.Property(e => e.EquEquipoHorasGarantia).HasColumnName("equ_equipo_horasGarantia");
            entity.Property(e => e.EquEquipoHorometroActual).HasColumnName("equ_equipo_horometroActual");
            entity.Property(e => e.EquEquipoIdCatalogoEquipo).HasColumnName("equ_equipo_id_catalogo.equipo");
            entity.Property(e => e.EquEquipoIdEquipo).HasColumnName("equ_equipo_id_equipo");
            entity.Property(e => e.EquEquipoIdEstadoEquipo).HasColumnName("equ_equipo_id_estadoEquipo");
            entity.Property(e => e.EquEquipoIdSistema).HasColumnName("equ_equipo_id_sistema");
            entity.Property(e => e.EquEquipoIdSucursal).HasColumnName("equ_equipo_id_sucursal");
            entity.Property(e => e.EquEquipoIdTercero).HasColumnName("equ_equipo_id_tercero");
            entity.Property(e => e.EquEquipoIdTerceroComprador).HasColumnName("equ_equipo_id_tercero_comprador");
            entity.Property(e => e.EquEquipoIdTerceroServicio).HasColumnName("equ_equipo_id_tercero_servicio");
            entity.Property(e => e.EquEquipoIdVersionEquipo).HasColumnName("equ_equipo_id_versionEquipo");
            entity.Property(e => e.EquEquipoIdZona).HasColumnName("equ_equipo_id_zona");
            entity.Property(e => e.EquEquipoNombreContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_nombreContacto");
            entity.Property(e => e.EquEquipoObservaciones)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_observaciones");
            entity.Property(e => e.EquEquipoPromedioHoras).HasColumnName("equ_equipo_promedioHoras");
            entity.Property(e => e.EquEquipoTelefonoContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_telefonoContacto");
            entity.Property(e => e.EquEquipoUbicacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_ubicacion");
            entity.Property(e => e.EquEquipoUltimaLecturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_ultimaLectura_fh");
            entity.Property(e => e.EquEquipoVencimientoGarantiaDistribuidorFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaDistribuidor_ff");
            entity.Property(e => e.EquEquipoVencimientoGarantiaFabricaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaFabrica_ff");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Horometro).HasColumnName("horometro");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDocumentoOt).HasColumnName("id_documento.ot");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Overhall)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("overhall");
            entity.Property(e => e.OverhallCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("overhall_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewEquPagoAlquiler>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_pagoAlquiler");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocDocumentoAlquilerCosto).HasColumnName("doc_documento_alquiler_costo");
            entity.Property(e => e.DocDocumentoAlquilerCostoPlaneado).HasColumnName("doc_documento_alquiler_costoPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerDescuento).HasColumnName("doc_documento_alquiler_descuento");
            entity.Property(e => e.DocDocumentoAlquilerDescuentoPlaneado).HasColumnName("doc_documento_alquiler_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerDocumentoAlquiler)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.alquiler_documento.alquiler");
            entity.Property(e => e.DocDocumentoAlquilerDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_documento_codigo");
            entity.Property(e => e.DocDocumentoAlquilerDocumentoNumero).HasColumnName("doc_documento_alquiler_documento_numero");
            entity.Property(e => e.DocDocumentoAlquilerFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoAlquilerFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_fecha_fh");
            entity.Property(e => e.DocDocumentoAlquilerFechaFinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.alquiler_fechaFin_ff");
            entity.Property(e => e.DocDocumentoAlquilerFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoAlquilerFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoAlquilerIdDocumento).HasColumnName("doc_documento_alquiler_id_documento");
            entity.Property(e => e.DocDocumentoAlquilerIdEstadoTipoDocumento).HasColumnName("doc_documento_alquiler_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoAlquilerIdMoneda).HasColumnName("doc_documento_alquiler_id_moneda");
            entity.Property(e => e.DocDocumentoAlquilerIdMotivoestado).HasColumnName("doc_documento_alquiler_id_motivoestado");
            entity.Property(e => e.DocDocumentoAlquilerIdPrioridadDocumento).HasColumnName("doc_documento_alquiler_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoAlquilerIdSubtipoDocumento).HasColumnName("doc_documento_alquiler_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoAlquilerIdTerceroCliente).HasColumnName("doc_documento_alquiler_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoAlquilerIdTerceroProveedor).HasColumnName("doc_documento_alquiler_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoAlquilerIva).HasColumnName("doc_documento_alquiler_iva");
            entity.Property(e => e.DocDocumentoAlquilerIvaPlaneado).HasColumnName("doc_documento_alquiler_ivaPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerMesVencido).HasColumnName("doc_documento.alquiler_mesVencido");
            entity.Property(e => e.DocDocumentoAlquilerObservaciones)
                .HasMaxLength(3000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.alquiler_observaciones");
            entity.Property(e => e.DocDocumentoAlquilerPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_prefijo");
            entity.Property(e => e.DocDocumentoAlquilerRentabilidad).HasColumnName("doc_documento_alquiler_rentabilidad");
            entity.Property(e => e.DocDocumentoAlquilerSubtotal).HasColumnName("doc_documento_alquiler_subtotal");
            entity.Property(e => e.DocDocumentoAlquilerSubtotalPlaneado).HasColumnName("doc_documento_alquiler_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerTotal).HasColumnName("doc_documento_alquiler_total");
            entity.Property(e => e.DocDocumentoAlquilerTotalPlaneado).HasColumnName("doc_documento_alquiler_totalPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerTrm).HasColumnName("doc_documento_alquiler_trm");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaEsperadaPagoFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaEsperadaPago_ff");
            entity.Property(e => e.FechaFacturaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_factura_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDocumentoAlquiler).HasColumnName("id_documento.alquiler");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.NumeroFactura)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("numeroFactura");
            entity.Property(e => e.PagoAlquiler)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pagoAlquiler");
            entity.Property(e => e.PagoAlquilerCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pagoAlquiler_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorFacturado)
                .HasColumnType("money")
                .HasColumnName("valorFacturado");
            entity.Property(e => e.ValorPorCobrar)
                .HasColumnType("money")
                .HasColumnName("valorPorCobrar");
        });

        modelBuilder.Entity<ViewEquPrestamo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_prestamo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquEstadoPrestamoEstadoPrestamo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_estadoPrestamo_estadoPrestamo");
            entity.Property(e => e.EquEstadoPrestamoEstadoPrestamoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_estadoPrestamo_estadoPrestamo_codigo");
            entity.Property(e => e.FechaCompromisoFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCompromiso_ff");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaPrestamoFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaPrestamo_ff");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEstadoPrestamo).HasColumnName("id_estadoPrestamo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioEntrego).HasColumnName("id_usuario_entrego");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Notas)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("notas");
            entity.Property(e => e.Prestamo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("prestamo");
            entity.Property(e => e.PrestamoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("prestamo_codigo");
            entity.Property(e => e.SegUsuarioEntregoAccesoActivo).HasColumnName("seg_usuario_entrego_accesoActivo");
            entity.Property(e => e.SegUsuarioEntregoAplicaRecargo).HasColumnName("seg_usuario_entrego_aplicaRecargo");
            entity.Property(e => e.SegUsuarioEntregoCambiarClave).HasColumnName("seg_usuario_entrego_cambiarClave");
            entity.Property(e => e.SegUsuarioEntregoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_entrego_clave");
            entity.Property(e => e.SegUsuarioEntregoCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_entrego_costoHora");
            entity.Property(e => e.SegUsuarioEntregoDireccion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_entrego_direccion");
            entity.Property(e => e.SegUsuarioEntregoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_entrego_email");
            entity.Property(e => e.SegUsuarioEntregoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_entrego_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioEntregoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_entrego_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioEntregoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_entrego_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioEntregoIdCargo).HasColumnName("seg_usuario_entrego_id_cargo");
            entity.Property(e => e.SegUsuarioEntregoIdGrupo).HasColumnName("seg_usuario_entrego_id_grupo");
            entity.Property(e => e.SegUsuarioEntregoIdPerfil).HasColumnName("seg_usuario_entrego_id_perfil");
            entity.Property(e => e.SegUsuarioEntregoIdUsuario).HasColumnName("seg_usuario_entrego_id_usuario");
            entity.Property(e => e.SegUsuarioEntregoIdZona).HasColumnName("seg_usuario_entrego_id_zona");
            entity.Property(e => e.SegUsuarioEntregoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_entrego_identificacion");
            entity.Property(e => e.SegUsuarioEntregoIntentosFallidos).HasColumnName("seg_usuario_entrego_intentosFallidos");
            entity.Property(e => e.SegUsuarioEntregoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_entrego_nombre");
            entity.Property(e => e.SegUsuarioEntregoNumeroIngresos).HasColumnName("seg_usuario_entrego_numeroIngresos");
            entity.Property(e => e.SegUsuarioEntregoPorcentajeComision).HasColumnName("seg_usuario_entrego_porcentajeComision");
            entity.Property(e => e.SegUsuarioEntregoPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_entrego_preferencias");
            entity.Property(e => e.SegUsuarioEntregoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_entrego_profesion");
            entity.Property(e => e.SegUsuarioEntregoSexo).HasColumnName("seg_usuario_entrego_sexo");
            entity.Property(e => e.SegUsuarioEntregoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_entrego_telefono");
            entity.Property(e => e.SegUsuarioEntregoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_entrego_usuario");
            entity.Property(e => e.SegUsuarioEntregoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_entrego_usuario_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewEquPrestamoEquipo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_prestamo_equipo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquEquipoCosto)
                .HasColumnType("money")
                .HasColumnName("equ_equipo_costo");
            entity.Property(e => e.EquEquipoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo");
            entity.Property(e => e.EquEquipoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_codigo");
            entity.Property(e => e.EquEquipoEquipoSerial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_serial");
            entity.Property(e => e.EquEquipoFechaImportacionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaImportacion_ff");
            entity.Property(e => e.EquEquipoFechaPuestaMarchaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaPuestaMarcha_fh");
            entity.Property(e => e.EquEquipoGarantiaCancelada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_garantiaCancelada");
            entity.Property(e => e.EquEquipoHorasGarantia).HasColumnName("equ_equipo_horasGarantia");
            entity.Property(e => e.EquEquipoHorometroActual).HasColumnName("equ_equipo_horometroActual");
            entity.Property(e => e.EquEquipoIdCatalogoEquipo).HasColumnName("equ_equipo_id_catalogo.equipo");
            entity.Property(e => e.EquEquipoIdEquipo).HasColumnName("equ_equipo_id_equipo");
            entity.Property(e => e.EquEquipoIdEstadoEquipo).HasColumnName("equ_equipo_id_estadoEquipo");
            entity.Property(e => e.EquEquipoIdSistema).HasColumnName("equ_equipo_id_sistema");
            entity.Property(e => e.EquEquipoIdSucursal).HasColumnName("equ_equipo_id_sucursal");
            entity.Property(e => e.EquEquipoIdTercero).HasColumnName("equ_equipo_id_tercero");
            entity.Property(e => e.EquEquipoIdTerceroComprador).HasColumnName("equ_equipo_id_tercero_comprador");
            entity.Property(e => e.EquEquipoIdTerceroServicio).HasColumnName("equ_equipo_id_tercero_servicio");
            entity.Property(e => e.EquEquipoIdVersionEquipo).HasColumnName("equ_equipo_id_versionEquipo");
            entity.Property(e => e.EquEquipoIdZona).HasColumnName("equ_equipo_id_zona");
            entity.Property(e => e.EquEquipoNombreContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_nombreContacto");
            entity.Property(e => e.EquEquipoObservaciones)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_observaciones");
            entity.Property(e => e.EquEquipoPromedioHoras).HasColumnName("equ_equipo_promedioHoras");
            entity.Property(e => e.EquEquipoTelefonoContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_telefonoContacto");
            entity.Property(e => e.EquEquipoUbicacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_ubicacion");
            entity.Property(e => e.EquEquipoUltimaLecturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_ultimaLectura_fh");
            entity.Property(e => e.EquEquipoVencimientoGarantiaDistribuidorFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaDistribuidor_ff");
            entity.Property(e => e.EquEquipoVencimientoGarantiaFabricaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaFabrica_ff");
            entity.Property(e => e.EquPrestamoFechaCompromisoFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_prestamo_fechaCompromiso_ff");
            entity.Property(e => e.EquPrestamoFechaPrestamoFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_prestamo_fechaPrestamo_ff");
            entity.Property(e => e.EquPrestamoIdEstadoPrestamo).HasColumnName("equ_prestamo_id_estadoPrestamo");
            entity.Property(e => e.EquPrestamoIdUsuarioEntrego).HasColumnName("equ_prestamo_id_usuario_entrego");
            entity.Property(e => e.EquPrestamoNotas)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_prestamo_notas");
            entity.Property(e => e.EquPrestamoPrestamo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_prestamo_prestamo");
            entity.Property(e => e.EquPrestamoPrestamoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_prestamo_prestamo_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaDevolucionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaDevolucion_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdPrestamo).HasColumnName("id_prestamo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PrestamoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("prestamo_equipo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewEquTipoAtributo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_tipoAtributo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PrefijoControl)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("prefijoControl");
            entity.Property(e => e.TipoAtributo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoAtributo");
            entity.Property(e => e.TipoAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoAtributo_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewEquTipoFalla>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_tipoFalla");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TipoFalla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoFalla");
            entity.Property(e => e.TipoFallaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoFalla_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewEquTipoTrazabilidad>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_tipoTrazabilidad");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TipoTrazabilidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoTrazabilidad");
            entity.Property(e => e.TipoTrazabilidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoTrazabilidad_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewEquTrazabilidad>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_equ_trazabilidad");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatPosicionIdCatalogoEquipoComponente).HasColumnName("cat_posicion_id_catalogo.equipo_componente");
            entity.Property(e => e.CatPosicionIdCatalogoEquipoEquipo).HasColumnName("cat_posicion_id_catalogo.equipo_equipo");
            entity.Property(e => e.CatPosicionIdDimensionX).HasColumnName("cat_posicion_id_dimension_x");
            entity.Property(e => e.CatPosicionIdDimensionY).HasColumnName("cat_posicion_id_dimension_y");
            entity.Property(e => e.CatPosicionIdDimensionZ).HasColumnName("cat_posicion_id_dimension_z");
            entity.Property(e => e.CatPosicionPosicion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_posicion_posicion");
            entity.Property(e => e.CatPosicionPosicionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_posicion_posicion_codigo");
            entity.Property(e => e.DisEventoAfectaCliente).HasColumnName("dis_evento_afectaCliente");
            entity.Property(e => e.DisEventoAfectaProduccion).HasColumnName("dis_evento_afectaProduccion");
            entity.Property(e => e.DisEventoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dis_evento_codigo");
            entity.Property(e => e.DisEventoDuracionHh)
                .HasColumnType("smalldatetime")
                .HasColumnName("dis_evento_duracion_hh");
            entity.Property(e => e.DisEventoEvento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("dis_evento_evento");
            entity.Property(e => e.DisEventoEventoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("dis_evento_evento_codigo");
            entity.Property(e => e.DisEventoEventoTipo).HasColumnName("dis_evento_eventoTipo");
            entity.Property(e => e.DisEventoFechaHoraEstimadaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("dis_evento_fechaHoraEstimada_fh");
            entity.Property(e => e.DisEventoFechaHoraInicioFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("dis_evento_fechaHoraInicio_ff");
            entity.Property(e => e.DisEventoIdEquipo).HasColumnName("dis_evento_id_equipo");
            entity.Property(e => e.DisEventoIdEstadoEquipo).HasColumnName("dis_evento_id_estadoEquipo");
            entity.Property(e => e.DisEventoIdEstadoEvento).HasColumnName("dis_evento_id_estadoEvento");
            entity.Property(e => e.DisEventoIdFalla).HasColumnName("dis_evento_id_falla");
            entity.Property(e => e.DisEventoIdFallaCausa).HasColumnName("dis_evento_id_falla_causa");
            entity.Property(e => e.DisEventoIdMetodoDeteccion).HasColumnName("dis_evento_id_metodoDeteccion");
            entity.Property(e => e.DisEventoIdMotivoEvento).HasColumnName("dis_evento_id_motivoEvento");
            entity.Property(e => e.DisEventoIdUsuario).HasColumnName("dis_evento_id_usuario");
            entity.Property(e => e.DisEventoNotas)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("dis_evento_notas");
            entity.Property(e => e.DocDocumentoAlquilerCosto).HasColumnName("doc_documento_alquiler_costo");
            entity.Property(e => e.DocDocumentoAlquilerCostoPlaneado).HasColumnName("doc_documento_alquiler_costoPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerDescuento).HasColumnName("doc_documento_alquiler_descuento");
            entity.Property(e => e.DocDocumentoAlquilerDescuentoPlaneado).HasColumnName("doc_documento_alquiler_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerDocumentoAlquiler)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.alquiler_documento.alquiler");
            entity.Property(e => e.DocDocumentoAlquilerDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_documento_codigo");
            entity.Property(e => e.DocDocumentoAlquilerDocumentoNumero).HasColumnName("doc_documento_alquiler_documento_numero");
            entity.Property(e => e.DocDocumentoAlquilerFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoAlquilerFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_fecha_fh");
            entity.Property(e => e.DocDocumentoAlquilerFechaFinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.alquiler_fechaFin_ff");
            entity.Property(e => e.DocDocumentoAlquilerFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoAlquilerFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_alquiler_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoAlquilerIdDocumento).HasColumnName("doc_documento_alquiler_id_documento");
            entity.Property(e => e.DocDocumentoAlquilerIdEstadoTipoDocumento).HasColumnName("doc_documento_alquiler_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoAlquilerIdMoneda).HasColumnName("doc_documento_alquiler_id_moneda");
            entity.Property(e => e.DocDocumentoAlquilerIdMotivoestado).HasColumnName("doc_documento_alquiler_id_motivoestado");
            entity.Property(e => e.DocDocumentoAlquilerIdPrioridadDocumento).HasColumnName("doc_documento_alquiler_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoAlquilerIdSubtipoDocumento).HasColumnName("doc_documento_alquiler_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoAlquilerIdTerceroCliente).HasColumnName("doc_documento_alquiler_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoAlquilerIdTerceroProveedor).HasColumnName("doc_documento_alquiler_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoAlquilerIva).HasColumnName("doc_documento_alquiler_iva");
            entity.Property(e => e.DocDocumentoAlquilerIvaPlaneado).HasColumnName("doc_documento_alquiler_ivaPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerMesVencido).HasColumnName("doc_documento.alquiler_mesVencido");
            entity.Property(e => e.DocDocumentoAlquilerObservaciones)
                .HasMaxLength(3000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.alquiler_observaciones");
            entity.Property(e => e.DocDocumentoAlquilerPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_alquiler_prefijo");
            entity.Property(e => e.DocDocumentoAlquilerRentabilidad).HasColumnName("doc_documento_alquiler_rentabilidad");
            entity.Property(e => e.DocDocumentoAlquilerSubtotal).HasColumnName("doc_documento_alquiler_subtotal");
            entity.Property(e => e.DocDocumentoAlquilerSubtotalPlaneado).HasColumnName("doc_documento_alquiler_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerTotal).HasColumnName("doc_documento_alquiler_total");
            entity.Property(e => e.DocDocumentoAlquilerTotalPlaneado).HasColumnName("doc_documento_alquiler_totalPlaneado");
            entity.Property(e => e.DocDocumentoAlquilerTrm).HasColumnName("doc_documento_alquiler_trm");
            entity.Property(e => e.DocDocumentoCosto).HasColumnName("doc_documento_costo");
            entity.Property(e => e.DocDocumentoCostoPlaneado).HasColumnName("doc_documento_costoPlaneado");
            entity.Property(e => e.DocDocumentoDescuento).HasColumnName("doc_documento_descuento");
            entity.Property(e => e.DocDocumentoDescuentoPlaneado).HasColumnName("doc_documento_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento");
            entity.Property(e => e.DocDocumentoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_documento_codigo");
            entity.Property(e => e.DocDocumentoDocumentoNumero).HasColumnName("doc_documento_documento_numero");
            entity.Property(e => e.DocDocumentoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fecha_fh");
            entity.Property(e => e.DocDocumentoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoIdDocumento).HasColumnName("doc_documento_id_documento");
            entity.Property(e => e.DocDocumentoIdEstadoTipoDocumento).HasColumnName("doc_documento_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoIdMoneda).HasColumnName("doc_documento_id_moneda");
            entity.Property(e => e.DocDocumentoIdMotivoestado).HasColumnName("doc_documento_id_motivoestado");
            entity.Property(e => e.DocDocumentoIdPrioridadDocumento).HasColumnName("doc_documento_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoIdSubtipoDocumento).HasColumnName("doc_documento_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoIdTerceroCliente).HasColumnName("doc_documento_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoIdTerceroProveedor).HasColumnName("doc_documento_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoIva).HasColumnName("doc_documento_iva");
            entity.Property(e => e.DocDocumentoIvaPlaneado).HasColumnName("doc_documento_ivaPlaneado");
            entity.Property(e => e.DocDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_prefijo");
            entity.Property(e => e.DocDocumentoRentabilidad).HasColumnName("doc_documento_rentabilidad");
            entity.Property(e => e.DocDocumentoSubtotal).HasColumnName("doc_documento_subtotal");
            entity.Property(e => e.DocDocumentoSubtotalPlaneado).HasColumnName("doc_documento_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoTotal).HasColumnName("doc_documento_total");
            entity.Property(e => e.DocDocumentoTotalPlaneado).HasColumnName("doc_documento_totalPlaneado");
            entity.Property(e => e.DocDocumentoTrm).HasColumnName("doc_documento_trm");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquCicloHorometroAfectarProyeccion).HasColumnName("equ_cicloHorometro_afectarProyeccion");
            entity.Property(e => e.EquCicloHorometroCicloHorometro)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_cicloHorometro_cicloHorometro");
            entity.Property(e => e.EquCicloHorometroCicloHorometroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_cicloHorometro_cicloHorometro_codigo");
            entity.Property(e => e.EquCicloHorometroHorometroFinal).HasColumnName("equ_cicloHorometro_horometroFinal");
            entity.Property(e => e.EquCicloHorometroHorometroInicial).HasColumnName("equ_cicloHorometro_horometroInicial");
            entity.Property(e => e.EquCicloHorometroIdEquipo).HasColumnName("equ_cicloHorometro_id_equipo");
            entity.Property(e => e.EquCicloHorometroNciclo).HasColumnName("equ_cicloHorometro_Nciclo");
            entity.Property(e => e.EquCicloHorometroReiniciarHorometro).HasColumnName("equ_cicloHorometro_reiniciarHorometro");
            entity.Property(e => e.EquCicloHorometroReparacionMayor).HasColumnName("equ_cicloHorometro_reparacionMayor");
            entity.Property(e => e.EquEquipoCosto)
                .HasColumnType("money")
                .HasColumnName("equ_equipo_costo");
            entity.Property(e => e.EquEquipoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo");
            entity.Property(e => e.EquEquipoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_codigo");
            entity.Property(e => e.EquEquipoEquipoSerial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_serial");
            entity.Property(e => e.EquEquipoFechaImportacionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaImportacion_ff");
            entity.Property(e => e.EquEquipoFechaPuestaMarchaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaPuestaMarcha_fh");
            entity.Property(e => e.EquEquipoGarantiaCancelada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_garantiaCancelada");
            entity.Property(e => e.EquEquipoHorasGarantia).HasColumnName("equ_equipo_horasGarantia");
            entity.Property(e => e.EquEquipoHorometroActual).HasColumnName("equ_equipo_horometroActual");
            entity.Property(e => e.EquEquipoIdCatalogoEquipo).HasColumnName("equ_equipo_id_catalogo.equipo");
            entity.Property(e => e.EquEquipoIdEquipo).HasColumnName("equ_equipo_id_equipo");
            entity.Property(e => e.EquEquipoIdEstadoEquipo).HasColumnName("equ_equipo_id_estadoEquipo");
            entity.Property(e => e.EquEquipoIdSistema).HasColumnName("equ_equipo_id_sistema");
            entity.Property(e => e.EquEquipoIdSucursal).HasColumnName("equ_equipo_id_sucursal");
            entity.Property(e => e.EquEquipoIdTercero).HasColumnName("equ_equipo_id_tercero");
            entity.Property(e => e.EquEquipoIdTerceroComprador).HasColumnName("equ_equipo_id_tercero_comprador");
            entity.Property(e => e.EquEquipoIdTerceroServicio).HasColumnName("equ_equipo_id_tercero_servicio");
            entity.Property(e => e.EquEquipoIdVersionEquipo).HasColumnName("equ_equipo_id_versionEquipo");
            entity.Property(e => e.EquEquipoIdZona).HasColumnName("equ_equipo_id_zona");
            entity.Property(e => e.EquEquipoNombreContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_nombreContacto");
            entity.Property(e => e.EquEquipoObservaciones)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_observaciones");
            entity.Property(e => e.EquEquipoPadreCosto)
                .HasColumnType("money")
                .HasColumnName("equ_equipo_padre_costo");
            entity.Property(e => e.EquEquipoPadreEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_padre_equipo");
            entity.Property(e => e.EquEquipoPadreEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_padre_equipo_codigo");
            entity.Property(e => e.EquEquipoPadreEquipoSerial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_padre_equipo_serial");
            entity.Property(e => e.EquEquipoPadreFechaImportacionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_padre_fechaImportacion_ff");
            entity.Property(e => e.EquEquipoPadreFechaPuestaMarchaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_padre_fechaPuestaMarcha_fh");
            entity.Property(e => e.EquEquipoPadreGarantiaCancelada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_padre_garantiaCancelada");
            entity.Property(e => e.EquEquipoPadreHorasGarantia).HasColumnName("equ_equipo_padre_horasGarantia");
            entity.Property(e => e.EquEquipoPadreHorometroActual).HasColumnName("equ_equipo_padre_horometroActual");
            entity.Property(e => e.EquEquipoPadreIdCatalogoEquipo).HasColumnName("equ_equipo_padre_id_catalogo.equipo");
            entity.Property(e => e.EquEquipoPadreIdEquipo).HasColumnName("equ_equipo_padre_id_equipo");
            entity.Property(e => e.EquEquipoPadreIdEstadoEquipo).HasColumnName("equ_equipo_padre_id_estadoEquipo");
            entity.Property(e => e.EquEquipoPadreIdSistema).HasColumnName("equ_equipo_padre_id_sistema");
            entity.Property(e => e.EquEquipoPadreIdSucursal).HasColumnName("equ_equipo_padre_id_sucursal");
            entity.Property(e => e.EquEquipoPadreIdTercero).HasColumnName("equ_equipo_padre_id_tercero");
            entity.Property(e => e.EquEquipoPadreIdTerceroComprador).HasColumnName("equ_equipo_padre_id_tercero_comprador");
            entity.Property(e => e.EquEquipoPadreIdTerceroServicio).HasColumnName("equ_equipo_padre_id_tercero_servicio");
            entity.Property(e => e.EquEquipoPadreIdVersionEquipo).HasColumnName("equ_equipo_padre_id_versionEquipo");
            entity.Property(e => e.EquEquipoPadreIdZona).HasColumnName("equ_equipo_padre_id_zona");
            entity.Property(e => e.EquEquipoPadreNombreContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_padre_nombreContacto");
            entity.Property(e => e.EquEquipoPadreObservaciones)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_padre_observaciones");
            entity.Property(e => e.EquEquipoPadrePromedioHoras).HasColumnName("equ_equipo_padre_promedioHoras");
            entity.Property(e => e.EquEquipoPadreTelefonoContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_padre_telefonoContacto");
            entity.Property(e => e.EquEquipoPadreUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_padre_ubicacion");
            entity.Property(e => e.EquEquipoPadreUltimaLecturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_padre_ultimaLectura_fh");
            entity.Property(e => e.EquEquipoPadreVencimientoGarantiaDistribuidorFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_padre_vencimientoGarantiaDistribuidor_ff");
            entity.Property(e => e.EquEquipoPadreVencimientoGarantiaFabricaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_padre_vencimientoGarantiaFabrica_ff");
            entity.Property(e => e.EquEquipoPromedioHoras).HasColumnName("equ_equipo_promedioHoras");
            entity.Property(e => e.EquEquipoTelefonoContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_telefonoContacto");
            entity.Property(e => e.EquEquipoUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_ubicacion");
            entity.Property(e => e.EquEquipoUltimaLecturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_ultimaLectura_fh");
            entity.Property(e => e.EquEquipoVencimientoGarantiaDistribuidorFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaDistribuidor_ff");
            entity.Property(e => e.EquEquipoVencimientoGarantiaFabricaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaFabrica_ff");
            entity.Property(e => e.EquEstadoEquipoActivo).HasColumnName("equ_estadoEquipo_activo");
            entity.Property(e => e.EquEstadoEquipoEstadoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_estadoEquipo_estadoEquipo");
            entity.Property(e => e.EquEstadoEquipoEstadoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_estadoEquipo_estadoEquipo_codigo");
            entity.Property(e => e.EquPrestamoFechaCompromisoFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_prestamo_fechaCompromiso_ff");
            entity.Property(e => e.EquPrestamoFechaPrestamoFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_prestamo_fechaPrestamo_ff");
            entity.Property(e => e.EquPrestamoIdEstadoPrestamo).HasColumnName("equ_prestamo_id_estadoPrestamo");
            entity.Property(e => e.EquPrestamoIdUsuarioEntrego).HasColumnName("equ_prestamo_id_usuario_entrego");
            entity.Property(e => e.EquPrestamoNotas)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_prestamo_notas");
            entity.Property(e => e.EquPrestamoPrestamo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_prestamo_prestamo");
            entity.Property(e => e.EquPrestamoPrestamoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_prestamo_prestamo_codigo");
            entity.Property(e => e.EquTipoTrazabilidadTipoTrazabilidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_tipoTrazabilidad_tipoTrazabilidad");
            entity.Property(e => e.EquTipoTrazabilidadTipoTrazabilidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_tipoTrazabilidad_tipoTrazabilidad_codigo");
            entity.Property(e => e.EsSoporte).HasColumnName("esSoporte");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Horometro).HasColumnName("horometro");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCicloHorometro).HasColumnName("id_cicloHorometro");
            entity.Property(e => e.IdDocumento).HasColumnName("id_documento");
            entity.Property(e => e.IdDocumentoAlquiler).HasColumnName("id_documento.alquiler");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdEquipoPadre).HasColumnName("id_equipo_padre");
            entity.Property(e => e.IdEstadoEquipo).HasColumnName("id_estadoEquipo");
            entity.Property(e => e.IdEvento).HasColumnName("id_evento");
            entity.Property(e => e.IdPosicion).HasColumnName("id_posicion");
            entity.Property(e => e.IdPrestamo).HasColumnName("id_prestamo");
            entity.Property(e => e.IdReporteTecnico).HasColumnName("id_reporteTecnico");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdTipoTrazabilidad).HasColumnName("id_tipoTrazabilidad");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.OrtReporteTecnicoCompromisos)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_compromisos");
            entity.Property(e => e.OrtReporteTecnicoIdGasto).HasColumnName("ort_reporteTecnico_id_gasto");
            entity.Property(e => e.OrtReporteTecnicoNumero)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_numero");
            entity.Property(e => e.OrtReporteTecnicoRecomendaciones)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_recomendaciones");
            entity.Property(e => e.OrtReporteTecnicoReporteTecnico)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_reporteTecnico");
            entity.Property(e => e.OrtReporteTecnicoReporteTecnicoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_reporteTecnico_codigo");
            entity.Property(e => e.OrtReporteTecnicoTrabajos)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_trabajos");
            entity.Property(e => e.TerSucursalCodigorecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_codigorecursiva");
            entity.Property(e => e.TerSucursalContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_contacto");
            entity.Property(e => e.TerSucursalDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Direccion");
            entity.Property(e => e.TerSucursalEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Email");
            entity.Property(e => e.TerSucursalFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Fax");
            entity.Property(e => e.TerSucursalIdEstadoTercero).HasColumnName("ter_sucursal_id_estadoTercero");
            entity.Property(e => e.TerSucursalIdSucursal).HasColumnName("ter_sucursal_id_sucursal");
            entity.Property(e => e.TerSucursalIdTercero).HasColumnName("ter_sucursal_id_tercero");
            entity.Property(e => e.TerSucursalIdUsuarioAsesor).HasColumnName("ter_sucursal_id_usuario_asesor");
            entity.Property(e => e.TerSucursalIdUsuarioTecnico).HasColumnName("ter_sucursal_id_usuario_tecnico");
            entity.Property(e => e.TerSucursalIdZona).HasColumnName("ter_sucursal_id_zona");
            entity.Property(e => e.TerSucursalParaAlquiler).HasColumnName("ter_sucursal_paraAlquiler");
            entity.Property(e => e.TerSucursalParaSoporte).HasColumnName("ter_sucursal_paraSoporte");
            entity.Property(e => e.TerSucursalParaVenta).HasColumnName("ter_sucursal_paraVenta");
            entity.Property(e => e.TerSucursalSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal");
            entity.Property(e => e.TerSucursalSucursalCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal_codigo");
            entity.Property(e => e.TerSucursalTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_telefono");
            entity.Property(e => e.TerTerceroClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_clasificacion");
            entity.Property(e => e.TerTerceroContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_contacto");
            entity.Property(e => e.TerTerceroDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_direccion");
            entity.Property(e => e.TerTerceroEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_email");
            entity.Property(e => e.TerTerceroEsCliente).HasColumnName("ter_tercero_esCliente");
            entity.Property(e => e.TerTerceroEsEmpresaPropia).HasColumnName("ter_tercero_esEmpresaPropia");
            entity.Property(e => e.TerTerceroEsFabricante).HasColumnName("ter_tercero_esFabricante");
            entity.Property(e => e.TerTerceroEsProspecto).HasColumnName("ter_tercero_esProspecto");
            entity.Property(e => e.TerTerceroEsProveedor).HasColumnName("ter_tercero_esProveedor");
            entity.Property(e => e.TerTerceroEsTransportador).HasColumnName("ter_tercero_esTransportador");
            entity.Property(e => e.TerTerceroFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fax");
            entity.Property(e => e.TerTerceroIdEstadoTercero).HasColumnName("ter_tercero_id_estadoTercero");
            entity.Property(e => e.TerTerceroIdNaturalezaTercero).HasColumnName("ter_tercero_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroIdZona).HasColumnName("ter_tercero_id_zona");
            entity.Property(e => e.TerTerceroNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_notas");
            entity.Property(e => e.TerTerceroRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_representante");
            entity.Property(e => e.TerTerceroTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_telefono");
            entity.Property(e => e.TerTerceroTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero");
            entity.Property(e => e.TerTerceroTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_codigo");
            entity.Property(e => e.TerTerceroTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nit");
            entity.Property(e => e.TerTerceroTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_website");
            entity.Property(e => e.Trazabilidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("trazabilidad");
            entity.Property(e => e.TrazabilidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("trazabilidad_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGasDetalleGasto>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gas_detalleGasto");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.CatCatalogoBloquearCostear).HasColumnName("cat_catalogo_bloquearCostear");
            entity.Property(e => e.CatCatalogoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo");
            entity.Property(e => e.CatCatalogoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_codigoInventario");
            entity.Property(e => e.CatCatalogoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_descripcion");
            entity.Property(e => e.CatCatalogoEsNacional).HasColumnName("cat_catalogo_esNacional");
            entity.Property(e => e.CatCatalogoIdFamilia).HasColumnName("cat_catalogo_id_familia");
            entity.Property(e => e.CatCatalogoIdImpuesto).HasColumnName("cat_catalogo_id_impuesto");
            entity.Property(e => e.CatCatalogoIdSubtipoCatalogo).HasColumnName("cat_catalogo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoIdUnidad).HasColumnName("cat_catalogo_id_unidad");
            entity.Property(e => e.CatCatalogoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_precioVenta");
            entity.Property(e => e.CatCatalogoTiempoConsecucion).HasColumnName("cat_catalogo_tiempoConsecucion");
            entity.Property(e => e.DetalleGasto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("detalleGasto");
            entity.Property(e => e.DetalleGastoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("detalleGasto_codigo");
            entity.Property(e => e.DocDocumentoGastoConcepto)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.gasto_concepto");
            entity.Property(e => e.DocDocumentoGastoConsignado).HasColumnName("doc_documento.gasto_consignado");
            entity.Property(e => e.DocDocumentoGastoCosto).HasColumnName("doc_documento_gasto_costo");
            entity.Property(e => e.DocDocumentoGastoCostoPlaneado).HasColumnName("doc_documento_gasto_costoPlaneado");
            entity.Property(e => e.DocDocumentoGastoDescuento).HasColumnName("doc_documento_gasto_descuento");
            entity.Property(e => e.DocDocumentoGastoDescuentoPlaneado).HasColumnName("doc_documento_gasto_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoGastoDias).HasColumnName("doc_documento.gasto_dias");
            entity.Property(e => e.DocDocumentoGastoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_documento_codigo");
            entity.Property(e => e.DocDocumentoGastoDocumentoGasto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.gasto_documento.gasto");
            entity.Property(e => e.DocDocumentoGastoDocumentoNumero).HasColumnName("doc_documento_gasto_documento_numero");
            entity.Property(e => e.DocDocumentoGastoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_gasto_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoGastoFechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.gasto_fecha_ff");
            entity.Property(e => e.DocDocumentoGastoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_gasto_fecha_fh");
            entity.Property(e => e.DocDocumentoGastoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_gasto_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoGastoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_gasto_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoGastoIdDocumento).HasColumnName("doc_documento_gasto_id_documento");
            entity.Property(e => e.DocDocumentoGastoIdEstadoTipoDocumento).HasColumnName("doc_documento_gasto_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoGastoIdMoneda).HasColumnName("doc_documento_gasto_id_moneda");
            entity.Property(e => e.DocDocumentoGastoIdMotivoestado).HasColumnName("doc_documento_gasto_id_motivoestado");
            entity.Property(e => e.DocDocumentoGastoIdPrioridadDocumento).HasColumnName("doc_documento_gasto_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoGastoIdSubtipoDocumento).HasColumnName("doc_documento_gasto_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoGastoIdTerceroCliente).HasColumnName("doc_documento_gasto_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoGastoIdTerceroProveedor).HasColumnName("doc_documento_gasto_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoGastoIdUsuarioAsignado).HasColumnName("doc_documento_gasto_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoGastoIdUsuarioEnUso).HasColumnName("doc_documento_gasto_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoGastoIva).HasColumnName("doc_documento_gasto_iva");
            entity.Property(e => e.DocDocumentoGastoIvaPlaneado).HasColumnName("doc_documento_gasto_ivaPlaneado");
            entity.Property(e => e.DocDocumentoGastoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_prefijo");
            entity.Property(e => e.DocDocumentoGastoRentabilidad).HasColumnName("doc_documento_gasto_rentabilidad");
            entity.Property(e => e.DocDocumentoGastoSubtotal).HasColumnName("doc_documento_gasto_subtotal");
            entity.Property(e => e.DocDocumentoGastoSubtotalPlaneado).HasColumnName("doc_documento_gasto_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoGastoTotal).HasColumnName("doc_documento_gasto_total");
            entity.Property(e => e.DocDocumentoGastoTotalPlaneado).HasColumnName("doc_documento_gasto_totalPlaneado");
            entity.Property(e => e.DocDocumentoGastoTrm).HasColumnName("doc_documento_gasto_trm");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GasGastoConcepto)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("gas_gasto_concepto");
            entity.Property(e => e.GasGastoConsignado).HasColumnName("gas_gasto_consignado");
            entity.Property(e => e.GasGastoDias).HasColumnName("gas_gasto_dias");
            entity.Property(e => e.GasGastoFechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("gas_gasto_fecha_ff");
            entity.Property(e => e.GasGastoGasto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gas_gasto_gasto");
            entity.Property(e => e.GasGastoGastoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gas_gasto_gasto_codigo");
            entity.Property(e => e.GasGastoIdEstadoTipoDocumento).HasColumnName("gas_gasto_id_estadoTipoDocumento");
            entity.Property(e => e.GasGastoIdTipoGasto).HasColumnName("gas_gasto_id_tipoGasto");
            entity.Property(e => e.GasGastoIdUsuarioAprobo).HasColumnName("gas_gasto_id_usuario_aprobo");
            entity.Property(e => e.GasGastoIdUsuarioSolicitante).HasColumnName("gas_gasto_id_usuario_solicitante");
            entity.Property(e => e.GasGastoNumero).HasColumnName("gas_gasto_numero");
            entity.Property(e => e.GasGastoValor).HasColumnName("gas_gasto_valor");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdDocumentoGasto).HasColumnName("id_documento.gasto");
            entity.Property(e => e.IdGasto).HasColumnName("id_gasto");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor).HasColumnName("valor");
        });

        modelBuilder.Entity<ViewGasDocumentoOtDetalleGasto>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gas_documento_ot_detalleGasto");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocDocumentoOtCargo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_cargo");
            entity.Property(e => e.DocDocumentoOtCompromisos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_compromisos");
            entity.Property(e => e.DocDocumentoOtContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_contacto");
            entity.Property(e => e.DocDocumentoOtCosto).HasColumnName("doc_documento_ot_costo");
            entity.Property(e => e.DocDocumentoOtCostoPlaneado).HasColumnName("doc_documento_ot_costoPlaneado");
            entity.Property(e => e.DocDocumentoOtDescuento).HasColumnName("doc_documento_ot_descuento");
            entity.Property(e => e.DocDocumentoOtDescuentoPlaneado).HasColumnName("doc_documento_ot_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoOtDiagnosticoInicial)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_diagnosticoInicial");
            entity.Property(e => e.DocDocumentoOtDireccionUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_direccionUbicacion");
            entity.Property(e => e.DocDocumentoOtDistribuyeCentros).HasColumnName("doc_documento.ot_distribuyeCentros");
            entity.Property(e => e.DocDocumentoOtDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_documento_codigo");
            entity.Property(e => e.DocDocumentoOtDocumentoNumero).HasColumnName("doc_documento_ot_documento_numero");
            entity.Property(e => e.DocDocumentoOtDocumentoOt)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_documento.ot");
            entity.Property(e => e.DocDocumentoOtDuracionEstimada).HasColumnName("doc_documento.ot_duracionEstimada");
            entity.Property(e => e.DocDocumentoOtEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_email");
            entity.Property(e => e.DocDocumentoOtEnTaller).HasColumnName("doc_documento.ot_enTaller");
            entity.Property(e => e.DocDocumentoOtFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_fax");
            entity.Property(e => e.DocDocumentoOtFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoOtFechaCompromisoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.ot_fechaCompromiso_fh");
            entity.Property(e => e.DocDocumentoOtFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fecha_fh");
            entity.Property(e => e.DocDocumentoOtFechaGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.ot_fechaGarantia_ff");
            entity.Property(e => e.DocDocumentoOtFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoOtFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoOtIdContrato).HasColumnName("doc_documento.ot_id_contrato");
            entity.Property(e => e.DocDocumentoOtIdDepartamentoSolicitud).HasColumnName("doc_documento.ot_id_departamentoSolicitud");
            entity.Property(e => e.DocDocumentoOtIdDocumento).HasColumnName("doc_documento_ot_id_documento");
            entity.Property(e => e.DocDocumentoOtIdEquipo).HasColumnName("doc_documento.ot_id_equipo");
            entity.Property(e => e.DocDocumentoOtIdEstadoTipoDocumento).HasColumnName("doc_documento_ot_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoOtIdMoneda).HasColumnName("doc_documento_ot_id_moneda");
            entity.Property(e => e.DocDocumentoOtIdMotivoCancelacion).HasColumnName("doc_documento.ot_id_motivoCancelacion");
            entity.Property(e => e.DocDocumentoOtIdMotivoestado).HasColumnName("doc_documento_ot_id_motivoestado");
            entity.Property(e => e.DocDocumentoOtIdPrioridadDocumento).HasColumnName("doc_documento_ot_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoOtIdSistema).HasColumnName("doc_documento.ot_id_sistema");
            entity.Property(e => e.DocDocumentoOtIdSubtipoDocumento).HasColumnName("doc_documento_ot_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoOtIdSucursal).HasColumnName("doc_documento.ot_id_sucursal");
            entity.Property(e => e.DocDocumentoOtIdTerceroCliente).HasColumnName("doc_documento_ot_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoOtIdTerceroProveedor).HasColumnName("doc_documento_ot_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoOtIdTipoServicio).HasColumnName("doc_documento.ot_id_tipoServicio");
            entity.Property(e => e.DocDocumentoOtIdUsuarioCoordinador).HasColumnName("doc_documento.ot_id_usuario_coordinador");
            entity.Property(e => e.DocDocumentoOtIdZona).HasColumnName("doc_documento.ot_id_zona");
            entity.Property(e => e.DocDocumentoOtIva).HasColumnName("doc_documento_ot_iva");
            entity.Property(e => e.DocDocumentoOtIvaPlaneado).HasColumnName("doc_documento_ot_ivaPlaneado");
            entity.Property(e => e.DocDocumentoOtMotivoServicio)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_motivoServicio");
            entity.Property(e => e.DocDocumentoOtPorcentajeCliente).HasColumnName("doc_documento.ot_porcentajeCliente");
            entity.Property(e => e.DocDocumentoOtPorcentajeDistribuidor).HasColumnName("doc_documento.ot_porcentajeDistribuidor");
            entity.Property(e => e.DocDocumentoOtPorcentajeFabricante).HasColumnName("doc_documento.ot_porcentajeFabricante");
            entity.Property(e => e.DocDocumentoOtPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_prefijo");
            entity.Property(e => e.DocDocumentoOtReclamacionFabrica)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_reclamacionFabrica");
            entity.Property(e => e.DocDocumentoOtRecomendaciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_recomendaciones");
            entity.Property(e => e.DocDocumentoOtRentabilidad).HasColumnName("doc_documento_ot_rentabilidad");
            entity.Property(e => e.DocDocumentoOtSegunTempario).HasColumnName("doc_documento.ot_segunTempario");
            entity.Property(e => e.DocDocumentoOtSubtotal).HasColumnName("doc_documento_ot_subtotal");
            entity.Property(e => e.DocDocumentoOtSubtotalPlaneado).HasColumnName("doc_documento_ot_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoOtTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_telefono");
            entity.Property(e => e.DocDocumentoOtTotal).HasColumnName("doc_documento_ot_total");
            entity.Property(e => e.DocDocumentoOtTotalPlaneado).HasColumnName("doc_documento_ot_totalPlaneado");
            entity.Property(e => e.DocDocumentoOtTrabajos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_trabajos");
            entity.Property(e => e.DocDocumentoOtTrm).HasColumnName("doc_documento_ot_trm");
            entity.Property(e => e.DocItemDocumentoAfectoInventario).HasColumnName("doc_itemDocumento_afectoInventario");
            entity.Property(e => e.DocItemDocumentoCantidadEjecutado).HasColumnName("doc_itemDocumento_cantidadEjecutado");
            entity.Property(e => e.DocItemDocumentoCantidadPlaneado).HasColumnName("doc_itemDocumento_cantidadPlaneado");
            entity.Property(e => e.DocItemDocumentoCostear).HasColumnName("doc_itemDocumento_costear");
            entity.Property(e => e.DocItemDocumentoCostoEjecutado).HasColumnName("doc_itemDocumento_costoEjecutado");
            entity.Property(e => e.DocItemDocumentoCostoPlaneado).HasColumnName("doc_itemDocumento_costoPlaneado");
            entity.Property(e => e.DocItemDocumentoDetalle)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_detalle");
            entity.Property(e => e.DocItemDocumentoDtoEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_dtoEjecutado");
            entity.Property(e => e.DocItemDocumentoDtoPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_dtoPlaneado");
            entity.Property(e => e.DocItemDocumentoEsUrgente).HasColumnName("doc_itemDocumento_esUrgente");
            entity.Property(e => e.DocItemDocumentoHorasFestivas).HasColumnName("doc_itemDocumento_horasFestivas");
            entity.Property(e => e.DocItemDocumentoHorasGarantia).HasColumnName("doc_itemDocumento_horasGarantia");
            entity.Property(e => e.DocItemDocumentoHorasNocturnas).HasColumnName("doc_itemDocumento_horasNocturnas");
            entity.Property(e => e.DocItemDocumentoHorasOrdinales).HasColumnName("doc_itemDocumento_horasOrdinales");
            entity.Property(e => e.DocItemDocumentoIdBodega).HasColumnName("doc_itemDocumento_id_bodega");
            entity.Property(e => e.DocItemDocumentoIdCatalogo).HasColumnName("doc_itemDocumento_id_catalogo");
            entity.Property(e => e.DocItemDocumentoIdCentroCosto).HasColumnName("doc_itemDocumento_id_centroCosto");
            entity.Property(e => e.DocItemDocumentoIdDocumento).HasColumnName("doc_itemDocumento_id_documento");
            entity.Property(e => e.DocItemDocumentoIdIncoterm).HasColumnName("doc_itemDocumento_id_incoterm");
            entity.Property(e => e.DocItemDocumentoIdItemDocumento).HasColumnName("doc_itemDocumento_id_itemDocumento");
            entity.Property(e => e.DocItemDocumentoIdItemDocumentoSuperior).HasColumnName("doc_itemDocumento_id_itemDocumento_superior");
            entity.Property(e => e.DocItemDocumentoIdListaprecio).HasColumnName("doc_itemDocumento_id_listaprecio");
            entity.Property(e => e.DocItemDocumentoItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_itemDocumento");
            entity.Property(e => e.DocItemDocumentoItemDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_itemDocumento_codigo");
            entity.Property(e => e.DocItemDocumentoIvaEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_ivaEjecutado");
            entity.Property(e => e.DocItemDocumentoIvaPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_ivaPlaneado");
            entity.Property(e => e.DocItemDocumentoPorcdto).HasColumnName("doc_itemDocumento_porcdto");
            entity.Property(e => e.DocItemDocumentoPorcentajeCliente).HasColumnName("doc_itemDocumento_porcentajeCliente");
            entity.Property(e => e.DocItemDocumentoPorcentajeDistribuidor).HasColumnName("doc_itemDocumento_porcentajeDistribuidor");
            entity.Property(e => e.DocItemDocumentoPorcentajeFabricante).HasColumnName("doc_itemDocumento_porcentajeFabricante");
            entity.Property(e => e.DocItemDocumentoPorciva).HasColumnName("doc_itemDocumento_porciva");
            entity.Property(e => e.DocItemDocumentoSubtotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_subtotalEjecutado");
            entity.Property(e => e.DocItemDocumentoSubtotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_subtotalPlaneado");
            entity.Property(e => e.DocItemDocumentoTotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_totalEjecutado");
            entity.Property(e => e.DocItemDocumentoTotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_totalPlaneado");
            entity.Property(e => e.DocItemDocumentoValorUnitarioEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_valorUnitarioEjecutado");
            entity.Property(e => e.DocItemDocumentoValorUnitarioPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_valorUnitarioPlaneado");
            entity.Property(e => e.DocItemDocumentoVencimientoGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_itemDocumento_vencimientoGarantia_ff");
            entity.Property(e => e.DocumentoOtDetalleGasto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("documento.ot_detalleGasto");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GasDetalleGastoCantidad).HasColumnName("gas_detalleGasto_cantidad");
            entity.Property(e => e.GasDetalleGastoDetalleGasto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gas_detalleGasto_detalleGasto");
            entity.Property(e => e.GasDetalleGastoDetalleGastoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gas_detalleGasto_detalleGasto_codigo");
            entity.Property(e => e.GasDetalleGastoFechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("gas_detalleGasto_fecha_ff");
            entity.Property(e => e.GasDetalleGastoIdCatalogo).HasColumnName("gas_detalleGasto_id_catalogo");
            entity.Property(e => e.GasDetalleGastoIdGasto).HasColumnName("gas_detalleGasto_id_gasto");
            entity.Property(e => e.GasDetalleGastoValor).HasColumnName("gas_detalleGasto_valor");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDetalleGasto).HasColumnName("id_detalleGasto");
            entity.Property(e => e.IdDocumentoOt).HasColumnName("id_documento.ot");
            entity.Property(e => e.IdItemDocumento).HasColumnName("id_itemDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGasGasto>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gas_gasto");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Concepto)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("concepto");
            entity.Property(e => e.Consignado).HasColumnName("consignado");
            entity.Property(e => e.Dias).HasColumnName("dias");
            entity.Property(e => e.DocEstadoTipoDocumentoAfectaIndicador).HasColumnName("doc_estadoTipoDocumento_afectaIndicador");
            entity.Property(e => e.DocEstadoTipoDocumentoAfectaInventario).HasColumnName("doc_estadoTipoDocumento_afectaInventario");
            entity.Property(e => e.DocEstadoTipoDocumentoColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_color");
            entity.Property(e => e.DocEstadoTipoDocumentoDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_descripcion");
            entity.Property(e => e.DocEstadoTipoDocumentoEditaDocumento).HasColumnName("doc_estadoTipoDocumento_editaDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_estadoTipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocEstadoTipoDocumentoIdTipoDocumento).HasColumnName("doc_estadoTipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoOrden).HasColumnName("doc_estadoTipoDocumento_orden");
            entity.Property(e => e.DocEstadoTipoDocumentoPuedeRegresar).HasColumnName("doc_estadoTipoDocumento_puedeRegresar");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GasTipoGastoTipoGasto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gas_tipoGasto_tipoGasto");
            entity.Property(e => e.GasTipoGastoTipoGastoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gas_tipoGasto_tipoGasto_codigo");
            entity.Property(e => e.Gasto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gasto");
            entity.Property(e => e.GastoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gasto_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEstadoTipoDocumento).HasColumnName("id_estadoTipoDocumento");
            entity.Property(e => e.IdTipoGasto).HasColumnName("id_tipoGasto");
            entity.Property(e => e.IdUsuarioAprobo).HasColumnName("id_usuario_aprobo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdUsuarioSolicitante).HasColumnName("id_usuario_solicitante");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Numero).HasColumnName("numero");
            entity.Property(e => e.SegUsuarioAproboAccesoActivo).HasColumnName("seg_usuario_aprobo_accesoActivo");
            entity.Property(e => e.SegUsuarioAproboAplicaRecargo).HasColumnName("seg_usuario_aprobo_aplicaRecargo");
            entity.Property(e => e.SegUsuarioAproboCambiarClave).HasColumnName("seg_usuario_aprobo_cambiarClave");
            entity.Property(e => e.SegUsuarioAproboClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_aprobo_clave");
            entity.Property(e => e.SegUsuarioAproboCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_aprobo_costoHora");
            entity.Property(e => e.SegUsuarioAproboDireccion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_aprobo_direccion");
            entity.Property(e => e.SegUsuarioAproboEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_aprobo_email");
            entity.Property(e => e.SegUsuarioAproboFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_aprobo_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioAproboFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_aprobo_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioAproboFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_aprobo_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioAproboIdCargo).HasColumnName("seg_usuario_aprobo_id_cargo");
            entity.Property(e => e.SegUsuarioAproboIdGrupo).HasColumnName("seg_usuario_aprobo_id_grupo");
            entity.Property(e => e.SegUsuarioAproboIdPerfil).HasColumnName("seg_usuario_aprobo_id_perfil");
            entity.Property(e => e.SegUsuarioAproboIdUsuario).HasColumnName("seg_usuario_aprobo_id_usuario");
            entity.Property(e => e.SegUsuarioAproboIdZona).HasColumnName("seg_usuario_aprobo_id_zona");
            entity.Property(e => e.SegUsuarioAproboIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_aprobo_identificacion");
            entity.Property(e => e.SegUsuarioAproboIntentosFallidos).HasColumnName("seg_usuario_aprobo_intentosFallidos");
            entity.Property(e => e.SegUsuarioAproboNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_aprobo_nombre");
            entity.Property(e => e.SegUsuarioAproboNumeroIngresos).HasColumnName("seg_usuario_aprobo_numeroIngresos");
            entity.Property(e => e.SegUsuarioAproboPorcentajeComision).HasColumnName("seg_usuario_aprobo_porcentajeComision");
            entity.Property(e => e.SegUsuarioAproboPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_aprobo_preferencias");
            entity.Property(e => e.SegUsuarioAproboProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_aprobo_profesion");
            entity.Property(e => e.SegUsuarioAproboSexo).HasColumnName("seg_usuario_aprobo_sexo");
            entity.Property(e => e.SegUsuarioAproboTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_aprobo_telefono");
            entity.Property(e => e.SegUsuarioAproboUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_aprobo_usuario");
            entity.Property(e => e.SegUsuarioAproboUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_aprobo_usuario_codigo");
            entity.Property(e => e.SegUsuarioSolicitanteAccesoActivo).HasColumnName("seg_usuario_solicitante_accesoActivo");
            entity.Property(e => e.SegUsuarioSolicitanteAplicaRecargo).HasColumnName("seg_usuario_solicitante_aplicaRecargo");
            entity.Property(e => e.SegUsuarioSolicitanteCambiarClave).HasColumnName("seg_usuario_solicitante_cambiarClave");
            entity.Property(e => e.SegUsuarioSolicitanteClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_solicitante_clave");
            entity.Property(e => e.SegUsuarioSolicitanteCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_solicitante_costoHora");
            entity.Property(e => e.SegUsuarioSolicitanteDireccion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_solicitante_direccion");
            entity.Property(e => e.SegUsuarioSolicitanteEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_solicitante_email");
            entity.Property(e => e.SegUsuarioSolicitanteFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_solicitante_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioSolicitanteFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_solicitante_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioSolicitanteFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_solicitante_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioSolicitanteIdCargo).HasColumnName("seg_usuario_solicitante_id_cargo");
            entity.Property(e => e.SegUsuarioSolicitanteIdGrupo).HasColumnName("seg_usuario_solicitante_id_grupo");
            entity.Property(e => e.SegUsuarioSolicitanteIdPerfil).HasColumnName("seg_usuario_solicitante_id_perfil");
            entity.Property(e => e.SegUsuarioSolicitanteIdUsuario).HasColumnName("seg_usuario_solicitante_id_usuario");
            entity.Property(e => e.SegUsuarioSolicitanteIdZona).HasColumnName("seg_usuario_solicitante_id_zona");
            entity.Property(e => e.SegUsuarioSolicitanteIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_solicitante_identificacion");
            entity.Property(e => e.SegUsuarioSolicitanteIntentosFallidos).HasColumnName("seg_usuario_solicitante_intentosFallidos");
            entity.Property(e => e.SegUsuarioSolicitanteNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_solicitante_nombre");
            entity.Property(e => e.SegUsuarioSolicitanteNumeroIngresos).HasColumnName("seg_usuario_solicitante_numeroIngresos");
            entity.Property(e => e.SegUsuarioSolicitantePorcentajeComision).HasColumnName("seg_usuario_solicitante_porcentajeComision");
            entity.Property(e => e.SegUsuarioSolicitantePreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_solicitante_preferencias");
            entity.Property(e => e.SegUsuarioSolicitanteProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_solicitante_profesion");
            entity.Property(e => e.SegUsuarioSolicitanteSexo).HasColumnName("seg_usuario_solicitante_sexo");
            entity.Property(e => e.SegUsuarioSolicitanteTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_solicitante_telefono");
            entity.Property(e => e.SegUsuarioSolicitanteUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_solicitante_usuario");
            entity.Property(e => e.SegUsuarioSolicitanteUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_solicitante_usuario_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor).HasColumnName("valor");
        });

        modelBuilder.Entity<ViewGasTipoGasto>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gas_tipoGasto");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TipoGasto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoGasto");
            entity.Property(e => e.TipoGastoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoGasto_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenAccesosSamm>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_accesosSamm");

            entity.Property(e => e.AccesosSamm)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("accesosSamm");
            entity.Property(e => e.AccesosSammCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("accesosSamm_codigo");
            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DireccionIp)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("direccionIP");
            entity.Property(e => e.Edita).HasColumnName("edita");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsHijo).HasColumnName("esHijo");
            entity.Property(e => e.EsSalida).HasColumnName("esSalida");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenAccionNotificacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_accionNotificacion");

            entity.Property(e => e.AccionNotificacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("accionNotificacion");
            entity.Property(e => e.AccionNotificacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("accionNotificacion_codigo");
            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenTipoNotificacionTipoNotificacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_tipoNotificacion_tipoNotificacion");
            entity.Property(e => e.GenTipoNotificacionTipoNotificacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_tipoNotificacion_tipoNotificacion_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdPuntoIntegracion).HasColumnName("id_puntoIntegracion");
            entity.Property(e => e.IdTipoNotificacion).HasColumnName("id_tipoNotificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.SynPuntoIntegracionCantidadReintentos).HasColumnName("syn_puntoIntegracion_cantidadReintentos");
            entity.Property(e => e.SynPuntoIntegracionCodigosReintentos)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_codigosReintentos");
            entity.Property(e => e.SynPuntoIntegracionCondicion)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_condicion");
            entity.Property(e => e.SynPuntoIntegracionIdPuntoIntegracion).HasColumnName("syn_puntoIntegracion_id_puntoIntegracion");
            entity.Property(e => e.SynPuntoIntegracionIdSistemaIntegrar).HasColumnName("syn_puntoIntegracion_id_sistemaIntegrar");
            entity.Property(e => e.SynPuntoIntegracionIntervaloReintentos).HasColumnName("syn_puntoIntegracion_intervaloReintentos");
            entity.Property(e => e.SynPuntoIntegracionMetodo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_metodo");
            entity.Property(e => e.SynPuntoIntegracionPuntoIntegracion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_puntoIntegracion");
            entity.Property(e => e.SynPuntoIntegracionPuntoIntegracionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_puntoIntegracion_codigo");
            entity.Property(e => e.SynPuntoIntegracionTablaLocal)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_tablaLocal");
            entity.Property(e => e.SynPuntoIntegracionUrlConsumir)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_urlConsumir");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenArchivo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_archivo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Archivo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("archivo");
            entity.Property(e => e.ArchivoBinario)
                .HasColumnType("image")
                .HasColumnName("archivoBinario");
            entity.Property(e => e.ArchivoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("archivo_codigo");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsPrincipal).HasColumnName("esPrincipal");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenTipoArchivoTipoArchivo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_tipoArchivo_tipoArchivo");
            entity.Property(e => e.GenTipoArchivoTipoArchivoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_tipoArchivo_tipoArchivo_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdObjeto).HasColumnName("idObjeto");
            entity.Property(e => e.IdTipoArchivo).HasColumnName("id_tipoArchivo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Link)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("link");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Tabla)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tabla");
            entity.Property(e => e.Tamano).HasColumnName("tamano");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenBodega>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_bodega");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Bodega)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("bodega");
            entity.Property(e => e.BodegaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("bodega_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.SalidasEnRojo).HasColumnName("salidasEnRojo");
            entity.Property(e => e.TerSucursalCodigorecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_codigorecursiva");
            entity.Property(e => e.TerSucursalContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_contacto");
            entity.Property(e => e.TerSucursalDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Direccion");
            entity.Property(e => e.TerSucursalEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Email");
            entity.Property(e => e.TerSucursalFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Fax");
            entity.Property(e => e.TerSucursalIdEstadoTercero).HasColumnName("ter_sucursal_id_estadoTercero");
            entity.Property(e => e.TerSucursalIdSucursal).HasColumnName("ter_sucursal_id_sucursal");
            entity.Property(e => e.TerSucursalIdTercero).HasColumnName("ter_sucursal_id_tercero");
            entity.Property(e => e.TerSucursalIdUsuarioAsesor).HasColumnName("ter_sucursal_id_usuario_asesor");
            entity.Property(e => e.TerSucursalIdUsuarioTecnico).HasColumnName("ter_sucursal_id_usuario_tecnico");
            entity.Property(e => e.TerSucursalIdZona).HasColumnName("ter_sucursal_id_zona");
            entity.Property(e => e.TerSucursalParaAlquiler).HasColumnName("ter_sucursal_paraAlquiler");
            entity.Property(e => e.TerSucursalParaSoporte).HasColumnName("ter_sucursal_paraSoporte");
            entity.Property(e => e.TerSucursalParaVenta).HasColumnName("ter_sucursal_paraVenta");
            entity.Property(e => e.TerSucursalSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal");
            entity.Property(e => e.TerSucursalSucursalCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal_codigo");
            entity.Property(e => e.TerSucursalTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_telefono");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.UsaLocalizacion).HasColumnName("usaLocalizacion");
        });

        modelBuilder.Entity<ViewGenBodegaUsuario>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_bodega_usuario");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.BodegaUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("bodega_usuario");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenBodegaBodega)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_bodega_bodega");
            entity.Property(e => e.GenBodegaBodegaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_bodega_bodega_codigo");
            entity.Property(e => e.GenBodegaIdSucursal).HasColumnName("gen_bodega_id_sucursal");
            entity.Property(e => e.GenBodegaSalidasEnRojo).HasColumnName("gen_bodega_salidasEnRojo");
            entity.Property(e => e.GenBodegaUsaLocalizacion).HasColumnName("gen_bodega_usaLocalizacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdBodega).HasColumnName("id_bodega");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.SegUsuarioAccesoActivo).HasColumnName("seg_usuario_accesoActivo");
            entity.Property(e => e.SegUsuarioAplicaRecargo).HasColumnName("seg_usuario_aplicaRecargo");
            entity.Property(e => e.SegUsuarioCambiarClave).HasColumnName("seg_usuario_cambiarClave");
            entity.Property(e => e.SegUsuarioClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_clave");
            entity.Property(e => e.SegUsuarioCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_costoHora");
            entity.Property(e => e.SegUsuarioDireccion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_direccion");
            entity.Property(e => e.SegUsuarioEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_email");
            entity.Property(e => e.SegUsuarioFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioHabilitado).HasColumnName("seg_usuario_habilitado");
            entity.Property(e => e.SegUsuarioIdCargo).HasColumnName("seg_usuario_id_cargo");
            entity.Property(e => e.SegUsuarioIdGrupo).HasColumnName("seg_usuario_id_grupo");
            entity.Property(e => e.SegUsuarioIdPerfil).HasColumnName("seg_usuario_id_perfil");
            entity.Property(e => e.SegUsuarioIdUsuario).HasColumnName("seg_usuario_id_usuario");
            entity.Property(e => e.SegUsuarioIdZona).HasColumnName("seg_usuario_id_zona");
            entity.Property(e => e.SegUsuarioIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_identificacion");
            entity.Property(e => e.SegUsuarioIntentosFallidos).HasColumnName("seg_usuario_intentosFallidos");
            entity.Property(e => e.SegUsuarioNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_nombre");
            entity.Property(e => e.SegUsuarioNumeroIngresos).HasColumnName("seg_usuario_numeroIngresos");
            entity.Property(e => e.SegUsuarioPorcentajeComision).HasColumnName("seg_usuario_porcentajeComision");
            entity.Property(e => e.SegUsuarioPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_preferencias");
            entity.Property(e => e.SegUsuarioProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_profesion");
            entity.Property(e => e.SegUsuarioSexo).HasColumnName("seg_usuario_sexo");
            entity.Property(e => e.SegUsuarioTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_telefono");
            entity.Property(e => e.SegUsuarioUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario");
            entity.Property(e => e.SegUsuarioUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario_codigo");
            entity.Property(e => e.Sugerir).HasColumnName("sugerir");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenConfig>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_config");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Config)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("config");
            entity.Property(e => e.ConfigCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("config_codigo");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdObjeto).HasColumnName("idObjeto");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Modulo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("modulo");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("valor");
        });

        modelBuilder.Entity<ViewGenConfiguracionAtributo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_configuracionAtributos");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatAtributoAtributo)
                .HasMaxLength(900)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_atributo");
            entity.Property(e => e.CatAtributoAtributoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_atributo_codigo");
            entity.Property(e => e.CatAtributoEsObligatorio).HasColumnName("cat_atributo_esObligatorio");
            entity.Property(e => e.CatAtributoEsVariable).HasColumnName("cat_atributo_esVariable");
            entity.Property(e => e.CatAtributoIdSeccionAtributo).HasColumnName("cat_atributo_id_seccionAtributo");
            entity.Property(e => e.CatAtributoIdTipoAtributo).HasColumnName("cat_atributo_id_tipoAtributo");
            entity.Property(e => e.CatAtributoIdUnidad).HasColumnName("cat_atributo_id_unidad");
            entity.Property(e => e.CatAtributoNombreControl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_atributo_nombreControl");
            entity.Property(e => e.CatAtributoResaltado).HasColumnName("cat_atributo_resaltado");
            entity.Property(e => e.CatAtributoValorMaximo).HasColumnName("cat_atributo_ValorMaximo");
            entity.Property(e => e.CatAtributoValorMinimo).HasColumnName("cat_atributo_valorMinimo");
            entity.Property(e => e.ConfiguracionAtributos)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("configuracionAtributos");
            entity.Property(e => e.ConfiguracionAtributosCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("configuracionAtributos_codigo");
            entity.Property(e => e.Defecto)
                .HasMaxLength(200)
                .HasColumnName("defecto");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsObligatorio).HasColumnName("esObligatorio");
            entity.Property(e => e.EsResaltado).HasColumnName("esResaltado");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenFormularioDuplicar).HasColumnName("gen_formulario_duplicar");
            entity.Property(e => e.GenFormularioEliminarIntermedias).HasColumnName("gen_formulario_eliminarIntermedias");
            entity.Property(e => e.GenFormularioFormulario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_formulario_formulario");
            entity.Property(e => e.GenFormularioFormularioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_formulario_formulario_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdAtributo).HasColumnName("id_atributo");
            entity.Property(e => e.IdFormulario).HasColumnName("id_formulario");
            entity.Property(e => e.IdTablaRelacion).HasColumnName("id_tabla_relacion");
            entity.Property(e => e.IdTablaResultado).HasColumnName("id_tabla_resultado");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenConfiguracionServicio>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_configuracionServicio");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoBloquearCostear).HasColumnName("cat_catalogo_bloquearCostear");
            entity.Property(e => e.CatCatalogoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo");
            entity.Property(e => e.CatCatalogoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_codigoInventario");
            entity.Property(e => e.CatCatalogoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_descripcion");
            entity.Property(e => e.CatCatalogoEsNacional).HasColumnName("cat_catalogo_esNacional");
            entity.Property(e => e.CatCatalogoIdFamilia).HasColumnName("cat_catalogo_id_familia");
            entity.Property(e => e.CatCatalogoIdImpuesto).HasColumnName("cat_catalogo_id_impuesto");
            entity.Property(e => e.CatCatalogoIdSubtipoCatalogo).HasColumnName("cat_catalogo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoIdUnidad).HasColumnName("cat_catalogo_id_unidad");
            entity.Property(e => e.CatCatalogoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_precioVenta");
            entity.Property(e => e.CatCatalogoTiempoConsecucion).HasColumnName("cat_catalogo_tiempoConsecucion");
            entity.Property(e => e.ConfiguracionServicio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("configuracionServicio");
            entity.Property(e => e.ConfiguracionServicioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("configuracionServicio_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenTipoServicioDiasGarantia).HasColumnName("gen_tipoServicio_diasGarantia");
            entity.Property(e => e.GenTipoServicioTieneGarantia).HasColumnName("gen_tipoServicio_tieneGarantia");
            entity.Property(e => e.GenTipoServicioTipoServicio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_tipoServicio_tipoServicio");
            entity.Property(e => e.GenTipoServicioTipoServicioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_tipoServicio_tipoServicio_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdTipoServicio).HasColumnName("id_tipoServicio");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TerTerceroClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_clasificacion");
            entity.Property(e => e.TerTerceroContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_contacto");
            entity.Property(e => e.TerTerceroDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_direccion");
            entity.Property(e => e.TerTerceroEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_email");
            entity.Property(e => e.TerTerceroEsCliente).HasColumnName("ter_tercero_esCliente");
            entity.Property(e => e.TerTerceroEsEmpresaPropia).HasColumnName("ter_tercero_esEmpresaPropia");
            entity.Property(e => e.TerTerceroEsFabricante).HasColumnName("ter_tercero_esFabricante");
            entity.Property(e => e.TerTerceroEsProspecto).HasColumnName("ter_tercero_esProspecto");
            entity.Property(e => e.TerTerceroEsProveedor).HasColumnName("ter_tercero_esProveedor");
            entity.Property(e => e.TerTerceroEsTransportador).HasColumnName("ter_tercero_esTransportador");
            entity.Property(e => e.TerTerceroFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fax");
            entity.Property(e => e.TerTerceroIdEstadoTercero).HasColumnName("ter_tercero_id_estadoTercero");
            entity.Property(e => e.TerTerceroIdNaturalezaTercero).HasColumnName("ter_tercero_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroIdZona).HasColumnName("ter_tercero_id_zona");
            entity.Property(e => e.TerTerceroNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_notas");
            entity.Property(e => e.TerTerceroRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_representante");
            entity.Property(e => e.TerTerceroTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_telefono");
            entity.Property(e => e.TerTerceroTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero");
            entity.Property(e => e.TerTerceroTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_codigo");
            entity.Property(e => e.TerTerceroTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nit");
            entity.Property(e => e.TerTerceroTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_website");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenDetalleFormulario>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_detalleFormulario");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Defecto)
                .HasMaxLength(200)
                .HasColumnName("defecto");
            entity.Property(e => e.DetalleFormulario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("detalleFormulario");
            entity.Property(e => e.DetalleFormularioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("detalleFormulario_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsObligatorio).HasColumnName("esObligatorio");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenColumnaColumna)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_columna_columna");
            entity.Property(e => e.GenColumnaColumnaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_columna_columna_codigo");
            entity.Property(e => e.GenColumnaEsNuleable).HasColumnName("gen_columna_esNuleable");
            entity.Property(e => e.GenColumnaIdTabla).HasColumnName("gen_columna_id_tabla");
            entity.Property(e => e.GenColumnaTamano).HasColumnName("gen_columna_tamano");
            entity.Property(e => e.GenFormularioDuplicar).HasColumnName("gen_formulario_duplicar");
            entity.Property(e => e.GenFormularioEliminarIntermedias).HasColumnName("gen_formulario_eliminarIntermedias");
            entity.Property(e => e.GenFormularioFormulario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_formulario_formulario");
            entity.Property(e => e.GenFormularioFormularioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_formulario_formulario_codigo");
            entity.Property(e => e.GenTipoDatoTipoDato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_tipoDato_tipoDato");
            entity.Property(e => e.GenTipoDatoTipoDatoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_tipoDato_tipoDato_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdColumna).HasColumnName("id_columna");
            entity.Property(e => e.IdFormulario).HasColumnName("id_formulario");
            entity.Property(e => e.IdTipoDato).HasColumnName("id_tipoDato");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenDetalleRegistroEnvio>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_detalleRegistroEnvio");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DetalleRegistroEnvio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("detalleRegistroEnvio");
            entity.Property(e => e.DetalleRegistroEnvioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("detalleRegistroEnvio_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Email)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.Enviado).HasColumnName("enviado");
            entity.Property(e => e.Enviar).HasColumnName("enviar");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenRegistroEnvioIdEnvioCorreo).HasColumnName("gen_registroEnvio_id_envioCorreo");
            entity.Property(e => e.GenRegistroEnvioIdRegistroEnvio).HasColumnName("gen_registroEnvio_id_registroEnvio");
            entity.Property(e => e.GenRegistroEnvioRegistroEnvio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_registroEnvio_registroEnvio");
            entity.Property(e => e.GenRegistroEnvioRegistroEnvioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_registroEnvio_registroEnvio_codigo");
            entity.Property(e => e.GenRegistroEnvioReintentar).HasColumnName("gen_registroEnvio_reintentar");
            entity.Property(e => e.GenRegistroEnvioTabla)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("gen_registroEnvio_tabla");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdObjeto).HasColumnName("idObjeto");
            entity.Property(e => e.IdRegistroEnvio).HasColumnName("id_registroEnvio");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenDiaFestivo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_diaFestivo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DiaFestivo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("diaFestivo");
            entity.Property(e => e.DiaFestivoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("diaFestivo_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenEmpresa>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_empresa");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Codigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.CostoAdministrativoMes)
                .HasColumnType("money")
                .HasColumnName("costoAdministrativoMes");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Empresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("empresa");
            entity.Property(e => e.EmpresaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("empresa_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenEmpresaPadreCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_empresa_padre_codigo");
            entity.Property(e => e.GenEmpresaPadreCostoAdministrativoMes)
                .HasColumnType("money")
                .HasColumnName("gen_empresa_padre_costoAdministrativoMes");
            entity.Property(e => e.GenEmpresaPadreEmpresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_empresa_padre_empresa");
            entity.Property(e => e.GenEmpresaPadreEmpresaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_empresa_padre_empresa_codigo");
            entity.Property(e => e.GenEmpresaPadreIdEmpresa).HasColumnName("gen_empresa_padre_id_empresa");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEmpresa).HasColumnName("id_empresa");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenEnvioCorreo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_envioCorreo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.AdjuntarArchivo).HasColumnName("adjuntarArchivo");
            entity.Property(e => e.CantidadMensajes).HasColumnName("cantidadMensajes");
            entity.Property(e => e.CantidadReintento).HasColumnName("cantidadReintento");
            entity.Property(e => e.CorreoAdicional)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("correoAdicional");
            entity.Property(e => e.DocEstadoTipoDocumentoAfectaIndicador).HasColumnName("doc_estadoTipoDocumento_afectaIndicador");
            entity.Property(e => e.DocEstadoTipoDocumentoAfectaInventario).HasColumnName("doc_estadoTipoDocumento_afectaInventario");
            entity.Property(e => e.DocEstadoTipoDocumentoColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_color");
            entity.Property(e => e.DocEstadoTipoDocumentoDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_descripcion");
            entity.Property(e => e.DocEstadoTipoDocumentoEditaDocumento).HasColumnName("doc_estadoTipoDocumento_editaDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_estadoTipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocEstadoTipoDocumentoIdTipoDocumento).HasColumnName("doc_estadoTipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoMotivoObligatorio).HasColumnName("doc_estadoTipoDocumento_motivoObligatorio");
            entity.Property(e => e.DocEstadoTipoDocumentoObservacionesObligatorio).HasColumnName("doc_estadoTipoDocumento_observacionesObligatorio");
            entity.Property(e => e.DocEstadoTipoDocumentoOrden).HasColumnName("doc_estadoTipoDocumento_orden");
            entity.Property(e => e.DocEstadoTipoDocumentoPuedeRegresar).HasColumnName("doc_estadoTipoDocumento_puedeRegresar");
            entity.Property(e => e.DocSubtipoDocumentoBloquearDespacho).HasColumnName("doc_subtipoDocumento_bloquearDespacho");
            entity.Property(e => e.DocSubtipoDocumentoCantidadAuxiliar).HasColumnName("doc_subtipoDocumento_cantidadAuxiliar");
            entity.Property(e => e.DocSubtipoDocumentoCargarSolicitante).HasColumnName("doc_subtipoDocumento_cargarSolicitante");
            entity.Property(e => e.DocSubtipoDocumentoCerrarSol).HasColumnName("doc_subtipoDocumento_cerrarSol");
            entity.Property(e => e.DocSubtipoDocumentoConsecutivo).HasColumnName("doc_subtipoDocumento_consecutivo");
            entity.Property(e => e.DocSubtipoDocumentoEjecutaDevolucion).HasColumnName("doc_subtipoDocumento_ejecutaDevolucion");
            entity.Property(e => e.DocSubtipoDocumentoIdTipoDocumento).HasColumnName("doc_subtipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoMostrarPendienteDocumento).HasColumnName("doc_subtipoDocumento_mostrarPendienteDocumento");
            entity.Property(e => e.DocSubtipoDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_prefijo");
            entity.Property(e => e.DocSubtipoDocumentoProgramarPlaneadas).HasColumnName("doc_subtipoDocumento_programarPlaneadas");
            entity.Property(e => e.DocSubtipoDocumentoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_subtipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_subtipoDocumento_codigo");
            entity.Property(e => e.DocSubtipoDocumentoTipoCobro).HasColumnName("doc_subtipoDocumento_tipoCobro");
            entity.Property(e => e.DocSubtipoDocumentoValUrgente).HasColumnName("doc_subtipoDocumento_valUrgente");
            entity.Property(e => e.DocSubtipoDocumentoVerCentroCosto).HasColumnName("doc_subtipoDocumento_verCentroCosto");
            entity.Property(e => e.DocSubtipoDocumentoVerIncoterm).HasColumnName("doc_subtipoDocumento_verIncoterm");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EnvioCorreo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("envioCorreo");
            entity.Property(e => e.EnvioCorreoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("envioCorreo_codigo");
            entity.Property(e => e.Estrategia).HasColumnName("estrategia");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenRemitenteCorreoArchivoCertificado)
                .HasMaxLength(800)
                .IsUnicode(false)
                .HasColumnName("gen_remitenteCorreo_archivoCertificado");
            entity.Property(e => e.GenRemitenteCorreoCertificado).HasColumnName("gen_remitenteCorreo_certificado");
            entity.Property(e => e.GenRemitenteCorreoCredenciales)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("gen_remitenteCorreo_credenciales");
            entity.Property(e => e.GenRemitenteCorreoCuentaCertificado)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("gen_remitenteCorreo_cuentaCertificado");
            entity.Property(e => e.GenRemitenteCorreoEsGsuite).HasColumnName("gen_remitenteCorreo_esGSuite");
            entity.Property(e => e.GenRemitenteCorreoPuerto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_remitenteCorreo_puerto");
            entity.Property(e => e.GenRemitenteCorreoRemitenteCorreo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_remitenteCorreo_remitenteCorreo");
            entity.Property(e => e.GenRemitenteCorreoRemitenteCorreoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_remitenteCorreo_remitenteCorreo_codigo");
            entity.Property(e => e.GenRemitenteCorreoServidor)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("gen_remitenteCorreo_servidor");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEstadoTipoDocumento).HasColumnName("id_estadoTipoDocumento");
            entity.Property(e => e.IdRemitenteCorreo).HasColumnName("id_remitenteCorreo");
            entity.Property(e => e.IdReporte).HasColumnName("id_reporte");
            entity.Property(e => e.IdSubtipoDocumento).HasColumnName("id_subtipoDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PlantillaAdjunto)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("plantillaAdjunto");
            entity.Property(e => e.RepReporteBasica).HasColumnName("rep_reporte_basica");
            entity.Property(e => e.RepReporteCabecera)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("rep_reporte_cabecera");
            entity.Property(e => e.RepReporteEsFormato).HasColumnName("rep_reporte_esFormato");
            entity.Property(e => e.RepReporteIdFuncionalidad).HasColumnName("rep_reporte_id_funcionalidad");
            entity.Property(e => e.RepReporteOrden).HasColumnName("rep_reporte_orden");
            entity.Property(e => e.RepReporteReporte)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("rep_reporte_reporte");
            entity.Property(e => e.RepReporteReporteCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("rep_reporte_reporte_codigo");
            entity.Property(e => e.RepReporteTieneGraficos).HasColumnName("rep_reporte_tieneGraficos");
            entity.Property(e => e.Tabla)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("tabla");
            entity.Property(e => e.TiempoPorMensajes).HasColumnName("tiempo_por_mensajes");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenFamilium>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_familia");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Familia)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("familia");
            entity.Property(e => e.FamiliaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("familia_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenFamiliaPadreFamilia)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_familia_padre_familia");
            entity.Property(e => e.GenFamiliaPadreFamiliaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_familia_padre_familia_codigo");
            entity.Property(e => e.GenFamiliaPadreIdFamilia).HasColumnName("gen_familia_padre_id_familia");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdFamilia).HasColumnName("id_familia");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenFirma>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_firma");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Archivobinario)
                .HasColumnType("image")
                .HasColumnName("archivobinario");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_fh");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Firma)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("firma");
            entity.Property(e => e.FirmaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("firma_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Idobjeto).HasColumnName("idobjeto");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Tabla)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tabla");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenFirmaContacto>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_firmaContacto");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Archivobinario)
                .HasColumnType("image")
                .HasColumnName("archivobinario");
            entity.Property(e => e.Codigoacceso)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("codigoacceso");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FirmaContacto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("firmaContacto");
            entity.Property(e => e.FirmaContactoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("firmaContacto_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdContacto).HasColumnName("id_contacto");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TerContactoAccesoActivo).HasColumnName("ter_contacto_accesoActivo");
            entity.Property(e => e.TerContactoCargo)
                .HasMaxLength(100)
                .HasColumnName("ter_contacto_cargo");
            entity.Property(e => e.TerContactoCodigoAcceso)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_codigoAcceso");
            entity.Property(e => e.TerContactoContacto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_contacto");
            entity.Property(e => e.TerContactoContactoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_contacto_codigo");
            entity.Property(e => e.TerContactoDireccion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_Direccion");
            entity.Property(e => e.TerContactoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_Email");
            entity.Property(e => e.TerContactoFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_Fax");
            entity.Property(e => e.TerContactoIdCargoContacto).HasColumnName("ter_contacto_id_cargoContacto");
            entity.Property(e => e.TerContactoIdTercero).HasColumnName("ter_contacto_id_tercero");
            entity.Property(e => e.TerContactoIdUsuario).HasColumnName("ter_contacto_id_usuario");
            entity.Property(e => e.TerContactoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_telefono");
            entity.Property(e => e.TerContactoTelefonoMovil)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_telefonoMovil");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenFormulario>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_formulario");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Duplicar).HasColumnName("duplicar");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EliminarIntermedias).HasColumnName("eliminarIntermedias");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Formulario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("formulario");
            entity.Property(e => e.FormularioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("formulario_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenImpuesto>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_impuesto");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Impuesto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("impuesto");
            entity.Property(e => e.ImpuestoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("impuesto_codigo");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor).HasColumnName("valor");
        });

        modelBuilder.Entity<ViewGenLocalizacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_localizacion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoBodegaBloquearCostear).HasColumnName("cat_catalogo_bodega_bloquearCostear");
            entity.Property(e => e.CatCatalogoBodegaCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_bodega_catalogo");
            entity.Property(e => e.CatCatalogoBodegaCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_bodega_catalogo_codigo");
            entity.Property(e => e.CatCatalogoBodegaCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_bodega_codigoInventario");
            entity.Property(e => e.CatCatalogoBodegaDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_bodega_descripcion");
            entity.Property(e => e.CatCatalogoBodegaEsNacional).HasColumnName("cat_catalogo_bodega_esNacional");
            entity.Property(e => e.CatCatalogoBodegaIdFamilia).HasColumnName("cat_catalogo_bodega_id_familia");
            entity.Property(e => e.CatCatalogoBodegaIdImpuesto).HasColumnName("cat_catalogo_bodega_id_impuesto");
            entity.Property(e => e.CatCatalogoBodegaIdSubTipoCatalogo).HasColumnName("cat_catalogo_bodega_id_subTipoCatalogo");
            entity.Property(e => e.CatCatalogoBodegaIdUnidad).HasColumnName("cat_catalogo_bodega_id_unidad");
            entity.Property(e => e.CatCatalogoBodegaPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_bodega_precioVenta");
            entity.Property(e => e.CatCatalogoBodegaTiempoConsecucion).HasColumnName("cat_catalogo_bodega_tiempoConsecucion");
            entity.Property(e => e.Costo)
                .HasColumnType("money")
                .HasColumnName("costo");
            entity.Property(e => e.Disponible).HasColumnName("disponible");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EnOrdenes).HasColumnName("enOrdenes");
            entity.Property(e => e.Existencia).HasColumnName("existencia");
            entity.Property(e => e.ExistenciaMaxima).HasColumnName("existenciaMaxima");
            entity.Property(e => e.ExistenciaMinima).HasColumnName("existenciaMinima");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdBodega).HasColumnName("id_bodega");
            entity.Property(e => e.IdCatalogoBodega).HasColumnName("id_catalogo_bodega");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Localizacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("localizacion");
            entity.Property(e => e.LocalizacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("localizacion_codigo");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Reservado).HasColumnName("reservado");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenLocalizacionItemDocumento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_localizacion_itemDocumento");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.DocItemDocumentoAfectoInventario).HasColumnName("doc_itemDocumento_afectoInventario");
            entity.Property(e => e.DocItemDocumentoCantidadEjecutado).HasColumnName("doc_itemDocumento_cantidadEjecutado");
            entity.Property(e => e.DocItemDocumentoCantidadPlaneado).HasColumnName("doc_itemDocumento_cantidadPlaneado");
            entity.Property(e => e.DocItemDocumentoCostear).HasColumnName("doc_itemDocumento_costear");
            entity.Property(e => e.DocItemDocumentoCostoEjecutado).HasColumnName("doc_itemDocumento_costoEjecutado");
            entity.Property(e => e.DocItemDocumentoCostoPlaneado).HasColumnName("doc_itemDocumento_costoPlaneado");
            entity.Property(e => e.DocItemDocumentoDetalle)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_detalle");
            entity.Property(e => e.DocItemDocumentoDtoEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_dtoEjecutado");
            entity.Property(e => e.DocItemDocumentoDtoPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_dtoPlaneado");
            entity.Property(e => e.DocItemDocumentoEsUrgente).HasColumnName("doc_itemDocumento_esUrgente");
            entity.Property(e => e.DocItemDocumentoHorasFestivas).HasColumnName("doc_itemDocumento_horasFestivas");
            entity.Property(e => e.DocItemDocumentoHorasGarantia).HasColumnName("doc_itemDocumento_horasGarantia");
            entity.Property(e => e.DocItemDocumentoHorasNocturnas).HasColumnName("doc_itemDocumento_horasNocturnas");
            entity.Property(e => e.DocItemDocumentoHorasOrdinales).HasColumnName("doc_itemDocumento_horasOrdinales");
            entity.Property(e => e.DocItemDocumentoIdBodega).HasColumnName("doc_itemDocumento_id_bodega");
            entity.Property(e => e.DocItemDocumentoIdCatalogo).HasColumnName("doc_itemDocumento_id_catalogo");
            entity.Property(e => e.DocItemDocumentoIdCentroCosto).HasColumnName("doc_itemDocumento_id_centroCosto");
            entity.Property(e => e.DocItemDocumentoIdDocumento).HasColumnName("doc_itemDocumento_id_documento");
            entity.Property(e => e.DocItemDocumentoIdIncoterm).HasColumnName("doc_itemDocumento_id_incoterm");
            entity.Property(e => e.DocItemDocumentoIdItemDocumento).HasColumnName("doc_itemDocumento_id_itemDocumento");
            entity.Property(e => e.DocItemDocumentoIdItemDocumentoSuperior).HasColumnName("doc_itemDocumento_id_itemDocumento_superior");
            entity.Property(e => e.DocItemDocumentoIdListaprecio).HasColumnName("doc_itemDocumento_id_listaprecio");
            entity.Property(e => e.DocItemDocumentoItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_itemDocumento");
            entity.Property(e => e.DocItemDocumentoItemDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_itemDocumento_itemDocumento_codigo");
            entity.Property(e => e.DocItemDocumentoIvaEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_ivaEjecutado");
            entity.Property(e => e.DocItemDocumentoIvaPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_ivaPlaneado");
            entity.Property(e => e.DocItemDocumentoPorcdto).HasColumnName("doc_itemDocumento_porcdto");
            entity.Property(e => e.DocItemDocumentoPorcentajeCliente).HasColumnName("doc_itemDocumento_porcentajeCliente");
            entity.Property(e => e.DocItemDocumentoPorcentajeDistribuidor).HasColumnName("doc_itemDocumento_porcentajeDistribuidor");
            entity.Property(e => e.DocItemDocumentoPorcentajeFabricante).HasColumnName("doc_itemDocumento_porcentajeFabricante");
            entity.Property(e => e.DocItemDocumentoPorciva).HasColumnName("doc_itemDocumento_porciva");
            entity.Property(e => e.DocItemDocumentoSubtotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_subtotalEjecutado");
            entity.Property(e => e.DocItemDocumentoSubtotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_subtotalPlaneado");
            entity.Property(e => e.DocItemDocumentoTotalEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_totalEjecutado");
            entity.Property(e => e.DocItemDocumentoTotalPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_totalPlaneado");
            entity.Property(e => e.DocItemDocumentoValorUnitarioEjecutado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_valorUnitarioEjecutado");
            entity.Property(e => e.DocItemDocumentoValorUnitarioPlaneado)
                .HasColumnType("money")
                .HasColumnName("doc_itemDocumento_valorUnitarioPlaneado");
            entity.Property(e => e.DocItemDocumentoVencimientoGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_itemDocumento_vencimientoGarantia_ff");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenLocalizacionExistencia).HasColumnName("gen_localizacion_existencia");
            entity.Property(e => e.GenLocalizacionExistenciaMaxima).HasColumnName("gen_localizacion_existenciaMaxima");
            entity.Property(e => e.GenLocalizacionIdCatalogoBodega).HasColumnName("gen_localizacion_id_catalogo_bodega");
            entity.Property(e => e.GenLocalizacionLocalizacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_localizacion_localizacion");
            entity.Property(e => e.GenLocalizacionLocalizacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_localizacion_localizacion_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdItemDocumento).HasColumnName("id_itemDocumento");
            entity.Property(e => e.IdLocalizacion).HasColumnName("id_localizacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.LocalizacionItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("localizacion_itemDocumento");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenMonedum>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_moneda");

            entity.Property(e => e.Abreviatura)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("abreviatura");
            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Cambio).HasColumnName("cambio");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Moneda)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("moneda");
            entity.Property(e => e.MonedaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("moneda_codigo");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenNotificacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_notificacion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Datos).HasColumnName("datos");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenTipoNotificacionTipoNotificacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_tipoNotificacion_tipoNotificacion");
            entity.Property(e => e.GenTipoNotificacionTipoNotificacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_tipoNotificacion_tipoNotificacion_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdTipoNotificacion).HasColumnName("id_tipoNotificacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioDestino).HasColumnName("id_usuario_destino");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdUsuarioOrigen).HasColumnName("id_usuario_origen");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Notificacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("notificacion");
            entity.Property(e => e.NotificacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("notificacion_codigo");
            entity.Property(e => e.SegUsuarioDestinoAccesoActivo).HasColumnName("seg_usuario_destino_accesoActivo");
            entity.Property(e => e.SegUsuarioDestinoAplicaRecargo).HasColumnName("seg_usuario_destino_aplicaRecargo");
            entity.Property(e => e.SegUsuarioDestinoCambiarClave).HasColumnName("seg_usuario_destino_cambiarClave");
            entity.Property(e => e.SegUsuarioDestinoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_destino_clave");
            entity.Property(e => e.SegUsuarioDestinoCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_destino_costoHora");
            entity.Property(e => e.SegUsuarioDestinoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_destino_direccion");
            entity.Property(e => e.SegUsuarioDestinoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_destino_email");
            entity.Property(e => e.SegUsuarioDestinoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_destino_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioDestinoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_destino_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioDestinoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_destino_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioDestinoHabilitado).HasColumnName("seg_usuario_destino_habilitado");
            entity.Property(e => e.SegUsuarioDestinoIdCargo).HasColumnName("seg_usuario_destino_id_cargo");
            entity.Property(e => e.SegUsuarioDestinoIdDispositivo)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_destino_idDispositivo");
            entity.Property(e => e.SegUsuarioDestinoIdGrupo).HasColumnName("seg_usuario_destino_id_grupo");
            entity.Property(e => e.SegUsuarioDestinoIdPerfil).HasColumnName("seg_usuario_destino_id_perfil");
            entity.Property(e => e.SegUsuarioDestinoIdUsuario).HasColumnName("seg_usuario_destino_id_usuario");
            entity.Property(e => e.SegUsuarioDestinoIdZona).HasColumnName("seg_usuario_destino_id_zona");
            entity.Property(e => e.SegUsuarioDestinoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_destino_identificacion");
            entity.Property(e => e.SegUsuarioDestinoIntentosFallidos).HasColumnName("seg_usuario_destino_intentosFallidos");
            entity.Property(e => e.SegUsuarioDestinoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_destino_nombre");
            entity.Property(e => e.SegUsuarioDestinoNumeroIngresos).HasColumnName("seg_usuario_destino_numeroIngresos");
            entity.Property(e => e.SegUsuarioDestinoPorcentajeComision).HasColumnName("seg_usuario_destino_porcentajeComision");
            entity.Property(e => e.SegUsuarioDestinoPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_destino_preferencias");
            entity.Property(e => e.SegUsuarioDestinoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_destino_profesion");
            entity.Property(e => e.SegUsuarioDestinoSexo).HasColumnName("seg_usuario_destino_sexo");
            entity.Property(e => e.SegUsuarioDestinoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_destino_telefono");
            entity.Property(e => e.SegUsuarioDestinoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_destino_usuario");
            entity.Property(e => e.SegUsuarioDestinoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_destino_usuario_codigo");
            entity.Property(e => e.SegUsuarioOrigenAccesoActivo).HasColumnName("seg_usuario_origen_accesoActivo");
            entity.Property(e => e.SegUsuarioOrigenAplicaRecargo).HasColumnName("seg_usuario_origen_aplicaRecargo");
            entity.Property(e => e.SegUsuarioOrigenCambiarClave).HasColumnName("seg_usuario_origen_cambiarClave");
            entity.Property(e => e.SegUsuarioOrigenClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_origen_clave");
            entity.Property(e => e.SegUsuarioOrigenCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_origen_costoHora");
            entity.Property(e => e.SegUsuarioOrigenDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_origen_direccion");
            entity.Property(e => e.SegUsuarioOrigenEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_origen_email");
            entity.Property(e => e.SegUsuarioOrigenFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_origen_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioOrigenFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_origen_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioOrigenFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_origen_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioOrigenHabilitado).HasColumnName("seg_usuario_origen_habilitado");
            entity.Property(e => e.SegUsuarioOrigenIdCargo).HasColumnName("seg_usuario_origen_id_cargo");
            entity.Property(e => e.SegUsuarioOrigenIdDispositivo)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_origen_idDispositivo");
            entity.Property(e => e.SegUsuarioOrigenIdGrupo).HasColumnName("seg_usuario_origen_id_grupo");
            entity.Property(e => e.SegUsuarioOrigenIdPerfil).HasColumnName("seg_usuario_origen_id_perfil");
            entity.Property(e => e.SegUsuarioOrigenIdUsuario).HasColumnName("seg_usuario_origen_id_usuario");
            entity.Property(e => e.SegUsuarioOrigenIdZona).HasColumnName("seg_usuario_origen_id_zona");
            entity.Property(e => e.SegUsuarioOrigenIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_origen_identificacion");
            entity.Property(e => e.SegUsuarioOrigenIntentosFallidos).HasColumnName("seg_usuario_origen_intentosFallidos");
            entity.Property(e => e.SegUsuarioOrigenNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_origen_nombre");
            entity.Property(e => e.SegUsuarioOrigenNumeroIngresos).HasColumnName("seg_usuario_origen_numeroIngresos");
            entity.Property(e => e.SegUsuarioOrigenPorcentajeComision).HasColumnName("seg_usuario_origen_porcentajeComision");
            entity.Property(e => e.SegUsuarioOrigenPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_origen_preferencias");
            entity.Property(e => e.SegUsuarioOrigenProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_origen_profesion");
            entity.Property(e => e.SegUsuarioOrigenSexo).HasColumnName("seg_usuario_origen_sexo");
            entity.Property(e => e.SegUsuarioOrigenTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_origen_telefono");
            entity.Property(e => e.SegUsuarioOrigenUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_origen_usuario");
            entity.Property(e => e.SegUsuarioOrigenUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_origen_usuario_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenPresupuestoEmpresa>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_presupuestoEmpresa");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFin_ff");
            entity.Property(e => e.FechaInicioFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicio_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenEmpresaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_empresa_codigo");
            entity.Property(e => e.GenEmpresaCostoAdministrativoMes)
                .HasColumnType("money")
                .HasColumnName("gen_empresa_costoAdministrativoMes");
            entity.Property(e => e.GenEmpresaEmpresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_empresa_empresa");
            entity.Property(e => e.GenEmpresaEmpresaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_empresa_empresa_codigo");
            entity.Property(e => e.GenEmpresaIdEmpresa).HasColumnName("gen_empresa_id_empresa");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEmpresa).HasColumnName("id_empresa");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PresupuestoEmpresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("presupuestoEmpresa");
            entity.Property(e => e.PresupuestoEmpresaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("presupuestoEmpresa_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor).HasColumnType("money");
        });

        modelBuilder.Entity<ViewGenRegistroEnvio>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_registroEnvio");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenEnvioCorreoCantidadMensajes).HasColumnName("gen_envioCorreo_cantidadMensajes");
            entity.Property(e => e.GenEnvioCorreoCorreoAdicional)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("gen_envioCorreo_correoAdicional");
            entity.Property(e => e.GenEnvioCorreoEnvioCorreo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_envioCorreo_envioCorreo");
            entity.Property(e => e.GenEnvioCorreoEnvioCorreoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_envioCorreo_envioCorreo_codigo");
            entity.Property(e => e.GenEnvioCorreoEstrategia).HasColumnName("gen_envioCorreo_estrategia");
            entity.Property(e => e.GenEnvioCorreoIdEstadoTipoDocumento).HasColumnName("gen_envioCorreo_id_estadoTipoDocumento");
            entity.Property(e => e.GenEnvioCorreoIdReporte).HasColumnName("gen_envioCorreo_id_reporte");
            entity.Property(e => e.GenEnvioCorreoIdSubtipoDocumento).HasColumnName("gen_envioCorreo_id_subtipoDocumento");
            entity.Property(e => e.GenEnvioCorreoPlantillaAdjunto)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("gen_envioCorreo_plantillaAdjunto");
            entity.Property(e => e.GenEnvioCorreoTabla)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("gen_envioCorreo_tabla");
            entity.Property(e => e.GenEnvioCorreoTiempoPorMensajes).HasColumnName("gen_envioCorreo_tiempo_por_mensajes");
            entity.Property(e => e.GenRegistroEnvioPadreIdEnvioCorreo).HasColumnName("gen_registroEnvio_padre_id_envioCorreo");
            entity.Property(e => e.GenRegistroEnvioPadreIdRegistroEnvio).HasColumnName("gen_registroEnvio_padre_id_registroEnvio");
            entity.Property(e => e.GenRegistroEnvioPadreRegistroEnvio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_registroEnvio_padre_registroEnvio");
            entity.Property(e => e.GenRegistroEnvioPadreRegistroEnvioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_registroEnvio_padre_registroEnvio_codigo");
            entity.Property(e => e.GenRegistroEnvioPadreReintentar).HasColumnName("gen_registroEnvio_padre_reintentar");
            entity.Property(e => e.GenRegistroEnvioPadreTabla)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("gen_registroEnvio_padre_tabla");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEnvioCorreo).HasColumnName("id_envioCorreo");
            entity.Property(e => e.IdRegistroEnvio).HasColumnName("id_registroEnvio");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.RegistroEnvio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("registroEnvio");
            entity.Property(e => e.RegistroEnvioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("registroEnvio_codigo");
            entity.Property(e => e.Reintentar).HasColumnName("reintentar");
            entity.Property(e => e.Tabla)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("tabla");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenRemitenteCorreo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_remitenteCorreo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.ArchivoCertificado)
                .HasMaxLength(800)
                .IsUnicode(false)
                .HasColumnName("archivoCertificado");
            entity.Property(e => e.Certificado).HasColumnName("certificado");
            entity.Property(e => e.Credenciales)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("credenciales");
            entity.Property(e => e.CuentaCertificado)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("cuentaCertificado");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsGsuite).HasColumnName("esGSuite");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Puerto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("puerto");
            entity.Property(e => e.RemitenteCorreo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("remitenteCorreo");
            entity.Property(e => e.RemitenteCorreoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("remitenteCorreo_codigo");
            entity.Property(e => e.Servidor)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("servidor");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenTipoArchivo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_tipoArchivo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.TipoArchivo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoArchivo");
            entity.Property(e => e.TipoArchivoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoArchivo_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenTipoDato>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_tipoDato");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TipoDato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoDato");
            entity.Property(e => e.TipoDatoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoDato_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenTipoNotificacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_tipoNotificacion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TipoNotificacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoNotificacion");
            entity.Property(e => e.TipoNotificacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoNotificacion_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenTipoServicio>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_tipoServicio");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DiasGarantia).HasColumnName("diasGarantia");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TieneGarantia).HasColumnName("tieneGarantia");
            entity.Property(e => e.TipoServicio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoServicio");
            entity.Property(e => e.TipoServicioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoServicio_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGenUnidad>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_unidad");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Unidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("unidad");
            entity.Property(e => e.UnidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("unidad_codigo");
        });

        modelBuilder.Entity<ViewGenZona>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gen_zona");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CodigoExterno)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("codigoExterno");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenZonaPadreCodigoExterno)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("gen_zona_padre_codigoExterno");
            entity.Property(e => e.GenZonaPadreIdZona).HasColumnName("gen_zona_padre_id_zona");
            entity.Property(e => e.GenZonaPadreNivel).HasColumnName("gen_zona_padre_nivel");
            entity.Property(e => e.GenZonaPadreTiempoDesplazamiento).HasColumnName("gen_zona_padre_tiempoDesplazamiento");
            entity.Property(e => e.GenZonaPadreZona)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_zona_padre_zona");
            entity.Property(e => e.GenZonaPadreZonaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_zona_padre_zona_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdZona).HasColumnName("id_zona");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Nivel).HasColumnName("nivel");
            entity.Property(e => e.TiempoDesplazamiento).HasColumnName("tiempoDesplazamiento");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Zona)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("zona");
            entity.Property(e => e.ZonaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("zona_codigo");
        });

        modelBuilder.Entity<ViewGeoUbicacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_geo_ubicacion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_fh");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdObjeto).HasColumnName("idObjeto");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Latitud).HasColumnName("latitud");
            entity.Property(e => e.Longitud).HasColumnName("longitud");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Tabla)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tabla");
            entity.Property(e => e.Ubicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ubicacion");
            entity.Property(e => e.UbicacionCodigo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ubicacion_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGuiAplicacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gui_aplicacion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Aplicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("aplicacion");
            entity.Property(e => e.AplicacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("aplicacion_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGuiAyudum>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gui_ayuda");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Ayuda)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ayuda");
            entity.Property(e => e.AyudaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ayuda_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GuiAyudaPadreAyuda)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gui_ayuda_padre_ayuda");
            entity.Property(e => e.GuiAyudaPadreAyudaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_ayuda_padre_ayuda_codigo");
            entity.Property(e => e.GuiAyudaPadreIdAyuda).HasColumnName("gui_ayuda_padre_id_ayuda");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdAyuda).HasColumnName("id_ayuda");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGuiBloqueHome>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gui_bloqueHome");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Actualizacion).HasColumnName("actualizacion");
            entity.Property(e => e.BloqueHome)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("bloqueHome");
            entity.Property(e => e.BloqueHomeCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("bloqueHome_codigo");
            entity.Property(e => e.ColorModulo)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("colorModulo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsGenerico).HasColumnName("esGenerico");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Filtro)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("filtro");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.NombreControl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombreControl");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.UrlBusqueda)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("urlBusqueda");
            entity.Property(e => e.UrlNuevo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("urlNuevo");
        });

        modelBuilder.Entity<ViewGuiCampoTexto>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gui_campoTexto");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CampoTexto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("campoTexto");
            entity.Property(e => e.CampoTextoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("campoTexto_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsHtml).HasColumnName("esHTML");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GuiFuncionalidadEsMenu).HasColumnName("gui_funcionalidad_esMenu");
            entity.Property(e => e.GuiFuncionalidadFuncionalidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_funcionalidad");
            entity.Property(e => e.GuiFuncionalidadFuncionalidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_funcionalidad_codigo");
            entity.Property(e => e.GuiFuncionalidadIdFuncionalidad).HasColumnName("gui_funcionalidad_id_funcionalidad");
            entity.Property(e => e.GuiFuncionalidadIdTipoFuncionalidad).HasColumnName("gui_funcionalidad_id_tipoFuncionalidad");
            entity.Property(e => e.GuiFuncionalidadNombreComando)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_nombreComando");
            entity.Property(e => e.GuiFuncionalidadNombreControl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_nombreControl");
            entity.Property(e => e.GuiFuncionalidadOrden).HasColumnName("gui_funcionalidad_orden");
            entity.Property(e => e.GuiFuncionalidadTargetUrl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_targetUrl");
            entity.Property(e => e.GuiFuncionalidadToolTip)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_toolTip");
            entity.Property(e => e.GuiFuncionalidadUrl)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_url");
            entity.Property(e => e.GuiFuncionalidadUrlFormulario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_urlFormulario");
            entity.Property(e => e.GuiFuncionalidadUrlImagen)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_urlImagen");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdFuncionalidad).HasColumnName("id_funcionalidad");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGuiDetalleBloqueHome>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gui_detalleBloqueHome");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DetalleBloqueHome)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("detalleBloqueHome");
            entity.Property(e => e.DetalleBloqueHomeCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("detalleBloqueHome_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EstrategiaFecha).HasColumnName("estrategiaFecha");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GuiBloqueHomeBloqueHome)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gui_bloqueHome_bloqueHome");
            entity.Property(e => e.GuiBloqueHomeBloqueHomeCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_bloqueHome_bloqueHome_codigo");
            entity.Property(e => e.GuiBloqueHomeColorModulo)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("gui_bloqueHome_colorModulo");
            entity.Property(e => e.GuiBloqueHomeEsGenerico).HasColumnName("gui_bloqueHome_esGenerico");
            entity.Property(e => e.GuiBloqueHomeFiltro)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("gui_bloqueHome_filtro");
            entity.Property(e => e.GuiBloqueHomeNombreControl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_bloqueHome_nombreControl");
            entity.Property(e => e.GuiBloqueHomeOrden).HasColumnName("gui_bloqueHome_orden");
            entity.Property(e => e.GuiBloqueHomeUrlBusqueda)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_bloqueHome_urlBusqueda");
            entity.Property(e => e.GuiBloqueHomeUrlNuevo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_bloqueHome_urlNuevo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdBloqueHome).HasColumnName("id_bloqueHome");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.ItemsTab).HasColumnName("itemsTab");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.OrdenResultados).HasColumnName("ordenResultados");
            entity.Property(e => e.PosicionTab).HasColumnName("posicionTab");
            entity.Property(e => e.TipoBloqueHome).HasColumnName("tipoBloqueHome");
            entity.Property(e => e.TipoCampo).HasColumnName("tipoCampo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGuiFuncionalidad>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gui_funcionalidad");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsMenu).HasColumnName("esMenu");
            entity.Property(e => e.EsMvc).HasColumnName("esMvc");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Funcionalidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("funcionalidad");
            entity.Property(e => e.FuncionalidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("funcionalidad_codigo");
            entity.Property(e => e.GuiAplicacionAplicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gui_aplicacion_aplicacion");
            entity.Property(e => e.GuiAplicacionAplicacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_aplicacion_aplicacion_codigo");
            entity.Property(e => e.GuiFuncionalidadPadreEsMenu).HasColumnName("gui_funcionalidad_padre_esMenu");
            entity.Property(e => e.GuiFuncionalidadPadreEsMvc).HasColumnName("gui_funcionalidad_padre_esMvc");
            entity.Property(e => e.GuiFuncionalidadPadreFuncionalidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_padre_funcionalidad");
            entity.Property(e => e.GuiFuncionalidadPadreFuncionalidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_padre_funcionalidad_codigo");
            entity.Property(e => e.GuiFuncionalidadPadreIdAplicacion).HasColumnName("gui_funcionalidad_padre_id_aplicacion");
            entity.Property(e => e.GuiFuncionalidadPadreIdFuncionalidad).HasColumnName("gui_funcionalidad_padre_id_funcionalidad");
            entity.Property(e => e.GuiFuncionalidadPadreIdTipoFuncionalidad).HasColumnName("gui_funcionalidad_padre_id_tipoFuncionalidad");
            entity.Property(e => e.GuiFuncionalidadPadreNombreComando)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_padre_nombreComando");
            entity.Property(e => e.GuiFuncionalidadPadreNombreControl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_padre_nombreControl");
            entity.Property(e => e.GuiFuncionalidadPadreOrden).HasColumnName("gui_funcionalidad_padre_orden");
            entity.Property(e => e.GuiFuncionalidadPadreTargetUrl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_padre_targetUrl");
            entity.Property(e => e.GuiFuncionalidadPadreToolTip)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_padre_toolTip");
            entity.Property(e => e.GuiFuncionalidadPadreUrl)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_padre_url");
            entity.Property(e => e.GuiFuncionalidadPadreUrlFormulario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_padre_urlFormulario");
            entity.Property(e => e.GuiFuncionalidadPadreUrlImagen)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_padre_urlImagen");
            entity.Property(e => e.GuiTipoFuncionalidadTipoFuncionalidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gui_tipoFuncionalidad_tipoFuncionalidad");
            entity.Property(e => e.GuiTipoFuncionalidadTipoFuncionalidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_tipoFuncionalidad_tipoFuncionalidad_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdAplicacion).HasColumnName("id_aplicacion");
            entity.Property(e => e.IdFuncionalidad).HasColumnName("id_funcionalidad");
            entity.Property(e => e.IdTipoFuncionalidad).HasColumnName("id_tipoFuncionalidad");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.NombreComando)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombreComando");
            entity.Property(e => e.NombreControl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombreControl");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.TargetUrl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("targetUrl");
            entity.Property(e => e.ToolTip)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("toolTip");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Url)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("url");
            entity.Property(e => e.UrlFormulario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("urlFormulario");
            entity.Property(e => e.UrlImagen)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("urlImagen");
        });

        modelBuilder.Entity<ViewGuiTextoDefecto>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gui_textoDefecto");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GuiCampoTextoCampoTexto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gui_campoTexto_campoTexto");
            entity.Property(e => e.GuiCampoTextoCampoTextoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_campoTexto_campoTexto_codigo");
            entity.Property(e => e.GuiCampoTextoEsHtml).HasColumnName("gui_campoTexto_esHTML");
            entity.Property(e => e.GuiCampoTextoIdFuncionalidad).HasColumnName("gui_campoTexto_id_funcionalidad");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCampoTexto).HasColumnName("id_campoTexto");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Texto)
                .HasMaxLength(8000)
                .IsUnicode(false);
            entity.Property(e => e.TextoDefecto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("textoDefecto");
            entity.Property(e => e.TextoDefectoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("textoDefecto_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewGuiTipoFuncionalidad>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_gui_tipoFuncionalidad");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TipoFuncionalidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoFuncionalidad");
            entity.Property(e => e.TipoFuncionalidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoFuncionalidad_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewLicCatalogoParametro>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_lic_catalogo_parametro");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoBloquearCostear).HasColumnName("cat_catalogo_bloquearCostear");
            entity.Property(e => e.CatCatalogoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo");
            entity.Property(e => e.CatCatalogoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_codigoInventario");
            entity.Property(e => e.CatCatalogoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_descripcion");
            entity.Property(e => e.CatCatalogoEsNacional).HasColumnName("cat_catalogo_esNacional");
            entity.Property(e => e.CatCatalogoIdFamilia).HasColumnName("cat_catalogo_id_familia");
            entity.Property(e => e.CatCatalogoIdImpuesto).HasColumnName("cat_catalogo_id_impuesto");
            entity.Property(e => e.CatCatalogoIdSubtipoCatalogo).HasColumnName("cat_catalogo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoIdUnidad).HasColumnName("cat_catalogo_id_unidad");
            entity.Property(e => e.CatCatalogoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_precioVenta");
            entity.Property(e => e.CatCatalogoTiempoConsecucion).HasColumnName("cat_catalogo_tiempoConsecucion");
            entity.Property(e => e.CatalogoParametro)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("catalogo_parametro");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdParametro).HasColumnName("id_parametro");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.LicParametroDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("lic_parametro_descripcion");
            entity.Property(e => e.LicParametroParametro)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("lic_parametro_parametro");
            entity.Property(e => e.LicParametroParametroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("lic_parametro_parametro_codigo");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorXdefecto)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("valorXdefecto");
        });

        modelBuilder.Entity<ViewLicLicenciaParametro>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_lic_licencia_parametro");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsParteSerial).HasColumnName("esParteSerial");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdLicencia).HasColumnName("id_licencia");
            entity.Property(e => e.IdParametro).HasColumnName("id_parametro");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.LicLicenciaClave)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("lic_licencia_clave");
            entity.Property(e => e.LicLicenciaFechaFinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("lic_licencia_fechaFin_ff");
            entity.Property(e => e.LicLicenciaFechaInicioFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("lic_licencia_fechaInicio_ff");
            entity.Property(e => e.LicLicenciaIdCatalogo).HasColumnName("lic_licencia_id_catalogo");
            entity.Property(e => e.LicLicenciaIdTercero).HasColumnName("lic_licencia_id_tercero");
            entity.Property(e => e.LicLicenciaLicencia)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("lic_licencia_licencia");
            entity.Property(e => e.LicLicenciaLicenciaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("lic_licencia_licencia_codigo");
            entity.Property(e => e.LicLicenciaSerial)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("lic_licencia_serial");
            entity.Property(e => e.LicParametroDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("lic_parametro_descripcion");
            entity.Property(e => e.LicParametroParametro)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("lic_parametro_parametro");
            entity.Property(e => e.LicParametroParametroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("lic_parametro_parametro_codigo");
            entity.Property(e => e.LicenciaParametro)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("licencia_parametro");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Valor)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("valor");
        });

        modelBuilder.Entity<ViewLicLicencium>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_lic_licencia");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoBloquearCostear).HasColumnName("cat_catalogo_bloquearCostear");
            entity.Property(e => e.CatCatalogoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo");
            entity.Property(e => e.CatCatalogoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_codigoInventario");
            entity.Property(e => e.CatCatalogoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_descripcion");
            entity.Property(e => e.CatCatalogoEsNacional).HasColumnName("cat_catalogo_esNacional");
            entity.Property(e => e.CatCatalogoIdFamilia).HasColumnName("cat_catalogo_id_familia");
            entity.Property(e => e.CatCatalogoIdImpuesto).HasColumnName("cat_catalogo_id_impuesto");
            entity.Property(e => e.CatCatalogoIdSubTipoCatalogo).HasColumnName("cat_catalogo_id_subTipoCatalogo");
            entity.Property(e => e.CatCatalogoIdUnidad).HasColumnName("cat_catalogo_id_unidad");
            entity.Property(e => e.CatCatalogoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_precioVenta");
            entity.Property(e => e.CatCatalogoTiempoConsecucion).HasColumnName("cat_catalogo_tiempoConsecucion");
            entity.Property(e => e.Clave)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("clave");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFinFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFin_ff");
            entity.Property(e => e.FechaInicioFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicio_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Licencia)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("licencia");
            entity.Property(e => e.LicenciaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("licencia_codigo");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Serial)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("serial");
            entity.Property(e => e.TerTerceroClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_clasificacion");
            entity.Property(e => e.TerTerceroContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_contacto");
            entity.Property(e => e.TerTerceroDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_direccion");
            entity.Property(e => e.TerTerceroEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_email");
            entity.Property(e => e.TerTerceroEsCliente).HasColumnName("ter_tercero_esCliente");
            entity.Property(e => e.TerTerceroEsEmpresaPropia).HasColumnName("ter_tercero_esEmpresaPropia");
            entity.Property(e => e.TerTerceroEsFabricante).HasColumnName("ter_tercero_esFabricante");
            entity.Property(e => e.TerTerceroEsProspecto).HasColumnName("ter_tercero_esProspecto");
            entity.Property(e => e.TerTerceroEsProveedor).HasColumnName("ter_tercero_esProveedor");
            entity.Property(e => e.TerTerceroEsTransportador).HasColumnName("ter_tercero_esTransportador");
            entity.Property(e => e.TerTerceroFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fax");
            entity.Property(e => e.TerTerceroIdEstadoTercero).HasColumnName("ter_tercero_id_estadoTercero");
            entity.Property(e => e.TerTerceroIdNaturalezaTercero).HasColumnName("ter_tercero_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroIdZona).HasColumnName("ter_tercero_id_zona");
            entity.Property(e => e.TerTerceroNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_notas");
            entity.Property(e => e.TerTerceroRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_representante");
            entity.Property(e => e.TerTerceroTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_telefono");
            entity.Property(e => e.TerTerceroTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero");
            entity.Property(e => e.TerTerceroTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_codigo");
            entity.Property(e => e.TerTerceroTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nit");
            entity.Property(e => e.TerTerceroTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_website");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewLicParametro>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_lic_parametro");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Parametro)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("parametro");
            entity.Property(e => e.ParametroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("parametro_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewOrtCanalAtencion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ort_canalAtencion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CanalAtencion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("canalAtencion");
            entity.Property(e => e.CanalAtencionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("canalAtencion_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewOrtDepartamentoSolicitud>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ort_departamentoSolicitud");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DepartamentoSolicitud)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("departamentoSolicitud");
            entity.Property(e => e.DepartamentoSolicitudCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("departamentoSolicitud_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.RecibeSolicitudes).HasColumnName("recibeSolicitudes");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewOrtMotivoCancelacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ort_motivoCancelacion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MotivoCancelacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("motivoCancelacion");
            entity.Property(e => e.MotivoCancelacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("motivoCancelacion_codigo");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ResponsableServicio).HasColumnName("responsableServicio");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewOrtProgramacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ort_programacion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoActividadBloquearCostear).HasColumnName("cat_catalogo_actividad_bloquearCostear");
            entity.Property(e => e.CatCatalogoActividadCatalogoActividad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.actividad_catalogo.actividad");
            entity.Property(e => e.CatCatalogoActividadCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_actividad_catalogo_codigo");
            entity.Property(e => e.CatCatalogoActividadCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_actividad_codigoInventario");
            entity.Property(e => e.CatCatalogoActividadDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_actividad_descripcion");
            entity.Property(e => e.CatCatalogoActividadDuracionEstimada).HasColumnName("cat_catalogo.actividad_duracionEstimada");
            entity.Property(e => e.CatCatalogoActividadEsNacional).HasColumnName("cat_catalogo_actividad_esNacional");
            entity.Property(e => e.CatCatalogoActividadEsProductiva).HasColumnName("cat_catalogo.actividad_esProductiva");
            entity.Property(e => e.CatCatalogoActividadIdFamilia).HasColumnName("cat_catalogo_actividad_id_familia");
            entity.Property(e => e.CatCatalogoActividadIdImpuesto).HasColumnName("cat_catalogo_actividad_id_impuesto");
            entity.Property(e => e.CatCatalogoActividadIdSubTipoCatalogo).HasColumnName("cat_catalogo_actividad_id_subTipoCatalogo");
            entity.Property(e => e.CatCatalogoActividadIdUnidad).HasColumnName("cat_catalogo_actividad_id_unidad");
            entity.Property(e => e.CatCatalogoActividadPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_actividad_precioVenta");
            entity.Property(e => e.CatCatalogoActividadProcedimiento)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.actividad_procedimiento");
            entity.Property(e => e.CatCatalogoActividadTiempoConsecucion).HasColumnName("cat_catalogo_actividad_tiempoConsecucion");
            entity.Property(e => e.Comentario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("comentario");
            entity.Property(e => e.Costo).HasColumnName("costo");
            entity.Property(e => e.DesdeFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("desde_fh");
            entity.Property(e => e.DocDocumentoOtCargo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_cargo");
            entity.Property(e => e.DocDocumentoOtCompromisos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_compromisos");
            entity.Property(e => e.DocDocumentoOtContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_contacto");
            entity.Property(e => e.DocDocumentoOtCosto).HasColumnName("doc_documento_ot_costo");
            entity.Property(e => e.DocDocumentoOtCostoPlaneado).HasColumnName("doc_documento_ot_costoPlaneado");
            entity.Property(e => e.DocDocumentoOtDescuento).HasColumnName("doc_documento_ot_descuento");
            entity.Property(e => e.DocDocumentoOtDescuentoPlaneado).HasColumnName("doc_documento_ot_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoOtDiagnosticoInicial)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_diagnosticoInicial");
            entity.Property(e => e.DocDocumentoOtDireccionUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_direccionUbicacion");
            entity.Property(e => e.DocDocumentoOtDistribuyeCentros).HasColumnName("doc_documento.ot_distribuyeCentros");
            entity.Property(e => e.DocDocumentoOtDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_documento_codigo");
            entity.Property(e => e.DocDocumentoOtDocumentoNumero).HasColumnName("doc_documento_ot_documento_numero");
            entity.Property(e => e.DocDocumentoOtDocumentoOt)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_documento.ot");
            entity.Property(e => e.DocDocumentoOtDuracionEstimada).HasColumnName("doc_documento.ot_duracionEstimada");
            entity.Property(e => e.DocDocumentoOtEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_email");
            entity.Property(e => e.DocDocumentoOtEnTaller).HasColumnName("doc_documento.ot_enTaller");
            entity.Property(e => e.DocDocumentoOtFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_fax");
            entity.Property(e => e.DocDocumentoOtFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoOtFechaCompromisoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.ot_fechaCompromiso_fh");
            entity.Property(e => e.DocDocumentoOtFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fecha_fh");
            entity.Property(e => e.DocDocumentoOtFechaGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.ot_fechaGarantia_ff");
            entity.Property(e => e.DocDocumentoOtFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoOtFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoOtIdContrato).HasColumnName("doc_documento.ot_id_contrato");
            entity.Property(e => e.DocDocumentoOtIdDepartamentoSolicitud).HasColumnName("doc_documento.ot_id_departamentoSolicitud");
            entity.Property(e => e.DocDocumentoOtIdDocumento).HasColumnName("doc_documento_ot_id_documento");
            entity.Property(e => e.DocDocumentoOtIdEquipo).HasColumnName("doc_documento.ot_id_equipo");
            entity.Property(e => e.DocDocumentoOtIdEstadoTipoDocumento).HasColumnName("doc_documento_ot_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoOtIdMoneda).HasColumnName("doc_documento_ot_id_moneda");
            entity.Property(e => e.DocDocumentoOtIdMotivoCancelacion).HasColumnName("doc_documento.ot_id_motivoCancelacion");
            entity.Property(e => e.DocDocumentoOtIdMotivoestado).HasColumnName("doc_documento_ot_id_motivoestado");
            entity.Property(e => e.DocDocumentoOtIdPrioridadDocumento).HasColumnName("doc_documento_ot_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoOtIdSistema).HasColumnName("doc_documento.ot_id_sistema");
            entity.Property(e => e.DocDocumentoOtIdSubtipoDocumento).HasColumnName("doc_documento_ot_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoOtIdSucursal).HasColumnName("doc_documento.ot_id_sucursal");
            entity.Property(e => e.DocDocumentoOtIdTerceroCliente).HasColumnName("doc_documento_ot_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoOtIdTerceroProveedor).HasColumnName("doc_documento_ot_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoOtIdTipoServicio).HasColumnName("doc_documento.ot_id_tipoServicio");
            entity.Property(e => e.DocDocumentoOtIdUsuarioCoordinador).HasColumnName("doc_documento.ot_id_usuario_coordinador");
            entity.Property(e => e.DocDocumentoOtIdZona).HasColumnName("doc_documento.ot_id_zona");
            entity.Property(e => e.DocDocumentoOtIva).HasColumnName("doc_documento_ot_iva");
            entity.Property(e => e.DocDocumentoOtIvaPlaneado).HasColumnName("doc_documento_ot_ivaPlaneado");
            entity.Property(e => e.DocDocumentoOtMotivoServicio)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_motivoServicio");
            entity.Property(e => e.DocDocumentoOtPorcentajeCliente).HasColumnName("doc_documento.ot_porcentajeCliente");
            entity.Property(e => e.DocDocumentoOtPorcentajeDistribuidor).HasColumnName("doc_documento.ot_porcentajeDistribuidor");
            entity.Property(e => e.DocDocumentoOtPorcentajeFabricante).HasColumnName("doc_documento.ot_porcentajeFabricante");
            entity.Property(e => e.DocDocumentoOtPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_prefijo");
            entity.Property(e => e.DocDocumentoOtReclamacionFabrica)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_reclamacionFabrica");
            entity.Property(e => e.DocDocumentoOtRecomendaciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_recomendaciones");
            entity.Property(e => e.DocDocumentoOtRentabilidad).HasColumnName("doc_documento_ot_rentabilidad");
            entity.Property(e => e.DocDocumentoOtSegunTempario).HasColumnName("doc_documento.ot_segunTempario");
            entity.Property(e => e.DocDocumentoOtSubtotal).HasColumnName("doc_documento_ot_subtotal");
            entity.Property(e => e.DocDocumentoOtSubtotalPlaneado).HasColumnName("doc_documento_ot_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoOtTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_telefono");
            entity.Property(e => e.DocDocumentoOtTotal).HasColumnName("doc_documento_ot_total");
            entity.Property(e => e.DocDocumentoOtTotalPlaneado).HasColumnName("doc_documento_ot_totalPlaneado");
            entity.Property(e => e.DocDocumentoOtTrabajos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_trabajos");
            entity.Property(e => e.DocDocumentoOtTrm).HasColumnName("doc_documento_ot_trm");
            entity.Property(e => e.DocSoporteItemDocumentoCosto)
                .HasColumnType("money")
                .HasColumnName("doc_soporteItemDocumento_Costo");
            entity.Property(e => e.DocSoporteItemDocumentoDuracionEjecutada).HasColumnName("doc_soporteItemDocumento_duracionEjecutada");
            entity.Property(e => e.DocSoporteItemDocumentoDuracionPlaneada).HasColumnName("doc_soporteItemDocumento_duracionPlaneada");
            entity.Property(e => e.DocSoporteItemDocumentoIdItemDocumento).HasColumnName("doc_soporteItemDocumento_id_itemDocumento");
            entity.Property(e => e.DocSoporteItemDocumentoIdUsuario).HasColumnName("doc_soporteItemDocumento_id_usuario");
            entity.Property(e => e.DocSoporteItemDocumentoSoporteItemDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_soporteItemDocumento_soporteItemDocumento");
            entity.Property(e => e.DocSoporteItemDocumentoSoporteItemDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_soporteItemDocumento_soporteItemDocumento_codigo");
            entity.Property(e => e.DocSoporteItemDocumentoValor)
                .HasColumnType("money")
                .HasColumnName("doc_soporteItemDocumento_Valor");
            entity.Property(e => e.Duracion).HasColumnName("duracion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.HastaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("hasta_fh");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogoActividad).HasColumnName("id_catalogo.actividad");
            entity.Property(e => e.IdDocumentoOt).HasColumnName("id_documento.ot");
            entity.Property(e => e.IdMotivoCancelacion).HasColumnName("id_motivoCancelacion");
            entity.Property(e => e.IdProgramacion).HasColumnName("id_programacion");
            entity.Property(e => e.IdReporteTecnico).HasColumnName("id_reporteTecnico");
            entity.Property(e => e.IdSoporteItemDocumento).HasColumnName("id_soporteItemDocumento");
            entity.Property(e => e.IdTipoProgramacion).HasColumnName("id_tipoProgramacion");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.OrtMotivoCancelacionMotivoCancelacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ort_motivoCancelacion_motivoCancelacion");
            entity.Property(e => e.OrtMotivoCancelacionMotivoCancelacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ort_motivoCancelacion_motivoCancelacion_codigo");
            entity.Property(e => e.OrtMotivoCancelacionResponsableServicio).HasColumnName("ort_motivoCancelacion_responsableServicio");
            entity.Property(e => e.OrtProgramacionPadreComentario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ort_programacion_padre_comentario");
            entity.Property(e => e.OrtProgramacionPadreCosto).HasColumnName("ort_programacion_padre_costo");
            entity.Property(e => e.OrtProgramacionPadreDesdeFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("ort_programacion_padre_desde_fh");
            entity.Property(e => e.OrtProgramacionPadreDuracion).HasColumnName("ort_programacion_padre_duracion");
            entity.Property(e => e.OrtProgramacionPadreIdCatalogoActividad).HasColumnName("ort_programacion_padre_id_catalogo.actividad");
            entity.Property(e => e.OrtProgramacionPadreIdDocumentoOt).HasColumnName("ort_programacion_padre_id_documento.ot");
            entity.Property(e => e.OrtProgramacionPadreIdMotivoCancelacion).HasColumnName("ort_programacion_padre_id_motivoCancelacion");
            entity.Property(e => e.OrtProgramacionPadreIdProgramacion).HasColumnName("ort_programacion_padre_id_programacion");
            entity.Property(e => e.OrtProgramacionPadreIdReporteTecnico).HasColumnName("ort_programacion_padre_id_reporteTecnico");
            entity.Property(e => e.OrtProgramacionPadreIdSoporteItemDocumento).HasColumnName("ort_programacion_padre_id_soporteItemDocumento");
            entity.Property(e => e.OrtProgramacionPadreIdTipoProgramacion).HasColumnName("ort_programacion_padre_id_tipoProgramacion");
            entity.Property(e => e.OrtProgramacionPadreIdUsuario).HasColumnName("ort_programacion_padre_id_usuario");
            entity.Property(e => e.OrtProgramacionPadreProgramacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ort_programacion_padre_programacion");
            entity.Property(e => e.OrtProgramacionPadreProgramacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ort_programacion_padre_programacion_codigo");
            entity.Property(e => e.OrtReporteTecnicoCompromisos)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_compromisos");
            entity.Property(e => e.OrtReporteTecnicoIdGasto).HasColumnName("ort_reporteTecnico_id_gasto");
            entity.Property(e => e.OrtReporteTecnicoNumero)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_numero");
            entity.Property(e => e.OrtReporteTecnicoRecomendaciones)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_recomendaciones");
            entity.Property(e => e.OrtReporteTecnicoReporteTecnico)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_reporteTecnico");
            entity.Property(e => e.OrtReporteTecnicoReporteTecnicoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_reporteTecnico_codigo");
            entity.Property(e => e.OrtReporteTecnicoTrabajos)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_trabajos");
            entity.Property(e => e.OrtTipoProgramacionTipoProgramacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ort_tipoProgramacion_tipoProgramacion");
            entity.Property(e => e.OrtTipoProgramacionTipoProgramacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ort_tipoProgramacion_tipoProgramacion_codigo");
            entity.Property(e => e.Programacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("programacion");
            entity.Property(e => e.ProgramacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("programacion_codigo");
            entity.Property(e => e.SegUsuarioAccesoActivo).HasColumnName("seg_usuario_accesoActivo");
            entity.Property(e => e.SegUsuarioAplicaRecargo).HasColumnName("seg_usuario_aplicaRecargo");
            entity.Property(e => e.SegUsuarioCambiarClave).HasColumnName("seg_usuario_cambiarClave");
            entity.Property(e => e.SegUsuarioCargo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_cargo");
            entity.Property(e => e.SegUsuarioClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_clave");
            entity.Property(e => e.SegUsuarioCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_costoHora");
            entity.Property(e => e.SegUsuarioDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_direccion");
            entity.Property(e => e.SegUsuarioEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_email");
            entity.Property(e => e.SegUsuarioFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioHabilitado).HasColumnName("seg_usuario_habilitado");
            entity.Property(e => e.SegUsuarioIdCargo).HasColumnName("seg_usuario_id_cargo");
            entity.Property(e => e.SegUsuarioIdGrupo).HasColumnName("seg_usuario_id_grupo");
            entity.Property(e => e.SegUsuarioIdPerfil).HasColumnName("seg_usuario_id_perfil");
            entity.Property(e => e.SegUsuarioIdUsuario).HasColumnName("seg_usuario_id_usuario");
            entity.Property(e => e.SegUsuarioIdZona).HasColumnName("seg_usuario_id_zona");
            entity.Property(e => e.SegUsuarioIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_identificacion");
            entity.Property(e => e.SegUsuarioIntentosFallidos).HasColumnName("seg_usuario_intentosFallidos");
            entity.Property(e => e.SegUsuarioNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_nombre");
            entity.Property(e => e.SegUsuarioNumeroIngresos).HasColumnName("seg_usuario_numeroIngresos");
            entity.Property(e => e.SegUsuarioPorcentajeComision).HasColumnName("seg_usuario_porcentajeComision");
            entity.Property(e => e.SegUsuarioPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_preferencias");
            entity.Property(e => e.SegUsuarioProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_profesion");
            entity.Property(e => e.SegUsuarioSexo).HasColumnName("seg_usuario_sexo");
            entity.Property(e => e.SegUsuarioTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_telefono");
            entity.Property(e => e.SegUsuarioUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario");
            entity.Property(e => e.SegUsuarioUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewOrtReporteTecnico>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ort_reporteTecnico");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Compromisos)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("compromisos");
            entity.Property(e => e.Diagnostico)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("diagnostico");
            entity.Property(e => e.DocDocumentoGastoConcepto)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.gasto_concepto");
            entity.Property(e => e.DocDocumentoGastoConsignado).HasColumnName("doc_documento.gasto_consignado");
            entity.Property(e => e.DocDocumentoGastoCosto).HasColumnName("doc_documento_gasto_costo");
            entity.Property(e => e.DocDocumentoGastoCostoPlaneado).HasColumnName("doc_documento_gasto_costoPlaneado");
            entity.Property(e => e.DocDocumentoGastoDescuento).HasColumnName("doc_documento_gasto_descuento");
            entity.Property(e => e.DocDocumentoGastoDescuentoPlaneado).HasColumnName("doc_documento_gasto_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoGastoDias).HasColumnName("doc_documento.gasto_dias");
            entity.Property(e => e.DocDocumentoGastoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_documento_codigo");
            entity.Property(e => e.DocDocumentoGastoDocumentoGasto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.gasto_documento.gasto");
            entity.Property(e => e.DocDocumentoGastoDocumentoNumero).HasColumnName("doc_documento_gasto_documento_numero");
            entity.Property(e => e.DocDocumentoGastoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_gasto_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoGastoFechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.gasto_fecha_ff");
            entity.Property(e => e.DocDocumentoGastoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_gasto_fecha_fh");
            entity.Property(e => e.DocDocumentoGastoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_gasto_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoGastoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_gasto_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoGastoIdDocumento).HasColumnName("doc_documento_gasto_id_documento");
            entity.Property(e => e.DocDocumentoGastoIdEstadoTipoDocumento).HasColumnName("doc_documento_gasto_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoGastoIdMoneda).HasColumnName("doc_documento_gasto_id_moneda");
            entity.Property(e => e.DocDocumentoGastoIdMotivoestado).HasColumnName("doc_documento_gasto_id_motivoestado");
            entity.Property(e => e.DocDocumentoGastoIdPrioridadDocumento).HasColumnName("doc_documento_gasto_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoGastoIdSubtipoDocumento).HasColumnName("doc_documento_gasto_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoGastoIdTerceroCliente).HasColumnName("doc_documento_gasto_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoGastoIdTerceroProveedor).HasColumnName("doc_documento_gasto_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoGastoIdUsuarioAsignado).HasColumnName("doc_documento_gasto_id_usuario_asignado");
            entity.Property(e => e.DocDocumentoGastoIdUsuarioEnUso).HasColumnName("doc_documento_gasto_id_usuario_enUso");
            entity.Property(e => e.DocDocumentoGastoIdUsuarioSolicitante).HasColumnName("doc_documento.gasto_id_usuario_solicitante");
            entity.Property(e => e.DocDocumentoGastoIva).HasColumnName("doc_documento_gasto_iva");
            entity.Property(e => e.DocDocumentoGastoIvaPlaneado).HasColumnName("doc_documento_gasto_ivaPlaneado");
            entity.Property(e => e.DocDocumentoGastoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_gasto_prefijo");
            entity.Property(e => e.DocDocumentoGastoRentabilidad).HasColumnName("doc_documento_gasto_rentabilidad");
            entity.Property(e => e.DocDocumentoGastoSubtotal).HasColumnName("doc_documento_gasto_subtotal");
            entity.Property(e => e.DocDocumentoGastoSubtotalPlaneado).HasColumnName("doc_documento_gasto_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoGastoTotal).HasColumnName("doc_documento_gasto_total");
            entity.Property(e => e.DocDocumentoGastoTotalPlaneado).HasColumnName("doc_documento_gasto_totalPlaneado");
            entity.Property(e => e.DocDocumentoGastoTrm).HasColumnName("doc_documento_gasto_trm");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GasGastoConcepto)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("gas_gasto_concepto");
            entity.Property(e => e.GasGastoConsignado).HasColumnName("gas_gasto_consignado");
            entity.Property(e => e.GasGastoDias).HasColumnName("gas_gasto_dias");
            entity.Property(e => e.GasGastoFechaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("gas_gasto_fecha_ff");
            entity.Property(e => e.GasGastoGasto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gas_gasto_gasto");
            entity.Property(e => e.GasGastoGastoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gas_gasto_gasto_codigo");
            entity.Property(e => e.GasGastoIdEstadoTipoDocumento).HasColumnName("gas_gasto_id_estadoTipoDocumento");
            entity.Property(e => e.GasGastoIdTipoGasto).HasColumnName("gas_gasto_id_tipoGasto");
            entity.Property(e => e.GasGastoIdUsuarioAprobo).HasColumnName("gas_gasto_id_usuario_aprobo");
            entity.Property(e => e.GasGastoIdUsuarioSolicitante).HasColumnName("gas_gasto_id_usuario_solicitante");
            entity.Property(e => e.GasGastoNumero).HasColumnName("gas_gasto_numero");
            entity.Property(e => e.GasGastoValor).HasColumnName("gas_gasto_valor");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCanalAtencion).HasColumnName("id_canalAtencion");
            entity.Property(e => e.IdDocumentoGasto).HasColumnName("id_documento.gasto");
            entity.Property(e => e.IdGasto).HasColumnName("id_gasto");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Numero)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("numero");
            entity.Property(e => e.OrtCanalAtencionCanalAtencion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ort_canalAtencion_canalAtencion");
            entity.Property(e => e.OrtCanalAtencionCanalAtencionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ort_canalAtencion_canalAtencion_codigo");
            entity.Property(e => e.Recomendaciones)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("recomendaciones");
            entity.Property(e => e.ReporteTecnico)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("reporteTecnico");
            entity.Property(e => e.ReporteTecnicoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("reporteTecnico_codigo");
            entity.Property(e => e.Trabajos)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("trabajos");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewOrtReporteTecnicoFalla>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ort_reporteTecnico_falla");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquFallaCausaFalla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_falla_causa_falla");
            entity.Property(e => e.EquFallaCausaFallaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_falla_causa_falla_codigo");
            entity.Property(e => e.EquFallaCausaIdFalla).HasColumnName("equ_falla_causa_id_falla");
            entity.Property(e => e.EquFallaCausaIdTipoFalla).HasColumnName("equ_falla_causa_id_tipoFalla");
            entity.Property(e => e.EquFallaCausaProcedimiento)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("equ_falla_causa_procedimiento");
            entity.Property(e => e.EquFallaEfectoFalla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_falla_efecto_falla");
            entity.Property(e => e.EquFallaEfectoFallaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_falla_efecto_falla_codigo");
            entity.Property(e => e.EquFallaEfectoIdFalla).HasColumnName("equ_falla_efecto_id_falla");
            entity.Property(e => e.EquFallaEfectoIdTipoFalla).HasColumnName("equ_falla_efecto_id_tipoFalla");
            entity.Property(e => e.EquFallaEfectoProcedimiento)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("equ_falla_efecto_procedimiento");
            entity.Property(e => e.EquFallaFalla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_falla_falla");
            entity.Property(e => e.EquFallaFallaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_falla_falla_codigo");
            entity.Property(e => e.EquFallaIdFalla).HasColumnName("equ_falla_id_falla");
            entity.Property(e => e.EquFallaIdTipoFalla).HasColumnName("equ_falla_id_tipoFalla");
            entity.Property(e => e.EquFallaProcedimiento)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("equ_falla_procedimiento");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdFalla).HasColumnName("id_falla");
            entity.Property(e => e.IdFallaCausa).HasColumnName("id_falla_causa");
            entity.Property(e => e.IdFallaEfecto).HasColumnName("id_falla_efecto");
            entity.Property(e => e.IdReporteTecnico).HasColumnName("id_reporteTecnico");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.OrtReporteTecnicoCompromisos)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_compromisos");
            entity.Property(e => e.OrtReporteTecnicoIdCanalAtencion).HasColumnName("ort_reporteTecnico_id_canalAtencion");
            entity.Property(e => e.OrtReporteTecnicoIdGasto).HasColumnName("ort_reporteTecnico_id_gasto");
            entity.Property(e => e.OrtReporteTecnicoNumero)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_numero");
            entity.Property(e => e.OrtReporteTecnicoRecomendaciones)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_recomendaciones");
            entity.Property(e => e.OrtReporteTecnicoReporteTecnico)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_reporteTecnico");
            entity.Property(e => e.OrtReporteTecnicoReporteTecnicoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_reporteTecnico_codigo");
            entity.Property(e => e.OrtReporteTecnicoTrabajos)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_trabajos");
            entity.Property(e => e.ReporteTecnicoFalla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("reporteTecnico_falla");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewOrtReporteTecnicoOt>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ort_reporteTecnico_ot");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocDocumentoOtCargo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_cargo");
            entity.Property(e => e.DocDocumentoOtCompromisos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_compromisos");
            entity.Property(e => e.DocDocumentoOtContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_contacto");
            entity.Property(e => e.DocDocumentoOtCosto).HasColumnName("doc_documento_ot_costo");
            entity.Property(e => e.DocDocumentoOtCostoPlaneado).HasColumnName("doc_documento_ot_costoPlaneado");
            entity.Property(e => e.DocDocumentoOtDescuento).HasColumnName("doc_documento_ot_descuento");
            entity.Property(e => e.DocDocumentoOtDescuentoPlaneado).HasColumnName("doc_documento_ot_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoOtDiagnosticoInicial)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_diagnosticoInicial");
            entity.Property(e => e.DocDocumentoOtDireccionUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_direccionUbicacion");
            entity.Property(e => e.DocDocumentoOtDistribuyeCentros).HasColumnName("doc_documento.ot_distribuyeCentros");
            entity.Property(e => e.DocDocumentoOtDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_documento_codigo");
            entity.Property(e => e.DocDocumentoOtDocumentoNumero).HasColumnName("doc_documento_ot_documento_numero");
            entity.Property(e => e.DocDocumentoOtDocumentoOt)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_documento.ot");
            entity.Property(e => e.DocDocumentoOtDuracionEstimada).HasColumnName("doc_documento.ot_duracionEstimada");
            entity.Property(e => e.DocDocumentoOtEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_email");
            entity.Property(e => e.DocDocumentoOtEnTaller).HasColumnName("doc_documento.ot_enTaller");
            entity.Property(e => e.DocDocumentoOtFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_fax");
            entity.Property(e => e.DocDocumentoOtFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoOtFechaCompromisoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.ot_fechaCompromiso_fh");
            entity.Property(e => e.DocDocumentoOtFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fecha_fh");
            entity.Property(e => e.DocDocumentoOtFechaGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.ot_fechaGarantia_ff");
            entity.Property(e => e.DocDocumentoOtFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoOtFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoOtIdContrato).HasColumnName("doc_documento.ot_id_contrato");
            entity.Property(e => e.DocDocumentoOtIdDepartamentoSolicitud).HasColumnName("doc_documento.ot_id_departamentoSolicitud");
            entity.Property(e => e.DocDocumentoOtIdDocumento).HasColumnName("doc_documento_ot_id_documento");
            entity.Property(e => e.DocDocumentoOtIdEquipo).HasColumnName("doc_documento.ot_id_equipo");
            entity.Property(e => e.DocDocumentoOtIdEstadoTipoDocumento).HasColumnName("doc_documento_ot_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoOtIdMoneda).HasColumnName("doc_documento_ot_id_moneda");
            entity.Property(e => e.DocDocumentoOtIdMotivoCancelacion).HasColumnName("doc_documento.ot_id_motivoCancelacion");
            entity.Property(e => e.DocDocumentoOtIdMotivoestado).HasColumnName("doc_documento_ot_id_motivoestado");
            entity.Property(e => e.DocDocumentoOtIdPrioridadDocumento).HasColumnName("doc_documento_ot_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoOtIdSistema).HasColumnName("doc_documento.ot_id_sistema");
            entity.Property(e => e.DocDocumentoOtIdSubtipoDocumento).HasColumnName("doc_documento_ot_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoOtIdSucursal).HasColumnName("doc_documento.ot_id_sucursal");
            entity.Property(e => e.DocDocumentoOtIdTerceroCliente).HasColumnName("doc_documento_ot_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoOtIdTerceroProveedor).HasColumnName("doc_documento_ot_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoOtIdTipoServicio).HasColumnName("doc_documento.ot_id_tipoServicio");
            entity.Property(e => e.DocDocumentoOtIdUsuarioCoordinador).HasColumnName("doc_documento.ot_id_usuario_coordinador");
            entity.Property(e => e.DocDocumentoOtIdZona).HasColumnName("doc_documento.ot_id_zona");
            entity.Property(e => e.DocDocumentoOtIva).HasColumnName("doc_documento_ot_iva");
            entity.Property(e => e.DocDocumentoOtIvaPlaneado).HasColumnName("doc_documento_ot_ivaPlaneado");
            entity.Property(e => e.DocDocumentoOtMotivoServicio)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_motivoServicio");
            entity.Property(e => e.DocDocumentoOtPorcentajeCliente).HasColumnName("doc_documento.ot_porcentajeCliente");
            entity.Property(e => e.DocDocumentoOtPorcentajeDistribuidor).HasColumnName("doc_documento.ot_porcentajeDistribuidor");
            entity.Property(e => e.DocDocumentoOtPorcentajeFabricante).HasColumnName("doc_documento.ot_porcentajeFabricante");
            entity.Property(e => e.DocDocumentoOtPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_prefijo");
            entity.Property(e => e.DocDocumentoOtReclamacionFabrica)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_reclamacionFabrica");
            entity.Property(e => e.DocDocumentoOtRecomendaciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_recomendaciones");
            entity.Property(e => e.DocDocumentoOtRentabilidad).HasColumnName("doc_documento_ot_rentabilidad");
            entity.Property(e => e.DocDocumentoOtSegunTempario).HasColumnName("doc_documento.ot_segunTempario");
            entity.Property(e => e.DocDocumentoOtSubtotal).HasColumnName("doc_documento_ot_subtotal");
            entity.Property(e => e.DocDocumentoOtSubtotalPlaneado).HasColumnName("doc_documento_ot_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoOtTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_telefono");
            entity.Property(e => e.DocDocumentoOtTotal).HasColumnName("doc_documento_ot_total");
            entity.Property(e => e.DocDocumentoOtTotalPlaneado).HasColumnName("doc_documento_ot_totalPlaneado");
            entity.Property(e => e.DocDocumentoOtTrabajos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_trabajos");
            entity.Property(e => e.DocDocumentoOtTrm).HasColumnName("doc_documento_ot_trm");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDocumentoOt).HasColumnName("id_documento.ot");
            entity.Property(e => e.IdReporteTecnico).HasColumnName("id_reporteTecnico");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Observaciones)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .HasColumnName("observaciones");
            entity.Property(e => e.OrtReporteTecnicoCompromisos)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_compromisos");
            entity.Property(e => e.OrtReporteTecnicoIdGasto).HasColumnName("ort_reporteTecnico_id_gasto");
            entity.Property(e => e.OrtReporteTecnicoNumero)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_numero");
            entity.Property(e => e.OrtReporteTecnicoRecomendaciones)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_recomendaciones");
            entity.Property(e => e.OrtReporteTecnicoReporteTecnico)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_reporteTecnico");
            entity.Property(e => e.OrtReporteTecnicoReporteTecnicoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_reporteTecnico_codigo");
            entity.Property(e => e.OrtReporteTecnicoTrabajos)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("ort_reporteTecnico_trabajos");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewOrtTipoProgramacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ort_tipoProgramacion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TipoProgramacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoProgramacion");
            entity.Property(e => e.TipoProgramacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoProgramacion_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewOrtVale>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ort_vale");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocDocumentoOtCargo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_cargo");
            entity.Property(e => e.DocDocumentoOtCompromisos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_compromisos");
            entity.Property(e => e.DocDocumentoOtContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_contacto");
            entity.Property(e => e.DocDocumentoOtCosto).HasColumnName("doc_documento_ot_costo");
            entity.Property(e => e.DocDocumentoOtCostoPlaneado).HasColumnName("doc_documento_ot_costoPlaneado");
            entity.Property(e => e.DocDocumentoOtDescuento).HasColumnName("doc_documento_ot_descuento");
            entity.Property(e => e.DocDocumentoOtDescuentoPlaneado).HasColumnName("doc_documento_ot_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoOtDiagnosticoInicial)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_diagnosticoInicial");
            entity.Property(e => e.DocDocumentoOtDireccionUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_direccionUbicacion");
            entity.Property(e => e.DocDocumentoOtDistribuyeCentros).HasColumnName("doc_documento.ot_distribuyeCentros");
            entity.Property(e => e.DocDocumentoOtDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_documento_codigo");
            entity.Property(e => e.DocDocumentoOtDocumentoNumero).HasColumnName("doc_documento_ot_documento_numero");
            entity.Property(e => e.DocDocumentoOtDocumentoOt)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_documento.ot");
            entity.Property(e => e.DocDocumentoOtDuracionEstimada).HasColumnName("doc_documento.ot_duracionEstimada");
            entity.Property(e => e.DocDocumentoOtEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_email");
            entity.Property(e => e.DocDocumentoOtEnTaller).HasColumnName("doc_documento.ot_enTaller");
            entity.Property(e => e.DocDocumentoOtFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_fax");
            entity.Property(e => e.DocDocumentoOtFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoOtFechaCompromisoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.ot_fechaCompromiso_fh");
            entity.Property(e => e.DocDocumentoOtFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fecha_fh");
            entity.Property(e => e.DocDocumentoOtFechaGarantiaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.ot_fechaGarantia_ff");
            entity.Property(e => e.DocDocumentoOtFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoOtFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_ot_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoOtIdContrato).HasColumnName("doc_documento.ot_id_contrato");
            entity.Property(e => e.DocDocumentoOtIdDepartamentoSolicitud).HasColumnName("doc_documento.ot_id_departamentoSolicitud");
            entity.Property(e => e.DocDocumentoOtIdDocumento).HasColumnName("doc_documento_ot_id_documento");
            entity.Property(e => e.DocDocumentoOtIdEquipo).HasColumnName("doc_documento.ot_id_equipo");
            entity.Property(e => e.DocDocumentoOtIdEstadoTipoDocumento).HasColumnName("doc_documento_ot_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoOtIdMoneda).HasColumnName("doc_documento_ot_id_moneda");
            entity.Property(e => e.DocDocumentoOtIdMotivoCancelacion).HasColumnName("doc_documento.ot_id_motivoCancelacion");
            entity.Property(e => e.DocDocumentoOtIdMotivoestado).HasColumnName("doc_documento_ot_id_motivoestado");
            entity.Property(e => e.DocDocumentoOtIdPrioridadDocumento).HasColumnName("doc_documento_ot_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoOtIdSistema).HasColumnName("doc_documento.ot_id_sistema");
            entity.Property(e => e.DocDocumentoOtIdSubtipoDocumento).HasColumnName("doc_documento_ot_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoOtIdSucursal).HasColumnName("doc_documento.ot_id_sucursal");
            entity.Property(e => e.DocDocumentoOtIdTerceroCliente).HasColumnName("doc_documento_ot_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoOtIdTerceroProveedor).HasColumnName("doc_documento_ot_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoOtIdTipoServicio).HasColumnName("doc_documento.ot_id_tipoServicio");
            entity.Property(e => e.DocDocumentoOtIdUsuarioCoordinador).HasColumnName("doc_documento.ot_id_usuario_coordinador");
            entity.Property(e => e.DocDocumentoOtIdZona).HasColumnName("doc_documento.ot_id_zona");
            entity.Property(e => e.DocDocumentoOtIva).HasColumnName("doc_documento_ot_iva");
            entity.Property(e => e.DocDocumentoOtIvaPlaneado).HasColumnName("doc_documento_ot_ivaPlaneado");
            entity.Property(e => e.DocDocumentoOtMotivoServicio)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_motivoServicio");
            entity.Property(e => e.DocDocumentoOtPorcentajeCliente).HasColumnName("doc_documento.ot_porcentajeCliente");
            entity.Property(e => e.DocDocumentoOtPorcentajeDistribuidor).HasColumnName("doc_documento.ot_porcentajeDistribuidor");
            entity.Property(e => e.DocDocumentoOtPorcentajeFabricante).HasColumnName("doc_documento.ot_porcentajeFabricante");
            entity.Property(e => e.DocDocumentoOtPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_ot_prefijo");
            entity.Property(e => e.DocDocumentoOtReclamacionFabrica)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_reclamacionFabrica");
            entity.Property(e => e.DocDocumentoOtRecomendaciones)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_recomendaciones");
            entity.Property(e => e.DocDocumentoOtRentabilidad).HasColumnName("doc_documento_ot_rentabilidad");
            entity.Property(e => e.DocDocumentoOtSegunTempario).HasColumnName("doc_documento.ot_segunTempario");
            entity.Property(e => e.DocDocumentoOtSubtotal).HasColumnName("doc_documento_ot_subtotal");
            entity.Property(e => e.DocDocumentoOtSubtotalPlaneado).HasColumnName("doc_documento_ot_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoOtTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_telefono");
            entity.Property(e => e.DocDocumentoOtTotal).HasColumnName("doc_documento_ot_total");
            entity.Property(e => e.DocDocumentoOtTotalPlaneado).HasColumnName("doc_documento_ot_totalPlaneado");
            entity.Property(e => e.DocDocumentoOtTrabajos)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.ot_trabajos");
            entity.Property(e => e.DocDocumentoOtTrm).HasColumnName("doc_documento_ot_trm");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDocumentoOt).HasColumnName("id_documento.ot");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Vale)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("vale");
            entity.Property(e => e.ValeCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("vale_codigo");
        });

        modelBuilder.Entity<ViewProActividad>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_pro_actividad");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Actividad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("actividad");
            entity.Property(e => e.ActividadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("actividad_codigo");
            entity.Property(e => e.DescripcionDetallada)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("descripcionDetallada");
            entity.Property(e => e.Duracion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("duracion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaInicioReal)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicioReal");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaTerminacionPlaneada)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaTerminacionPlaneada");
            entity.Property(e => e.FechaTerminacionProyectada)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaTerminacionProyectada");
            entity.Property(e => e.FechaTerminacionReal)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaTerminacionReal");
            entity.Property(e => e.FechainicioPlaneada)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechainicioPlaneada");
            entity.Property(e => e.FechainicioProyectada)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechainicioProyectada");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewProActividadEjecutor>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_pro_actividad_ejecutor");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.ActividadEjecutor)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("actividad_ejecutor");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdActividad).HasColumnName("id_actividad");
            entity.Property(e => e.IdEjecutores).HasColumnName("id_ejecutores");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ProActividadActividad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_actividad");
            entity.Property(e => e.ProActividadActividadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_actividad_codigo");
            entity.Property(e => e.ProActividadDescripcionDetallada)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_descripcionDetallada");
            entity.Property(e => e.ProActividadDuracion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_duracion");
            entity.Property(e => e.ProActividadFechaInicioReal)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaInicioReal");
            entity.Property(e => e.ProActividadFechaTerminacionPlaneada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaTerminacionPlaneada");
            entity.Property(e => e.ProActividadFechaTerminacionProyectada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaTerminacionProyectada");
            entity.Property(e => e.ProActividadFechaTerminacionReal)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaTerminacionReal");
            entity.Property(e => e.ProActividadFechainicioPlaneada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechainicioPlaneada");
            entity.Property(e => e.ProActividadFechainicioProyectada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechainicioProyectada");
            entity.Property(e => e.ProEjecutoresCosto).HasColumnName("pro_ejecutores_costo");
            entity.Property(e => e.ProEjecutoresEjecutores)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_ejecutores_ejecutores");
            entity.Property(e => e.ProEjecutoresEjecutoresCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_ejecutores_ejecutores_codigo");
            entity.Property(e => e.ProEjecutoresIdHorarioEjecutores).HasColumnName("pro_ejecutores_id_horarioEjecutores");
            entity.Property(e => e.ProEjecutoresIdUsuario).HasColumnName("pro_ejecutores_id_usuario");
            entity.Property(e => e.ProEjecutoresUnidadTiempo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("pro_ejecutores_unidadTiempo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewProActividadEtapa>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_pro_actividad_etapa");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.ActividadEtapa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("actividad_etapa");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdActividad).HasColumnName("id_actividad");
            entity.Property(e => e.IdEtapa).HasColumnName("id_etapa");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ProActividadActividad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_actividad");
            entity.Property(e => e.ProActividadActividadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_actividad_codigo");
            entity.Property(e => e.ProActividadDescripcionDetallada)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_descripcionDetallada");
            entity.Property(e => e.ProActividadDuracion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_duracion");
            entity.Property(e => e.ProActividadFechaInicioReal)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaInicioReal");
            entity.Property(e => e.ProActividadFechaTerminacionPlaneada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaTerminacionPlaneada");
            entity.Property(e => e.ProActividadFechaTerminacionProyectada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaTerminacionProyectada");
            entity.Property(e => e.ProActividadFechaTerminacionReal)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaTerminacionReal");
            entity.Property(e => e.ProActividadFechainicioPlaneada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechainicioPlaneada");
            entity.Property(e => e.ProActividadFechainicioProyectada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechainicioProyectada");
            entity.Property(e => e.ProEtapaCompletado).HasColumnName("pro_etapa_completado");
            entity.Property(e => e.ProEtapaDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("pro_etapa_descripcion");
            entity.Property(e => e.ProEtapaEtapa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_etapa_etapa");
            entity.Property(e => e.ProEtapaEtapaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_etapa_etapa_codigo");
            entity.Property(e => e.ProEtapaFechaFinPlaneada)
                .HasColumnType("datetime")
                .HasColumnName("pro_etapa_fechaFinPlaneada");
            entity.Property(e => e.ProEtapaFechaFinPlaneadaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_etapa_fechaFinPlaneada_ff");
            entity.Property(e => e.ProEtapaFechaFinProyectada)
                .HasColumnType("datetime")
                .HasColumnName("pro_etapa_fechaFinProyectada");
            entity.Property(e => e.ProEtapaFechaFinProyectadaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_etapa_fechaFinProyectada_ff");
            entity.Property(e => e.ProEtapaFechaFinReal)
                .HasColumnType("datetime")
                .HasColumnName("pro_etapa_fechaFinReal");
            entity.Property(e => e.ProEtapaFechaFinRealFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_etapa_fechaFinReal_ff");
            entity.Property(e => e.ProEtapaFechaInicioPlaneada)
                .HasColumnType("datetime")
                .HasColumnName("pro_etapa_fechaInicioPlaneada");
            entity.Property(e => e.ProEtapaFechaInicioPlaneadaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_etapa_fechaInicioPlaneada_ff");
            entity.Property(e => e.ProEtapaFechaInicioProyectada)
                .HasColumnType("datetime")
                .HasColumnName("pro_etapa_fechaInicioProyectada");
            entity.Property(e => e.ProEtapaFechaInicioProyectadaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_etapa_fechaInicioProyectada_ff");
            entity.Property(e => e.ProEtapaFechaInicioReal)
                .HasColumnType("datetime")
                .HasColumnName("pro_etapa_fechaInicioReal");
            entity.Property(e => e.ProEtapaFechaInicioRealFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_etapa_fechaInicioReal_ff");
            entity.Property(e => e.ProEtapaOrden).HasColumnName("pro_etapa_orden");
            entity.Property(e => e.ProEtapaPorcentajePresupuesto).HasColumnName("pro_etapa_porcentajePresupuesto");
            entity.Property(e => e.ProEtapaValorPresupuesto)
                .HasColumnType("money")
                .HasColumnName("pro_etapa_valorPresupuesto");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewProActividadHito>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_pro_actividad_hito");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.ActividadHito)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("actividad_hito");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdActividad).HasColumnName("id_actividad");
            entity.Property(e => e.IdHito).HasColumnName("id_hito");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ProActividadActividad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_actividad");
            entity.Property(e => e.ProActividadActividadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_actividad_codigo");
            entity.Property(e => e.ProActividadDescripcionDetallada)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_descripcionDetallada");
            entity.Property(e => e.ProActividadDuracion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_duracion");
            entity.Property(e => e.ProActividadFechaInicioReal)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaInicioReal");
            entity.Property(e => e.ProActividadFechaTerminacionPlaneada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaTerminacionPlaneada");
            entity.Property(e => e.ProActividadFechaTerminacionProyectada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaTerminacionProyectada");
            entity.Property(e => e.ProActividadFechaTerminacionReal)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaTerminacionReal");
            entity.Property(e => e.ProActividadFechainicioPlaneada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechainicioPlaneada");
            entity.Property(e => e.ProActividadFechainicioProyectada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechainicioProyectada");
            entity.Property(e => e.ProHitoHito)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_hito_hito");
            entity.Property(e => e.ProHitoHitoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_hito_hito_codigo");
            entity.Property(e => e.ProHitoIdDocumentoProyecto).HasColumnName("pro_hito_id_documento.proyecto");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewProActividadPredecesora>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_pro_actividadPredecesora");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.ActividadPredecesora)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("actividadPredecesora");
            entity.Property(e => e.ActividadPredecesoraCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("actividadPredecesora_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdActividadDestino).HasColumnName("id_actividad_destino");
            entity.Property(e => e.IdActividadOrigen).HasColumnName("id_actividad_origen");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ProActividadDestinoActividad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_destino_actividad");
            entity.Property(e => e.ProActividadDestinoActividadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_destino_actividad_codigo");
            entity.Property(e => e.ProActividadDestinoDescripcionDetallada)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_destino_descripcionDetallada");
            entity.Property(e => e.ProActividadDestinoDuracion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_destino_duracion");
            entity.Property(e => e.ProActividadDestinoFechaInicioReal)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_destino_fechaInicioReal");
            entity.Property(e => e.ProActividadDestinoFechaTerminacionPlaneada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_destino_fechaTerminacionPlaneada");
            entity.Property(e => e.ProActividadDestinoFechaTerminacionProyectada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_destino_fechaTerminacionProyectada");
            entity.Property(e => e.ProActividadDestinoFechaTerminacionReal)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_destino_fechaTerminacionReal");
            entity.Property(e => e.ProActividadDestinoFechainicioPlaneada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_destino_fechainicioPlaneada");
            entity.Property(e => e.ProActividadDestinoFechainicioProyectada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_destino_fechainicioProyectada");
            entity.Property(e => e.ProActividadOrigenActividad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_origen_actividad");
            entity.Property(e => e.ProActividadOrigenActividadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_origen_actividad_codigo");
            entity.Property(e => e.ProActividadOrigenDescripcionDetallada)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_origen_descripcionDetallada");
            entity.Property(e => e.ProActividadOrigenDuracion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_origen_duracion");
            entity.Property(e => e.ProActividadOrigenFechaInicioReal)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_origen_fechaInicioReal");
            entity.Property(e => e.ProActividadOrigenFechaTerminacionPlaneada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_origen_fechaTerminacionPlaneada");
            entity.Property(e => e.ProActividadOrigenFechaTerminacionProyectada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_origen_fechaTerminacionProyectada");
            entity.Property(e => e.ProActividadOrigenFechaTerminacionReal)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_origen_fechaTerminacionReal");
            entity.Property(e => e.ProActividadOrigenFechainicioPlaneada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_origen_fechainicioPlaneada");
            entity.Property(e => e.ProActividadOrigenFechainicioProyectada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_origen_fechainicioProyectada");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewProActividadRecursoFisico>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_pro_actividad_recursoFisico");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.ActividadRecursoFisico)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("actividad_recursoFisico");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.Duracion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("duracion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdActividad).HasColumnName("id_actividad");
            entity.Property(e => e.IdRecursoFisico).HasColumnName("id_recursoFisico");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ProActividadActividad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_actividad");
            entity.Property(e => e.ProActividadActividadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_actividad_codigo");
            entity.Property(e => e.ProActividadDescripcionDetallada)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_descripcionDetallada");
            entity.Property(e => e.ProActividadDuracion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_duracion");
            entity.Property(e => e.ProActividadFechaInicioReal)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaInicioReal");
            entity.Property(e => e.ProActividadFechaTerminacionPlaneada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaTerminacionPlaneada");
            entity.Property(e => e.ProActividadFechaTerminacionProyectada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaTerminacionProyectada");
            entity.Property(e => e.ProActividadFechaTerminacionReal)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaTerminacionReal");
            entity.Property(e => e.ProActividadFechainicioPlaneada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechainicioPlaneada");
            entity.Property(e => e.ProActividadFechainicioProyectada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechainicioProyectada");
            entity.Property(e => e.ProRecursoFisicoCosto).HasColumnName("pro_recursoFisico_costo");
            entity.Property(e => e.ProRecursoFisicoEsPropio).HasColumnName("pro_recursoFisico_esPropio");
            entity.Property(e => e.ProRecursoFisicoIdCatalogo).HasColumnName("pro_recursoFisico_id_catalogo");
            entity.Property(e => e.ProRecursoFisicoIdEquipo).HasColumnName("pro_recursoFisico_id_equipo");
            entity.Property(e => e.ProRecursoFisicoRecursoFisico)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_recursoFisico_recursoFisico");
            entity.Property(e => e.ProRecursoFisicoRecursoFisicoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_recursoFisico_recursoFisico_codigo");
            entity.Property(e => e.ProRecursoFisicoUnidadTiempo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("pro_recursoFisico_unidadTiempo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewProCalidad>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_pro_calidad");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Calidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("calidad");
            entity.Property(e => e.CalidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("calidad_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewProEjecutore>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_pro_ejecutores");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Costo).HasColumnName("costo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Ejecutores)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ejecutores");
            entity.Property(e => e.EjecutoresCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ejecutores_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdHorarioEjecutores).HasColumnName("id_horarioEjecutores");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ProHorarioEjecutoresHorarioEjecutores)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_horarioEjecutores_horarioEjecutores");
            entity.Property(e => e.ProHorarioEjecutoresHorarioEjecutoresCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_horarioEjecutores_horarioEjecutores_codigo");
            entity.Property(e => e.SegUsuarioAccesoActivo).HasColumnName("seg_usuario_accesoActivo");
            entity.Property(e => e.SegUsuarioAplicaRecargo).HasColumnName("seg_usuario_aplicaRecargo");
            entity.Property(e => e.SegUsuarioCambiarClave).HasColumnName("seg_usuario_cambiarClave");
            entity.Property(e => e.SegUsuarioClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_clave");
            entity.Property(e => e.SegUsuarioCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_costoHora");
            entity.Property(e => e.SegUsuarioDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_direccion");
            entity.Property(e => e.SegUsuarioEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_email");
            entity.Property(e => e.SegUsuarioFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioHabilitado).HasColumnName("seg_usuario_habilitado");
            entity.Property(e => e.SegUsuarioIdCargo).HasColumnName("seg_usuario_id_cargo");
            entity.Property(e => e.SegUsuarioIdGrupo).HasColumnName("seg_usuario_id_grupo");
            entity.Property(e => e.SegUsuarioIdPerfil).HasColumnName("seg_usuario_id_perfil");
            entity.Property(e => e.SegUsuarioIdUsuario).HasColumnName("seg_usuario_id_usuario");
            entity.Property(e => e.SegUsuarioIdZona).HasColumnName("seg_usuario_id_zona");
            entity.Property(e => e.SegUsuarioIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_identificacion");
            entity.Property(e => e.SegUsuarioIntentosFallidos).HasColumnName("seg_usuario_intentosFallidos");
            entity.Property(e => e.SegUsuarioNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_nombre");
            entity.Property(e => e.SegUsuarioNumeroIngresos).HasColumnName("seg_usuario_numeroIngresos");
            entity.Property(e => e.SegUsuarioPorcentajeComision).HasColumnName("seg_usuario_porcentajeComision");
            entity.Property(e => e.SegUsuarioPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_preferencias");
            entity.Property(e => e.SegUsuarioProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_profesion");
            entity.Property(e => e.SegUsuarioSexo).HasColumnName("seg_usuario_sexo");
            entity.Property(e => e.SegUsuarioTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_telefono");
            entity.Property(e => e.SegUsuarioUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario");
            entity.Property(e => e.SegUsuarioUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.UnidadTiempo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("unidadTiempo");
        });

        modelBuilder.Entity<ViewProEjecutoresArchivo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_pro_ejecutores_archivo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Aprobado).HasColumnName("aprobado");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EjecutoresArchivo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ejecutores_archivo");
            entity.Property(e => e.FechaAprobacion)
                .HasColumnType("datetime")
                .HasColumnName("fecha_aprobacion");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaRevision)
                .HasColumnType("datetime")
                .HasColumnName("fecha_revision");
            entity.Property(e => e.GenArchivoArchivo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_archivo_archivo");
            entity.Property(e => e.GenArchivoArchivoBinario)
                .HasColumnType("image")
                .HasColumnName("gen_archivo_archivoBinario");
            entity.Property(e => e.GenArchivoArchivoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_archivo_archivo_codigo");
            entity.Property(e => e.GenArchivoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("gen_archivo_descripcion");
            entity.Property(e => e.GenArchivoEsPrincipal).HasColumnName("gen_archivo_esPrincipal");
            entity.Property(e => e.GenArchivoIdObjeto).HasColumnName("gen_archivo_idObjeto");
            entity.Property(e => e.GenArchivoLink)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("gen_archivo_link");
            entity.Property(e => e.GenArchivoTabla)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_archivo_tabla");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdArchivo).HasColumnName("id_archivo");
            entity.Property(e => e.IdEjecutores).HasColumnName("id_ejecutores");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ProEjecutoresCosto).HasColumnName("pro_ejecutores_costo");
            entity.Property(e => e.ProEjecutoresEjecutores)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_ejecutores_ejecutores");
            entity.Property(e => e.ProEjecutoresEjecutoresCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_ejecutores_ejecutores_codigo");
            entity.Property(e => e.ProEjecutoresIdHorarioEjecutores).HasColumnName("pro_ejecutores_id_horarioEjecutores");
            entity.Property(e => e.ProEjecutoresIdUsuario).HasColumnName("pro_ejecutores_id_usuario");
            entity.Property(e => e.ProEjecutoresUnidadTiempo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("pro_ejecutores_unidadTiempo");
            entity.Property(e => e.Revisado).HasColumnName("revisado");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewProEntregable>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_pro_entregable");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Entregable)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("entregable");
            entity.Property(e => e.EntregableCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("entregable_codigo");
            entity.Property(e => e.EsExterno).HasColumnName("esExterno");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaPlaneada)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaPlaneada");
            entity.Property(e => e.FechaProyectada)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaProyectada");
            entity.Property(e => e.FechaReal)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaReal");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Nombre)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PorcentajePlaneado).HasColumnName("porcentajePlaneado");
            entity.Property(e => e.PorcentajeReal).HasColumnName("porcentajeReal");
            entity.Property(e => e.Producto)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorPlaneado).HasColumnName("valorPlaneado");
            entity.Property(e => e.ValorReal).HasColumnName("valorReal");
        });

        modelBuilder.Entity<ViewProEtapa>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_pro_etapa");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Completado).HasColumnName("completado");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Etapa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("etapa");
            entity.Property(e => e.EtapaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("etapa_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaFinPlaneadaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFinPlaneada_ff");
            entity.Property(e => e.FechaFinProyectadaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFinProyectada_ff");
            entity.Property(e => e.FechaFinRealFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaFinReal_ff");
            entity.Property(e => e.FechaInicioPlaneadaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicioPlaneada_ff");
            entity.Property(e => e.FechaInicioProyectadaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicioProyectada_ff");
            entity.Property(e => e.FechaInicioRealFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaInicioReal_ff");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.PorcentajePresupuesto).HasColumnName("porcentajePresupuesto");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorPresupuesto)
                .HasColumnType("money")
                .HasColumnName("valorPresupuesto");
        });

        modelBuilder.Entity<ViewProFactorexito>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_pro_factorexito");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocDocumentoProyectoCosto).HasColumnName("doc_documento_proyecto_costo");
            entity.Property(e => e.DocDocumentoProyectoCostoPlaneado).HasColumnName("doc_documento_proyecto_costoPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDescuento).HasColumnName("doc_documento_proyecto_descuento");
            entity.Property(e => e.DocDocumentoProyectoDescuentoPlaneado).HasColumnName("doc_documento_proyecto_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_documento_codigo");
            entity.Property(e => e.DocDocumentoProyectoDocumentoNumero).HasColumnName("doc_documento_proyecto_documento_numero");
            entity.Property(e => e.DocDocumentoProyectoDocumentoProyecto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.proyecto_documento.proyecto");
            entity.Property(e => e.DocDocumentoProyectoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoProyectoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fecha_fh");
            entity.Property(e => e.DocDocumentoProyectoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoProyectoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoProyectoIdDocumento).HasColumnName("doc_documento_proyecto_id_documento");
            entity.Property(e => e.DocDocumentoProyectoIdEstadoTipoDocumento).HasColumnName("doc_documento_proyecto_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdMoneda).HasColumnName("doc_documento_proyecto_id_moneda");
            entity.Property(e => e.DocDocumentoProyectoIdMotivoestado).HasColumnName("doc_documento_proyecto_id_motivoestado");
            entity.Property(e => e.DocDocumentoProyectoIdPrioridadDocumento).HasColumnName("doc_documento_proyecto_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdSubtipoDocumento).HasColumnName("doc_documento_proyecto_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdTerceroCliente).HasColumnName("doc_documento_proyecto_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoProyectoIdTerceroProveedor).HasColumnName("doc_documento_proyecto_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoProyectoIva).HasColumnName("doc_documento_proyecto_iva");
            entity.Property(e => e.DocDocumentoProyectoIvaPlaneado).HasColumnName("doc_documento_proyecto_ivaPlaneado");
            entity.Property(e => e.DocDocumentoProyectoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_prefijo");
            entity.Property(e => e.DocDocumentoProyectoRentabilidad).HasColumnName("doc_documento_proyecto_rentabilidad");
            entity.Property(e => e.DocDocumentoProyectoSubtotal).HasColumnName("doc_documento_proyecto_subtotal");
            entity.Property(e => e.DocDocumentoProyectoSubtotalPlaneado).HasColumnName("doc_documento_proyecto_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoProyectoTotal).HasColumnName("doc_documento_proyecto_total");
            entity.Property(e => e.DocDocumentoProyectoTotalPlaneado).HasColumnName("doc_documento_proyecto_totalPlaneado");
            entity.Property(e => e.DocDocumentoProyectoTrm).HasColumnName("doc_documento_proyecto_trm");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Factorexito)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("factorexito");
            entity.Property(e => e.FactorexitoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("factorexito_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDocumentoProyecto).HasColumnName("id_documento.proyecto");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewProHito>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_pro_hito");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocDocumentoProyectoCosto).HasColumnName("doc_documento_proyecto_costo");
            entity.Property(e => e.DocDocumentoProyectoCostoPlaneado).HasColumnName("doc_documento_proyecto_costoPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDescuento).HasColumnName("doc_documento_proyecto_descuento");
            entity.Property(e => e.DocDocumentoProyectoDescuentoPlaneado).HasColumnName("doc_documento_proyecto_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_documento_codigo");
            entity.Property(e => e.DocDocumentoProyectoDocumentoNumero).HasColumnName("doc_documento_proyecto_documento_numero");
            entity.Property(e => e.DocDocumentoProyectoDocumentoProyecto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.proyecto_documento.proyecto");
            entity.Property(e => e.DocDocumentoProyectoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoProyectoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fecha_fh");
            entity.Property(e => e.DocDocumentoProyectoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoProyectoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoProyectoIdDocumento).HasColumnName("doc_documento_proyecto_id_documento");
            entity.Property(e => e.DocDocumentoProyectoIdEstadoTipoDocumento).HasColumnName("doc_documento_proyecto_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdMoneda).HasColumnName("doc_documento_proyecto_id_moneda");
            entity.Property(e => e.DocDocumentoProyectoIdMotivoestado).HasColumnName("doc_documento_proyecto_id_motivoestado");
            entity.Property(e => e.DocDocumentoProyectoIdPrioridadDocumento).HasColumnName("doc_documento_proyecto_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdSubtipoDocumento).HasColumnName("doc_documento_proyecto_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdTerceroCliente).HasColumnName("doc_documento_proyecto_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoProyectoIdTerceroProveedor).HasColumnName("doc_documento_proyecto_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoProyectoIva).HasColumnName("doc_documento_proyecto_iva");
            entity.Property(e => e.DocDocumentoProyectoIvaPlaneado).HasColumnName("doc_documento_proyecto_ivaPlaneado");
            entity.Property(e => e.DocDocumentoProyectoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_prefijo");
            entity.Property(e => e.DocDocumentoProyectoRentabilidad).HasColumnName("doc_documento_proyecto_rentabilidad");
            entity.Property(e => e.DocDocumentoProyectoSubtotal).HasColumnName("doc_documento_proyecto_subtotal");
            entity.Property(e => e.DocDocumentoProyectoSubtotalPlaneado).HasColumnName("doc_documento_proyecto_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoProyectoTotal).HasColumnName("doc_documento_proyecto_total");
            entity.Property(e => e.DocDocumentoProyectoTotalPlaneado).HasColumnName("doc_documento_proyecto_totalPlaneado");
            entity.Property(e => e.DocDocumentoProyectoTrm).HasColumnName("doc_documento_proyecto_trm");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Hito)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("hito");
            entity.Property(e => e.HitoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("hito_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDocumentoProyecto).HasColumnName("id_documento.proyecto");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewProHorarioProyecto>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_pro_horarioProyecto");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocDocumentoProyectoCosto).HasColumnName("doc_documento_proyecto_costo");
            entity.Property(e => e.DocDocumentoProyectoCostoPlaneado).HasColumnName("doc_documento_proyecto_costoPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDescripcion)
                .HasMaxLength(2000)
                .IsUnicode(false)
                .HasColumnName("doc_documento.proyecto_descripcion");
            entity.Property(e => e.DocDocumentoProyectoDescuento).HasColumnName("doc_documento_proyecto_descuento");
            entity.Property(e => e.DocDocumentoProyectoDescuentoPlaneado).HasColumnName("doc_documento_proyecto_descuentoPlaneado");
            entity.Property(e => e.DocDocumentoProyectoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_documento_codigo");
            entity.Property(e => e.DocDocumentoProyectoDocumentoNumero).HasColumnName("doc_documento_proyecto_documento_numero");
            entity.Property(e => e.DocDocumentoProyectoDocumentoProyecto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_documento.proyecto_documento.proyecto");
            entity.Property(e => e.DocDocumentoProyectoFechaCierreFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaCierre_ff");
            entity.Property(e => e.DocDocumentoProyectoFechaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fecha_fh");
            entity.Property(e => e.DocDocumentoProyectoFechaFinEstimada)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.proyecto_fechaFinEstimada");
            entity.Property(e => e.DocDocumentoProyectoFechaInicioEstimada)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento.proyecto_fechaInicioEstimada");
            entity.Property(e => e.DocDocumentoProyectoFechaLimiteFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaLimite_fh");
            entity.Property(e => e.DocDocumentoProyectoFechaSugeridaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("doc_documento_proyecto_fechaSugerida_fh");
            entity.Property(e => e.DocDocumentoProyectoIdDocumento).HasColumnName("doc_documento_proyecto_id_documento");
            entity.Property(e => e.DocDocumentoProyectoIdEstadoTipoDocumento).HasColumnName("doc_documento_proyecto_id_estadoTipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdMoneda).HasColumnName("doc_documento_proyecto_id_moneda");
            entity.Property(e => e.DocDocumentoProyectoIdMotivoestado).HasColumnName("doc_documento_proyecto_id_motivoestado");
            entity.Property(e => e.DocDocumentoProyectoIdPrioridadDocumento).HasColumnName("doc_documento_proyecto_id_prioridadDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdSubtipoDocumento).HasColumnName("doc_documento_proyecto_id_subtipoDocumento");
            entity.Property(e => e.DocDocumentoProyectoIdTerceroCliente).HasColumnName("doc_documento_proyecto_id_tercero_cliente");
            entity.Property(e => e.DocDocumentoProyectoIdTerceroProveedor).HasColumnName("doc_documento_proyecto_id_tercero_proveedor");
            entity.Property(e => e.DocDocumentoProyectoIva).HasColumnName("doc_documento_proyecto_iva");
            entity.Property(e => e.DocDocumentoProyectoIvaPlaneado).HasColumnName("doc_documento_proyecto_ivaPlaneado");
            entity.Property(e => e.DocDocumentoProyectoNombre)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_documento.proyecto_nombre");
            entity.Property(e => e.DocDocumentoProyectoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_documento_proyecto_prefijo");
            entity.Property(e => e.DocDocumentoProyectoPresupuesto)
                .HasColumnType("money")
                .HasColumnName("doc_documento.proyecto_presupuesto");
            entity.Property(e => e.DocDocumentoProyectoRentabilidad).HasColumnName("doc_documento_proyecto_rentabilidad");
            entity.Property(e => e.DocDocumentoProyectoSubtotal).HasColumnName("doc_documento_proyecto_subtotal");
            entity.Property(e => e.DocDocumentoProyectoSubtotalPlaneado).HasColumnName("doc_documento_proyecto_subtotalPlaneado");
            entity.Property(e => e.DocDocumentoProyectoTotal).HasColumnName("doc_documento_proyecto_total");
            entity.Property(e => e.DocDocumentoProyectoTotalPlaneado).HasColumnName("doc_documento_proyecto_totalPlaneado");
            entity.Property(e => e.DocDocumentoProyectoTrm).HasColumnName("doc_documento_proyecto_trm");
            entity.Property(e => e.Domingo)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("domingo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Festivos)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("festivos");
            entity.Property(e => e.HorarioProyecto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("horarioProyecto");
            entity.Property(e => e.HorarioProyectoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("horarioProyecto_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdDocumentoProyecto).HasColumnName("id_documento.proyecto");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Jueves)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("jueves");
            entity.Property(e => e.Lunes)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("lunes");
            entity.Property(e => e.Martes)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("martes");
            entity.Property(e => e.Miercoles)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("miercoles");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Sabado)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("sabado");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Viernes)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("viernes");
        });

        modelBuilder.Entity<ViewProRecursoFisico>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_pro_recursoFisico");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoBloquearCostear).HasColumnName("cat_catalogo_bloquearCostear");
            entity.Property(e => e.CatCatalogoCatalogo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo");
            entity.Property(e => e.CatCatalogoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_codigoInventario");
            entity.Property(e => e.CatCatalogoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_descripcion");
            entity.Property(e => e.CatCatalogoEsNacional).HasColumnName("cat_catalogo_esNacional");
            entity.Property(e => e.CatCatalogoIdFamilia).HasColumnName("cat_catalogo_id_familia");
            entity.Property(e => e.CatCatalogoIdImpuesto).HasColumnName("cat_catalogo_id_impuesto");
            entity.Property(e => e.CatCatalogoIdSubtipoCatalogo).HasColumnName("cat_catalogo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoIdUnidad).HasColumnName("cat_catalogo_id_unidad");
            entity.Property(e => e.CatCatalogoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_precioVenta");
            entity.Property(e => e.CatCatalogoTiempoConsecucion).HasColumnName("cat_catalogo_tiempoConsecucion");
            entity.Property(e => e.Costo).HasColumnName("costo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquEquipoCosto)
                .HasColumnType("money")
                .HasColumnName("equ_equipo_costo");
            entity.Property(e => e.EquEquipoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo");
            entity.Property(e => e.EquEquipoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_codigo");
            entity.Property(e => e.EquEquipoEquipoSerial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_serial");
            entity.Property(e => e.EquEquipoFechaImportacionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaImportacion_ff");
            entity.Property(e => e.EquEquipoFechaPuestaMarchaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaPuestaMarcha_fh");
            entity.Property(e => e.EquEquipoGarantiaCancelada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_garantiaCancelada");
            entity.Property(e => e.EquEquipoHorasGarantia).HasColumnName("equ_equipo_horasGarantia");
            entity.Property(e => e.EquEquipoHorometroActual).HasColumnName("equ_equipo_horometroActual");
            entity.Property(e => e.EquEquipoIdCatalogoEquipo).HasColumnName("equ_equipo_id_catalogo.equipo");
            entity.Property(e => e.EquEquipoIdEquipo).HasColumnName("equ_equipo_id_equipo");
            entity.Property(e => e.EquEquipoIdEstadoEquipo).HasColumnName("equ_equipo_id_estadoEquipo");
            entity.Property(e => e.EquEquipoIdSistema).HasColumnName("equ_equipo_id_sistema");
            entity.Property(e => e.EquEquipoIdSucursal).HasColumnName("equ_equipo_id_sucursal");
            entity.Property(e => e.EquEquipoIdTercero).HasColumnName("equ_equipo_id_tercero");
            entity.Property(e => e.EquEquipoIdTerceroComprador).HasColumnName("equ_equipo_id_tercero_comprador");
            entity.Property(e => e.EquEquipoIdTerceroServicio).HasColumnName("equ_equipo_id_tercero_servicio");
            entity.Property(e => e.EquEquipoIdVersionEquipo).HasColumnName("equ_equipo_id_versionEquipo");
            entity.Property(e => e.EquEquipoIdZona).HasColumnName("equ_equipo_id_zona");
            entity.Property(e => e.EquEquipoNombreContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_nombreContacto");
            entity.Property(e => e.EquEquipoObservaciones)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_observaciones");
            entity.Property(e => e.EquEquipoPromedioHoras).HasColumnName("equ_equipo_promedioHoras");
            entity.Property(e => e.EquEquipoTelefonoContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_telefonoContacto");
            entity.Property(e => e.EquEquipoUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_ubicacion");
            entity.Property(e => e.EquEquipoUltimaLecturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_ultimaLectura_fh");
            entity.Property(e => e.EquEquipoVencimientoGarantiaDistribuidorFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaDistribuidor_ff");
            entity.Property(e => e.EquEquipoVencimientoGarantiaFabricaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaFabrica_ff");
            entity.Property(e => e.EsPropio).HasColumnName("esPropio");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogo).HasColumnName("id_catalogo");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.RecursoFisico)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("recursoFisico");
            entity.Property(e => e.RecursoFisicoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("recursoFisico_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.UnidadTiempo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("unidadTiempo");
        });

        modelBuilder.Entity<ViewProReporteActividad>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_pro_reporteActividad");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Duracion).HasColumnName("duracion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaInicio)
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_inicio");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdActividad).HasColumnName("id_actividad");
            entity.Property(e => e.IdEjecutores).HasColumnName("id_ejecutores");
            entity.Property(e => e.IdSesionActividad).HasColumnName("id_SesionActividad");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PorcentajeAvance).HasColumnName("porcentaje_avance");
            entity.Property(e => e.ProActividadActividad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_actividad");
            entity.Property(e => e.ProActividadActividadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_actividad_codigo");
            entity.Property(e => e.ProActividadDescripcionDetallada)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_descripcionDetallada");
            entity.Property(e => e.ProActividadDuracion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_duracion");
            entity.Property(e => e.ProActividadFechaInicioReal)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaInicioReal");
            entity.Property(e => e.ProActividadFechaTerminacionPlaneada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaTerminacionPlaneada");
            entity.Property(e => e.ProActividadFechaTerminacionProyectada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaTerminacionProyectada");
            entity.Property(e => e.ProActividadFechaTerminacionReal)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaTerminacionReal");
            entity.Property(e => e.ProActividadFechainicioPlaneada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechainicioPlaneada");
            entity.Property(e => e.ProActividadFechainicioProyectada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechainicioProyectada");
            entity.Property(e => e.ProEjecutoresCosto).HasColumnName("pro_ejecutores_costo");
            entity.Property(e => e.ProEjecutoresEjecutores)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_ejecutores_ejecutores");
            entity.Property(e => e.ProEjecutoresEjecutoresCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_ejecutores_ejecutores_codigo");
            entity.Property(e => e.ProEjecutoresIdHorarioEjecutores).HasColumnName("pro_ejecutores_id_horarioEjecutores");
            entity.Property(e => e.ProEjecutoresIdUsuario).HasColumnName("pro_ejecutores_id_usuario");
            entity.Property(e => e.ProEjecutoresUnidadTiempo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("pro_ejecutores_unidadTiempo");
            entity.Property(e => e.ProSesionActividadDescripcion)
                .HasMaxLength(3000)
                .IsUnicode(false)
                .HasColumnName("pro_SesionActividad_descripcion");
            entity.Property(e => e.ProSesionActividadDuracion).HasColumnName("pro_SesionActividad_duracion");
            entity.Property(e => e.ProSesionActividadFechaInicio)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_SesionActividad_fecha_inicio");
            entity.Property(e => e.ProSesionActividadIdActividad).HasColumnName("pro_SesionActividad_id_actividad");
            entity.Property(e => e.ProSesionActividadIdEjecutores).HasColumnName("pro_SesionActividad_id_ejecutores");
            entity.Property(e => e.ProSesionActividadIdGrupoSesion).HasColumnName("pro_SesionActividad_id_GrupoSesion");
            entity.Property(e => e.ProSesionActividadSesionActividad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_SesionActividad_SesionActividad");
            entity.Property(e => e.ProSesionActividadSesionActividadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_SesionActividad_SesionActividad_codigo");
            entity.Property(e => e.ReporteActividad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("reporteActividad");
            entity.Property(e => e.ReporteActividadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("reporteActividad_codigo");
            entity.Property(e => e.TerSucursalCodigorecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_codigorecursiva");
            entity.Property(e => e.TerSucursalContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_contacto");
            entity.Property(e => e.TerSucursalDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Direccion");
            entity.Property(e => e.TerSucursalEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Email");
            entity.Property(e => e.TerSucursalFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Fax");
            entity.Property(e => e.TerSucursalIdEstadoTercero).HasColumnName("ter_sucursal_id_estadoTercero");
            entity.Property(e => e.TerSucursalIdSucursal).HasColumnName("ter_sucursal_id_sucursal");
            entity.Property(e => e.TerSucursalIdTercero).HasColumnName("ter_sucursal_id_tercero");
            entity.Property(e => e.TerSucursalIdUsuarioAsesor).HasColumnName("ter_sucursal_id_usuario_asesor");
            entity.Property(e => e.TerSucursalIdUsuarioTecnico).HasColumnName("ter_sucursal_id_usuario_tecnico");
            entity.Property(e => e.TerSucursalIdZona).HasColumnName("ter_sucursal_id_zona");
            entity.Property(e => e.TerSucursalParaAlquiler).HasColumnName("ter_sucursal_paraAlquiler");
            entity.Property(e => e.TerSucursalParaSoporte).HasColumnName("ter_sucursal_paraSoporte");
            entity.Property(e => e.TerSucursalParaVenta).HasColumnName("ter_sucursal_paraVenta");
            entity.Property(e => e.TerSucursalSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal");
            entity.Property(e => e.TerSucursalSucursalCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal_codigo");
            entity.Property(e => e.TerSucursalTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_telefono");
            entity.Property(e => e.Texto)
                .HasMaxLength(3000)
                .IsUnicode(false)
                .HasColumnName("texto");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewProRol>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_pro_rol");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Rol)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("rol");
            entity.Property(e => e.RolCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("rol_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewProRolContacto>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_pro_rol_contacto");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdContacto).HasColumnName("id_contacto");
            entity.Property(e => e.IdRol).HasColumnName("id_rol");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ProRolRol)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_rol_rol");
            entity.Property(e => e.ProRolRolCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_rol_rol_codigo");
            entity.Property(e => e.RolContacto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("rol_contacto");
            entity.Property(e => e.TerContactoAccesoActivo).HasColumnName("ter_contacto_accesoActivo");
            entity.Property(e => e.TerContactoCargo)
                .HasMaxLength(100)
                .HasColumnName("ter_contacto_cargo");
            entity.Property(e => e.TerContactoCodigoAcceso)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_codigoAcceso");
            entity.Property(e => e.TerContactoContacto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_contacto");
            entity.Property(e => e.TerContactoContactoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_contacto_codigo");
            entity.Property(e => e.TerContactoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_Direccion");
            entity.Property(e => e.TerContactoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_Email");
            entity.Property(e => e.TerContactoFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_Fax");
            entity.Property(e => e.TerContactoIdCargoContacto).HasColumnName("ter_contacto_id_cargoContacto");
            entity.Property(e => e.TerContactoIdTercero).HasColumnName("ter_contacto_id_tercero");
            entity.Property(e => e.TerContactoIdUsuario).HasColumnName("ter_contacto_id_usuario");
            entity.Property(e => e.TerContactoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_telefono");
            entity.Property(e => e.TerContactoTelefonoMovil)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_telefonoMovil");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewProSesionActividad>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_pro_SesionActividad");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(3000)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.Duracion).HasColumnName("duracion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaInicio)
                .HasColumnType("smalldatetime")
                .HasColumnName("fecha_inicio");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdActividad).HasColumnName("id_actividad");
            entity.Property(e => e.IdEjecutores).HasColumnName("id_ejecutores");
            entity.Property(e => e.IdGrupoSesion).HasColumnName("id_GrupoSesion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ProActividadActividad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_actividad");
            entity.Property(e => e.ProActividadActividadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_actividad_codigo");
            entity.Property(e => e.ProActividadDescripcionDetallada)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_descripcionDetallada");
            entity.Property(e => e.ProActividadDuracion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_actividad_duracion");
            entity.Property(e => e.ProActividadFechaInicioReal)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaInicioReal");
            entity.Property(e => e.ProActividadFechaTerminacionPlaneada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaTerminacionPlaneada");
            entity.Property(e => e.ProActividadFechaTerminacionProyectada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaTerminacionProyectada");
            entity.Property(e => e.ProActividadFechaTerminacionReal)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechaTerminacionReal");
            entity.Property(e => e.ProActividadFechainicioPlaneada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechainicioPlaneada");
            entity.Property(e => e.ProActividadFechainicioProyectada)
                .HasColumnType("smalldatetime")
                .HasColumnName("pro_actividad_fechainicioProyectada");
            entity.Property(e => e.ProEjecutoresCosto).HasColumnName("pro_ejecutores_costo");
            entity.Property(e => e.ProEjecutoresEjecutores)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_ejecutores_ejecutores");
            entity.Property(e => e.ProEjecutoresEjecutoresCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_ejecutores_ejecutores_codigo");
            entity.Property(e => e.ProEjecutoresIdHorarioEjecutores).HasColumnName("pro_ejecutores_id_horarioEjecutores");
            entity.Property(e => e.ProEjecutoresIdUsuario).HasColumnName("pro_ejecutores_id_usuario");
            entity.Property(e => e.ProEjecutoresUnidadTiempo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("pro_ejecutores_unidadTiempo");
            entity.Property(e => e.ProGrupoSesionGrupoSesion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("pro_GrupoSesion_GrupoSesion");
            entity.Property(e => e.ProGrupoSesionGrupoSesionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("pro_GrupoSesion_GrupoSesion_codigo");
            entity.Property(e => e.SesionActividad)
                .HasMaxLength(300)
                .IsUnicode(false);
            entity.Property(e => e.SesionActividadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("SesionActividad_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewRepCampoReporte>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_rep_campoReporte");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CampoReporte)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("campoReporte");
            entity.Property(e => e.CampoReporteCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("campoReporte_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsParametro).HasColumnName("esParametro");
            entity.Property(e => e.EsSerie).HasColumnName("esSerie");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdReporte).HasColumnName("id_reporte");
            entity.Property(e => e.IdTipoCampoReporte).HasColumnName("id_tipoCampoReporte");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ParametroTotal).HasColumnName("parametroTotal");
            entity.Property(e => e.RepReporteCabecera)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("rep_reporte_cabecera");
            entity.Property(e => e.RepReporteEsFormato).HasColumnName("rep_reporte_esFormato");
            entity.Property(e => e.RepReporteIdFuncionalidad).HasColumnName("rep_reporte_id_funcionalidad");
            entity.Property(e => e.RepReporteReporte)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("rep_reporte_reporte");
            entity.Property(e => e.RepReporteReporteCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("rep_reporte_reporte_codigo");
            entity.Property(e => e.RepReporteTieneGraficos).HasColumnName("rep_reporte_tieneGraficos");
            entity.Property(e => e.RepTipoCampoReporteTipoCampoReporte)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("rep_tipoCampoReporte_tipoCampoReporte");
            entity.Property(e => e.RepTipoCampoReporteTipoCampoReporteCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("rep_tipoCampoReporte_tipoCampoReporte_codigo");
            entity.Property(e => e.Tabla)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("tabla");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorDefecto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("valorDefecto");
        });

        modelBuilder.Entity<ViewRepCategorium>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_rep_categoria");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Categoria)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("categoria");
            entity.Property(e => e.CategoriaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("categoria_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCategoria).HasColumnName("id_categoria");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.RepCategoriaPadreCategoria)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("rep_categoria_padre_categoria");
            entity.Property(e => e.RepCategoriaPadreCategoriaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("rep_categoria_padre_categoria_codigo");
            entity.Property(e => e.RepCategoriaPadreIdCategoria).HasColumnName("rep_categoria_padre_id_categoria");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewRepIndicador>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_rep_indicador");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Cabecera)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cabecera");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdReporte).HasColumnName("id_reporte");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Indicador)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("indicador");
            entity.Property(e => e.IndicadorCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("indicador_codigo");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.RepReporteCabecera)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("rep_reporte_cabecera");
            entity.Property(e => e.RepReporteEsFormato).HasColumnName("rep_reporte_esFormato");
            entity.Property(e => e.RepReporteIdFuncionalidad).HasColumnName("rep_reporte_id_funcionalidad");
            entity.Property(e => e.RepReporteReporte)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("rep_reporte_reporte");
            entity.Property(e => e.RepReporteReporteCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("rep_reporte_reporte_codigo");
            entity.Property(e => e.RepReporteTieneGraficos).HasColumnName("rep_reporte_tieneGraficos");
            entity.Property(e => e.Seccion1)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seccion1");
            entity.Property(e => e.Seccion2)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seccion2");
            entity.Property(e => e.Seccion3)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seccion3");
            entity.Property(e => e.Seccion4)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seccion4");
            entity.Property(e => e.Seccion5)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seccion5");
            entity.Property(e => e.Seccion6)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seccion6");
            entity.Property(e => e.Seccion7)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seccion7");
            entity.Property(e => e.Seccion8)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seccion8");
            entity.Property(e => e.Titulo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("titulo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewRepOpcionReporte>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_rep_opcionReporte");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Defecto).HasColumnName("defecto");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdReporte).HasColumnName("id_reporte");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.OpcionReporte)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("opcionReporte");
            entity.Property(e => e.OpcionReporteCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("opcionReporte_codigo");
            entity.Property(e => e.RepReporteCabecera)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("rep_reporte_cabecera");
            entity.Property(e => e.RepReporteEsFormato).HasColumnName("rep_reporte_esFormato");
            entity.Property(e => e.RepReporteIdFuncionalidad).HasColumnName("rep_reporte_id_funcionalidad");
            entity.Property(e => e.RepReporteReporte)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("rep_reporte_reporte");
            entity.Property(e => e.RepReporteReporteCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("rep_reporte_reporte_codigo");
            entity.Property(e => e.RepReporteTieneGraficos).HasColumnName("rep_reporte_tieneGraficos");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewRepOrigenDato>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_rep_origenDato");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Duracion).HasColumnName("duracion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdReporte).HasColumnName("id_reporte");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.OrigenDato)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("origenDato");
            entity.Property(e => e.OrigenDatoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("origenDato_codigo");
            entity.Property(e => e.RepReporteCabecera)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("rep_reporte_cabecera");
            entity.Property(e => e.RepReporteEsFormato).HasColumnName("rep_reporte_esFormato");
            entity.Property(e => e.RepReporteIdFuncionalidad).HasColumnName("rep_reporte_id_funcionalidad");
            entity.Property(e => e.RepReporteReporte)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("rep_reporte_reporte");
            entity.Property(e => e.RepReporteReporteCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("rep_reporte_reporte_codigo");
            entity.Property(e => e.RepReporteTieneGraficos).HasColumnName("rep_reporte_tieneGraficos");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewRepReporte>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_rep_reporte");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Basica).HasColumnName("basica");
            entity.Property(e => e.Cabecera)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cabecera");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsFormato).HasColumnName("esFormato");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GuiFuncionalidadEsMenu).HasColumnName("gui_funcionalidad_esMenu");
            entity.Property(e => e.GuiFuncionalidadFuncionalidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_funcionalidad");
            entity.Property(e => e.GuiFuncionalidadFuncionalidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_funcionalidad_codigo");
            entity.Property(e => e.GuiFuncionalidadIdFuncionalidad).HasColumnName("gui_funcionalidad_id_funcionalidad");
            entity.Property(e => e.GuiFuncionalidadIdTipoFuncionalidad).HasColumnName("gui_funcionalidad_id_tipoFuncionalidad");
            entity.Property(e => e.GuiFuncionalidadNombreComando)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_nombreComando");
            entity.Property(e => e.GuiFuncionalidadNombreControl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_nombreControl");
            entity.Property(e => e.GuiFuncionalidadOrden).HasColumnName("gui_funcionalidad_orden");
            entity.Property(e => e.GuiFuncionalidadTargetUrl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_targetUrl");
            entity.Property(e => e.GuiFuncionalidadToolTip)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_toolTip");
            entity.Property(e => e.GuiFuncionalidadUrl)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_url");
            entity.Property(e => e.GuiFuncionalidadUrlFormulario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_urlFormulario");
            entity.Property(e => e.GuiFuncionalidadUrlImagen)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_urlImagen");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdFuncionalidad).HasColumnName("id_funcionalidad");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.Reporte)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("reporte");
            entity.Property(e => e.ReporteCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("reporte_codigo");
            entity.Property(e => e.TieneGraficos).HasColumnName("tieneGraficos");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewRepReporteCategorium>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_rep_reporte_categoria");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCategoria).HasColumnName("id_categoria");
            entity.Property(e => e.IdReporte).HasColumnName("id_reporte");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.RepCategoriaCategoria)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("rep_categoria_categoria");
            entity.Property(e => e.RepCategoriaCategoriaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("rep_categoria_categoria_codigo");
            entity.Property(e => e.RepCategoriaIdCategoria).HasColumnName("rep_categoria_id_categoria");
            entity.Property(e => e.RepReporteBasica).HasColumnName("rep_reporte_basica");
            entity.Property(e => e.RepReporteCabecera)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("rep_reporte_cabecera");
            entity.Property(e => e.RepReporteEsFormato).HasColumnName("rep_reporte_esFormato");
            entity.Property(e => e.RepReporteIdFuncionalidad).HasColumnName("rep_reporte_id_funcionalidad");
            entity.Property(e => e.RepReporteOrden).HasColumnName("rep_reporte_orden");
            entity.Property(e => e.RepReporteReporte)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("rep_reporte_reporte");
            entity.Property(e => e.RepReporteReporteCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("rep_reporte_reporte_codigo");
            entity.Property(e => e.RepReporteTieneGraficos).HasColumnName("rep_reporte_tieneGraficos");
            entity.Property(e => e.ReporteCategoria)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("reporte_categoria");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewRepTipoCampoReporte>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_rep_tipoCampoReporte");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TipoCampoReporte)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoCampoReporte");
            entity.Property(e => e.TipoCampoReporteCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoCampoReporte_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewSegCargo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_seg_cargo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Cargo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cargo");
            entity.Property(e => e.CargoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cargo_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsAdministrativo).HasColumnName("esAdministrativo");
            entity.Property(e => e.EsComercial).HasColumnName("esComercial");
            entity.Property(e => e.EsCoordinador).HasColumnName("esCoordinador");
            entity.Property(e => e.EsTecnico).HasColumnName("esTecnico");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorHora)
                .HasColumnType("money")
                .HasColumnName("valorHora");
        });

        modelBuilder.Entity<ViewSegCargoActividad>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_seg_cargo_actividad");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CargoActividad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cargo_actividad");
            entity.Property(e => e.CatCatalogoActividadBloquearCostear).HasColumnName("cat_catalogo_actividad_bloquearCostear");
            entity.Property(e => e.CatCatalogoActividadCatalogoActividad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.actividad_catalogo.actividad");
            entity.Property(e => e.CatCatalogoActividadCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_actividad_catalogo_codigo");
            entity.Property(e => e.CatCatalogoActividadCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_actividad_codigoInventario");
            entity.Property(e => e.CatCatalogoActividadDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_actividad_descripcion");
            entity.Property(e => e.CatCatalogoActividadDuracionEstimada).HasColumnName("cat_catalogo.actividad_duracionEstimada");
            entity.Property(e => e.CatCatalogoActividadEsNacional).HasColumnName("cat_catalogo_actividad_esNacional");
            entity.Property(e => e.CatCatalogoActividadEsProductiva).HasColumnName("cat_catalogo.actividad_esProductiva");
            entity.Property(e => e.CatCatalogoActividadIdFamilia).HasColumnName("cat_catalogo_actividad_id_familia");
            entity.Property(e => e.CatCatalogoActividadIdImpuesto).HasColumnName("cat_catalogo_actividad_id_impuesto");
            entity.Property(e => e.CatCatalogoActividadIdSubTipoCatalogo).HasColumnName("cat_catalogo_actividad_id_subTipoCatalogo");
            entity.Property(e => e.CatCatalogoActividadIdUnidad).HasColumnName("cat_catalogo_actividad_id_unidad");
            entity.Property(e => e.CatCatalogoActividadPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_actividad_precioVenta");
            entity.Property(e => e.CatCatalogoActividadProcedimiento)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.actividad_procedimiento");
            entity.Property(e => e.CatCatalogoActividadTiempoConsecucion).HasColumnName("cat_catalogo_actividad_tiempoConsecucion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCargo).HasColumnName("id_cargo");
            entity.Property(e => e.IdCatalogoActividad).HasColumnName("id_catalogo.actividad");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.SegCargoCargo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_cargo_cargo");
            entity.Property(e => e.SegCargoCargoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_cargo_cargo_codigo");
            entity.Property(e => e.SegCargoEsAdministrativo).HasColumnName("seg_cargo_esAdministrativo");
            entity.Property(e => e.SegCargoEsComercial).HasColumnName("seg_cargo_esComercial");
            entity.Property(e => e.SegCargoEsCoordinador).HasColumnName("seg_cargo_esCoordinador");
            entity.Property(e => e.SegCargoEsTecnico).HasColumnName("seg_cargo_esTecnico");
            entity.Property(e => e.SegCargoValorHora)
                .HasColumnType("money")
                .HasColumnName("seg_cargo_valorHora");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewSegCargoEnvioCorreo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_seg_cargo_envioCorreo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CargoEnvioCorreo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cargo_envioCorreo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenEnvioCorreoCorreoAdicional)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("gen_envioCorreo_correoAdicional");
            entity.Property(e => e.GenEnvioCorreoEnvioCorreo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_envioCorreo_envioCorreo");
            entity.Property(e => e.GenEnvioCorreoEnvioCorreoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_envioCorreo_envioCorreo_codigo");
            entity.Property(e => e.GenEnvioCorreoEstrategia).HasColumnName("gen_envioCorreo_estrategia");
            entity.Property(e => e.GenEnvioCorreoIdEstadoTipoDocumento).HasColumnName("gen_envioCorreo_id_estadoTipoDocumento");
            entity.Property(e => e.GenEnvioCorreoIdReporte).HasColumnName("gen_envioCorreo_id_reporte");
            entity.Property(e => e.GenEnvioCorreoIdSubtipoDocumento).HasColumnName("gen_envioCorreo_id_subtipoDocumento");
            entity.Property(e => e.GenEnvioCorreoPlantillaAdjunto)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("gen_envioCorreo_plantillaAdjunto");
            entity.Property(e => e.GenEnvioCorreoTabla)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("gen_envioCorreo_tabla");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCargo).HasColumnName("id_cargo");
            entity.Property(e => e.IdEnvioCorreo).HasColumnName("id_envioCorreo");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.SegCargoCargo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_cargo_cargo");
            entity.Property(e => e.SegCargoCargoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_cargo_cargo_codigo");
            entity.Property(e => e.SegCargoEsAdministrativo).HasColumnName("seg_cargo_esAdministrativo");
            entity.Property(e => e.SegCargoEsComercial).HasColumnName("seg_cargo_esComercial");
            entity.Property(e => e.SegCargoEsCoordinador).HasColumnName("seg_cargo_esCoordinador");
            entity.Property(e => e.SegCargoEsTecnico).HasColumnName("seg_cargo_esTecnico");
            entity.Property(e => e.SegCargoValorHora)
                .HasColumnType("money")
                .HasColumnName("seg_cargo_valorHora");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewSegGrupo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_seg_grupo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Activo).HasColumnName("activo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Grupo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("grupo");
            entity.Property(e => e.GrupoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("grupo_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewSegPerfil>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_seg_perfil");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("descripcion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MostrarBotones).HasColumnName("mostrarBotones");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ParaCliente).HasColumnName("paraCliente");
            entity.Property(e => e.ParaProveedor).HasColumnName("paraProveedor");
            entity.Property(e => e.Perfil)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("perfil");
            entity.Property(e => e.PerfilCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("perfil_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewSegPerfilBloqueHome>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_seg_perfil_bloqueHome");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GuiBloqueHomeBloqueHome)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gui_bloqueHome_bloqueHome");
            entity.Property(e => e.GuiBloqueHomeBloqueHomeCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_bloqueHome_bloqueHome_codigo");
            entity.Property(e => e.GuiBloqueHomeColorModulo)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("gui_bloqueHome_colorModulo");
            entity.Property(e => e.GuiBloqueHomeEsGenerico).HasColumnName("gui_bloqueHome_esGenerico");
            entity.Property(e => e.GuiBloqueHomeFiltro)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("gui_bloqueHome_filtro");
            entity.Property(e => e.GuiBloqueHomeNombreControl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_bloqueHome_nombreControl");
            entity.Property(e => e.GuiBloqueHomeOrden).HasColumnName("gui_bloqueHome_orden");
            entity.Property(e => e.GuiBloqueHomeUrlBusqueda)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_bloqueHome_urlBusqueda");
            entity.Property(e => e.GuiBloqueHomeUrlNuevo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_bloqueHome_urlNuevo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdBloqueHome).HasColumnName("id_bloqueHome");
            entity.Property(e => e.IdPerfil).HasColumnName("id_perfil");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PerfilBloqueHome)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("perfil_bloqueHome");
            entity.Property(e => e.SegPerfilDescripcion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_perfil_descripcion");
            entity.Property(e => e.SegPerfilMostrarBotones).HasColumnName("seg_perfil_mostrarBotones");
            entity.Property(e => e.SegPerfilPerfil)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_perfil_perfil");
            entity.Property(e => e.SegPerfilPerfilCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_perfil_perfil_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewSegPerfilFormulario>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_seg_perfil_formulario");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenFormularioDuplicar).HasColumnName("gen_formulario_duplicar");
            entity.Property(e => e.GenFormularioEliminarIntermedias).HasColumnName("gen_formulario_eliminarIntermedias");
            entity.Property(e => e.GenFormularioFormulario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_formulario_formulario");
            entity.Property(e => e.GenFormularioFormularioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_formulario_formulario_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdFormulario).HasColumnName("id_formulario");
            entity.Property(e => e.IdPerfil).HasColumnName("id_perfil");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PerfilFormulario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("perfil_formulario");
            entity.Property(e => e.SegPerfilDescripcion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_perfil_descripcion");
            entity.Property(e => e.SegPerfilMostrarBotones).HasColumnName("seg_perfil_mostrarBotones");
            entity.Property(e => e.SegPerfilParaCliente).HasColumnName("seg_perfil_paraCliente");
            entity.Property(e => e.SegPerfilParaProveedor).HasColumnName("seg_perfil_paraProveedor");
            entity.Property(e => e.SegPerfilPerfil)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_perfil_perfil");
            entity.Property(e => e.SegPerfilPerfilCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_perfil_perfil_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewSegPerfilFuncionalidad>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_seg_perfil_funcionalidad");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.ControlPadre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("controlPadre");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GuiFuncionalidadEsMenu).HasColumnName("gui_funcionalidad_esMenu");
            entity.Property(e => e.GuiFuncionalidadEsMvc).HasColumnName("gui_funcionalidad_esMvc");
            entity.Property(e => e.GuiFuncionalidadFuncionalidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_funcionalidad");
            entity.Property(e => e.GuiFuncionalidadFuncionalidadCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_funcionalidad_codigo");
            entity.Property(e => e.GuiFuncionalidadIdAplicacion).HasColumnName("gui_funcionalidad_id_aplicacion");
            entity.Property(e => e.GuiFuncionalidadIdFuncionalidad).HasColumnName("gui_funcionalidad_id_funcionalidad");
            entity.Property(e => e.GuiFuncionalidadIdTipoFuncionalidad).HasColumnName("gui_funcionalidad_id_tipoFuncionalidad");
            entity.Property(e => e.GuiFuncionalidadNombreComando)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_nombreComando");
            entity.Property(e => e.GuiFuncionalidadNombreControl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_nombreControl");
            entity.Property(e => e.GuiFuncionalidadOrden).HasColumnName("gui_funcionalidad_orden");
            entity.Property(e => e.GuiFuncionalidadTargetUrl)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_targetUrl");
            entity.Property(e => e.GuiFuncionalidadToolTip)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_toolTip");
            entity.Property(e => e.GuiFuncionalidadUrl)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_url");
            entity.Property(e => e.GuiFuncionalidadUrlFormulario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_urlFormulario");
            entity.Property(e => e.GuiFuncionalidadUrlImagen)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gui_funcionalidad_urlImagen");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdFuncionalidad).HasColumnName("id_funcionalidad");
            entity.Property(e => e.IdPerfil).HasColumnName("id_perfil");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PerfilFuncionalidad)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("perfil_funcionalidad");
            entity.Property(e => e.SegPerfilDescripcion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_perfil_descripcion");
            entity.Property(e => e.SegPerfilMostrarBotones).HasColumnName("seg_perfil_mostrarBotones");
            entity.Property(e => e.SegPerfilParaCliente).HasColumnName("seg_perfil_paraCliente");
            entity.Property(e => e.SegPerfilParaProveedor).HasColumnName("seg_perfil_paraProveedor");
            entity.Property(e => e.SegPerfilPerfil)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_perfil_perfil");
            entity.Property(e => e.SegPerfilPerfilCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_perfil_perfil_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewSegPerfilSubtipoDocumento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_seg_perfil_subtipoDocumento");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocSubtipoDocumentoBloquearDespacho).HasColumnName("doc_subtipoDocumento_bloquearDespacho");
            entity.Property(e => e.DocSubtipoDocumentoCargarSolicitante).HasColumnName("doc_subtipoDocumento_cargarSolicitante");
            entity.Property(e => e.DocSubtipoDocumentoConsecutivo).HasColumnName("doc_subtipoDocumento_consecutivo");
            entity.Property(e => e.DocSubtipoDocumentoIdTipoDocumento).HasColumnName("doc_subtipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoPrefijo)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_prefijo");
            entity.Property(e => e.DocSubtipoDocumentoProgramarPlaneadas).HasColumnName("doc_subtipoDocumento_programarPlaneadas");
            entity.Property(e => e.DocSubtipoDocumentoSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_subtipoDocumento");
            entity.Property(e => e.DocSubtipoDocumentoSubtipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_subtipoDocumento_subtipoDocumento_codigo");
            entity.Property(e => e.DocSubtipoDocumentoValUrgente).HasColumnName("doc_subtipoDocumento_valUrgente");
            entity.Property(e => e.DocSubtipoDocumentoVerCentroCosto).HasColumnName("doc_subtipoDocumento_verCentroCosto");
            entity.Property(e => e.DocSubtipoDocumentoVerIncoterm).HasColumnName("doc_subtipoDocumento_verIncoterm");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdPerfil).HasColumnName("id_perfil");
            entity.Property(e => e.IdSubtipoDocumento).HasColumnName("id_subtipoDocumento");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PerfilSubtipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("perfil_subtipoDocumento");
            entity.Property(e => e.SegPerfilDescripcion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_perfil_descripcion");
            entity.Property(e => e.SegPerfilMostrarBotones).HasColumnName("seg_perfil_mostrarBotones");
            entity.Property(e => e.SegPerfilParaCliente).HasColumnName("seg_perfil_paraCliente");
            entity.Property(e => e.SegPerfilParaProveedor).HasColumnName("seg_perfil_paraProveedor");
            entity.Property(e => e.SegPerfilPerfil)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_perfil_perfil");
            entity.Property(e => e.SegPerfilPerfilCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_perfil_perfil_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewSegPerfilTercero>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_seg_perfil_tercero");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdPerfil).HasColumnName("id_perfil");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PerfilTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("perfil_tercero");
            entity.Property(e => e.SegPerfilDescripcion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_perfil_descripcion");
            entity.Property(e => e.SegPerfilMostrarBotones).HasColumnName("seg_perfil_mostrarBotones");
            entity.Property(e => e.SegPerfilParaCliente).HasColumnName("seg_perfil_paraCliente");
            entity.Property(e => e.SegPerfilParaProveedor).HasColumnName("seg_perfil_paraProveedor");
            entity.Property(e => e.SegPerfilPerfil)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_perfil_perfil");
            entity.Property(e => e.SegPerfilPerfilCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_perfil_perfil_codigo");
            entity.Property(e => e.TerTerceroClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_clasificacion");
            entity.Property(e => e.TerTerceroContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_contacto");
            entity.Property(e => e.TerTerceroDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_direccion");
            entity.Property(e => e.TerTerceroEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_email");
            entity.Property(e => e.TerTerceroEsCliente).HasColumnName("ter_tercero_esCliente");
            entity.Property(e => e.TerTerceroEsEmpresaPropia).HasColumnName("ter_tercero_esEmpresaPropia");
            entity.Property(e => e.TerTerceroEsFabricante).HasColumnName("ter_tercero_esFabricante");
            entity.Property(e => e.TerTerceroEsProspecto).HasColumnName("ter_tercero_esProspecto");
            entity.Property(e => e.TerTerceroEsProveedor).HasColumnName("ter_tercero_esProveedor");
            entity.Property(e => e.TerTerceroEsTransportador).HasColumnName("ter_tercero_esTransportador");
            entity.Property(e => e.TerTerceroFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fax");
            entity.Property(e => e.TerTerceroIdEstadoTercero).HasColumnName("ter_tercero_id_estadoTercero");
            entity.Property(e => e.TerTerceroIdNaturalezaTercero).HasColumnName("ter_tercero_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroIdZona).HasColumnName("ter_tercero_id_zona");
            entity.Property(e => e.TerTerceroNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_notas");
            entity.Property(e => e.TerTerceroRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_representante");
            entity.Property(e => e.TerTerceroTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_telefono");
            entity.Property(e => e.TerTerceroTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero");
            entity.Property(e => e.TerTerceroTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_codigo");
            entity.Property(e => e.TerTerceroTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nit");
            entity.Property(e => e.TerTerceroTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_website");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewSegRegistroIntegracion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_seg_registroIntegracion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CodigoRespuesta)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("codigoRespuesta");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdObjeto).HasColumnName("idObjeto");
            entity.Property(e => e.IdPuntoIntegracion).HasColumnName("id_puntoIntegracion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Mensaje)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("mensaje");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.NumeroReintento).HasColumnName("numeroReintento");
            entity.Property(e => e.RegistroIntegracion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("registroIntegracion");
            entity.Property(e => e.RegistroIntegracionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("registroIntegracion_codigo");
            entity.Property(e => e.Respuesta)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("respuesta");
            entity.Property(e => e.SynPuntoIntegracionCantidadReintentos).HasColumnName("syn_puntoIntegracion_cantidadReintentos");
            entity.Property(e => e.SynPuntoIntegracionCodigosReintentos)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_codigosReintentos");
            entity.Property(e => e.SynPuntoIntegracionCondicion)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_condicion");
            entity.Property(e => e.SynPuntoIntegracionIdPuntoIntegracion).HasColumnName("syn_puntoIntegracion_id_puntoIntegracion");
            entity.Property(e => e.SynPuntoIntegracionIdSistemaIntegrar).HasColumnName("syn_puntoIntegracion_id_sistemaIntegrar");
            entity.Property(e => e.SynPuntoIntegracionIntervaloReintentos).HasColumnName("syn_puntoIntegracion_intervaloReintentos");
            entity.Property(e => e.SynPuntoIntegracionMetodo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_metodo");
            entity.Property(e => e.SynPuntoIntegracionPuntoIntegracion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_puntoIntegracion");
            entity.Property(e => e.SynPuntoIntegracionPuntoIntegracionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_puntoIntegracion_codigo");
            entity.Property(e => e.SynPuntoIntegracionTablaLocal)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_tablaLocal");
            entity.Property(e => e.SynPuntoIntegracionUrlConsumir)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_urlConsumir");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewSegRegistroPeticion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_seg_registroPeticion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Aplicacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("aplicacion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsExitosa).HasColumnName("esExitosa");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MensajeRespuesta)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("mensajeRespuesta");
            entity.Property(e => e.Modulo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("modulo");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.RegistroPeticion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("registroPeticion");
            entity.Property(e => e.RegistroPeticionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("registroPeticion_codigo");
            entity.Property(e => e.SegUsuarioAccesoActivo).HasColumnName("seg_usuario_accesoActivo");
            entity.Property(e => e.SegUsuarioAplicaRecargo).HasColumnName("seg_usuario_aplicaRecargo");
            entity.Property(e => e.SegUsuarioCambiarClave).HasColumnName("seg_usuario_cambiarClave");
            entity.Property(e => e.SegUsuarioClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_clave");
            entity.Property(e => e.SegUsuarioCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_costoHora");
            entity.Property(e => e.SegUsuarioDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_direccion");
            entity.Property(e => e.SegUsuarioEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_email");
            entity.Property(e => e.SegUsuarioFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioHabilitado).HasColumnName("seg_usuario_habilitado");
            entity.Property(e => e.SegUsuarioIdCargo).HasColumnName("seg_usuario_id_cargo");
            entity.Property(e => e.SegUsuarioIdDispositivo)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_idDispositivo");
            entity.Property(e => e.SegUsuarioIdGrupo).HasColumnName("seg_usuario_id_grupo");
            entity.Property(e => e.SegUsuarioIdPerfil).HasColumnName("seg_usuario_id_perfil");
            entity.Property(e => e.SegUsuarioIdUsuario).HasColumnName("seg_usuario_id_usuario");
            entity.Property(e => e.SegUsuarioIdZona).HasColumnName("seg_usuario_id_zona");
            entity.Property(e => e.SegUsuarioIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_identificacion");
            entity.Property(e => e.SegUsuarioIntentosFallidos).HasColumnName("seg_usuario_intentosFallidos");
            entity.Property(e => e.SegUsuarioNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_nombre");
            entity.Property(e => e.SegUsuarioNumeroIngresos).HasColumnName("seg_usuario_numeroIngresos");
            entity.Property(e => e.SegUsuarioPorcentajeComision).HasColumnName("seg_usuario_porcentajeComision");
            entity.Property(e => e.SegUsuarioPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_preferencias");
            entity.Property(e => e.SegUsuarioProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_profesion");
            entity.Property(e => e.SegUsuarioSexo).HasColumnName("seg_usuario_sexo");
            entity.Property(e => e.SegUsuarioTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_telefono");
            entity.Property(e => e.SegUsuarioUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario");
            entity.Property(e => e.SegUsuarioUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario_codigo");
            entity.Property(e => e.TamanoPeticion).HasColumnName("tamanoPeticion");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.UrlServicio)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("urlServicio");
        });

        modelBuilder.Entity<ViewSegSesion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_seg_sesion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Sesion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("sesion");
            entity.Property(e => e.SesionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("sesion_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewSegUsuario>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_seg_usuario");

            entity.Property(e => e.AccesoActivo).HasColumnName("accesoActivo");
            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.AplicaRecargo).HasColumnName("aplicaRecargo");
            entity.Property(e => e.CambiarClave).HasColumnName("cambiarClave");
            entity.Property(e => e.Clave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("clave");
            entity.Property(e => e.CostoHora)
                .HasColumnType("money")
                .HasColumnName("costoHora");
            entity.Property(e => e.Direccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("direccion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaIntentoFallido_fh");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.FechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaUltimoCambioClave_fh");
            entity.Property(e => e.FechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaUltimoIngreso_fh");
            entity.Property(e => e.GenZonaCodigoExterno)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("gen_zona_codigoExterno");
            entity.Property(e => e.GenZonaIdZona).HasColumnName("gen_zona_id_zona");
            entity.Property(e => e.GenZonaNivel).HasColumnName("gen_zona_nivel");
            entity.Property(e => e.GenZonaTiempoDesplazamiento).HasColumnName("gen_zona_tiempoDesplazamiento");
            entity.Property(e => e.GenZonaZona)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_zona_zona");
            entity.Property(e => e.GenZonaZonaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_zona_zona_codigo");
            entity.Property(e => e.Habilitado).HasColumnName("habilitado");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCargo).HasColumnName("id_cargo");
            entity.Property(e => e.IdDispositivo)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("idDispositivo");
            entity.Property(e => e.IdGrupo).HasColumnName("id_grupo");
            entity.Property(e => e.IdPerfil).HasColumnName("id_perfil");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdZona).HasColumnName("id_zona");
            entity.Property(e => e.Identificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("identificacion");
            entity.Property(e => e.IntentosFallidos).HasColumnName("intentosFallidos");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Nombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nombre");
            entity.Property(e => e.NumeroIngresos).HasColumnName("numeroIngresos");
            entity.Property(e => e.PorcentajeComision).HasColumnName("porcentajeComision");
            entity.Property(e => e.Preferencias)
                .HasColumnType("image")
                .HasColumnName("preferencias");
            entity.Property(e => e.Profesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("profesion");
            entity.Property(e => e.SegCargoCargo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_cargo_cargo");
            entity.Property(e => e.SegCargoCargoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_cargo_cargo_codigo");
            entity.Property(e => e.SegCargoEsAdministrativo).HasColumnName("seg_cargo_esAdministrativo");
            entity.Property(e => e.SegCargoEsComercial).HasColumnName("seg_cargo_esComercial");
            entity.Property(e => e.SegCargoEsCoordinador).HasColumnName("seg_cargo_esCoordinador");
            entity.Property(e => e.SegCargoEsTecnico).HasColumnName("seg_cargo_esTecnico");
            entity.Property(e => e.SegCargoValorHora)
                .HasColumnType("money")
                .HasColumnName("seg_cargo_valorHora");
            entity.Property(e => e.SegGrupoActivo).HasColumnName("seg_grupo_activo");
            entity.Property(e => e.SegGrupoGrupo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_grupo_grupo");
            entity.Property(e => e.SegGrupoGrupoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_grupo_grupo_codigo");
            entity.Property(e => e.SegPerfilDescripcion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_perfil_descripcion");
            entity.Property(e => e.SegPerfilMostrarBotones).HasColumnName("seg_perfil_mostrarBotones");
            entity.Property(e => e.SegPerfilParaCliente).HasColumnName("seg_perfil_paraCliente");
            entity.Property(e => e.SegPerfilParaProveedor).HasColumnName("seg_perfil_paraProveedor");
            entity.Property(e => e.SegPerfilPerfil)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_perfil_perfil");
            entity.Property(e => e.SegPerfilPerfilCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_perfil_perfil_codigo");
            entity.Property(e => e.SegUsuarioPadreAccesoActivo).HasColumnName("seg_usuario_padre_accesoActivo");
            entity.Property(e => e.SegUsuarioPadreAplicaRecargo).HasColumnName("seg_usuario_padre_aplicaRecargo");
            entity.Property(e => e.SegUsuarioPadreCambiarClave).HasColumnName("seg_usuario_padre_cambiarClave");
            entity.Property(e => e.SegUsuarioPadreClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_padre_clave");
            entity.Property(e => e.SegUsuarioPadreCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_padre_costoHora");
            entity.Property(e => e.SegUsuarioPadreDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_padre_direccion");
            entity.Property(e => e.SegUsuarioPadreEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_padre_email");
            entity.Property(e => e.SegUsuarioPadreFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_padre_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioPadreFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_padre_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioPadreFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_padre_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioPadreHabilitado).HasColumnName("seg_usuario_padre_habilitado");
            entity.Property(e => e.SegUsuarioPadreIdCargo).HasColumnName("seg_usuario_padre_id_cargo");
            entity.Property(e => e.SegUsuarioPadreIdDispositivo)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_padre_idDispositivo");
            entity.Property(e => e.SegUsuarioPadreIdGrupo).HasColumnName("seg_usuario_padre_id_grupo");
            entity.Property(e => e.SegUsuarioPadreIdPerfil).HasColumnName("seg_usuario_padre_id_perfil");
            entity.Property(e => e.SegUsuarioPadreIdUsuario).HasColumnName("seg_usuario_padre_id_usuario");
            entity.Property(e => e.SegUsuarioPadreIdZona).HasColumnName("seg_usuario_padre_id_zona");
            entity.Property(e => e.SegUsuarioPadreIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_padre_identificacion");
            entity.Property(e => e.SegUsuarioPadreIntentosFallidos).HasColumnName("seg_usuario_padre_intentosFallidos");
            entity.Property(e => e.SegUsuarioPadreNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_padre_nombre");
            entity.Property(e => e.SegUsuarioPadreNumeroIngresos).HasColumnName("seg_usuario_padre_numeroIngresos");
            entity.Property(e => e.SegUsuarioPadrePorcentajeComision).HasColumnName("seg_usuario_padre_porcentajeComision");
            entity.Property(e => e.SegUsuarioPadrePreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_padre_preferencias");
            entity.Property(e => e.SegUsuarioPadreProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_padre_profesion");
            entity.Property(e => e.SegUsuarioPadreSexo).HasColumnName("seg_usuario_padre_sexo");
            entity.Property(e => e.SegUsuarioPadreTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_padre_telefono");
            entity.Property(e => e.SegUsuarioPadreUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_padre_usuario");
            entity.Property(e => e.SegUsuarioPadreUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_padre_usuario_codigo");
            entity.Property(e => e.Sexo).HasColumnName("sexo");
            entity.Property(e => e.Telefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("telefono");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Usuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("usuario");
            entity.Property(e => e.UsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("usuario_codigo");
        });

        modelBuilder.Entity<ViewSegUsuarioCatalogoEquipo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_seg_usuario_catalogo_equipo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatCatalogoEquipoBloquearCostear).HasColumnName("cat_catalogo_equipo_bloquearCostear");
            entity.Property(e => e.CatCatalogoEquipoCatalogoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_catalogo_codigo");
            entity.Property(e => e.CatCatalogoEquipoCatalogoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo.equipo_catalogo.equipo");
            entity.Property(e => e.CatCatalogoEquipoCodigoInventario)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_codigoInventario");
            entity.Property(e => e.CatCatalogoEquipoDescripcion)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("cat_catalogo_equipo_descripcion");
            entity.Property(e => e.CatCatalogoEquipoEsNacional).HasColumnName("cat_catalogo_equipo_esNacional");
            entity.Property(e => e.CatCatalogoEquipoGarantiaHoras).HasColumnName("cat_catalogo.equipo_garantiaHoras");
            entity.Property(e => e.CatCatalogoEquipoGarantiaMeses).HasColumnName("cat_catalogo.equipo_garantiaMeses");
            entity.Property(e => e.CatCatalogoEquipoIdFamilia).HasColumnName("cat_catalogo_equipo_id_familia");
            entity.Property(e => e.CatCatalogoEquipoIdImpuesto).HasColumnName("cat_catalogo_equipo_id_impuesto");
            entity.Property(e => e.CatCatalogoEquipoIdMarca).HasColumnName("cat_catalogo.equipo_id_marca");
            entity.Property(e => e.CatCatalogoEquipoIdSubtipoCatalogo).HasColumnName("cat_catalogo_equipo_id_subtipoCatalogo");
            entity.Property(e => e.CatCatalogoEquipoIdUnidad).HasColumnName("cat_catalogo_equipo_id_unidad");
            entity.Property(e => e.CatCatalogoEquipoManejaHorometro).HasColumnName("cat_catalogo.equipo_manejaHorometro");
            entity.Property(e => e.CatCatalogoEquipoPrecioVenta)
                .HasColumnType("money")
                .HasColumnName("cat_catalogo_equipo_precioVenta");
            entity.Property(e => e.CatCatalogoEquipoTiempoConsecucion).HasColumnName("cat_catalogo_equipo_tiempoConsecucion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenTipoServicioDiasGarantia).HasColumnName("gen_tipoServicio_diasGarantia");
            entity.Property(e => e.GenTipoServicioTieneGarantia).HasColumnName("gen_tipoServicio_tieneGarantia");
            entity.Property(e => e.GenTipoServicioTipoServicio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_tipoServicio_tipoServicio");
            entity.Property(e => e.GenTipoServicioTipoServicioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_tipoServicio_tipoServicio_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCatalogoEquipo).HasColumnName("id_catalogo.equipo");
            entity.Property(e => e.IdTipoServicio).HasColumnName("id_tipoServicio");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.SegUsuarioAccesoActivo).HasColumnName("seg_usuario_accesoActivo");
            entity.Property(e => e.SegUsuarioAplicaRecargo).HasColumnName("seg_usuario_aplicaRecargo");
            entity.Property(e => e.SegUsuarioCambiarClave).HasColumnName("seg_usuario_cambiarClave");
            entity.Property(e => e.SegUsuarioClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_clave");
            entity.Property(e => e.SegUsuarioCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_costoHora");
            entity.Property(e => e.SegUsuarioDireccion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_direccion");
            entity.Property(e => e.SegUsuarioEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_email");
            entity.Property(e => e.SegUsuarioFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioIdCargo).HasColumnName("seg_usuario_id_cargo");
            entity.Property(e => e.SegUsuarioIdGrupo).HasColumnName("seg_usuario_id_grupo");
            entity.Property(e => e.SegUsuarioIdPerfil).HasColumnName("seg_usuario_id_perfil");
            entity.Property(e => e.SegUsuarioIdUsuario).HasColumnName("seg_usuario_id_usuario");
            entity.Property(e => e.SegUsuarioIdZona).HasColumnName("seg_usuario_id_zona");
            entity.Property(e => e.SegUsuarioIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_identificacion");
            entity.Property(e => e.SegUsuarioIntentosFallidos).HasColumnName("seg_usuario_intentosFallidos");
            entity.Property(e => e.SegUsuarioNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_nombre");
            entity.Property(e => e.SegUsuarioNumeroIngresos).HasColumnName("seg_usuario_numeroIngresos");
            entity.Property(e => e.SegUsuarioPorcentajeComision).HasColumnName("seg_usuario_porcentajeComision");
            entity.Property(e => e.SegUsuarioPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_preferencias");
            entity.Property(e => e.SegUsuarioProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_profesion");
            entity.Property(e => e.SegUsuarioSexo).HasColumnName("seg_usuario_sexo");
            entity.Property(e => e.SegUsuarioTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_telefono");
            entity.Property(e => e.SegUsuarioUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario");
            entity.Property(e => e.SegUsuarioUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.UsuarioCatalogoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("usuario_catalogo.equipo");
        });

        modelBuilder.Entity<ViewSynCampoIntegracion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_syn_campoIntegracion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CampoEnlace)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("campoEnlace");
            entity.Property(e => e.CampoIntegracion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("campoIntegracion");
            entity.Property(e => e.CampoIntegracionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("campoIntegracion_codigo");
            entity.Property(e => e.CampoLocal)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("campoLocal");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsLlave).HasColumnName("esLlave");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdPuntoIntegracion).HasColumnName("id_puntoIntegracion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Longitud).HasColumnName("longitud");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.SynPuntoIntegracionCondicion)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_condicion");
            entity.Property(e => e.SynPuntoIntegracionIdPuntoIntegracion).HasColumnName("syn_puntoIntegracion_id_puntoIntegracion");
            entity.Property(e => e.SynPuntoIntegracionIdSistemaIntegrar).HasColumnName("syn_puntoIntegracion_id_sistemaIntegrar");
            entity.Property(e => e.SynPuntoIntegracionPuntoIntegracion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_puntoIntegracion");
            entity.Property(e => e.SynPuntoIntegracionPuntoIntegracionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_puntoIntegracion_codigo");
            entity.Property(e => e.SynPuntoIntegracionTablaLocal)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_tablaLocal");
            entity.Property(e => e.SynPuntoIntegracionUrlConsumir)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_urlConsumir");
            entity.Property(e => e.TablaAuxiliar)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("tablaAuxiliar");
            entity.Property(e => e.TipoDato).HasColumnName("tipoDato");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.ValorXdefecto)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("valorXDefecto");
        });

        modelBuilder.Entity<ViewSynPuntoIntegracion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_syn_puntoIntegracion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CantidadReintentos).HasColumnName("cantidadReintentos");
            entity.Property(e => e.CodigosReintentos)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("codigosReintentos");
            entity.Property(e => e.Condicion)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("condicion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdPuntoIntegracion).HasColumnName("id_puntoIntegracion");
            entity.Property(e => e.IdSistemaIntegrar).HasColumnName("id_sistemaIntegrar");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IntervaloReintentos).HasColumnName("intervaloReintentos");
            entity.Property(e => e.Metodo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("metodo");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PuntoIntegracion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("puntoIntegracion");
            entity.Property(e => e.PuntoIntegracionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("puntoIntegracion_codigo");
            entity.Property(e => e.SynPuntoIntegracionPadreCantidadReintentos).HasColumnName("syn_puntoIntegracion_padre_cantidadReintentos");
            entity.Property(e => e.SynPuntoIntegracionPadreCodigosReintentos)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_padre_codigosReintentos");
            entity.Property(e => e.SynPuntoIntegracionPadreCondicion)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_padre_condicion");
            entity.Property(e => e.SynPuntoIntegracionPadreIdPuntoIntegracion).HasColumnName("syn_puntoIntegracion_padre_id_puntoIntegracion");
            entity.Property(e => e.SynPuntoIntegracionPadreIdSistemaIntegrar).HasColumnName("syn_puntoIntegracion_padre_id_sistemaIntegrar");
            entity.Property(e => e.SynPuntoIntegracionPadreIntervaloReintentos).HasColumnName("syn_puntoIntegracion_padre_intervaloReintentos");
            entity.Property(e => e.SynPuntoIntegracionPadreMetodo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_padre_metodo");
            entity.Property(e => e.SynPuntoIntegracionPadrePuntoIntegracion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_padre_puntoIntegracion");
            entity.Property(e => e.SynPuntoIntegracionPadrePuntoIntegracionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_padre_puntoIntegracion_codigo");
            entity.Property(e => e.SynPuntoIntegracionPadreTablaLocal)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_padre_tablaLocal");
            entity.Property(e => e.SynPuntoIntegracionPadreUrlConsumir)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_padre_urlConsumir");
            entity.Property(e => e.SynSistemaIntegrarClave)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("syn_sistemaIntegrar_clave");
            entity.Property(e => e.SynSistemaIntegrarEstructuraResponseAutenticar)
                .IsUnicode(false)
                .HasColumnName("syn_sistemaIntegrar_estructuraResponseAutenticar");
            entity.Property(e => e.SynSistemaIntegrarIdTipoAutenticacion).HasColumnName("syn_sistemaIntegrar_id_tipoAutenticacion");
            entity.Property(e => e.SynSistemaIntegrarMetodoAutenticar)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("syn_sistemaIntegrar_metodoAutenticar");
            entity.Property(e => e.SynSistemaIntegrarSistemaIntegrar)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("syn_sistemaIntegrar_sistemaIntegrar");
            entity.Property(e => e.SynSistemaIntegrarSistemaIntegrarCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("syn_sistemaIntegrar_sistemaIntegrar_codigo");
            entity.Property(e => e.SynSistemaIntegrarToken)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("syn_sistemaIntegrar_token");
            entity.Property(e => e.SynSistemaIntegrarUrlAutenticar)
                .HasMaxLength(800)
                .IsUnicode(false)
                .HasColumnName("syn_sistemaIntegrar_urlAutenticar");
            entity.Property(e => e.SynSistemaIntegrarUsuario)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("syn_sistemaIntegrar_usuario");
            entity.Property(e => e.TablaLocal)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("tablaLocal");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.UrlConsumir)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("urlConsumir");
        });

        modelBuilder.Entity<ViewSynPuntoIntegracionEstadoTipoDocumento>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_syn_puntoIntegracion_estadoTipoDocumento");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.DocEstadoTipoDocumentoAfectaIndicador).HasColumnName("doc_estadoTipoDocumento_afectaIndicador");
            entity.Property(e => e.DocEstadoTipoDocumentoAfectaInventario).HasColumnName("doc_estadoTipoDocumento_afectaInventario");
            entity.Property(e => e.DocEstadoTipoDocumentoColor)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_color");
            entity.Property(e => e.DocEstadoTipoDocumentoDescripcion)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_descripcion");
            entity.Property(e => e.DocEstadoTipoDocumentoEditaDocumento).HasColumnName("doc_estadoTipoDocumento_editaDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_estadoTipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoEstadoTipoDocumentoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_estadoTipoDocumento_estadoTipoDocumento_codigo");
            entity.Property(e => e.DocEstadoTipoDocumentoIdTipoDocumento).HasColumnName("doc_estadoTipoDocumento_id_tipoDocumento");
            entity.Property(e => e.DocEstadoTipoDocumentoMotivoObligatorio).HasColumnName("doc_estadoTipoDocumento_motivoObligatorio");
            entity.Property(e => e.DocEstadoTipoDocumentoObservacionesObligatorio).HasColumnName("doc_estadoTipoDocumento_observacionesObligatorio");
            entity.Property(e => e.DocEstadoTipoDocumentoOrden).HasColumnName("doc_estadoTipoDocumento_orden");
            entity.Property(e => e.DocEstadoTipoDocumentoPuedeRegresar).HasColumnName("doc_estadoTipoDocumento_puedeRegresar");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEstadoTipoDocumento).HasColumnName("id_estadoTipoDocumento");
            entity.Property(e => e.IdPuntoIntegracion).HasColumnName("id_puntoIntegracion");
            entity.Property(e => e.IdRolEstado).HasColumnName("idRolEstado");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PuntoIntegracionEstadoTipoDocumento)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("puntoIntegracion_estadoTipoDocumento");
            entity.Property(e => e.SynPuntoIntegracionCondicion)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_condicion");
            entity.Property(e => e.SynPuntoIntegracionIdPuntoIntegracion).HasColumnName("syn_puntoIntegracion_id_puntoIntegracion");
            entity.Property(e => e.SynPuntoIntegracionIdSistemaIntegrar).HasColumnName("syn_puntoIntegracion_id_sistemaIntegrar");
            entity.Property(e => e.SynPuntoIntegracionMetodo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_metodo");
            entity.Property(e => e.SynPuntoIntegracionPuntoIntegracion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_puntoIntegracion");
            entity.Property(e => e.SynPuntoIntegracionPuntoIntegracionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_puntoIntegracion_codigo");
            entity.Property(e => e.SynPuntoIntegracionTablaLocal)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_tablaLocal");
            entity.Property(e => e.SynPuntoIntegracionUrlConsumir)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_urlConsumir");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewSynPuntoIntegracionTabla>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_syn_puntoIntegracionTabla");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdPuntoIntegracion).HasColumnName("id_puntoIntegracion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.PuntoIntegracionTabla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("puntoIntegracionTabla");
            entity.Property(e => e.PuntoIntegracionTablaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("puntoIntegracionTabla_codigo");
            entity.Property(e => e.SynPuntoIntegracionCondicion)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_condicion");
            entity.Property(e => e.SynPuntoIntegracionIdPuntoIntegracion).HasColumnName("syn_puntoIntegracion_id_puntoIntegracion");
            entity.Property(e => e.SynPuntoIntegracionIdSistemaIntegrar).HasColumnName("syn_puntoIntegracion_id_sistemaIntegrar");
            entity.Property(e => e.SynPuntoIntegracionMetodo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_metodo");
            entity.Property(e => e.SynPuntoIntegracionPuntoIntegracion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_puntoIntegracion");
            entity.Property(e => e.SynPuntoIntegracionPuntoIntegracionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_puntoIntegracion_codigo");
            entity.Property(e => e.SynPuntoIntegracionTablaLocal)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_tablaLocal");
            entity.Property(e => e.SynPuntoIntegracionUrlConsumir)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("syn_puntoIntegracion_urlConsumir");
            entity.Property(e => e.Tabla)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("tabla");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewSynSistemaIntegrar>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_syn_sistemaIntegrar");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Clave)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("clave");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EstructuraResponseAutenticar)
                .IsUnicode(false)
                .HasColumnName("estructuraResponseAutenticar");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdTipoAutenticacion).HasColumnName("id_tipoAutenticacion");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.MetodoAutenticar)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("metodoAutenticar");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.SistemaIntegrar)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("sistemaIntegrar");
            entity.Property(e => e.SistemaIntegrarCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("sistemaIntegrar_codigo");
            entity.Property(e => e.SynTipoAutenticacionTipoAutenticacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("syn_tipoAutenticacion_tipoAutenticacion");
            entity.Property(e => e.SynTipoAutenticacionTipoAutenticacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("syn_tipoAutenticacion_tipoAutenticacion_codigo");
            entity.Property(e => e.Token)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("token");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.UrlAutenticar)
                .HasMaxLength(800)
                .IsUnicode(false)
                .HasColumnName("urlAutenticar");
            entity.Property(e => e.Usuario)
                .HasMaxLength(200)
                .IsUnicode(false)
                .HasColumnName("usuario");
        });

        modelBuilder.Entity<ViewSynTipoAutenticacion>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_syn_tipoAutenticacion");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TipoAutenticacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tipoAutenticacion");
            entity.Property(e => e.TipoAutenticacionCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tipoAutenticacion_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewTaxNivelTax>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_tax_nivelTax");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.ColumnaPrincipal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("columnaPrincipal");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EsEquipo).HasColumnName("esEquipo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Filtro)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("filtro");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdNivelTax).HasColumnName("id_nivelTax");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.NivelTax)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("nivelTax");
            entity.Property(e => e.NivelTaxCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("nivelTax_codigo");
            entity.Property(e => e.Tabla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tabla");
            entity.Property(e => e.TaxNivelTaxPadreColumnaPrincipal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tax_nivelTax_padre_columnaPrincipal");
            entity.Property(e => e.TaxNivelTaxPadreEsEquipo).HasColumnName("tax_nivelTax_padre_esEquipo");
            entity.Property(e => e.TaxNivelTaxPadreFiltro)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tax_nivelTax_padre_filtro");
            entity.Property(e => e.TaxNivelTaxPadreIdNivelTax).HasColumnName("tax_nivelTax_padre_id_nivelTax");
            entity.Property(e => e.TaxNivelTaxPadreNivelTax)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tax_nivelTax_padre_nivelTax");
            entity.Property(e => e.TaxNivelTaxPadreNivelTaxCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tax_nivelTax_padre_nivelTax_codigo");
            entity.Property(e => e.TaxNivelTaxPadreTabla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tax_nivelTax_padre_tabla");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewTaxObjetoTax>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_tax_objetoTax");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdNivelTax).HasColumnName("id_nivelTax");
            entity.Property(e => e.IdObjTax).HasColumnName("id_ObjTax");
            entity.Property(e => e.IdObjTax1).HasColumnName("idObjTax");
            entity.Property(e => e.IdTablaTax).HasColumnName("idTablaTax");
            entity.Property(e => e.IdTablaTax1).HasColumnName("id_TablaTax");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ObjetoTax)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("objetoTax");
            entity.Property(e => e.ObjetoTaxCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("objetoTax_codigo");
            entity.Property(e => e.Orden).HasColumnName("orden");
            entity.Property(e => e.Tabla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tabla");
            entity.Property(e => e.TaxNivelTaxColumnaPrincipal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tax_nivelTax_columnaPrincipal");
            entity.Property(e => e.TaxNivelTaxEsEquipo).HasColumnName("tax_nivelTax_esEquipo");
            entity.Property(e => e.TaxNivelTaxFiltro)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tax_nivelTax_filtro");
            entity.Property(e => e.TaxNivelTaxIdNivelTax).HasColumnName("tax_nivelTax_id_nivelTax");
            entity.Property(e => e.TaxNivelTaxNivelTax)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tax_nivelTax_nivelTax");
            entity.Property(e => e.TaxNivelTaxNivelTaxCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tax_nivelTax_nivelTax_codigo");
            entity.Property(e => e.TaxNivelTaxTabla)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tax_nivelTax_tabla");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewTerCargoContacto>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ter_cargoContacto");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CargoContacto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cargoContacto");
            entity.Property(e => e.CargoContactoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cargoContacto_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewTerContacto>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ter_contacto");

            entity.Property(e => e.AccesoActivo).HasColumnName("accesoActivo");
            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Cargo)
                .HasMaxLength(100)
                .HasColumnName("cargo");
            entity.Property(e => e.CodigoAcceso)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("codigoAcceso");
            entity.Property(e => e.Contacto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("contacto");
            entity.Property(e => e.ContactoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("contacto_codigo");
            entity.Property(e => e.Direccion)
                .HasMaxLength(300)
                .IsUnicode(false);
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Fax)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdCargoContacto).HasColumnName("id_cargoContacto");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.SegUsuarioAccesoActivo).HasColumnName("seg_usuario_accesoActivo");
            entity.Property(e => e.SegUsuarioAplicaRecargo).HasColumnName("seg_usuario_aplicaRecargo");
            entity.Property(e => e.SegUsuarioCambiarClave).HasColumnName("seg_usuario_cambiarClave");
            entity.Property(e => e.SegUsuarioClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_clave");
            entity.Property(e => e.SegUsuarioCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_costoHora");
            entity.Property(e => e.SegUsuarioDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_direccion");
            entity.Property(e => e.SegUsuarioEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_email");
            entity.Property(e => e.SegUsuarioFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioHabilitado).HasColumnName("seg_usuario_habilitado");
            entity.Property(e => e.SegUsuarioIdCargo).HasColumnName("seg_usuario_id_cargo");
            entity.Property(e => e.SegUsuarioIdDispositivo)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_idDispositivo");
            entity.Property(e => e.SegUsuarioIdGrupo).HasColumnName("seg_usuario_id_grupo");
            entity.Property(e => e.SegUsuarioIdPerfil).HasColumnName("seg_usuario_id_perfil");
            entity.Property(e => e.SegUsuarioIdUsuario).HasColumnName("seg_usuario_id_usuario");
            entity.Property(e => e.SegUsuarioIdZona).HasColumnName("seg_usuario_id_zona");
            entity.Property(e => e.SegUsuarioIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_identificacion");
            entity.Property(e => e.SegUsuarioIntentosFallidos).HasColumnName("seg_usuario_intentosFallidos");
            entity.Property(e => e.SegUsuarioNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_nombre");
            entity.Property(e => e.SegUsuarioNumeroIngresos).HasColumnName("seg_usuario_numeroIngresos");
            entity.Property(e => e.SegUsuarioPorcentajeComision).HasColumnName("seg_usuario_porcentajeComision");
            entity.Property(e => e.SegUsuarioPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_preferencias");
            entity.Property(e => e.SegUsuarioProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_profesion");
            entity.Property(e => e.SegUsuarioSexo).HasColumnName("seg_usuario_sexo");
            entity.Property(e => e.SegUsuarioTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_telefono");
            entity.Property(e => e.SegUsuarioUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario");
            entity.Property(e => e.SegUsuarioUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario_codigo");
            entity.Property(e => e.Telefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("telefono");
            entity.Property(e => e.TelefonoMovil)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("telefonoMovil");
            entity.Property(e => e.TerCargoContactoCargoContacto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_cargoContacto_cargoContacto");
            entity.Property(e => e.TerCargoContactoCargoContactoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_cargoContacto_cargoContacto_codigo");
            entity.Property(e => e.TerCargoContactoIdUsuarioCreo).HasColumnName("ter_cargoContacto_id_usuario_Creo");
            entity.Property(e => e.TerCargoContactoIdUsuarioModifico).HasColumnName("ter_cargoContacto_id_usuario_Modifico");
            entity.Property(e => e.TerTerceroClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_clasificacion");
            entity.Property(e => e.TerTerceroContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_contacto");
            entity.Property(e => e.TerTerceroDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_direccion");
            entity.Property(e => e.TerTerceroEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_email");
            entity.Property(e => e.TerTerceroEsCliente).HasColumnName("ter_tercero_esCliente");
            entity.Property(e => e.TerTerceroEsEmpresaPropia).HasColumnName("ter_tercero_esEmpresaPropia");
            entity.Property(e => e.TerTerceroEsFabricante).HasColumnName("ter_tercero_esFabricante");
            entity.Property(e => e.TerTerceroEsProspecto).HasColumnName("ter_tercero_esProspecto");
            entity.Property(e => e.TerTerceroEsProveedor).HasColumnName("ter_tercero_esProveedor");
            entity.Property(e => e.TerTerceroEsTransportador).HasColumnName("ter_tercero_esTransportador");
            entity.Property(e => e.TerTerceroFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fax");
            entity.Property(e => e.TerTerceroIdEstadoTercero).HasColumnName("ter_tercero_id_estadoTercero");
            entity.Property(e => e.TerTerceroIdNaturalezaTercero).HasColumnName("ter_tercero_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroIdZona).HasColumnName("ter_tercero_id_zona");
            entity.Property(e => e.TerTerceroNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_notas");
            entity.Property(e => e.TerTerceroRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_representante");
            entity.Property(e => e.TerTerceroTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_telefono");
            entity.Property(e => e.TerTerceroTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero");
            entity.Property(e => e.TerTerceroTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_codigo");
            entity.Property(e => e.TerTerceroTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nit");
            entity.Property(e => e.TerTerceroTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_website");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewTerContactoEquipo>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ter_contacto_equipo");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.ContactoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("contacto_equipo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EquEquipoCosto)
                .HasColumnType("money")
                .HasColumnName("equ_equipo_costo");
            entity.Property(e => e.EquEquipoEquipo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo");
            entity.Property(e => e.EquEquipoEquipoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_codigo");
            entity.Property(e => e.EquEquipoEquipoSerial)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_equipo_serial");
            entity.Property(e => e.EquEquipoFechaImportacionFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaImportacion_ff");
            entity.Property(e => e.EquEquipoFechaPuestaMarchaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_fechaPuestaMarcha_fh");
            entity.Property(e => e.EquEquipoGarantiaCancelada)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_garantiaCancelada");
            entity.Property(e => e.EquEquipoHorasGarantia).HasColumnName("equ_equipo_horasGarantia");
            entity.Property(e => e.EquEquipoHorometroActual).HasColumnName("equ_equipo_horometroActual");
            entity.Property(e => e.EquEquipoIdCatalogoEquipo).HasColumnName("equ_equipo_id_catalogo.equipo");
            entity.Property(e => e.EquEquipoIdCentroCosto).HasColumnName("equ_equipo_id_centroCosto");
            entity.Property(e => e.EquEquipoIdEquipo).HasColumnName("equ_equipo_id_equipo");
            entity.Property(e => e.EquEquipoIdEstadoEquipo).HasColumnName("equ_equipo_id_estadoEquipo");
            entity.Property(e => e.EquEquipoIdSistema).HasColumnName("equ_equipo_id_sistema");
            entity.Property(e => e.EquEquipoIdSucursal).HasColumnName("equ_equipo_id_sucursal");
            entity.Property(e => e.EquEquipoIdTercero).HasColumnName("equ_equipo_id_tercero");
            entity.Property(e => e.EquEquipoIdTerceroComprador).HasColumnName("equ_equipo_id_tercero_comprador");
            entity.Property(e => e.EquEquipoIdTerceroServicio).HasColumnName("equ_equipo_id_tercero_servicio");
            entity.Property(e => e.EquEquipoIdVersionEquipo).HasColumnName("equ_equipo_id_versionEquipo");
            entity.Property(e => e.EquEquipoIdZona).HasColumnName("equ_equipo_id_zona");
            entity.Property(e => e.EquEquipoNombreContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_nombreContacto");
            entity.Property(e => e.EquEquipoObservaciones)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_observaciones");
            entity.Property(e => e.EquEquipoPromedioHoras).HasColumnName("equ_equipo_promedioHoras");
            entity.Property(e => e.EquEquipoTelefonoContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_telefonoContacto");
            entity.Property(e => e.EquEquipoUbicacion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("equ_equipo_ubicacion");
            entity.Property(e => e.EquEquipoUltimaLecturaFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_ultimaLectura_fh");
            entity.Property(e => e.EquEquipoVencimientoGarantiaDistribuidorFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaDistribuidor_ff");
            entity.Property(e => e.EquEquipoVencimientoGarantiaFabricaFf)
                .HasColumnType("smalldatetime")
                .HasColumnName("equ_equipo_vencimientoGarantiaFabrica_ff");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdContacto).HasColumnName("id_contacto");
            entity.Property(e => e.IdEquipo).HasColumnName("id_equipo");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.SegUsuarioAccesoActivo).HasColumnName("seg_usuario_accesoActivo");
            entity.Property(e => e.SegUsuarioAplicaRecargo).HasColumnName("seg_usuario_aplicaRecargo");
            entity.Property(e => e.SegUsuarioCambiarClave).HasColumnName("seg_usuario_cambiarClave");
            entity.Property(e => e.SegUsuarioClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_clave");
            entity.Property(e => e.SegUsuarioCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_costoHora");
            entity.Property(e => e.SegUsuarioDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_direccion");
            entity.Property(e => e.SegUsuarioEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_email");
            entity.Property(e => e.SegUsuarioFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioHabilitado).HasColumnName("seg_usuario_habilitado");
            entity.Property(e => e.SegUsuarioIdCargo).HasColumnName("seg_usuario_id_cargo");
            entity.Property(e => e.SegUsuarioIdDispositivo)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_idDispositivo");
            entity.Property(e => e.SegUsuarioIdGrupo).HasColumnName("seg_usuario_id_grupo");
            entity.Property(e => e.SegUsuarioIdPerfil).HasColumnName("seg_usuario_id_perfil");
            entity.Property(e => e.SegUsuarioIdUsuario).HasColumnName("seg_usuario_id_usuario");
            entity.Property(e => e.SegUsuarioIdZona).HasColumnName("seg_usuario_id_zona");
            entity.Property(e => e.SegUsuarioIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_identificacion");
            entity.Property(e => e.SegUsuarioIntentosFallidos).HasColumnName("seg_usuario_intentosFallidos");
            entity.Property(e => e.SegUsuarioNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_nombre");
            entity.Property(e => e.SegUsuarioNumeroIngresos).HasColumnName("seg_usuario_numeroIngresos");
            entity.Property(e => e.SegUsuarioPorcentajeComision).HasColumnName("seg_usuario_porcentajeComision");
            entity.Property(e => e.SegUsuarioPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_preferencias");
            entity.Property(e => e.SegUsuarioProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_profesion");
            entity.Property(e => e.SegUsuarioSexo).HasColumnName("seg_usuario_sexo");
            entity.Property(e => e.SegUsuarioTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_telefono");
            entity.Property(e => e.SegUsuarioUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario");
            entity.Property(e => e.SegUsuarioUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario_codigo");
            entity.Property(e => e.TerContactoAccesoActivo).HasColumnName("ter_contacto_accesoActivo");
            entity.Property(e => e.TerContactoCargo)
                .HasMaxLength(100)
                .HasColumnName("ter_contacto_cargo");
            entity.Property(e => e.TerContactoCodigoAcceso)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_codigoAcceso");
            entity.Property(e => e.TerContactoContacto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_contacto");
            entity.Property(e => e.TerContactoContactoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_contacto_codigo");
            entity.Property(e => e.TerContactoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_Direccion");
            entity.Property(e => e.TerContactoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_Email");
            entity.Property(e => e.TerContactoFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_Fax");
            entity.Property(e => e.TerContactoIdCargoContacto).HasColumnName("ter_contacto_id_cargoContacto");
            entity.Property(e => e.TerContactoIdTercero).HasColumnName("ter_contacto_id_tercero");
            entity.Property(e => e.TerContactoIdUsuario).HasColumnName("ter_contacto_id_usuario");
            entity.Property(e => e.TerContactoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_telefono");
            entity.Property(e => e.TerContactoTelefonoMovil)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_telefonoMovil");
            entity.Property(e => e.TerContactoTerCargoContactoIdUsuarioCreo).HasColumnName("ter_contacto_ter_cargoContacto_id_usuario_Creo");
            entity.Property(e => e.TerContactoTerCargoContactoIdUsuarioModifico).HasColumnName("ter_contacto_ter_cargoContacto_id_usuario_Modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewTerContactoSucursal>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ter_contacto_sucursal");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.ContactoSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("contacto_sucursal");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdContacto).HasColumnName("id_contacto");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TerContactoAccesoActivo).HasColumnName("ter_contacto_accesoActivo");
            entity.Property(e => e.TerContactoCargo)
                .HasMaxLength(100)
                .HasColumnName("ter_contacto_cargo");
            entity.Property(e => e.TerContactoCodigoAcceso)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_codigoAcceso");
            entity.Property(e => e.TerContactoContacto)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_contacto");
            entity.Property(e => e.TerContactoContactoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_contacto_codigo");
            entity.Property(e => e.TerContactoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_Direccion");
            entity.Property(e => e.TerContactoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_Email");
            entity.Property(e => e.TerContactoFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_Fax");
            entity.Property(e => e.TerContactoIdCargoContacto).HasColumnName("ter_contacto_id_cargoContacto");
            entity.Property(e => e.TerContactoIdTercero).HasColumnName("ter_contacto_id_tercero");
            entity.Property(e => e.TerContactoIdUsuario).HasColumnName("ter_contacto_id_usuario");
            entity.Property(e => e.TerContactoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_telefono");
            entity.Property(e => e.TerContactoTelefonoMovil)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_contacto_telefonoMovil");
            entity.Property(e => e.TerSucursalCodigorecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_codigorecursiva");
            entity.Property(e => e.TerSucursalContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_contacto");
            entity.Property(e => e.TerSucursalDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Direccion");
            entity.Property(e => e.TerSucursalEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Email");
            entity.Property(e => e.TerSucursalFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Fax");
            entity.Property(e => e.TerSucursalIdEstadoTercero).HasColumnName("ter_sucursal_id_estadoTercero");
            entity.Property(e => e.TerSucursalIdSucursal).HasColumnName("ter_sucursal_id_sucursal");
            entity.Property(e => e.TerSucursalIdTercero).HasColumnName("ter_sucursal_id_tercero");
            entity.Property(e => e.TerSucursalIdUsuarioAsesor).HasColumnName("ter_sucursal_id_usuario_asesor");
            entity.Property(e => e.TerSucursalIdUsuarioTecnico).HasColumnName("ter_sucursal_id_usuario_tecnico");
            entity.Property(e => e.TerSucursalIdZona).HasColumnName("ter_sucursal_id_zona");
            entity.Property(e => e.TerSucursalParaAlquiler).HasColumnName("ter_sucursal_paraAlquiler");
            entity.Property(e => e.TerSucursalParaSoporte).HasColumnName("ter_sucursal_paraSoporte");
            entity.Property(e => e.TerSucursalParaVenta).HasColumnName("ter_sucursal_paraVenta");
            entity.Property(e => e.TerSucursalSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal");
            entity.Property(e => e.TerSucursalSucursalCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal_codigo");
            entity.Property(e => e.TerSucursalTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_telefono");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewTerEstadoTercero>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ter_estadoTercero");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.EstadoTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("estadoTercero");
            entity.Property(e => e.EstadoTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("estadoTercero_codigo");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewTerNaturalezaTercero>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ter_naturalezaTercero");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.NaturalezaTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("naturalezaTercero");
            entity.Property(e => e.NaturalezaTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("naturalezaTercero_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewTerSector>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ter_sector");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Sector)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("sector");
            entity.Property(e => e.SectorCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("sector_codigo");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewTerSucursal>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ter_sucursal");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Cargo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cargo");
            entity.Property(e => e.Codigorecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("codigorecursiva");
            entity.Property(e => e.Contacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("contacto");
            entity.Property(e => e.Direccion)
                .HasMaxLength(300)
                .IsUnicode(false);
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Fax)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenZonaCodigoExterno)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("gen_zona_codigoExterno");
            entity.Property(e => e.GenZonaIdZona).HasColumnName("gen_zona_id_zona");
            entity.Property(e => e.GenZonaNivel).HasColumnName("gen_zona_nivel");
            entity.Property(e => e.GenZonaTiempoDesplazamiento).HasColumnName("gen_zona_tiempoDesplazamiento");
            entity.Property(e => e.GenZonaZona)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_zona_zona");
            entity.Property(e => e.GenZonaZonaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_zona_zona_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEstadoTercero).HasColumnName("id_estadoTercero");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdUsuarioAsesor).HasColumnName("id_usuario_asesor");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdUsuarioTecnico).HasColumnName("id_usuario_tecnico");
            entity.Property(e => e.IdZona).HasColumnName("id_zona");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.ParaAlquiler).HasColumnName("paraAlquiler");
            entity.Property(e => e.ParaSoporte).HasColumnName("paraSoporte");
            entity.Property(e => e.ParaVenta).HasColumnName("paraVenta");
            entity.Property(e => e.SegUsuarioAsesorAccesoActivo).HasColumnName("seg_usuario_asesor_accesoActivo");
            entity.Property(e => e.SegUsuarioAsesorAplicaRecargo).HasColumnName("seg_usuario_asesor_aplicaRecargo");
            entity.Property(e => e.SegUsuarioAsesorCambiarClave).HasColumnName("seg_usuario_asesor_cambiarClave");
            entity.Property(e => e.SegUsuarioAsesorClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asesor_clave");
            entity.Property(e => e.SegUsuarioAsesorCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_asesor_costoHora");
            entity.Property(e => e.SegUsuarioAsesorDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asesor_direccion");
            entity.Property(e => e.SegUsuarioAsesorEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asesor_email");
            entity.Property(e => e.SegUsuarioAsesorFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_asesor_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioAsesorFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_asesor_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioAsesorFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_asesor_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioAsesorHabilitado).HasColumnName("seg_usuario_asesor_habilitado");
            entity.Property(e => e.SegUsuarioAsesorIdCargo).HasColumnName("seg_usuario_asesor_id_cargo");
            entity.Property(e => e.SegUsuarioAsesorIdGrupo).HasColumnName("seg_usuario_asesor_id_grupo");
            entity.Property(e => e.SegUsuarioAsesorIdPerfil).HasColumnName("seg_usuario_asesor_id_perfil");
            entity.Property(e => e.SegUsuarioAsesorIdUsuario).HasColumnName("seg_usuario_asesor_id_usuario");
            entity.Property(e => e.SegUsuarioAsesorIdZona).HasColumnName("seg_usuario_asesor_id_zona");
            entity.Property(e => e.SegUsuarioAsesorIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asesor_identificacion");
            entity.Property(e => e.SegUsuarioAsesorIntentosFallidos).HasColumnName("seg_usuario_asesor_intentosFallidos");
            entity.Property(e => e.SegUsuarioAsesorNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asesor_nombre");
            entity.Property(e => e.SegUsuarioAsesorNumeroIngresos).HasColumnName("seg_usuario_asesor_numeroIngresos");
            entity.Property(e => e.SegUsuarioAsesorPorcentajeComision).HasColumnName("seg_usuario_asesor_porcentajeComision");
            entity.Property(e => e.SegUsuarioAsesorPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_asesor_preferencias");
            entity.Property(e => e.SegUsuarioAsesorProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asesor_profesion");
            entity.Property(e => e.SegUsuarioAsesorSexo).HasColumnName("seg_usuario_asesor_sexo");
            entity.Property(e => e.SegUsuarioAsesorTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asesor_telefono");
            entity.Property(e => e.SegUsuarioAsesorUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asesor_usuario");
            entity.Property(e => e.SegUsuarioAsesorUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_asesor_usuario_codigo");
            entity.Property(e => e.SegUsuarioTecnicoAccesoActivo).HasColumnName("seg_usuario_tecnico_accesoActivo");
            entity.Property(e => e.SegUsuarioTecnicoAplicaRecargo).HasColumnName("seg_usuario_tecnico_aplicaRecargo");
            entity.Property(e => e.SegUsuarioTecnicoCambiarClave).HasColumnName("seg_usuario_tecnico_cambiarClave");
            entity.Property(e => e.SegUsuarioTecnicoClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_tecnico_clave");
            entity.Property(e => e.SegUsuarioTecnicoCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_tecnico_costoHora");
            entity.Property(e => e.SegUsuarioTecnicoDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_tecnico_direccion");
            entity.Property(e => e.SegUsuarioTecnicoEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_tecnico_email");
            entity.Property(e => e.SegUsuarioTecnicoFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_tecnico_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioTecnicoFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_tecnico_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioTecnicoFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_tecnico_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioTecnicoHabilitado).HasColumnName("seg_usuario_tecnico_habilitado");
            entity.Property(e => e.SegUsuarioTecnicoIdCargo).HasColumnName("seg_usuario_tecnico_id_cargo");
            entity.Property(e => e.SegUsuarioTecnicoIdGrupo).HasColumnName("seg_usuario_tecnico_id_grupo");
            entity.Property(e => e.SegUsuarioTecnicoIdPerfil).HasColumnName("seg_usuario_tecnico_id_perfil");
            entity.Property(e => e.SegUsuarioTecnicoIdUsuario).HasColumnName("seg_usuario_tecnico_id_usuario");
            entity.Property(e => e.SegUsuarioTecnicoIdZona).HasColumnName("seg_usuario_tecnico_id_zona");
            entity.Property(e => e.SegUsuarioTecnicoIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_tecnico_identificacion");
            entity.Property(e => e.SegUsuarioTecnicoIntentosFallidos).HasColumnName("seg_usuario_tecnico_intentosFallidos");
            entity.Property(e => e.SegUsuarioTecnicoNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_tecnico_nombre");
            entity.Property(e => e.SegUsuarioTecnicoNumeroIngresos).HasColumnName("seg_usuario_tecnico_numeroIngresos");
            entity.Property(e => e.SegUsuarioTecnicoPorcentajeComision).HasColumnName("seg_usuario_tecnico_porcentajeComision");
            entity.Property(e => e.SegUsuarioTecnicoPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_tecnico_preferencias");
            entity.Property(e => e.SegUsuarioTecnicoProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_tecnico_profesion");
            entity.Property(e => e.SegUsuarioTecnicoSexo).HasColumnName("seg_usuario_tecnico_sexo");
            entity.Property(e => e.SegUsuarioTecnicoTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_tecnico_telefono");
            entity.Property(e => e.SegUsuarioTecnicoUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_tecnico_usuario");
            entity.Property(e => e.SegUsuarioTecnicoUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_tecnico_usuario_codigo");
            entity.Property(e => e.Sucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("sucursal");
            entity.Property(e => e.SucursalCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("sucursal_codigo");
            entity.Property(e => e.Telefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("telefono");
            entity.Property(e => e.TerEstadoTerceroEstadoTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_estadoTercero_estadoTercero");
            entity.Property(e => e.TerEstadoTerceroEstadoTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_estadoTercero_estadoTercero_codigo");
            entity.Property(e => e.TerSucursalPadreCargo)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_padre_cargo");
            entity.Property(e => e.TerSucursalPadreCodigorecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_padre_codigorecursiva");
            entity.Property(e => e.TerSucursalPadreContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_padre_contacto");
            entity.Property(e => e.TerSucursalPadreDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_padre_Direccion");
            entity.Property(e => e.TerSucursalPadreEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_padre_Email");
            entity.Property(e => e.TerSucursalPadreFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_padre_Fax");
            entity.Property(e => e.TerSucursalPadreIdEstadoTercero).HasColumnName("ter_sucursal_padre_id_estadoTercero");
            entity.Property(e => e.TerSucursalPadreIdSucursal).HasColumnName("ter_sucursal_padre_id_sucursal");
            entity.Property(e => e.TerSucursalPadreIdTercero).HasColumnName("ter_sucursal_padre_id_tercero");
            entity.Property(e => e.TerSucursalPadreIdUsuarioAsesor).HasColumnName("ter_sucursal_padre_id_usuario_asesor");
            entity.Property(e => e.TerSucursalPadreIdUsuarioTecnico).HasColumnName("ter_sucursal_padre_id_usuario_tecnico");
            entity.Property(e => e.TerSucursalPadreIdZona).HasColumnName("ter_sucursal_padre_id_zona");
            entity.Property(e => e.TerSucursalPadreParaAlquiler).HasColumnName("ter_sucursal_padre_paraAlquiler");
            entity.Property(e => e.TerSucursalPadreParaSoporte).HasColumnName("ter_sucursal_padre_paraSoporte");
            entity.Property(e => e.TerSucursalPadreParaVenta).HasColumnName("ter_sucursal_padre_paraVenta");
            entity.Property(e => e.TerSucursalPadreSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_padre_sucursal");
            entity.Property(e => e.TerSucursalPadreSucursalCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_padre_sucursal_codigo");
            entity.Property(e => e.TerSucursalPadreTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_padre_telefono");
            entity.Property(e => e.TerTerceroClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_clasificacion");
            entity.Property(e => e.TerTerceroContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_contacto");
            entity.Property(e => e.TerTerceroDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_direccion");
            entity.Property(e => e.TerTerceroEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_email");
            entity.Property(e => e.TerTerceroEsCliente).HasColumnName("ter_tercero_esCliente");
            entity.Property(e => e.TerTerceroEsEmpresaPropia).HasColumnName("ter_tercero_esEmpresaPropia");
            entity.Property(e => e.TerTerceroEsFabricante).HasColumnName("ter_tercero_esFabricante");
            entity.Property(e => e.TerTerceroEsProspecto).HasColumnName("ter_tercero_esProspecto");
            entity.Property(e => e.TerTerceroEsProveedor).HasColumnName("ter_tercero_esProveedor");
            entity.Property(e => e.TerTerceroEsTransportador).HasColumnName("ter_tercero_esTransportador");
            entity.Property(e => e.TerTerceroFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fax");
            entity.Property(e => e.TerTerceroIdEstadoTercero).HasColumnName("ter_tercero_id_estadoTercero");
            entity.Property(e => e.TerTerceroIdNaturalezaTercero).HasColumnName("ter_tercero_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroIdZona).HasColumnName("ter_tercero_id_zona");
            entity.Property(e => e.TerTerceroNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_notas");
            entity.Property(e => e.TerTerceroRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_representante");
            entity.Property(e => e.TerTerceroTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_telefono");
            entity.Property(e => e.TerTerceroTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero");
            entity.Property(e => e.TerTerceroTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_codigo");
            entity.Property(e => e.TerTerceroTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nit");
            entity.Property(e => e.TerTerceroTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_website");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewTerSucursalListaprecio>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ter_sucursal_listaprecio");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatListaPrecioEsPrivado).HasColumnName("cat_listaPrecio_esPrivado");
            entity.Property(e => e.CatListaPrecioListaPrecio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_listaPrecio_listaPrecio");
            entity.Property(e => e.CatListaPrecioListaPrecioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_listaPrecio_listaPrecio_codigo");
            entity.Property(e => e.CatListaPrecioPorcentajeDescuento).HasColumnName("cat_listaPrecio_porcentajeDescuento");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdListaprecio).HasColumnName("id_listaprecio");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.SucursalListaprecio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("sucursal_listaprecio");
            entity.Property(e => e.TerSucursalCodigorecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_codigorecursiva");
            entity.Property(e => e.TerSucursalContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_contacto");
            entity.Property(e => e.TerSucursalDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Direccion");
            entity.Property(e => e.TerSucursalEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Email");
            entity.Property(e => e.TerSucursalFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Fax");
            entity.Property(e => e.TerSucursalIdEstadoTercero).HasColumnName("ter_sucursal_id_estadoTercero");
            entity.Property(e => e.TerSucursalIdSucursal).HasColumnName("ter_sucursal_id_sucursal");
            entity.Property(e => e.TerSucursalIdTercero).HasColumnName("ter_sucursal_id_tercero");
            entity.Property(e => e.TerSucursalIdUsuarioAsesor).HasColumnName("ter_sucursal_id_usuario_asesor");
            entity.Property(e => e.TerSucursalIdUsuarioTecnico).HasColumnName("ter_sucursal_id_usuario_tecnico");
            entity.Property(e => e.TerSucursalIdZona).HasColumnName("ter_sucursal_id_zona");
            entity.Property(e => e.TerSucursalParaAlquiler).HasColumnName("ter_sucursal_paraAlquiler");
            entity.Property(e => e.TerSucursalParaSoporte).HasColumnName("ter_sucursal_paraSoporte");
            entity.Property(e => e.TerSucursalParaVenta).HasColumnName("ter_sucursal_paraVenta");
            entity.Property(e => e.TerSucursalSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal");
            entity.Property(e => e.TerSucursalSucursalCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal_codigo");
            entity.Property(e => e.TerSucursalTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_telefono");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewTerSucursalUsuario>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ter_sucursal_usuario");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdSucursal).HasColumnName("id_sucursal");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.SegUsuarioAccesoActivo).HasColumnName("seg_usuario_accesoActivo");
            entity.Property(e => e.SegUsuarioAplicaRecargo).HasColumnName("seg_usuario_aplicaRecargo");
            entity.Property(e => e.SegUsuarioCambiarClave).HasColumnName("seg_usuario_cambiarClave");
            entity.Property(e => e.SegUsuarioClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_clave");
            entity.Property(e => e.SegUsuarioCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_costoHora");
            entity.Property(e => e.SegUsuarioDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_direccion");
            entity.Property(e => e.SegUsuarioEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_email");
            entity.Property(e => e.SegUsuarioFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioHabilitado).HasColumnName("seg_usuario_habilitado");
            entity.Property(e => e.SegUsuarioIdCargo).HasColumnName("seg_usuario_id_cargo");
            entity.Property(e => e.SegUsuarioIdGrupo).HasColumnName("seg_usuario_id_grupo");
            entity.Property(e => e.SegUsuarioIdPerfil).HasColumnName("seg_usuario_id_perfil");
            entity.Property(e => e.SegUsuarioIdUsuario).HasColumnName("seg_usuario_id_usuario");
            entity.Property(e => e.SegUsuarioIdZona).HasColumnName("seg_usuario_id_zona");
            entity.Property(e => e.SegUsuarioIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_identificacion");
            entity.Property(e => e.SegUsuarioIntentosFallidos).HasColumnName("seg_usuario_intentosFallidos");
            entity.Property(e => e.SegUsuarioNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_nombre");
            entity.Property(e => e.SegUsuarioNumeroIngresos).HasColumnName("seg_usuario_numeroIngresos");
            entity.Property(e => e.SegUsuarioPorcentajeComision).HasColumnName("seg_usuario_porcentajeComision");
            entity.Property(e => e.SegUsuarioPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_preferencias");
            entity.Property(e => e.SegUsuarioProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_profesion");
            entity.Property(e => e.SegUsuarioSexo).HasColumnName("seg_usuario_sexo");
            entity.Property(e => e.SegUsuarioTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_telefono");
            entity.Property(e => e.SegUsuarioUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario");
            entity.Property(e => e.SegUsuarioUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario_codigo");
            entity.Property(e => e.SucursalUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("sucursal_usuario");
            entity.Property(e => e.TerSucursalCodigorecursiva)
                .HasMaxLength(5000)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_codigorecursiva");
            entity.Property(e => e.TerSucursalContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_contacto");
            entity.Property(e => e.TerSucursalDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Direccion");
            entity.Property(e => e.TerSucursalEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Email");
            entity.Property(e => e.TerSucursalFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_Fax");
            entity.Property(e => e.TerSucursalIdEstadoTercero).HasColumnName("ter_sucursal_id_estadoTercero");
            entity.Property(e => e.TerSucursalIdSucursal).HasColumnName("ter_sucursal_id_sucursal");
            entity.Property(e => e.TerSucursalIdTercero).HasColumnName("ter_sucursal_id_tercero");
            entity.Property(e => e.TerSucursalIdUsuarioAsesor).HasColumnName("ter_sucursal_id_usuario_asesor");
            entity.Property(e => e.TerSucursalIdUsuarioTecnico).HasColumnName("ter_sucursal_id_usuario_tecnico");
            entity.Property(e => e.TerSucursalIdZona).HasColumnName("ter_sucursal_id_zona");
            entity.Property(e => e.TerSucursalParaAlquiler).HasColumnName("ter_sucursal_paraAlquiler");
            entity.Property(e => e.TerSucursalParaSoporte).HasColumnName("ter_sucursal_paraSoporte");
            entity.Property(e => e.TerSucursalParaVenta).HasColumnName("ter_sucursal_paraVenta");
            entity.Property(e => e.TerSucursalSucursal)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal");
            entity.Property(e => e.TerSucursalSucursalCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_sucursal_codigo");
            entity.Property(e => e.TerSucursalTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sucursal_telefono");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewTerTercero>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ter_tercero");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Clasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("clasificacion");
            entity.Property(e => e.Contacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("contacto");
            entity.Property(e => e.Direccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("direccion");
            entity.Property(e => e.DocFormaPagoDiasPago).HasColumnName("doc_formaPago_diasPago");
            entity.Property(e => e.DocFormaPagoFormaPago)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("doc_formaPago_formaPago");
            entity.Property(e => e.DocFormaPagoFormaPagoCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("doc_formaPago_formaPago_codigo");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.EsCliente).HasColumnName("esCliente");
            entity.Property(e => e.EsEmpresaPropia).HasColumnName("esEmpresaPropia");
            entity.Property(e => e.EsFabricante).HasColumnName("esFabricante");
            entity.Property(e => e.EsProspecto).HasColumnName("esProspecto");
            entity.Property(e => e.EsProveedor).HasColumnName("esProveedor");
            entity.Property(e => e.EsTransportador).HasColumnName("esTransportador");
            entity.Property(e => e.Fax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("fax");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.GenZonaCodigoExterno)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("gen_zona_codigoExterno");
            entity.Property(e => e.GenZonaIdZona).HasColumnName("gen_zona_id_zona");
            entity.Property(e => e.GenZonaNivel).HasColumnName("gen_zona_nivel");
            entity.Property(e => e.GenZonaTiempoDesplazamiento).HasColumnName("gen_zona_tiempoDesplazamiento");
            entity.Property(e => e.GenZonaZona)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("gen_zona_zona");
            entity.Property(e => e.GenZonaZonaCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("gen_zona_zona_codigo");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdEstadoTercero).HasColumnName("id_estadoTercero");
            entity.Property(e => e.IdFormaPago).HasColumnName("id_formaPago");
            entity.Property(e => e.IdNaturalezaTercero).HasColumnName("id_naturalezaTercero");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.IdZona).HasColumnName("id_zona");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.Notas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("notas");
            entity.Property(e => e.Representante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("representante");
            entity.Property(e => e.Telefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("telefono");
            entity.Property(e => e.TerEstadoTerceroEstadoTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_estadoTercero_estadoTercero");
            entity.Property(e => e.TerEstadoTerceroEstadoTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_estadoTercero_estadoTercero_codigo");
            entity.Property(e => e.TerNaturalezaTerceroNaturalezaTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_naturalezaTercero_naturalezaTercero");
            entity.Property(e => e.TerNaturalezaTerceroNaturalezaTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_naturalezaTercero_naturalezaTercero_codigo");
            entity.Property(e => e.Tercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tercero");
            entity.Property(e => e.TerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tercero_codigo");
            entity.Property(e => e.TerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tercero_nit");
            entity.Property(e => e.TerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("tercero_nombreCorto");
            entity.Property(e => e.TiempoEntrega).HasColumnName("tiempoEntrega");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
            entity.Property(e => e.Website)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("website");
        });

        modelBuilder.Entity<ViewTerTerceroListaprecio>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ter_tercero_listaprecio");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.CatListaPrecioEsPrivado).HasColumnName("cat_listaPrecio_esPrivado");
            entity.Property(e => e.CatListaPrecioIdMoneda).HasColumnName("cat_listaPrecio_id_moneda");
            entity.Property(e => e.CatListaPrecioListaPrecio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("cat_listaPrecio_listaPrecio");
            entity.Property(e => e.CatListaPrecioListaPrecioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("cat_listaPrecio_listaPrecio_codigo");
            entity.Property(e => e.CatListaPrecioPorcentajeDescuento).HasColumnName("cat_listaPrecio_porcentajeDescuento");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdListaprecio).HasColumnName("id_listaprecio");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TerTerceroClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_clasificacion");
            entity.Property(e => e.TerTerceroContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_contacto");
            entity.Property(e => e.TerTerceroDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_direccion");
            entity.Property(e => e.TerTerceroEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_email");
            entity.Property(e => e.TerTerceroEsCliente).HasColumnName("ter_tercero_esCliente");
            entity.Property(e => e.TerTerceroEsEmpresaPropia).HasColumnName("ter_tercero_esEmpresaPropia");
            entity.Property(e => e.TerTerceroEsFabricante).HasColumnName("ter_tercero_esFabricante");
            entity.Property(e => e.TerTerceroEsProspecto).HasColumnName("ter_tercero_esProspecto");
            entity.Property(e => e.TerTerceroEsProveedor).HasColumnName("ter_tercero_esProveedor");
            entity.Property(e => e.TerTerceroEsTransportador).HasColumnName("ter_tercero_esTransportador");
            entity.Property(e => e.TerTerceroFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fax");
            entity.Property(e => e.TerTerceroIdEstadoTercero).HasColumnName("ter_tercero_id_estadoTercero");
            entity.Property(e => e.TerTerceroIdNaturalezaTercero).HasColumnName("ter_tercero_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroIdZona).HasColumnName("ter_tercero_id_zona");
            entity.Property(e => e.TerTerceroNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_notas");
            entity.Property(e => e.TerTerceroRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_representante");
            entity.Property(e => e.TerTerceroTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_telefono");
            entity.Property(e => e.TerTerceroTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero");
            entity.Property(e => e.TerTerceroTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_codigo");
            entity.Property(e => e.TerTerceroTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nit");
            entity.Property(e => e.TerTerceroTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_website");
            entity.Property(e => e.TerceroListaprecio)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tercero_listaprecio");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewTerTerceroSector>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ter_tercero_sector");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdSector).HasColumnName("id_sector");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.TerSectorSector)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_sector_sector");
            entity.Property(e => e.TerSectorSectorCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_sector_sector_codigo");
            entity.Property(e => e.TerTerceroClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_clasificacion");
            entity.Property(e => e.TerTerceroContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_contacto");
            entity.Property(e => e.TerTerceroDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_direccion");
            entity.Property(e => e.TerTerceroEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_email");
            entity.Property(e => e.TerTerceroEsCliente).HasColumnName("ter_tercero_esCliente");
            entity.Property(e => e.TerTerceroEsEmpresaPropia).HasColumnName("ter_tercero_esEmpresaPropia");
            entity.Property(e => e.TerTerceroEsFabricante).HasColumnName("ter_tercero_esFabricante");
            entity.Property(e => e.TerTerceroEsProspecto).HasColumnName("ter_tercero_esProspecto");
            entity.Property(e => e.TerTerceroEsProveedor).HasColumnName("ter_tercero_esProveedor");
            entity.Property(e => e.TerTerceroEsTransportador).HasColumnName("ter_tercero_esTransportador");
            entity.Property(e => e.TerTerceroFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fax");
            entity.Property(e => e.TerTerceroIdEstadoTercero).HasColumnName("ter_tercero_id_estadoTercero");
            entity.Property(e => e.TerTerceroIdNaturalezaTercero).HasColumnName("ter_tercero_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroIdZona).HasColumnName("ter_tercero_id_zona");
            entity.Property(e => e.TerTerceroNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_notas");
            entity.Property(e => e.TerTerceroRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_representante");
            entity.Property(e => e.TerTerceroTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_telefono");
            entity.Property(e => e.TerTerceroTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero");
            entity.Property(e => e.TerTerceroTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_codigo");
            entity.Property(e => e.TerTerceroTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nit");
            entity.Property(e => e.TerTerceroTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_website");
            entity.Property(e => e.TerceroSector)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tercero_sector");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ViewTerTerceroUsuario>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("view_ter_tercero_usuario");

            entity.Property(e => e.Active).HasColumnName("active");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.IdTercero).HasColumnName("id_tercero");
            entity.Property(e => e.IdUsuario).HasColumnName("id_usuario");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Multiempresa)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("multiempresa");
            entity.Property(e => e.SegUsuarioAccesoActivo).HasColumnName("seg_usuario_accesoActivo");
            entity.Property(e => e.SegUsuarioAplicaRecargo).HasColumnName("seg_usuario_aplicaRecargo");
            entity.Property(e => e.SegUsuarioCambiarClave).HasColumnName("seg_usuario_cambiarClave");
            entity.Property(e => e.SegUsuarioClave)
                .HasMaxLength(48)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_clave");
            entity.Property(e => e.SegUsuarioCostoHora)
                .HasColumnType("money")
                .HasColumnName("seg_usuario_costoHora");
            entity.Property(e => e.SegUsuarioDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_direccion");
            entity.Property(e => e.SegUsuarioEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_email");
            entity.Property(e => e.SegUsuarioFechaIntentoFallidoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaIntentoFallido_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoCambioClaveFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoCambioClave_fh");
            entity.Property(e => e.SegUsuarioFechaUltimoIngresoFh)
                .HasColumnType("smalldatetime")
                .HasColumnName("seg_usuario_fechaUltimoIngreso_fh");
            entity.Property(e => e.SegUsuarioHabilitado).HasColumnName("seg_usuario_habilitado");
            entity.Property(e => e.SegUsuarioIdCargo).HasColumnName("seg_usuario_id_cargo");
            entity.Property(e => e.SegUsuarioIdGrupo).HasColumnName("seg_usuario_id_grupo");
            entity.Property(e => e.SegUsuarioIdPerfil).HasColumnName("seg_usuario_id_perfil");
            entity.Property(e => e.SegUsuarioIdUsuario).HasColumnName("seg_usuario_id_usuario");
            entity.Property(e => e.SegUsuarioIdZona).HasColumnName("seg_usuario_id_zona");
            entity.Property(e => e.SegUsuarioIdentificacion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_identificacion");
            entity.Property(e => e.SegUsuarioIntentosFallidos).HasColumnName("seg_usuario_intentosFallidos");
            entity.Property(e => e.SegUsuarioNombre)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_nombre");
            entity.Property(e => e.SegUsuarioNumeroIngresos).HasColumnName("seg_usuario_numeroIngresos");
            entity.Property(e => e.SegUsuarioPorcentajeComision).HasColumnName("seg_usuario_porcentajeComision");
            entity.Property(e => e.SegUsuarioPreferencias)
                .HasColumnType("image")
                .HasColumnName("seg_usuario_preferencias");
            entity.Property(e => e.SegUsuarioProfesion)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_profesion");
            entity.Property(e => e.SegUsuarioSexo).HasColumnName("seg_usuario_sexo");
            entity.Property(e => e.SegUsuarioTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_telefono");
            entity.Property(e => e.SegUsuarioUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario");
            entity.Property(e => e.SegUsuarioUsuarioCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("seg_usuario_usuario_codigo");
            entity.Property(e => e.TerTerceroClasificacion)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_clasificacion");
            entity.Property(e => e.TerTerceroContacto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_contacto");
            entity.Property(e => e.TerTerceroDireccion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_direccion");
            entity.Property(e => e.TerTerceroEmail)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_email");
            entity.Property(e => e.TerTerceroEsCliente).HasColumnName("ter_tercero_esCliente");
            entity.Property(e => e.TerTerceroEsEmpresaPropia).HasColumnName("ter_tercero_esEmpresaPropia");
            entity.Property(e => e.TerTerceroEsFabricante).HasColumnName("ter_tercero_esFabricante");
            entity.Property(e => e.TerTerceroEsProspecto).HasColumnName("ter_tercero_esProspecto");
            entity.Property(e => e.TerTerceroEsProveedor).HasColumnName("ter_tercero_esProveedor");
            entity.Property(e => e.TerTerceroEsTransportador).HasColumnName("ter_tercero_esTransportador");
            entity.Property(e => e.TerTerceroFax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_fax");
            entity.Property(e => e.TerTerceroIdEstadoTercero).HasColumnName("ter_tercero_id_estadoTercero");
            entity.Property(e => e.TerTerceroIdNaturalezaTercero).HasColumnName("ter_tercero_id_naturalezaTercero");
            entity.Property(e => e.TerTerceroIdZona).HasColumnName("ter_tercero_id_zona");
            entity.Property(e => e.TerTerceroNotas)
                .HasMaxLength(8000)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_notas");
            entity.Property(e => e.TerTerceroRepresentante)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_representante");
            entity.Property(e => e.TerTerceroTelefono)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_telefono");
            entity.Property(e => e.TerTerceroTercero)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero");
            entity.Property(e => e.TerTerceroTerceroCodigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_codigo");
            entity.Property(e => e.TerTerceroTerceroNit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nit");
            entity.Property(e => e.TerTerceroTerceroNombreCorto)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_tercero_nombreCorto");
            entity.Property(e => e.TerTerceroWebsite)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ter_tercero_website");
            entity.Property(e => e.TerceroUsuario)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasColumnName("tercero_usuario");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        modelBuilder.Entity<ZzuItemRentaSap>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_int_serialesAlquiler");

            entity.ToTable("zzu_itemRentaSap");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Active)
                .HasDefaultValue(true)
                .HasColumnName("active");
            entity.Property(e => e.Cantidad).HasColumnName("cantidad");
            entity.Property(e => e.Codigo)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("codigo");
            entity.Property(e => e.Costo)
                .HasColumnType("money")
                .HasColumnName("costo");
            entity.Property(e => e.Descripcion)
                .HasMaxLength(300)
                .IsUnicode(false)
                .HasDefaultValue("")
                .HasColumnName("descripcion");
            entity.Property(e => e.Eid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("eid");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("smalldatetime")
                .HasColumnName("fechaCreacion");
            entity.Property(e => e.FechaModificacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime")
                .HasColumnName("fechaModificacion");
            entity.Property(e => e.IdAlquiler).HasColumnName("id_alquiler");
            entity.Property(e => e.IdUsuarioCreo).HasColumnName("id_usuario_creo");
            entity.Property(e => e.IdUsuarioModifico).HasColumnName("id_usuario_modifico");
            entity.Property(e => e.Uid)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("uid");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
